{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"KaaS - Knowledge as a Service \u00b6 Welcome to my personal knowledge base - KaaS or Knowledge as a Service. Inside is my personal, customized, digital knowledge notebase structured loosely as a Zettelkasten , a collection of interlinked Atomic Notes about anything that interests me. Consider this my Digital Garden . It is a garden that needs to be maintained and cared for overtime to produce fruitful outcomes.","title":"KaaS - Knowledge as a Service"},{"location":"#kaas-knowledge-as-a-service","text":"Welcome to my personal knowledge base - KaaS or Knowledge as a Service. Inside is my personal, customized, digital knowledge notebase structured loosely as a Zettelkasten , a collection of interlinked Atomic Notes about anything that interests me. Consider this my Digital Garden . It is a garden that needs to be maintained and cared for overtime to produce fruitful outcomes.","title":"KaaS - Knowledge as a Service"},{"location":"Changelog/","text":"2021-10-27 at 13h31 \u00b7 Team Data Science Process 2021-10-27 at 13h31 \u00b7 R Package - simulationmachine 2021-10-27 at 13h31 \u00b7 R Package - insurancerating 2021-10-27 at 13h30 \u00b7 R Package - conjuror 2021-10-27 at 13h30 \u00b7 KasaAI GitHub Organization 2021-10-27 at 13h30 \u00b7 Casualty Actuarial Society on GitHub 2021-10-27 at 13h29 \u00b7 Azure Storage Blobs 2021-10-27 at 13h29 \u00b7 Azure SQL Database 2021-10-27 at 13h29 \u00b7 Azure Machine Learning 2021-10-27 at 13h29 \u00b7 Azure DevOps 2021-10-27 at 13h29 \u00b7 Azure DevOps Pipeline Configuration 2021-10-27 at 13h29 \u00b7 Azure Data Studio 2021-10-27 at 13h29 \u00b7 Azure Data Lake 2021-10-27 at 13h29 \u00b7 Azure Compute 2021-10-27 at 13h29 \u00b7 Azure Arc 2021-10-27 at 13h29 \u00b7 Azure App Service 2021-10-27 at 13h29 \u00b7 Azure Synapse Analytics 2021-10-27 at 13h29 \u00b7 Actuarial Data Science and Financial Modelling with Azure 2021-10-27 at 13h29 \u00b7 Actuarial Claims Data 2021-10-27 at 13h27 \u00b7 Development 2021-10-27 at 13h24 \u00b7 Microsoft Azure 2021-10-27 at 13h24 \u00b7 Microsoft Windows 2021-10-27 at 13h23 \u00b7 Web Development 2021-10-27 at 13h23 \u00b7 Files-Without-Tags 2021-10-27 at 13h23 \u00b7 README 2021-10-27 at 13h22 \u00b7 Structure 2021-10-27 at 13h21 \u00b7 Unresolved-Links 2021-10-27 at 13h21 \u00b7 About 2021-10-27 at 13h21 \u00b7 [[Azure Machine Learning Platform]] 2021-10-27 at 13h21 \u00b7 2021-10-26 2021-10-27 at 13h21 \u00b7 Master Evernote 2021-10-27 at 13h21 \u00b7 How to Save Email Into Evernote 2021-10-27 at 13h20 \u00b7 Weekly 2021-10-27 at 13h20 \u00b7 Quarterly 2021-10-27 at 13h20 \u00b7 Monthly 2021-10-27 at 13h20 \u00b7 Daily 2021-10-27 at 13h20 \u00b7 Annual 2021-10-27 at 13h20 \u00b7 README 2021-10-27 at 13h20 \u00b7 Generic 2021-10-27 at 13h20 \u00b7 README 2021-10-27 at 13h20 \u00b7 README 2021-10-27 at 13h20 \u00b7 Obsidian Vault Consolidation 2021-10-27 at 13h20 \u00b7 2021-W44 2021-10-27 at 13h20 \u00b7 2021-Q4 2021-10-27 at 13h20 \u00b7 2021-11 - November 2021-10-27 at 13h20 \u00b7 2021-10 - October 2021-10-27 at 13h20 \u00b7 2021-09 - September 2021-10-27 at 13h20 \u00b7 Day Planner-20211026 2021-10-27 at 13h20 \u00b7 README 2021-10-27 at 13h20 \u00b7 2021-10-27 2021-10-27 at 13h20 \u00b7 2021-10-25 2021-10-27 at 13h20 \u00b7 2021-10-24 2021-10-27 at 13h20 \u00b7 2022 2021-10-27 at 13h20 \u00b7 2021 2021-10-27 at 13h20 \u00b7 2020 2021-10-27 at 13h20 \u00b7 Zotero 2021-10-27 at 13h20 \u00b7 Version Control 2021-10-27 at 13h20 \u00b7 Readwise 2021-10-27 at 13h20 \u00b7 Raindrop.io 2021-10-27 at 13h20 \u00b7 README 2021-10-27 at 13h20 \u00b7 Principle of Connectivity 2021-10-27 at 13h20 \u00b7 Principle of Atomicity 2021-10-27 at 13h20 \u00b7 PARA 2021-10-27 at 13h20 \u00b7 Obsidian 2021-10-27 at 13h20 \u00b7 MkDocs 2021-10-27 at 13h20 \u00b7 Medium 2021-10-27 at 13h20 \u00b7 Markdown 2021-10-27 at 13h20 \u00b7 Linking Your Thinking - LYT 2021-10-27 at 13h20 \u00b7 Instapaper 2021-10-27 at 13h20 \u00b7 GitHub 2021-10-27 at 13h20 \u00b7 GitHub Gists 2021-10-27 at 13h20 \u00b7 GitHub Actions 2021-10-27 at 13h20 \u00b7 Git 2021-10-27 at 13h20 \u00b7 Feedly 2021-10-27 at 13h20 \u00b7 Evergreen Notes 2021-10-27 at 13h20 \u00b7 Building a Second Brain 2021-10-27 at 13h20 \u00b7 Atomic Notes 2021-10-27 at 13h20 \u00b7 README 2021-10-27 at 13h20 \u00b7 Niklas Luhmann 2021-10-27 at 13h20 \u00b7 Unlinked-Files 2021-10-27 at 13h20 \u00b7 Tags 2021-10-27 at 13h20 \u00b7 README 2021-10-27 at 13h20 \u00b7 Publish Workflow 2021-10-27 at 13h20 \u00b7 Plugins 2021-10-27 at 13h20 \u00b7 Productivity 2021-10-27 at 13h20 \u00b7 Personal Knowledge Management 2021-10-27 at 13h20 \u00b7 Zettelkasten 2021-10-27 at 13h20 \u00b7 The Collector's Fallacy 2021-10-27 at 13h20 \u00b7 Rinse and Repeat - Research, Read, Assimilate 2021-10-27 at 13h20 \u00b7 README 2021-10-27 at 13h20 \u00b7 Personal Knowledge Management with Zettelkasten and Obsidian 2021-10-27 at 13h20 \u00b7 PKM - Trust the Process 2021-10-27 at 13h20 \u00b7 Note Taking and The Internet Best Practices 2021-10-27 at 13h20 \u00b7 Machine Learning Operations - MLOps 2021-10-27 at 13h20 \u00b7 Information Flow 2021-10-27 at 13h20 \u00b7 Getting Things Done 2021-10-27 at 13h20 \u00b7 Frameworks I Live By 2021-10-27 at 13h20 \u00b7 Developer Operations - DevOps 2021-10-27 at 13h20 \u00b7 Collectors Do Not Make Progress 2021-10-27 at 13h20 \u00b7 Tools I Use 2021-10-27 at 13h20 \u00b7 The Knowledge Cycle 2021-10-27 at 13h20 \u00b7 Microsoft Developer Docs 2021-10-27 at 13h20 \u00b7 Where I Work, Convincing Students to Disconnect, and Applying Deep Work to Deep Social Problems DEEP QUESTIONS 2021-10-27 at 13h20 \u00b7 This Is How We Change the World 2021-10-27 at 13h20 \u00b7 Tackling Procrastination, Building a Productivity System From Scratch, and the Intellectual Shallowness of Social Media DEEP QUESTIONS 2021-10-27 at 13h20 \u00b7 Tackling Procrastination, Building a Productivity System From Scratch, and the Intellectual Shallowness of Social Media DEEP QUESTIONS-2 2021-10-27 at 13h20 \u00b7 Student Shutdown Rituals, Optimal Deep-To-Shallow Ratios, and the $20 Million Question DEEP QUESTIONS 2021-10-27 at 13h20 \u00b7 Stop Living on Autopilot and Take Responsibility for Your Life 2021-10-27 at 13h20 \u00b7 SYSTEMS THINKING What Is a System 2021-10-27 at 13h20 \u00b7 Projects Lists - November 2019 2021-10-27 at 13h20 \u00b7 Personal Knowledge Management Reprised 2021-10-27 at 13h20 \u00b7 My New Task System, Deep Work With Kids, and Finding Purpose in Distracted Times DEEP QUESTIONS 2021-10-27 at 13h20 \u00b7 Laurie Santos, PhD Simple Ways to Live a Happier Life 2021-10-27 at 13h20 \u00b7 He Ran Across America \u2014 On Plants 2021-10-27 at 13h20 \u00b7 Habit Tune-Up Productivity System Indecision, Embracing Boredom, and Craving Depth in a Shallow Job 2021-10-27 at 13h20 \u00b7 Exponent 188 \u2014 Big Tech, Antitrust, and Democracy 2021-10-27 at 13h20 \u00b7 Exponent 188 \u2014 Big Tech, Antitrust, and Democracy-2 2021-10-27 at 13h20 \u00b7 Ep. 53 Covey's Quads, Perfect Productivity Systems, and Reducing Laziness 2021-10-27 at 13h20 \u00b7 Competitiveness and Mimetic Traps 2021-10-27 at 13h20 \u00b7 Bouncing Back, Finding Fulfilment and Being Productive Ft. Noah Kagan 2021-10-27 at 13h20 \u00b7 Borrowed Creativity 2021-10-27 at 13h20 \u00b7 Balancing the Personal and Professional, Unreasonable Email Expectations, and Avoiding Hard Creative Work DEEP QUESTIONS 2021-10-27 at 13h20 \u00b7 Balancing the Personal and Professional, Unreasonable Email Expectations, and Avoiding Hard Creative Work DEEP QUESTIONS-2 2021-10-27 at 13h20 \u00b7 Austin Kleon on Writing, Creativity and the Importance of Idleness 2021-10-27 at 13h20 \u00b7 68 Bits of Unsolicited Advice 2021-10-27 at 13h20 \u00b7 68 Bits of Unsolicited Advice-2 2021-10-27 at 13h20 \u00b7 677 - The Art of Impossible With Steven Kotler! 2021-10-27 at 13h20 \u00b7 27. The Underlying Technology Behind Fiat Standard 2021-10-27 at 13h20 \u00b7 #88 Derek Sivers Innovation Versus Imitation 2021-10-27 at 13h20 \u00b7 #88 Derek Sivers Innovation Versus Imitation-2 2021-10-27 at 13h20 \u00b7 #634 How to Design Conversations That Matter 2021-10-27 at 13h20 \u00b7 #634 How to Design Conversations That Matter-2 2021-10-27 at 13h20 \u00b7 #494 Michael Phelps and Grant Hackett \u2014 Two Legends on Competing, Overcoming Adversity, Must-Read Books, and Much More 2021-10-27 at 13h20 \u00b7 #493 The Random Show \u2014 Bitcoin Pros and Cons, 2021 Resolutions, Fave Books, Lucid Dreaming, Couples Therapy, and More 2021-10-27 at 13h20 \u00b7 #490 Dr. Jim Loehr on Mental Toughness, Energy Management, the Power of Journaling, and Olympic Gold Medals 2021-10-27 at 13h20 \u00b7 #485 Jerry Seinfeld \u2014 A Comedy Legend\u2019s Systems, Routines, and Methods for Success 2021-10-27 at 13h20 \u00b7 #447 Books I've Loved \u2014 Ann Miura-Ko 2021-10-27 at 13h20 \u00b7 #447 Books I've Loved \u2014 Ann Miura-Ko-2 2021-10-27 at 13h20 \u00b7 #444 Hugh Jackman on Best Decisions, Daily Routines, the 85% Rule, Favorite Exercises, Mind Training, and Much More 2021-10-27 at 13h20 \u00b7 #444 Hugh Jackman on Best Decisions, Daily Routines, the 85% Rule, Favorite Exercises, Mind Training, and Much More-2 2021-10-27 at 13h20 \u00b7 #23 Nat Eliason on Starting a Life-Changing Blog 2021-10-27 at 13h20 \u00b7 #101 Jane McGonigal The Psychology of Gaming 2021-10-27 at 13h20 \u00b7 Tribe of Mentors 2021-10-27 at 13h20 \u00b7 Reproducible Research With R and RStudio 2021-10-27 at 13h20 \u00b7 Quick Passages 2021-10-27 at 13h20 \u00b7 Free to Focus 2021-10-27 at 13h20 \u00b7 Evernote 2021-10-27 at 13h20 \u00b7 Evernote-2 2021-10-27 at 13h20 \u00b7 Evernote Guide - Master Evernote Essentials 2021-10-27 at 13h20 \u00b7 Design Your Work 2021-10-27 at 13h20 \u00b7 {yHat} - Reproducible Work in R 2021-10-27 at 13h20 \u00b7 rBokeh - Tipps and Tricks With JavaScript and Beyond! STATWORX 2021-10-27 at 13h20 \u00b7 Zen to Done The Habit-Building Productivity System 2021-10-27 at 13h20 \u00b7 Zen and the Art of File and Folder Organization 2021-10-27 at 13h20 \u00b7 Your Productivity Obsession Might Be Making You Less Productive 2021-10-27 at 13h20 \u00b7 You Should Make a Blog! 2021-10-27 at 13h20 \u00b7 You Need a Budget 13 Parallels Between Money and Productivity - Forte Labs 2021-10-27 at 13h20 \u00b7 Wtf Is a Zettelkasten Zettlr 2021-10-27 at 13h20 \u00b7 Writing Well A Must-Have Skill That No One Teaches Data Scientists 2021-10-27 at 13h20 \u00b7 Writing Technical Design Docs, Revisited - Machine Words - Medium 2021-10-27 at 13h20 \u00b7 Writing Is Thinking 2021-10-27 at 13h20 \u00b7 Writing Is Thinking-2 2021-10-27 at 13h20 \u00b7 [[Workflow for Serverless\u200a\u2014\u200aCloud Functions + Workflow [Basic]]] 2021-10-27 at 13h20 \u00b7 Why Programmers Should Write Tutorials 2021-10-27 at 13h20 \u00b7 Why Organising Your To-Dos by Project Does Not Work. 2021-10-27 at 13h20 \u00b7 Why Ongoing Is the Worst Word in the History of Project Management 2021-10-27 at 13h20 \u00b7 Why I Use a Cloud-Based Development Environment and How You Can Too 2021-10-27 at 13h20 \u00b7 Why Factor Is One of the Most Amazing Things in R & Forcats Helps You Reali 2021-10-27 at 13h20 \u00b7 What\u2019s on Your Programming Reading List 2021-10-27 at 13h20 \u00b7 What\u2019s on Your Programming Reading List-2 2021-10-27 at 13h20 \u00b7 What's a Successful Shiny Application - Rtask 2021-10-27 at 13h20 \u00b7 What I've Learnt About Making an R Package 2021-10-27 at 13h20 \u00b7 Weekly Review Checklist An Insanely Productive Week in 14 Steps Process Street Checklist, Workflow and SOP Software 2021-10-27 at 13h20 \u00b7 Weekly Reset System for Increased Productivity Mystigal 2021-10-27 at 13h20 \u00b7 Want to Get Organized Start With the Mind Sweep 2021-10-27 at 13h20 \u00b7 Variable and Value Labels Support in Base R and Other Packages 2021-10-27 at 13h20 \u00b7 Using Todoist for GTD GTD Method 2021-10-27 at 13h20 \u00b7 Using Redo to Manage R Data Analysis Workflow 2021-10-27 at 13h20 \u00b7 Usethis Workflow for Package Development Emil Hvitfeldt 2021-10-27 at 13h20 \u00b7 Use the \u2018Mental Shift\u2019 Technique to Increase Your Self-Discipline and Stop Procrastinating 2021-10-27 at 13h20 \u00b7 Ultimate Personal Management Systems - The Startup - Medium 2021-10-27 at 13h20 \u00b7 Top GitHub Best Practices for Developers 2021-10-27 at 13h20 \u00b7 Top 4 Tips to Get Organized for Efficient Software Development 2021-10-27 at 13h20 \u00b7 Top 10 Best Practices in Configuration Management 2021-10-27 at 13h20 \u00b7 Tipsandtricks - Windows10 2021-10-27 at 13h20 \u00b7 This Is How You Become Confident and Transform Your Life 2021-10-27 at 13h20 \u00b7 The \u201cBurner List\u201d\u2014My Simple, Paper-Based System for Focused To-Dos 2021-10-27 at 13h20 \u00b7 The Unsinkable Student Organization System - Study Hacks - Cal Newport 2021-10-27 at 13h20 \u00b7 The Ultimate Home Office Setup Guide 18 Must-Have Items 2021-10-27 at 13h20 \u00b7 The Ultimate Guide to Summarizing Books How to Distill Ideas to Accelerate Your Learning - Forte Labs 2021-10-27 at 13h20 \u00b7 The Shadow Course A Simple Technique to Produce Extraordinary Work - Study Hacks - Cal Newport 2021-10-27 at 13h20 \u00b7 The Search for the Ultimate Productivity System 2021-10-27 at 13h20 \u00b7 The Role of Data Scientist A Back-Of-The-Envelope Model 2021-10-27 at 13h20 \u00b7 The R Code Optimizer \u2022 Rco 2021-10-27 at 13h20 \u00b7 The Productivity System You Use Doesn\u2019t Matter 2021-10-27 at 13h20 \u00b7 The Power of Systematic Notes A Book Review of How to Take Smart Notes by S\u00f6nke Ahrens - Mark Koester 2021-10-27 at 13h20 \u00b7 The Official Guide to Using Todoist Build Your Perfect Productivity Workfl 2021-10-27 at 13h20 \u00b7 The Notetaking Cold War 2021-10-27 at 13h20 \u00b7 The Nitty-Gritty \u2013 Clearing Out Your Inbox - Next Action Associates 2021-10-27 at 13h20 \u00b7 The Maker's Guide to Content Curation, Part 1 Open-Sourcing Your Learning Process - Forte Labs 2021-10-27 at 13h20 \u00b7 The Importance of Systems 2021-10-27 at 13h20 \u00b7 The Impact of the Cloud on Software Development Developer.com 2021-10-27 at 13h20 \u00b7 The Guide to Writing Great Emails That Win You Clients - Double Your Freelancing 2021-10-27 at 13h20 \u00b7 The Future of Communities Is Increasingly More About Digital Community Gardening 2021-10-27 at 13h20 \u00b7 The Digital Productivity Pyramid - Forte Labs 2021-10-27 at 13h20 \u00b7 The Deep Reset - Study Hacks - Cal Newport 2021-10-27 at 13h20 \u00b7 The Data Science Workflow 2021-10-27 at 13h20 \u00b7 The Data Science Landscape 2021-10-27 at 13h20 \u00b7 The Checklist Manifesto - By Atul Gawande Derek Sivers 2021-10-27 at 13h20 \u00b7 The Case for Digital Notes - Forte Labs 2021-10-27 at 13h20 \u00b7 The Best Way to Organize Your To-Dos 2021-10-27 at 13h20 \u00b7 The Best Productivity System There Is - Personal Excellence 2021-10-27 at 13h20 \u00b7 The Best Part of Windows 11 Is a Revamped Windows Subsystem for Linux 2021-10-27 at 13h20 \u00b7 The Best PC Software for Your Windows Computer 2021-10-27 at 13h20 \u00b7 The Best Microsoft Store Apps for Windows 10 2021-10-27 at 13h20 \u00b7 The Best Free Software of 2020 2021-10-27 at 13h20 \u00b7 The 35 Best Productivity Apps for 2020 2021-10-27 at 13h20 \u00b7 The 25+ Best Productivity Apps in 2020 2021-10-27 at 13h20 \u00b7 The 2 Types of Technical Documentation That Developers Love 2021-10-27 at 13h20 \u00b7 The 13-Step Digital Declutter 2021-10-27 at 13h20 \u00b7 The 10 Best Free Antivirus Software 2021-10-27 at 13h20 \u00b7 The 'Weekly Review' Method Will Help You Get Things Done 2021-10-27 at 13h20 \u00b7 Templates for R Markdown Jianghao 2021-10-27 at 13h20 \u00b7 Taking Notes for Yourself Best Practices for the Personal Notebook 2021-10-27 at 13h20 \u00b7 Take the First Step 2021-10-27 at 13h20 \u00b7 System Design Paradigm Caching 2021-10-27 at 13h20 \u00b7 System Design Basics Load Balancer 101 2021-10-27 at 13h20 \u00b7 Symlinks in Windows, MinGW, Git, and Cygwin \u00b7 Josh Kelley 2021-10-27 at 13h20 \u00b7 Supersizing the Mind The Science of Cognitive Extension - Forte Labs 2021-10-27 at 13h20 \u00b7 Structure and Automated Workflow for a Machine Learning Project\u200a\u2014\u200apart 1 2021-10-27 at 13h20 \u00b7 State of R Packages in Your Library - R-Hub Blog 2021-10-27 at 13h20 \u00b7 Strategically Constrained How to Turn Limitations Into Opportunities - Forte Labs 2021-10-27 at 13h20 \u00b7 Solutions for Taking Notes When Listening to Podcasts 2021-10-27 at 13h20 \u00b7 Shiny on Google Cloud Run - Scale-To-Zero R Web Apps 2021-10-27 at 13h20 \u00b7 Software Roles and Titles 2021-10-27 at 13h20 \u00b7 Shiny Load Testing and Horizontal Scaling 2021-10-27 at 13h20 \u00b7 Seth Godin's 7-Point Guide to Bootstrap Your Personal Brand - Personal Bran 2021-10-27 at 13h20 \u00b7 Services in Systemd In-Depth Tutorial 2021-10-27 at 13h20 \u00b7 Scaling R Shiny Applications 2021-10-27 at 13h20 \u00b7 SSH Key Best Practices 2021-10-27 at 13h20 \u00b7 Rstudio - Use Internal Links in RMarkdown HTML Output - Stack Overflow 2021-10-27 at 13h20 \u00b7 RopenscilabsDataspice Create Lightweight schema.org Descriptions of Datas 2021-10-27 at 13h20 \u00b7 Robert Myles McDonnell 2021-10-27 at 13h20 \u00b7 Reflect, Recover, Reset \u2013 Your Life Plan 2021 2021-10-27 at 13h20 \u00b7 Rebooting Your Productivity System 2021-10-27 at 13h20 \u00b7 Re-Share Vtreat Data Preparation Documentation and Video \u2013 Win-Vector Blog 2021-10-27 at 13h20 \u00b7 Re-Exporting the Magrittr Pipe Operator \u203a Petermeissner 2021-10-27 at 13h20 \u00b7 Rd Formatting 2021-10-27 at 13h20 \u00b7 RStudio Open Source & Professional Software for Data Science Teams 2021-10-27 at 13h20 \u00b7 RShiny Authentication With Polished on AWS Kubernetes 2021-10-27 at 13h20 \u00b7 RESTful API Design \u2014 Step by Step Guide 2021-10-27 at 13h20 \u00b7 RDatascience - Career Tips From an Old Timer 2021-10-27 at 13h20 \u00b7 R in Production, DevOps, and the Importance of Empathetic Witnesses 2021-10-27 at 13h20 \u00b7 R at Scale on the Google Cloud Platform 2021-10-27 at 13h20 \u00b7 R Treasures modifyList() \u203a Petermeissner 2021-10-27 at 13h20 \u00b7 R Tips and Tricks \u2013 Utilities 2021-10-27 at 13h20 \u00b7 R & RStudio \u2013 The Interoperability Environment for Data Analytics 2021-10-27 at 13h20 \u00b7 Projmgr Managing the Human Dependencies of Your Projects Emily Riederer 2021-10-27 at 13h20 \u00b7 Project Management With RStudio and Github Yujun Zhou's Website 2021-10-27 at 13h20 \u00b7 Project Based Learning 2021-10-27 at 13h20 \u00b7 Programming Productivity - Wikipedia 2021-10-27 at 13h20 \u00b7 Productivity System The Definitive Guide (2020) - THEZEROED 2021-10-27 at 13h20 \u00b7 Productivity System Archives \u2022 Paul Jacobson 2021-10-27 at 13h20 \u00b7 Productivity Overwhelm 2021-10-27 at 13h20 \u00b7 Powershell - Scripting - Tutorialspoint 2021-10-27 at 13h20 \u00b7 Powerful Time Management Strategies to Do More With Your Day 2021-10-27 at 13h20 \u00b7 Planning a Lot Yujun Zhou's Website 2021-10-27 at 13h20 \u00b7 Persistent Config and Data for R Packages - R-Hub Blog 2021-10-27 at 13h20 \u00b7 Pay Off Your Debt Tools and Tips 2021-10-27 at 13h20 \u00b7 Paperless The One Notebook and Pen I\u2019m Never Giving Up 2021-10-27 at 13h20 \u00b7 PARA Part 8 Core Principles of Digital Organization - Forte Labs 2021-10-27 at 13h20 \u00b7 PARA Part 5 The Project List Mindsweep - Forte Labs 2021-10-27 at 13h20 \u00b7 Optimized Workflow 2021-10-27 at 13h20 \u00b7 One-Touch to Inbox Zero How I Spend 17 Minutes Per Day on Email - Forte Labs 2021-10-27 at 13h20 \u00b7 One Productivity System to Rule Them All 2021-10-27 at 13h20 \u00b7 One Observer for All Buttons in Shiny Using JavaScript jQuery 2021-10-27 at 13h20 \u00b7 Onboarding New Developers 2021-10-27 at 13h20 \u00b7 On Confronting the Productivity Dragon 2021-10-27 at 13h20 \u00b7 Obsidian My New Knowledge Base or Base for Knowledge 2021-10-27 at 13h20 \u00b7 New Project Checklist 2021-10-27 at 13h20 \u00b7 My Personal Knowledge Management System \u2014 Moby Diction 2021-10-27 at 13h20 \u00b7 My Focus-Centric Work Day - Study Hacks - Cal Newport 2021-10-27 at 13h20 \u00b7 More Solutions for Taking Podcast Notes An App Overview 2021-10-27 at 13h20 \u00b7 Methods Bites 2021-10-27 at 13h20 \u00b7 Managing Yourself Extreme Productivity 2021-10-27 at 13h20 \u00b7 Managing Your Project - How to Make Your Research Reproducible - Library Gu 2021-10-27 at 13h20 \u00b7 Managing Your Dotfiles 2021-10-27 at 13h20 \u00b7 Managing My Personal Knowledge Base 2021-10-27 at 13h20 \u00b7 Logging Events in Shiny Apps \u2022 shinyEventLogger 2021-10-27 at 13h20 \u00b7 List Making When Overwhelmed Turn Stress Into Productivity 2021-10-27 at 13h20 \u00b7 LeaRning Path on R - Step by Step Guide to Learn Data Science on R 2021-10-27 at 13h20 \u00b7 Last-Minute Moving Tips How to Pack in a Pinch - Updater 2021-10-27 at 13h20 \u00b7 Kubernetes Explained to Product Managers 2021-10-27 at 13h20 \u00b7 Knoco Stories What's Unique About Knowledge Management 2021-10-27 at 13h20 \u00b7 Keep It Simple, Stupid! Minimalism in Programming How Complexity Harms Your Productivity Finxter 2021-10-27 at 13h20 \u00b7 Just-In-Time Project Management A Digital-First Framework for Modern Projects - Forte Labs 2021-10-27 at 13h20 \u00b7 Jani\u2019s Notes 2021-10-27 at 13h20 \u00b7 It\u2019s Not You - It\u2019s Your Knowledge Base 2021-10-27 at 13h20 \u00b7 It's the Programming Environment, Not the Programming Language thesephist.com 2021-10-27 at 13h20 \u00b7 Introducing the MESA Method Creating the Ideal Work Experience - Forte Labs 2021-10-27 at 13h20 \u00b7 Instapaper Empowering How I Read Articles With Highlights and Tracking - Mark Koester 2021-10-27 at 13h20 \u00b7 Initial Thoughts on Notion and Getting Started Building a New Productivity Workflow 2021-10-27 at 13h20 \u00b7 Information Strategy My Routine, Inputs \u2013 Interdependent Thoughts 2021-10-27 at 13h20 \u00b7 Inbox Master Get All Your Inboxes to Zero, and Have Fewer Inboxes Zen Habits 2021-10-27 at 13h20 \u00b7 Implementing an Idea-Management System - LessWrong 2.0 2021-10-27 at 13h20 \u00b7 I Built Docker Like Executable .Exe for RShiny! 2021-10-27 at 13h20 \u00b7 How to \u2018DevOps\u2019 as a Software Developer 2021-10-27 at 13h20 \u00b7 How to Use the Windows Media Creation Tool to Create a Windows 10 ISO File 2021-10-27 at 13h20 \u00b7 How to Use a Daily Inspirational Routine for Long-Lasting Success in 2021 2021-10-27 at 13h20 \u00b7 How to Use Your Calendar to Make Every Day Your Ideal Day 2021-10-27 at 13h20 \u00b7 How to Use Todoist Tutorial 2021-10-27 at 13h20 \u00b7 How to Use Evernote's Advanced Search Syntax 2021-10-27 at 13h20 \u00b7 How to Use Evernote for Your Creative Workflow - Forte Labs 2021-10-27 at 13h20 \u00b7 How to Structure Your Data Science Workflow 2021-10-27 at 13h20 \u00b7 How to Run R Scripts From the Windows Command Line (CMD) - Data Cornering 2021-10-27 at 13h20 \u00b7 How to Properly Organize Your Hard (Boot) Drive 2021-10-27 at 13h20 \u00b7 How to Partition a Hard Drive in 2020 2021-10-27 at 13h20 \u00b7 How to Organize Your Writing With Markdown - Redeeming Productivity 2021-10-27 at 13h20 \u00b7 How to Organize Your Files for Maximum Productivity 2021-10-27 at 13h20 \u00b7 How to Organize Your Files An Introduction to Personal File Management - The Mac Observer 2021-10-27 at 13h20 \u00b7 How to Organize Computer Files on Your Home Computer 2021-10-27 at 13h20 \u00b7 How to Organize & Add Apps on Windows 10 2021-10-27 at 13h20 \u00b7 How to Make a To-Do List and Get Sh!t Done 2021-10-27 at 13h20 \u00b7 How to Make Yourself Into a Learning Machine 2021-10-27 at 13h20 \u00b7 How to Make Your Developer On-Boarding Process Idiot Proof 2021-10-27 at 13h20 \u00b7 How to Learn Linux and Git 2021-10-27 at 13h20 \u00b7 How to Keep Windows 10 Organized, Pretty, and Productive 2021-10-27 at 13h20 \u00b7 How to Install or Update PowerShell to the Latest Version in Windows 10 ITIGIC 2021-10-27 at 13h20 \u00b7 How to Increase Your Efficiency at Work 2021-10-27 at 13h20 \u00b7 How to Improve the Performance of Your Windows Computer Fundamentally 2021-10-27 at 13h20 \u00b7 How to Handle Inbox Infinity 2021-10-27 at 13h20 \u00b7 How to Get and Remain Organized During Chaotic Times 2021-10-27 at 13h20 \u00b7 How to Get Through a Paper and Digital Backlog \u2013 Gigaom 2021-10-27 at 13h20 \u00b7 How to Export Evernote to Google Drive 2021-10-27 at 13h20 \u00b7 How to Enhance Your Windows Batch Files by Adding GUI 2021-10-27 at 13h20 \u00b7 How to Do a Weekly Review Step-By-Step 2021-10-27 at 13h20 \u00b7 How to Do a Weekly Planning Session. 2021-10-27 at 13h20 \u00b7 How to Do More With Windows 10 Using PowerToys 2021-10-27 at 13h20 \u00b7 How to Distribute Data With Your R Package - R-Hub Blog 2021-10-27 at 13h20 \u00b7 How to Develop Your Digital Space for Peak Productivity 2021-10-27 at 13h20 \u00b7 How to Declutter Your Data With No Regrets 2021-10-27 at 13h20 \u00b7 How to Declutter & Organize Your Digital Files 2021-10-27 at 13h20 \u00b7 How to Crush It at the Start of Your New Developer Job - Small Business Programming 2021-10-27 at 13h20 \u00b7 How to Create an Effective Productivity Plan - Optimize Time 2021-10-27 at 13h20 \u00b7 How to Create a GitHub Profile README 2021-10-27 at 13h20 \u00b7 How to Create EaseUS Bootable USB, CDDVD, and ISO Image With EaseUS Todo Backup - EaseUS 2021-10-27 at 13h20 \u00b7 How to Clean Your Windows Computer The Ultimate Checklist 2021-10-27 at 13h20 \u00b7 How to Check Your Windows Experience Score on Windows 10 2021-10-27 at 13h20 \u00b7 How to Centralize Your Tasks When You\u2019re Using Too Many Apps 2021-10-27 at 13h20 \u00b7 How to Build the Ultimate Productivity System 2021-10-27 at 13h20 \u00b7 How to Build an Efficient Personal Knowledge Management System 2021-10-27 at 13h20 \u00b7 How to Build an Efficient Personal Knowledge Management System-2 2021-10-27 at 13h20 \u00b7 How to Build a Personal Knowledge Management System - Cultivated Management 2021-10-27 at 13h20 \u00b7 How to Be More Productive Build a System and 10x Your Output - The Monk Life 2021-10-27 at 13h20 \u00b7 How to Be More Organized Declutter, Take Control, and Achieve More at Work 2021-10-27 at 13h20 \u00b7 How to Be Mentally Strong - James Altucher 2021-10-27 at 13h20 \u00b7 How to Automate Your Project and Github Repo Setup From the Command Line 2021-10-27 at 13h20 \u00b7 How to Achieve Your Daily Goals 2021-10-27 at 13h20 \u00b7 How the Web Works 2021-10-27 at 13h20 \u00b7 How a Single Freelancer Outperforms a Whole Team 2021-10-27 at 13h20 \u00b7 How I Use Evernote to Organize Client Projects 2021-10-27 at 13h20 \u00b7 How I Organize My Knowledge as a Software Engineer 2021-10-27 at 13h20 \u00b7 Home - How to Write a Good Documentation - Library Guides at UC Berkeley 2021-10-27 at 13h20 \u00b7 Guest Post Using Todoist With MYN and 1MTD by Charles Olsen 2021-10-27 at 13h20 \u00b7 Habits You Must Have to Be a Highly Effective Programmers 2021-10-27 at 13h20 \u00b7 Grant Ammons - How to Efficiently Manage Your Dotfiles 2021-10-27 at 13h20 \u00b7 Getting Things Done With Todoist \u2013 My GTD Setup 2021-10-27 at 13h20 \u00b7 Getting Things Done Organize 2021-10-27 at 13h20 \u00b7 Getting Things Done Clarify 2021-10-27 at 13h20 \u00b7 Getting Started With GTD Templates Evernote Evernote Blog 2021-10-27 at 13h20 \u00b7 Getting More Done at Work With Evernote - Frank Buck Consulting 2021-10-27 at 13h20 \u00b7 Getting Data From PDFs the Easy Way With R - Open Source Automation 2021-10-27 at 13h20 \u00b7 Get Organized \u2013 Personal Development Ideas 2021-10-27 at 13h20 \u00b7 Get New IT Pros Up to Speed Fast With This Onboarding Checklist 2021-10-27 at 13h20 \u00b7 Genius Things to Do on a Sunday to Have a Productive Week 2021-10-27 at 13h20 \u00b7 Gaming the Naming The ABC's of Organizing Your Evernote Notebooks 2021-10-27 at 13h20 \u00b7 GTD With Todoist, Evernote and Google Calendar (Part 2) Dr Veronika CH 2021-10-27 at 13h20 \u00b7 GTD With Todoist, Evernote and Google Calendar Dr Veronika CH 2021-10-27 at 13h20 \u00b7 GTD Refresh, Part 5 Building the Weekly Review Habit 2021-10-27 at 13h20 \u00b7 GTD Reference The Best Filing System for Busy Lives Shortform Books 2021-10-27 at 13h20 \u00b7 Five Tidyverse Tricks You May Not Know About 2021-10-27 at 13h20 \u00b7 First Principles of Workflow Design (A 2-Part Episode) RadReads 2021-10-27 at 13h20 \u00b7 Finishing Strong Part 1 Run a Victory Lap 2021-10-27 at 13h20 \u00b7 Feeling Overwhelmed 33 Productivity Tips to Get You Unstuck 2021-10-27 at 13h20 \u00b7 FW Managing Outcomes in a Remote Environment 2021-10-27 at 13h20 \u00b7 Everything About Software Architecture 2021-10-27 at 13h20 \u00b7 Evernote and Todoist REALLY Getting Things Done 2021-10-27 at 13h20 \u00b7 Event-Driven APIs\u200a\u2014\u200aUnderstanding the Principles 2021-10-27 at 13h20 \u00b7 Enable Code Folding in Bookdown and Blogdown \u00b7 StatnMap 2021-10-27 at 13h20 \u00b7 Digital Tools I Wish Existed 2021-10-27 at 13h20 \u00b7 Digital Life in Disarray Use These 6 Steps to Get Organized. 2021-10-27 at 13h20 \u00b7 Digital Decluttering Cleaning Up Computer Files & Social Media Profiles 2021-10-27 at 13h20 \u00b7 Digital Declutter This Is How to Reset Your Digital Life - Prime Your Pump 2021-10-27 at 13h20 \u00b7 Digital De-Cluttering How to Streamline Your Online Life 2021-10-27 at 13h20 \u00b7 Developer GTD 2021-10-27 at 13h20 \u00b7 Dev Environments as Code With Containers and Visual Studio Code 2021-10-27 at 13h20 \u00b7 Delete These Windows Files and Folders to Free Up Disk Space 2021-10-27 at 13h20 \u00b7 Deep Habits WorkingMemory.txt (The Most Important Productivity Tool You've Never Heard Of) - Study Hacks - Cal Newport 2021-10-27 at 13h20 \u00b7 Decent-Code 2021-10-27 at 13h20 \u00b7 Data Ecosystem 2021-10-27 at 13h20 \u00b7 Creating Windows Base Images Using Packer and Boxstarter \u2014 Hurry Up and Wait! 2021-10-27 at 13h20 \u00b7 Create a Productivity Workflow That Works for You 2021-10-27 at 13h20 \u00b7 Craig Sturgis Dot Com 2021-10-27 at 13h20 \u00b7 Consolidate and Unify - Tandem Vault Digital Asset Management 2021-10-27 at 13h20 \u00b7 Complexity Has to Live Somewhere 2021-10-27 at 13h20 \u00b7 Completing Tasks \u2014 10 Steps to Finishing What You Start 2021-10-27 at 13h20 \u00b7 Collecting and Organising Data for Maximum Productivity. \u2014 Carl Pullein 2021-10-27 at 13h20 \u00b7 Cloudwards.net's Backup and Storage Strategy 2017 2021-10-27 at 13h20 \u00b7 CloudRun With Serverless VPC Access + CloudSQL With Private Service Connect. 2021-10-27 at 13h20 \u00b7 Cloud Computing 8 Benefits for Your Software Developers - Dice Insights 2021-10-27 at 13h20 \u00b7 [[Cloud Based Computing Business Ideas for 2021 [Top 50 Picks]]] 2021-10-27 at 13h20 \u00b7 Clean Up Your Productivity System to Be More Productive 2021-10-27 at 13h20 \u00b7 Business Engineering \u2014 An Alternative Approach to Architecting and Executing Complex Businesses\u2026 2021-10-27 at 13h20 \u00b7 Building an Open Source Personal Knowledge Base Hacker Noon 2021-10-27 at 13h20 \u00b7 Building a Second Brain in Emacs and Org-Mode - Forte Labs 2021-10-27 at 13h20 \u00b7 Building a Second Brain An Overview - Forte Labs 2021-10-27 at 13h20 \u00b7 Building a Digital Garden 2021-10-27 at 13h20 \u00b7 Building a Data Pipeline From Scratch - The Data Experience - Medium 2021-10-27 at 13h20 \u00b7 Building Documentation Mindshare in a Company \u2014 Write the Docs 2021-10-27 at 13h20 \u00b7 Building Better Documentation Atlassian 2021-10-27 at 13h20 \u00b7 Blog Filterize 2021-10-27 at 13h20 \u00b7 Bioconductor - Package Guidelines 2021-10-27 at 13h20 \u00b7 Best Practices for Outlook 2021-10-27 at 13h20 \u00b7 Best Practices With Packer and Windows 2021-10-27 at 13h20 \u00b7 Best GTD Tools and Productivity Software Tips. Life Improvement With GTD (Getting Things Done). 2021-10-27 at 13h20 \u00b7 Best Free, Public DNS Servers in 2021 Boost Your Internet Speed With These Services 2021-10-27 at 13h20 \u00b7 Beginner's Tip Organize Your Coding Projects - Dan Fletcher Blog 2021-10-27 at 13h20 \u00b7 Become a Better Developer Through Blogging - Steve Gordon - Code With Steve 2021-10-27 at 13h20 \u00b7 Basics of the Unix Philosophy 2021-10-27 at 13h20 \u00b7 Back to Basics Your Weekly Review 2021-10-27 at 13h20 \u00b7 Backup 101 Windows Files and Folders You Should Always Back Up 2021-10-27 at 13h20 \u00b7 Auto Documentation System for R Shiny - Stack Overflow 2021-10-27 at 13h20 \u00b7 Audiobook Review David Allen's GTD Weekly Review 2021-10-27 at 13h20 \u00b7 Are You Making This GTD Mistake - Asian Efficiency 2021-10-27 at 13h20 \u00b7 Archivist and GitHub Integration Archivist.github 2021-10-27 at 13h20 \u00b7 Architecture for a Startup 2021-10-27 at 13h20 \u00b7 Architecture for a Startup-2 2021-10-27 at 13h20 \u00b7 An Iterative Approach to Notes 2021-10-27 at 13h20 \u00b7 Action Items Template for Excel 2021-10-27 at 13h20 \u00b7 A \u2018Jobs to Be Done\u2019 Framework for Startups 2021-10-27 at 13h20 \u00b7 A Workflow for R 2021-10-27 at 13h20 \u00b7 A Re-Introduction to JavaScript (JS Tutorial) - JavaScript MDN 2021-10-27 at 13h20 \u00b7 A Preview of WSL in the Microsoft Store Is Now Available! 2021-10-27 at 13h20 \u00b7 A New Year Is a Beautiful Fresh Start 2021-10-27 at 13h20 \u00b7 A Hierarchy First Approach to Note Taking 2021-10-27 at 13h20 \u00b7 A Builder\u2019s Guide to Note-Taking 2021-10-27 at 13h20 \u00b7 A Better Way to Manage Your Github Personal Access Tokens 2021-10-27 at 13h20 \u00b7 9 Tricks for Boosting SQL Query Performance 2021-10-27 at 13h20 \u00b7 [[9 Tips to Get More Out of Your Calendar [PMP #177]]] 2021-10-27 at 13h20 \u00b7 9 Project Controls & How to Use Them to Tame Your Project Chaos - The Digital Project Manager 2021-10-27 at 13h20 \u00b7 8 Ways to Free Up RAM on Your Windows Computer 2021-10-27 at 13h20 \u00b7 8 Best Practices to Facilitate Personal Knowledge Management in eLearning - eLearning Industry 2021-10-27 at 13h20 \u00b7 7 Effective Tools to Increase Your Hard Drive Performance on Windows 2021-10-27 at 13h20 \u00b7 7 Quick Tips to Control Clutter and Stop Hoarding 2021-10-27 at 13h20 \u00b7 7 Best Practices for Your Developer Onboarding Process 2021-10-27 at 13h20 \u00b7 7 Best DNS Monitoring Tools + How to Monitor DNS Server - DNSstuff 2021-10-27 at 13h20 \u00b7 62 Productive Things to Do When Bored at Home 2021-10-27 at 13h20 \u00b7 6 YAML Features Most Programmers Don\u2019t Know 2021-10-27 at 13h20 \u00b7 6 Windows Apps That Automatically Organize Files for You 2021-10-27 at 13h20 \u00b7 5 Useful Golang Modules Developers Should Know in 2021 2021-10-27 at 13h20 \u00b7 5 Useful Golang Modules Developers Should Know in 2021-2 2021-10-27 at 13h20 \u00b7 5 Steps for Tracking Your Monthly Expenses - NerdWallet 2021-10-27 at 13h20 \u00b7 5 Quotes by Keanu Reeves That May Help You Live an Authentic and Wholesome Life 2021-10-27 at 13h20 \u00b7 5 Pitfalls of Being an Information Hoarder Foolishly Creative 2021-10-27 at 13h20 \u00b7 5 Bookmark Apps to Organize Links, Save Social Posts, and Read It Later 2021-10-27 at 13h20 \u00b7 4 Steps to Organize Your Massive To-Do List 2021-10-27 at 13h20 \u00b7 4 Solid Ways to Get the Best of the Web 2021-10-27 at 13h20 \u00b7 4 Great Habits to Increase Productivity, Focus, Concentration, and Determination 2021-10-27 at 13h20 \u00b7 4 Efficient Workflow Efficient R Programming 2021-10-27 at 13h20 \u00b7 3 Steps to Managing Your Time and Maximizing Your Workday 2021-10-27 at 13h20 \u00b7 3 Steps to Designing a Powerful Project Workflow - ProjectManager.com 2021-10-27 at 13h20 \u00b7 3 Smart Uses of Curated Lists and How to Create Them 2021-10-27 at 13h20 \u00b7 27 Incredibly Useful Things You Didn\u2019t Know Chrome Could Do 2021-10-27 at 13h20 \u00b7 13 Things to Put on Your Daily Checklist for Boosted Productivity 2021-10-27 at 13h20 \u00b7 12 Types of Lists You Should Keep to Get Things Done 2021-10-27 at 13h20 \u00b7 11 Fast Ways to Get Tasks Off Your Mind and Into Your Todoist 2021-10-27 at 13h20 \u00b7 10 Windows Task Manager Tricks You Probably Didn\u2019t Know 2021-10-27 at 13h20 \u00b7 10 Ways to Improve How You Manage Information 2021-10-27 at 13h20 \u00b7 10 Tips to Turn Microsoft To-Do Into a Serious Task Manager 2021-10-27 at 13h20 \u00b7 10 Guidelines to Better Table Design 2021-10-27 at 13h20 \u00b7 'Mustashe' Explained Joshua Cook 2021-10-27 at 13h20 \u00b7 #6 Practicing - Tips From the Clean Coder - DEV 2021-10-27 at 13h20 \u00b7 #5 8 Tips for a Production-Ready Shiny Application 2021-10-27 at 13h20 \u00b7 README 2021-10-27 at 13h20 \u00b7 Writing Well- A Must-Have Skill That No One Teaches Data Scientists 2021-10-27 at 13h20 \u00b7 [[Workflow for Serverless\u200a\u2014\u200aCloud Functions + Workflow [Basic]]] 2021-10-27 at 13h20 \u00b7 Why Programmers Should Write Tutorials 2021-10-27 at 13h20 \u00b7 What\u2019s on Your Programming Reading List 2021-10-27 at 13h20 \u00b7 The Role of Data Scientist- A Back-Of-The-Envelope Model 2021-10-27 at 13h20 \u00b7 The Data Science Landscape 2021-10-27 at 13h20 \u00b7 The 2 Types of Technical Documentation That Developers Love 2021-10-27 at 13h20 \u00b7 Taking Notes for Yourself- Best Practices for the Personal Notebook 2021-10-27 at 13h20 \u00b7 System Design Paradigm- Caching 2021-10-27 at 13h20 \u00b7 System Design Basics- Load Balancer 101 2021-10-27 at 13h20 \u00b7 Services in Systemd- In-Depth Tutorial 2021-10-27 at 13h20 \u00b7 Scaling R Shiny Applications- 2021-10-27 at 13h20 \u00b7 RShiny Authentication With Polished on AWS Kubernetes 2021-10-27 at 13h20 \u00b7 RESTful API Design \u2014 Step by Step Guide 2021-10-27 at 13h20 \u00b7 R in Production, DevOps, and the Importance of Empathetic Witnesses 2021-10-27 at 13h20 \u00b7 I Built Docker Like Executable _Exe for RShiny! 2021-10-27 at 13h20 \u00b7 How to \u2018DevOps\u2019 as a Software Developer 2021-10-27 at 13h20 \u00b7 How to Use a Daily Inspirational Routine for Long-Lasting Success in 2021 2021-10-27 at 13h20 \u00b7 How to Structure Your Data Science Workflow 2021-10-27 at 13h20 \u00b7 How to Learn Linux and Git 2021-10-27 at 13h20 \u00b7 How to Enhance Your Windows Batch Files by Adding GUI 2021-10-27 at 13h20 \u00b7 How a Single Freelancer Outperforms a Whole Team 2021-10-27 at 13h20 \u00b7 Five Tidyverse Tricks You May Not Know About 2021-10-27 at 13h20 \u00b7 Everything About Software Architecture 2021-10-27 at 13h20 \u00b7 Event-Driven APIs\u200a\u2014\u200aUnderstanding the Principles 2021-10-27 at 13h20 \u00b7 Data Ecosystem 2021-10-27 at 13h20 \u00b7 Completing Tasks \u2014 10 Steps to Finishing What You Start 2021-10-27 at 13h20 \u00b7 CloudRun With Serverless VPC Access + CloudSQL With Private Service Connect_ 2021-10-27 at 13h20 \u00b7 Architecture for a Startup 2021-10-27 at 13h20 \u00b7 A Hierarchy First Approach to Note Taking 2021-10-27 at 13h20 \u00b7 9 Tricks for Boosting SQL Query Performance 2021-10-27 at 12h52 \u00b7 REST API Resource Naming 2021-10-27 at 12h52 \u00b7 REST API Resources 2021-10-27 at 12h52 \u00b7 REST APIs 2021-10-27 at 12h52 \u00b7 REST API Methods 2021-10-27 at 12h52 \u00b7 REST API Idempotence 2021-10-27 at 12h52 \u00b7 REST API HTTP Status Codes 2021-10-27 at 12h52 \u00b7 Azure DevOps Pipelines","title":"Changelog"},{"location":"Highlights/","text":"Type/Vault/MOC \u00b6 Highlights \u00b6 The Highlights directory houses highlights extracted from various sources using [[Placeholders/Readwise]] and manual export from [[Placeholders/Medium]]. Readwise highlights are categorized by type: - Articles - Books - Podcasts and include my personal highlights from: [[Placeholders/Instapaper]] Highlights [[Placeholders/Feedly]] Article Highlights [[Placeholders/Medium]] Article Highlights Digital Books (eBook, Kindle, etc.) Imported Highlights PDF Highlights path:\"Highlights\" -path:\"Highlights/README\"","title":"Index"},{"location":"Highlights/#typevaultmoc","text":"","title":"Type/Vault/MOC"},{"location":"Highlights/#highlights","text":"The Highlights directory houses highlights extracted from various sources using [[Placeholders/Readwise]] and manual export from [[Placeholders/Medium]]. Readwise highlights are categorized by type: - Articles - Books - Podcasts and include my personal highlights from: [[Placeholders/Instapaper]] Highlights [[Placeholders/Feedly]] Article Highlights [[Placeholders/Medium]] Article Highlights Digital Books (eBook, Kindle, etc.) Imported Highlights PDF Highlights path:\"Highlights\" -path:\"Highlights/README\"","title":"Highlights"},{"location":"Highlights/Medium/9%20Tricks%20for%20Boosting%20SQL%20Query%20Performance/","text":"URL: https://medium.com/p/2c03ea4873b2 Author: Anisuzzaman Babla Tags: #Type/Source/Article Date: 2021-05-11 The best approach here is to define the fields in the SELECT statement to instruct the database to query only the required data to meet the end goals. %% highlight_id: 177976250 %% Performance tuning in SQL can be done by indexing properly, which translates to quicker access to the database during critical times. This %% highlight_id: 177976251 %% It is highly recommended to avoid using temp tables if your code can be written simply %% highlight_id: 177976252 %% Create Joins With INNER JOIN (not WHERE) %% highlight_id: 177976253 %%","title":"9 Tricks for Boosting SQL Query Performance"},{"location":"Highlights/Medium/A%20Hierarchy%20First%20Approach%20to%20Note%20Taking/","text":"URL: https://medium.com/p/9d4b176bd5ec Author: Kevin Lin Tags: #Type/Source/Article Date: 2021-05-13 My primary use for notes is as a cache. Think Redis, but for humans. %% highlight_id: 113319192 %% If I spent more than 5 minutes figuring something out, those are five minutes I never want to spend again figuring out the same problem %% highlight_id: 113319191 %% My solution is something I call hierarchal note taking. It\u2019s a system I\u2019ve developed over the past ten years that has allowed me to amass a corpus of +10k notes. %% highlight_id: 113319190 %% it lets me find any specific note within seconds even with thousands of existing notes %% highlight_id: 113319189 %% it helps me build a comprehensive mental model around a domain through the act of organizing my notes %% highlight_id: 113319188 %% it can be used on any note-taking tool that supports markdown notes %% highlight_id: 113319186 %% it\u2019s compatible with existing note-taking methodologies like PARA %% highlight_id: 113319184 %% I created a folder called notes. I created a note called tar.md %% highlight_id: 113319182 %% Note that my tar.md note doesn't have every option or use case involving tar. Instead, it's only the options that I find most useful and use cases that I've had to do. This tends to be my approach to note-taking - I like to capture the bare minimum information I need so that the future me can get value out of the note %% highlight_id: 113319180 %% What started as a single markdown file quickly spawned a few hundred more. It was exhilarating \u2014 instead of turning to google every time I ran into a dusty corner of Linux, I could just reference my notes. 95% of the time, there would be a nicely summarized note waiting for me :) %% highlight_id: 113319178 %% Take python as an example. Python is both a programming language as well as a cli command. Without changing the name of one of the notes or introducing folders, there would be no way to create notes on both. %% highlight_id: 113319176 %% But I didn\u2019t want folders. Folders were messy and besides, weren\u2019t supported in notational velocity, my primary note-taking tool at the time. So instead of folders, I decided to create a hierarchy using the . symbol as my delimiter. %% highlight_id: 113319174 %% And whereas folders were traditionally used to organize information, there was no straightforward way to use a folder hierarchy to quickly find information. Having the hierarchy in the filename made it easy to find information using the hierarchy %% highlight_id: 113319172 %% As I started building hierarchies across more and more domains, I found that it became useful to document what they were. I called these externalized hierarchies schemas. They were a table of contents for a particular hierarchy. I started adding a special schema file directly underneath the root of each hierarchy. %% highlight_id: 113319170 %% I would use schemas as a common source of truth when building out a hierarchy and use them to make sure that each hierarchy was internally consistent. As I began to use this system day by day, I realized that I had stumbled upon a radically more effective way of learning. %% highlight_id: 113319168 %% By associating every note I took to a hierarchy, I found that looking up information no longer felt like an tax on my time, but instead, a path to self augmentation. %% highlight_id: 113319166 %% I\u2019ve also expanded my schemas and have migrated from free form bullets to a structured YAML syntax. %% highlight_id: 113319162 %% Over 50 years ago, Vannevar Bush, an early visionary in information science, said something about the field that strikes a deep chord with me. %% highlight_id: 113319160 %% \u201cWe are overwhelmed with information and we don\u2019t have the tools to properly index and filter through it. [The development of these tools, which] will give society access to and command over the inherited knowledge of the ages [should] be the first objective of our scientist\u201d \u2014 Vannevar Bush, 1945 %% highlight_id: 113319159 %% Dendron is my attempt at building a tool that will give humans access to and command over the inherited knowledge of the ages %% highlight_id: 113319158 %% I\u2019ve expanded my use cases of note-taking beyond caching to also include journaling, task management, creating writing, keeping track of interactions, and lots more. %% highlight_id: 113319164 %%","title":"A Hierarchy First Approach to Note Taking"},{"location":"Highlights/Medium/Architecture%20for%20a%20Startup/","text":"URL: https://medium.com/p/86651962bc99 Author: Mitesh Tags: #Type/Source/Article Date: 2021-05-13 Static web app: We had a static website that was deployed on S3 and served using the static web hosting feature provided by S3. I added a CloudFront CDN in front of S3 to serve users faster, as CDN will cache content. All domains were routed through Route53 %% highlight_id: 113319203 %% Monitoring: We used the NewRelic free tier for monitoring the system along with a self-hosted sentry server to catch all server issues. Sentry was very helpful for catching backend bugs that came when the application is live. Sentry was deployed in separate admin VPC as that is the same for all environments %% highlight_id: 113319197 %% Deployment: We used Jenkins for deployment. I tried using other tools but felt at home with Jenkins. Overall philosophy was to build once, deploy everywhere. We had two jobs for each deployment, one which builds a branch and the other which deploys that build. This way we can have the same build deployed on any environment. This was deployed in admin VPC which was used for common use cases. %% highlight_id: 113319195 %% Metabase is an open-source business analytics server. This was deployed in the app subnet and exposed using ALB with Cognito (google auth) to keep access secure for internal users only. %% highlight_id: 113319202 %% Terraform is used for infrastructure as code and Ansible is used as configuration management. %% highlight_id: 113319204 %%","title":"Architecture for a Startup"},{"location":"Highlights/Medium/CloudRun%20With%20Serverless%20VPC%20Access%20%2B%20CloudSQL%20With%20Private%20Service%20Connect_/","text":"URL: https://medium.com/p/9432a749ff7b Author: Johanes Glenn Tags: #Type/Source/Article Date: 2021-05-13 With the new adoption of containers, not everyone are actually well equiped for k8s implementation (even though cloud provider now help people by creating a managed k8s, eg. GKE). At this point we can (think for) utilize CloudRun for first step to utilize containers without any hassle on managing the underlying server (or we could say as serverless). %% highlight_id: 158362047 %%","title":"CloudRun With Serverless VPC Access + CloudSQL With Private Service Connect "},{"location":"Highlights/Medium/Completing%20Tasks%20%E2%80%94%2010%20Steps%20to%20Finishing%20What%20You%20Start/","text":"URL: https://medium.com/p/393ccba958b9 Author: Eleanor McKenna Tags: #Type/Source/Article Date: 2021-05-13 It\u2019s easy to start a project. For a lot of us, finishing projects is the difficult bit. Here\u2019s my guide to completing tasks. %% highlight_id: 129440989 %% \u201cDecide on your most important task. Begin immediately and work on that task with self-discipline until it is 100% complete. In life, all success comes from completing tasks. It\u2019s not from working at tasks, it\u2019s from completing tasks. It is only when you complete tasks that you become successful.\u201d \u2013 Brian Tracy %% highlight_id: 129440990 %%","title":"Completing Tasks \u2014 10 Steps to Finishing What You Start"},{"location":"Highlights/Medium/Data%20Ecosystem/","text":"URL: https://medium.com/p/111b818c3d1b Author: Gerrishon Sirere Tags: #Type/Source/Article Date: 2021-05-13 Data can be categorized as structured semi-structured, or unstructured. %% highlight_id: 121362778 %% Structured data can be organized into rows and columns an example of structured data is spreadsheets. %% highlight_id: 121362779 %% Semi-structured data is a mix of data that has consistent characteristics and data that doesn\u2019t conform to a rigid structure. For example, emails. An email has a mix of structured data, such as the name of the sender and recipient, but also has the contents of the email, which is unstructured data. %% highlight_id: 121362780 %% Unstructured data: Data that is complex, and mostly qualitative information that is impossible to reduce to rows and columns. For example, photos, videos, text files, PDFs, and social media content. %% highlight_id: 121362781 %%","title":"Data Ecosystem"},{"location":"Highlights/Medium/Event-Driven%20APIs%E2%80%8A%E2%80%94%E2%80%8AUnderstanding%20the%20Principles/","text":"URL: https://medium.com/p/c3208308d4b2 Author: Dunith Dhanushka Tags: #Type/Source/Article Date: 2021-05-13 A Webhook is a publicly accessible HTTP POST endpoint managed by an event consumer. An event producer, such as an API server, can send event notifications to a webhook when something interesting happens. %% highlight_id: 177976249 %%","title":"Event Driven APIs\u200a\u2014\u200aUnderstanding the Principles"},{"location":"Highlights/Medium/Everything%20About%20Software%20Architecture/","text":"URL: https://medium.com/p/dfd2b9351ef4 Author: Mohit Malhotra Tags: #Type/Source/Article Date: 2021-05-13 Sinkhole Problem %% highlight_id: 153436644 %%","title":"Everything About Software Architecture"},{"location":"Highlights/Medium/Five%20Tidyverse%20Tricks%20You%20May%20Not%20Know%20About/","text":"URL: https://medium.com/p/c5026d5a19da Author: Keith McNulty Tags: #Type/Source/Article Date: 2021-05-13 Both of these updates took advantage of major new innovations in the R ecosystem, including updates in rlang, vctrs and glue among others. %% highlight_id: 115127928 %% pivot_longer() and pivot_wider() to better manage and control transformations of dataframes from wide to long form - one of the most common data-wrangling tasks. Replacing gather() and spread(), these new functions introduced more capability to manage the specifics of the transformation, cutting time for users in terms of how they tailor their outputs. %% highlight_id: 115127930 %% introduction of across() and c_across() as adverbs to be used with summarise() and mutate() simplified the number of scoped variants that users needed to work with and, like the tidyr changes, allowed greater control of what the output looked like. %% highlight_id: 115127929 %%","title":"Five Tidyverse Tricks You May Not Know About"},{"location":"Highlights/Medium/How%20a%20Single%20Freelancer%20Outperforms%20a%20Whole%20Team/","text":"URL: https://medium.com/p/5974fe5db597 Author: Jovan Cicmil Tags: #Type/Source/Article Date: 2021-05-13 That\u2019s the difference a client feels when they suddenly have a change of heart about a feature or a module of your project. A freelancer is a sports sedan \u2014 reliable, responsive, and easy to work with. If a client wants to make a U-turn, all they gotta do is tell you; your tires immediately screech, and you\u2019re headed in the client\u2019s new direction. %% highlight_id: 119245365 %% Taking a break whenever you like and setting your own schedule is a pipedream in a team environment. In theory, it\u2019s possible, but it\u2019s complicated: other people depend on you to be online at certain times, their work depends on yours and vice-versa, and there are, again, meetings to be had. %% highlight_id: 119245364 %%","title":"How a Single Freelancer Outperforms a Whole Team"},{"location":"Highlights/Medium/How%20to%20Enhance%20Your%20Windows%20Batch%20Files%20by%20Adding%20GUI/","text":"URL: https://medium.com/p/7287d89ebad6 Author: Shalitha Suranga Tags: #Type/Source/Article Date: 2021-05-13 powershell -Command \"& { }\" %% highlight_id: 128852271 %%","title":"How to Enhance Your Windows Batch Files by Adding GUI"},{"location":"Highlights/Medium/How%20to%20Learn%20Linux%20and%20Git/","text":"URL: https://medium.com/p/25b18a815778 Author: Syed Mujtaba Jafri Tags: #Type/Source/Article Date: 2021-05-13 Fun fact : Git was invented by Linus Torvalds, the man behind Linux. He invented it for development of Linux kernel, with other developers contributing to its initial development. %% highlight_id: 117855399 %%","title":"How to Learn Linux and Git"},{"location":"Highlights/Medium/How%20to%20Structure%20Your%20Data%20Science%20Workflow/","text":"URL: https://medium.com/p/b06748b7761a Author: Mikhail Klassen Tags: #Type/Source/Article Date: 2021-05-13 The \u201cscience\u201d part of data science is the classic work of posing a question, generating hypotheses, examining the evidence, and formulating a model that explains the evidence. %% highlight_id: 115127962 %% professional data scientists are drawn from the disciplines of mathematics, statistics, computer science, and physics %% highlight_id: 115127963 %%","title":"How to Structure Your Data Science Workflow"},{"location":"Highlights/Medium/How%20to%20Use%20a%20Daily%20Inspirational%20Routine%20for%20Long-Lasting%20Success%20in%202021/","text":"URL: https://medium.com/p/91a5945b3644 Author: Christopher D. Connors Tags: #Type/Source/Article Date: 2021-05-13 The beginning of a new year is an opportunity to reinvent, renew and revamp our approach toward living our best life. It\u2019s great for planning and refocusing our priorities. If you ended 2020 in the doldrums of despair and disappointment, please know you now have the ability to write a masterpiece this year. %% highlight_id: 128852249 %% The surest way to get there is by creating an inspirational routine that empowers and encourages you to create habits and plan your success for each day and week. It all starts with inspirational ideas. %% highlight_id: 128852250 %% \u201cYou need to learn how to select your thoughts just the same way you select your clothes every day. This is a power you can cultivate. If you want to control things in your life so bad, work on the mind. That\u2019s the only thing you should be trying to control.\u201d \u2014 Elizabeth Gilbert %% highlight_id: 128852251 %% In this vein, I urge you to develop an inspirational routine each morning. It may come through the power of meditation, prayer, genuine heartfelt interaction with those that you love or from your favorite song. It could be a video that plays back the piano recital you played to perfection that brought the house down. %% highlight_id: 128852252 %% \u201cGreat are they who see that spiritual is stronger than any material force \u2014 that thoughts rule the world.\u201d \u2014 Ralph Waldo Emerson %% highlight_id: 128852253 %% Make your routine an every day thing. As I\u2019ve built a successful entrepreneurial career from scratch, I\u2019ve learned that planning and daily routine are what power success. Planning reinforces what you\u2019re trying to achieve. Planning reassure you that all of your progress toward self-actualization, as well as greater harmony and rhythm in living, is worth the pain and occasional doubts. %% highlight_id: 128852254 %% Dedicate 10 minutes of contemplation time, ideally, at the beginning of each day. This sets the tone for your day and gets you feeling inspired. %% highlight_id: 128852255 %% Use this time alone in solitude, in a quiet place. Focus your thoughts on positive, inspiring thoughts such as: romantic love, excitement for a new opportunity, music, friendship and envisioning yourself attaining success or fame. There\u2019s tremendous power that comes through dreaming and seeing yourself standing \u201cin the winner\u2019s circle.\u201d %% highlight_id: 128852256 %% Get these positive thoughts going and keep them going. Write down these thoughts that come to mind. Keep referring back to them throughout your work day or school day. Think of them when you\u2019re out in the social world, during moments of difficulty or times of joy. Look at them again before you go to bed at night and reset your mind. Then rest and get read for the new day with excitement, anticipation and a clear mind for fresh, new thoughts. %% highlight_id: 128852257 %%","title":"How to Use a Daily Inspirational Routine for Long Lasting Success in 2021"},{"location":"Highlights/Medium/How%20to%20%E2%80%98DevOps%E2%80%99%20as%20a%20Software%20Developer/","text":"URL: https://medium.com/p/d428821ae681 Author: Komal Venkatesh Ganesan Tags: #Type/Source/Article Date: 2021-05-13 Most modern apps work by exposing HTTP APIs. The webserver that handles this needs to have limits set on important parameters like \u2014 incoming_payload_size, max_conncurrent_connectionsand connection-timeoutvalues. %% highlight_id: 115290506 %% Understand key concepts such as IP subnets, routing policies, firewall and DNS rules. These determine external connectivity \u2014 to and from your application. %% highlight_id: 115290505 %% Your application might need client-certs to be installed on the machine to connect and trust remote HTTPS endpoints. Or if you are a server, you might require a server-cert signed by your organization\u2019s root CA. %% highlight_id: 115290504 %% These are usually enforced by the security team in your organization. Be aware of these and evaluate what your software might need beforehand. %% highlight_id: 115290503 %% If your application runs on Docker, these certificates will have to be loaded into your container. %% highlight_id: 115290502 %%","title":"How to \u2018DevOps\u2019 as a Software Developer"},{"location":"Highlights/Medium/I%20Built%20Docker%20Like%20Executable%20_Exe%20for%20RShiny%21/","text":"URL: https://medium.com/p/3f1421d75d09 Author: Pulkit Saraf Tags: #Type/Source/Article Date: 2021-05-13 There\u2019s an outer layer of a bash script that prepares the system. The script checks for environment variables, whether or not R is installed on the system and pastes .Renviron and .Rprofile files among other dependent files on the client system. %% highlight_id: 113155385 %% It pastes latest packages and executes around 50 lines of code before launching the tool in this artificial environment. With 100% success rate. %% highlight_id: 113155384 %%","title":"I Built Docker Like Executable  Exe for RShiny!"},{"location":"Highlights/Medium/R%20in%20Production%2C%20DevOps%2C%20and%20the%20Importance%20of%20Empathetic%20Witnesses/","text":"URL: https://medium.com/p/78ecf4430e36 Author: Kelly O'Briant Tags: #Type/Source/Article Date: 2021-05-13 I\u2019ve found that most R users don\u2019t spend a lot of time thinking about DevOps. But the more I learn about it as a philosophy and discipline, the more I\u2019m compelled to socialize it. So I want to introduce you to \u201cThe First Ideal\u201d, and try to convince you that all these concepts may be handy when navigating your R in Production goals. %% highlight_id: 113319156 %%","title":"R in Production, DevOps, and the Importance of Empathetic Witnesses"},{"location":"Highlights/Medium/RESTful%20API%20Design%20%E2%80%94%20Step%20by%20Step%20Guide/","text":"URL: https://medium.com/p/2f2c9f9fcdbf Author: Tanmay Deshpande Tags: #Type/Source/Article Date: 2021-05-13 All teams will henceforth expose their data and functionality through service interfaces %% highlight_id: 174766419 %% Teams must communicate with each other through these interfaces %% highlight_id: 174766420 %% There will be no other form of interprocess communication allowed \u2014 no direct linking, no direct reads of another team\u2019s data store, no shared-memory model, no back doors whatsoever. The only communication allowed is via service interface calls over the network. %% highlight_id: 174766421 %%","title":"RESTful API Design \u2014 Step by Step Guide"},{"location":"Highlights/Medium/RShiny%20Authentication%20With%20Polished%20on%20AWS%20Kubernetes/","text":"URL: https://medium.com/p/358baff9a61c Author: Jillian Rowe Tags: #Type/Source/Article Date: 2021-05-13 If you want to deploy to AWS you\u2019ll need an AWS IAM User, and that user\u2019s API keys. For more information see the AWS docs. %% highlight_id: 113155383 %% This same AWS IAM user must have permission to create an EKS cluster. You can use this role, or a user with administrator privileges. %% highlight_id: 113155382 %%","title":"RShiny Authentication With Polished on AWS Kubernetes"},{"location":"Highlights/Medium/Scaling%20R%20Shiny%20Applications-/","text":"URL: https://medium.com/p/b32d56b24f03 Author: Siva Anne Tags: #Type/Source/Article Date: 2021-05-13 Configure a load balancer service to distribute the incoming requests across the collection of pods %% highlight_id: 113155390 %% Deploy the containerized application to a Kubernetes cluster and configure to run multiple replica instances. %% highlight_id: 113155389 %% Package the application code, its dependencies, and R Shiny Server for runtime into a Linux Docker image. %% highlight_id: 113155388 %% The R Shiny application can be scaled using a cloud-native architecture. Typically the nexts step are: %% highlight_id: 113155387 %% R and Shiny are popular tools to analyze data and visualize insights quickly. The single-threaded implementation of open-source R kernel constrains the scalability of R Shiny applications. Scaling R Shiny applications with commercial offerings may incur high licensing costs. The cloud-native implementation offers a cost-efficient solution to scale R Shiny applications. %% highlight_id: 113155386 %%","title":"Scaling R Shiny Applications "},{"location":"Highlights/Medium/Services%20in%20Systemd-%20In-Depth%20Tutorial/","text":"URL: https://medium.com/p/7e47c485edbf Author: Michael Krasnov Tags: #Type/Source/Article Date: 2021-05-13 systemd is the glue that holds Linux systems together. systemd is a collection of building blocks, which handle services, processes, logging, network connectivity, and even authentication. In this article, I will show you how to work with services in systemd. %% highlight_id: 115290509 %% systemd is a suite of computer programs aimed to manage and interconnect different parts of a system. It is designed as a replacement for SystemV and LSB-style startup scripts, which have been prevalent since the 1980s. systemd consists of these components: %% highlight_id: 115290508 %%","title":"Services in Systemd  In Depth Tutorial"},{"location":"Highlights/Medium/System%20Design%20Basics-%20Load%20Balancer%20101/","text":"URL: https://medium.com/p/adc4f602d08f Author: Ashis Chakraborty Tags: #Type/Source/Article Date: 2021-05-13 According to Wikipedia, \u201cLoad balancing refers to the process of distributing a set of tasks over a set of resources.\u201d %% highlight_id: 116204050 %% The load balancer is a server that usually sits between client devices and a set of servers and distributes client requests across servers. Load balancers can be placed in various places of a system. The loads on the servers need to be distributed in a balanced way; that\u2019s why they are called a load balancer %% highlight_id: 116204048 %% Random selection: In this method, the servers are selected randomly. There are no other factors calculated in the selection of the server. There might be a problem with some of the servers sitting idle, and some are overloaded with requests in this technique. %% highlight_id: 116204047 %% Round Robin: This is one of the most common load balancing methods. It\u2019s a method where the LB redirects incoming traffic between a set of servers in a certain order. Check figure 2; there is a list of five servers; the first request goes to server 1, the second one goes to server 2, and so on. When LB reaches the end of the list, it starts over at the beginning, from server number 1 again. It almost evenly balances the traffic between the servers. But in this method, server specifications are not considered. The servers need to be of equal specification for this method to be useful. Otherwise, a low processing powered server may have the same load as a high processing capacity server. %% highlight_id: 116204046 %% Its primary purpose is to optimize the response time of each task. Now let\u2019s assume a system has one server that is overloaded with the request of clients. The server has a limit of serving requests per second. So, we need to add more servers to handle large amounts of requests. But we may need a load balancer to balance the loads between the servers. %% highlight_id: 116204049 %%","title":"System Design Basics  Load Balancer 101"},{"location":"Highlights/Medium/System%20Design%20Paradigm-%20Caching/","text":"URL: https://medium.com/p/e57a25ab2f0a Author: Abracadabra Tags: #Type/Source/Article Date: 2021-05-28 The solution is a lease. The first cache miss will grant the app server a lease token. Only the app server having the token for a key can query DB and fill the cache. After a token is issued, all subsequent requests to the cache will be asked to retry after a period. The lease expires after a while to avoid deadlock %% highlight_id: 184655479 %%","title":"System Design Paradigm  Caching"},{"location":"Highlights/Medium/Taking%20Notes%20for%20Yourself-%20Best%20Practices%20for%20the%20Personal%20Notebook/","text":"URL: https://medium.com/p/47a78084c750 Author: zarla ludin Tags: #Type/Source/Article Date: 2021-05-13 Embrace the physicality of the notebook. %% highlight_id: 109193343 %%","title":"Taking Notes for Yourself  Best Practices for the Personal Notebook"},{"location":"Highlights/Medium/The%202%20Types%20of%20Technical%20Documentation%20That%20%20Developers%20Love/","text":"URL: https://medium.com/p/c07db236b367 Author: Dmytro Khmelenko Tags: #Type/Source/Article Date: 2021-05-13 API documentation refers to the description of classes and methods in frameworks and libraries. The REST API is another example that\u2019s expected to have well-formulated documentation %% highlight_id: 174766422 %% Now, ask yourself how often do you write documentation for the cases mentioned above. Do you write in the comments what each class does? Do all your REST methods have a place where all possible responses defined? %% highlight_id: 174766423 %% need to know who the end-user of the product is. %% highlight_id: 174766424 %% Documenting the approach or flow helps you to design the final product. It enables sharing the understanding within the team of how the entire system works \u2014 for instance, how the whole payment system works. Otherwise, some important details, like why payment verification is mandatory, could be missing or wrongly interpreted. %% highlight_id: 174766425 %%","title":"The 2 Types of Technical Documentation That  Developers Love"},{"location":"Highlights/Medium/The%20Data%20Science%20Landscape/","text":"URL: https://medium.com/p/f6f7842c9865 Author: Dr. Stefan Karenfort Tags: #Type/Source/Article Date: 2021-05-13 Data science is part of the computer sciences [1]. It comprises the disciplines of i) analytics, ii) statistics and iii) machine learning. %% highlight_id: 115127960 %% Analytics generates insights from data using simple presentation, manipulation, calculation or visualization of data. In the context of data science, it is also sometimes referred to as exploratory data analytics. It often serves the purpose to familiarize oneself with the subject matter and to obtain some initial hints for further analysis. To this end, analytics is often used to formulate appropriate questions for a data science project. %% highlight_id: 115127945 %% The Cross Industry Standard Process for Data Mining (CRISP-DM) is a process model with six phases that naturally describes the data science life cycle. It is a framework to plan, organize and implement a data science project. %% highlight_id: 115127940 %% Business understanding \u2014 What does the business need? %% highlight_id: 115127939 %% Data understanding \u2014 What data do we have / need? Is it clean? %% highlight_id: 115127938 %% Data preparation \u2014 How do we organize the data for modeling? %% highlight_id: 115127937 %% Modeling \u2014 What modeling techniques should we apply? %% highlight_id: 115127936 %% Evaluation \u2014 Which model best meets the business objectives? %% highlight_id: 115127935 %% Deployment \u2014 How do stakeholders access the results? %% highlight_id: 115127934 %% Fourth, over- and underfitting of the model should be avoided as underfitting leads to generally poor performance and high prediction error while overfitting leads to poor generalization and high model complexity. Lastly, the result of the data science project must be communicated in a way that non-technical people can understand. A suitable way to communicate data is to use visualization techniques. In the business context, a good reference for presenting data is the International Business Communication Standards (IBCS). %% highlight_id: 115127931 %% The Data Science Landscape %% highlight_id: 115127961 %% The Data Science Toolkit %% highlight_id: 115127944 %% The Data Science Process %% highlight_id: 115127941 %% Principles of Success %% highlight_id: 115127933 %% Analytics %% highlight_id: 115127959 %% First, at the initial stage, it is paramount that the underlying business problem is clear to all stakeholders involved. Second, sufficient time has to be allocated for the data preparation stage which typically accounts for the majority of time spent during most projects. Third, the right variables have to be selected by the data scientist. A model should ideally comprise only the fewest possible number of variables with relevant explanatory power. The process of feature selection is therefore important in order to maximize performance while reducing the noise in a model. %% highlight_id: 115127932 %% The most popular languages for machine learning are Python, C/C++, Java, R and Java Script. %% highlight_id: 115127943 %% The R programming language, for example, was built primarily for statistical applications. Therefore, it is highly suitable for statistical tasks as well as visualization using the popular R package ggplot2. %% highlight_id: 115127942 %%","title":"The Data Science Landscape"},{"location":"Highlights/Medium/The%20Role%20of%20Data%20Scientist-%20A%20Back-Of-The-Envelope%20Model/","text":"URL: https://medium.com/p/631e1138f6b3 Author: Ron Sielinski Tags: #Type/Source/Article Date: 2021-05-13 The essence of data science %% highlight_id: 113319194 %%","title":"The Role of Data Scientist  A Back Of The Envelope Model"},{"location":"Highlights/Medium/What%E2%80%99s%20on%20Your%20Programming%20Reading%20List/","text":"URL: https://medium.com/p/472fc23ed9bc Author: Amy M Haddad Tags: #Type/Source/Article Date: 2021-05-13 So I read a lot over the next few weeks. My knowledge grew tremendously \u2014 and so did my ideas, which inspired a new and improved paper topic. %% highlight_id: 109193345 %% That experience, which was about a decade ago, taught me a critical lesson: the benefits of reading avidly and broadly about your field. What began as a one-time thing to do well in a class has turned into a lifetime habit. %% highlight_id: 109193344 %%","title":"What\u2019s on Your Programming Reading List"},{"location":"Highlights/Medium/Why%20Programmers%20Should%20Write%20Tutorials/","text":"URL: https://medium.com/p/6ecbb83f43e3 Author: Fernando Souza Tags: #Type/Source/Article Date: 2021-05-13 As a programmer, it is important to create the habit of documenting any new knowledge you discover. It doesn\u2019t matter if it is as simple as a plug-in configuration or something like a reference guide. As your third-grade teacher used to say, \u201cJust write it down in your own words.\u201d %% highlight_id: 117247439 %%","title":"Why Programmers Should Write Tutorials"},{"location":"Highlights/Medium/Workflow%20for%20Serverless%E2%80%8A%E2%80%94%E2%80%8ACloud%20Functions%20%2B%20Workflow%20%5BBasic%5D/","text":"URL: https://medium.com/p/eb755048c982 Author: Johanes Glenn Tags: #Type/Source/Article Date: 2021-05-13 Workflow in it self defined as: service to \u201cOrchestrate and automate Google Cloud and HTTP-based API services with serverless workflows\u201d %% highlight_id: 119245366 %%","title":"Workflow for Serverless\u200a\u2014\u200aCloud Functions + Workflow [Basic]"},{"location":"Highlights/Medium/Writing%20Well-%20A%20Must-Have%20Skill%20That%20No%20One%20Teaches%20Data%20Scientists/","text":"URL: https://medium.com/p/34a1e8b1b724 Author: Nityesh Agarwal Tags: #Type/Source/Article Date: 2021-05-13 Being a Good Writer Boosts the Arc of Your Entire Career %% highlight_id: 115127927 %% Grabbing the valuable attention of people around you %% highlight_id: 115127926 %%","title":"Writing Well  A Must Have Skill That No One Teaches Data Scientists"},{"location":"Highlights/Readwise/Articles/%235%208%20Tips%20for%20a%20Production-Ready%20Shiny%20Application/","text":"#5: 8 Tips for a Production-Ready Shiny Application \u00b6 Metadata \u00b6 Author: [[rinproduction.com]] Full Title: #5: 8 Tips for a Production-Ready Shiny Application Category: #Type/Highlights/Article URL: https://www.rinproduction.com/en/posts/005-8-tips-for-a-production-ready-shiny-application/ Highlights \u00b6 This brings up the first challenge: managing the increasing complexity of the application. The solution is obtained with a strategy of divide and conquer, that is to divide a complex system into smaller parts, and consequently, more understandable and more manageable. The criterion with which to carry out the division is the separation of competences: which we can exemplify in the division into components or in the coding of elementary objects to be used throughout the interface to give consintency of treatment to similar parts On the other hand, the elementary objects can be, for example, a particular type of table, or graph, or widget that is used by the whole application in order to make it consistent with itself. A first level of separation of competences is the division of the application into Shiny modules. The latter can be said to be miniature Shiny applications, because they are characterized by a front-end (User Interface) part and from a back-end one (Server) which contains reactive objects Separate Shiny and Simple R code into different filesThe second level of separation of competences splits the Shiny part, from the simple R code. This practice is very important and separates the update logic (reactive) contained in the Shiny module, from the calculation logic that lives in R functions, which can be used separately from the reactive context (reactive context), allowing it to be used and tested independently. Shiny is given to us with great freedom of organization. Just create a directory with some files with standard names and the rest we can decide at will: create a data folder, a folder for the base R code, etc\u2026 However these freedoms imply the obligation to create, according to the choices made, a number of procedures to perform tasks that are actually very common. For example, how do I organize the project folder? How do I define code dependencies and make sure they are installed on the system? Actually these tasks already have an absolutely standard solution encoded in the idea of R Package. In fact, creating a package means having:the form of the standard project folderthe standard documentation format for: individual functions and vignettesthe declaration of dependencies (and their versions) not only in the package name, but also at a lower level by choosing the individual functions to import.a standard and robust installation procedure starting from a wide variety of formats (tar.gz or zip files, Git repository, package on the CRAN, etc \u2026)other standard procedures for example: testing (which I will talk about later), and sample dataset provision. As the size and complexity of the application increases, the number of possible breaking points increases.There may be situations in which implementing a new functionality breaks an existing one. Especially in a team, I can break the features developed by colleagues, precisely because I am less aware of the details of their functioning and, as a result, the new bug can escape my control and arrive in production. So let\u2019s talk about functionality regression. Roughly speaking, by publishing a new feature, without realizing it, we lose other features that were instead taken for granted. This situation is even more serious than the one where the new functionality is not implemented perfectly, as the regression takes away a service that is now taken for granted. In order to do this, it is useful to set up a strategy of automatic unit tests: in this way the tests become part of the code base and everyone can test everything with one-click in seconds. This prevents regression and gives peace of mind on release.The tests provide other advantages: testing the single component allows you to reduce the bug search zone in case of failure and the test itself is a working documentation of the single unit. Reproducibility and configurationBoth during development and when it is in production, the application must run on different systems: your colleague\u2019s computer or the production server.For this it is important that the application is reproducible. It means it has to work on different systems. For this, at least two conditions are important: that the compatible environment is installed and that the application is configured in order to find the external resources it needs on the system it is running on. Track used dependencies and reproduce environment (with \u201crenv\u201d)For the reproducibility condition, I recommend using \u201crenv\u201d or Docker. The first is a package that creates a Virtual environment: namely it is able to track the version of the packages used and reproduce it on another server. While the second virtualizes the whole application including, in addition to the R packets, also the file system of the operating system and the network interface. But it is certainly a more complex choice.","title":"5: 8 Tips for a Production-Ready Shiny Application"},{"location":"Highlights/Readwise/Articles/%235%208%20Tips%20for%20a%20Production-Ready%20Shiny%20Application/#5-8-tips-for-a-production-ready-shiny-application","text":"","title":"#5: 8 Tips for a Production-Ready Shiny Application"},{"location":"Highlights/Readwise/Articles/%235%208%20Tips%20for%20a%20Production-Ready%20Shiny%20Application/#metadata","text":"Author: [[rinproduction.com]] Full Title: #5: 8 Tips for a Production-Ready Shiny Application Category: #Type/Highlights/Article URL: https://www.rinproduction.com/en/posts/005-8-tips-for-a-production-ready-shiny-application/","title":"Metadata"},{"location":"Highlights/Readwise/Articles/%235%208%20Tips%20for%20a%20Production-Ready%20Shiny%20Application/#highlights","text":"This brings up the first challenge: managing the increasing complexity of the application. The solution is obtained with a strategy of divide and conquer, that is to divide a complex system into smaller parts, and consequently, more understandable and more manageable. The criterion with which to carry out the division is the separation of competences: which we can exemplify in the division into components or in the coding of elementary objects to be used throughout the interface to give consintency of treatment to similar parts On the other hand, the elementary objects can be, for example, a particular type of table, or graph, or widget that is used by the whole application in order to make it consistent with itself. A first level of separation of competences is the division of the application into Shiny modules. The latter can be said to be miniature Shiny applications, because they are characterized by a front-end (User Interface) part and from a back-end one (Server) which contains reactive objects Separate Shiny and Simple R code into different filesThe second level of separation of competences splits the Shiny part, from the simple R code. This practice is very important and separates the update logic (reactive) contained in the Shiny module, from the calculation logic that lives in R functions, which can be used separately from the reactive context (reactive context), allowing it to be used and tested independently. Shiny is given to us with great freedom of organization. Just create a directory with some files with standard names and the rest we can decide at will: create a data folder, a folder for the base R code, etc\u2026 However these freedoms imply the obligation to create, according to the choices made, a number of procedures to perform tasks that are actually very common. For example, how do I organize the project folder? How do I define code dependencies and make sure they are installed on the system? Actually these tasks already have an absolutely standard solution encoded in the idea of R Package. In fact, creating a package means having:the form of the standard project folderthe standard documentation format for: individual functions and vignettesthe declaration of dependencies (and their versions) not only in the package name, but also at a lower level by choosing the individual functions to import.a standard and robust installation procedure starting from a wide variety of formats (tar.gz or zip files, Git repository, package on the CRAN, etc \u2026)other standard procedures for example: testing (which I will talk about later), and sample dataset provision. As the size and complexity of the application increases, the number of possible breaking points increases.There may be situations in which implementing a new functionality breaks an existing one. Especially in a team, I can break the features developed by colleagues, precisely because I am less aware of the details of their functioning and, as a result, the new bug can escape my control and arrive in production. So let\u2019s talk about functionality regression. Roughly speaking, by publishing a new feature, without realizing it, we lose other features that were instead taken for granted. This situation is even more serious than the one where the new functionality is not implemented perfectly, as the regression takes away a service that is now taken for granted. In order to do this, it is useful to set up a strategy of automatic unit tests: in this way the tests become part of the code base and everyone can test everything with one-click in seconds. This prevents regression and gives peace of mind on release.The tests provide other advantages: testing the single component allows you to reduce the bug search zone in case of failure and the test itself is a working documentation of the single unit. Reproducibility and configurationBoth during development and when it is in production, the application must run on different systems: your colleague\u2019s computer or the production server.For this it is important that the application is reproducible. It means it has to work on different systems. For this, at least two conditions are important: that the compatible environment is installed and that the application is configured in order to find the external resources it needs on the system it is running on. Track used dependencies and reproduce environment (with \u201crenv\u201d)For the reproducibility condition, I recommend using \u201crenv\u201d or Docker. The first is a package that creates a Virtual environment: namely it is able to track the version of the packages used and reproduce it on another server. While the second virtualizes the whole application including, in addition to the R packets, also the file system of the operating system and the network interface. But it is certainly a more complex choice.","title":"Highlights"},{"location":"Highlights/Readwise/Articles/%236%20Practicing%20-%20Tips%20From%20the%20Clean%20Coder%20-%20DEV/","text":"#6 Practicing - Tips From the Clean Coder - DEV \u00b6 Metadata \u00b6 Author: Full Title: #6 Practicing - Tips From the Clean Coder - DEV Category: #Type/Highlights/Article URL: https://dev.to/yurishenrique/6-practicing-tips-from-the-clean-coder-18cf Highlights \u00b6 Broadening your experience Professional programmers ofter suffer from a lack of diversity in the kind of problems they solve. Employers often enforce a single language, platform, and domain. Without a broadening influence, this can lead you to a very unhealthy narrowing of your resume and your mindset.","title":"6 Practicing - Tips From the Clean Coder - DEV"},{"location":"Highlights/Readwise/Articles/%236%20Practicing%20-%20Tips%20From%20the%20Clean%20Coder%20-%20DEV/#6-practicing-tips-from-the-clean-coder-dev","text":"","title":"#6 Practicing - Tips From the Clean Coder - DEV"},{"location":"Highlights/Readwise/Articles/%236%20Practicing%20-%20Tips%20From%20the%20Clean%20Coder%20-%20DEV/#metadata","text":"Author: Full Title: #6 Practicing - Tips From the Clean Coder - DEV Category: #Type/Highlights/Article URL: https://dev.to/yurishenrique/6-practicing-tips-from-the-clean-coder-18cf","title":"Metadata"},{"location":"Highlights/Readwise/Articles/%236%20Practicing%20-%20Tips%20From%20the%20Clean%20Coder%20-%20DEV/#highlights","text":"Broadening your experience Professional programmers ofter suffer from a lack of diversity in the kind of problems they solve. Employers often enforce a single language, platform, and domain. Without a broadening influence, this can lead you to a very unhealthy narrowing of your resume and your mindset.","title":"Highlights"},{"location":"Highlights/Readwise/Articles/%27Mustashe%27%20Explained%20%20Joshua%20Cook/","text":"'Mustashe' Explained | Joshua Cook \u00b6 Metadata \u00b6 Author: Full Title: 'Mustashe' Explained | Joshua Cook Category: #Type/Highlights/Article URL: https://joshuacook.netlify.app/post/mustashe-explained/ Highlights \u00b6 The purpose of the \u2018mustashe\u2019 R package is to save objects that result from some computation, then load the object from file the next time the computation is performed. In other words, the first time a chunk of code is evaluated, the output can be stashed for the next time the code chunk is run.","title":"'Mustashe' Explained | Joshua Cook"},{"location":"Highlights/Readwise/Articles/%27Mustashe%27%20Explained%20%20Joshua%20Cook/#mustashe-explained-joshua-cook","text":"","title":"'Mustashe' Explained | Joshua Cook"},{"location":"Highlights/Readwise/Articles/%27Mustashe%27%20Explained%20%20Joshua%20Cook/#metadata","text":"Author: Full Title: 'Mustashe' Explained | Joshua Cook Category: #Type/Highlights/Article URL: https://joshuacook.netlify.app/post/mustashe-explained/","title":"Metadata"},{"location":"Highlights/Readwise/Articles/%27Mustashe%27%20Explained%20%20Joshua%20Cook/#highlights","text":"The purpose of the \u2018mustashe\u2019 R package is to save objects that result from some computation, then load the object from file the next time the computation is performed. In other words, the first time a chunk of code is evaluated, the output can be stashed for the next time the code chunk is run.","title":"Highlights"},{"location":"Highlights/Readwise/Articles/10%20Guidelines%20to%20Better%20Table%20Design/","text":"10 Guidelines to Better Table Design \u00b6 Metadata \u00b6 Author: [[paulvanderlaken.com]] Full Title: 10 Guidelines to Better Table Design Category: #Type/Highlights/Article URL: https://paulvanderlaken.com/2020/09/01/10-guidelines-to-better-table-design/ Highlights \u00b6 Let me summarize them for you: Right-align your numbers Left-align your texts Use decimals appropriately (one or two is often enough) Display units (e.g., $, %) sparsely (e.g., only on first row) Highlight outliers Highlight column headers Use subtle highlights and dividers Use white space between rows and columns Use white space (or dividers) to highlight groups Use visualizations for large tables","title":"10 Guidelines to Better Table Design"},{"location":"Highlights/Readwise/Articles/10%20Guidelines%20to%20Better%20Table%20Design/#10-guidelines-to-better-table-design","text":"","title":"10 Guidelines to Better Table Design"},{"location":"Highlights/Readwise/Articles/10%20Guidelines%20to%20Better%20Table%20Design/#metadata","text":"Author: [[paulvanderlaken.com]] Full Title: 10 Guidelines to Better Table Design Category: #Type/Highlights/Article URL: https://paulvanderlaken.com/2020/09/01/10-guidelines-to-better-table-design/","title":"Metadata"},{"location":"Highlights/Readwise/Articles/10%20Guidelines%20to%20Better%20Table%20Design/#highlights","text":"Let me summarize them for you: Right-align your numbers Left-align your texts Use decimals appropriately (one or two is often enough) Display units (e.g., $, %) sparsely (e.g., only on first row) Highlight outliers Highlight column headers Use subtle highlights and dividers Use white space between rows and columns Use white space (or dividers) to highlight groups Use visualizations for large tables","title":"Highlights"},{"location":"Highlights/Readwise/Articles/10%20Tips%20to%20Turn%20Microsoft%20To-Do%20Into%20a%20Serious%20Task%20Manager/","text":"10 Tips to Turn Microsoft To-Do Into a Serious Task Manager \u00b6 Metadata \u00b6 Author: [[Dan Price]] Full Title: 10 Tips to Turn Microsoft To-Do Into a Serious Task Manager Category: #Type/Highlights/Article URL: https://www.makeuseof.com/tag/microsoft-todo-task-manager/ Highlights \u00b6 Sub-Tasks on Microsoft To-Do Officially called Steps, they allow you to add a series of to-do items under a single parent task. You can use Steps in many ways. For example, they are useful if you want to control the workflow of a group of people who are all working on one project, but they also serve as bullet point reminders for you to jot down quick thoughts on a topic. Microsoft To-Do Keyboard Shortcuts Ctrl + N: Add a new task Ctrl + L: Create a new list Ctrl + T: Add a task to My Day Ctrl + D: Complete a task Ctrl + F: Search Ctrl + R: Sync Ctrl + 1: Open the sidebar Microsoft To-Do Integration With Cortana When you use Cortana with Microsoft To-Do, you will have the option to create your to-do lists and reminders directly on the app rather than in Cortana. Cortana can also read out your tasks in My Day and other lists you have made. To use Cortana with the app, you need to set up Microsoft To-Do as a Connected Service. To do so, go to Cortana > Notebook > Manage Skills > Connected services on a PC or Cortana > Settings > Connected services. Select either Outlook or Office 365 (depending on whether you\u2019re using a personal of enterprise account), then hit the Connect button. Flagged Emails in Outlook Manage Your Day If you use the app as a day-to-day task manager, you will probably find the My Day list to be one of its most useful features. In addition to flagged emails in Outlook appearing on the list, you can also add any other tasks onto it. To add a to-do item to My Day, open the task in question (on desktop or mobile) and select Add to My Day. The My Day list also offers suggestions on what you should add. On the desktop, go to the My Day list and click For Today in the upper right-hand corner. On mobile, open My Day and tap the icon at the bottom of the screen. The suggestions are based on recently added tasks and tasks that have a due date of today. The app will not make suggestions for tasks which have reminders set for today. Add Attachments to Tasks See Your Week Ahead A recent update brought a new smart list to the app: Planned. The Planned section is split into two parts: Overdue and Later. Later shows any tasks in your calendar for the upcoming five days; Overdue displays tasks that you should have already completed but which have not yet been marked as such. To turn on the smart lists, open the To-Do app on your desktop, then click on your profile picture and go to Settings > Smart Lists. Toggle the sliders next to the lists you want to enable.","title":"10 Tips to Turn Microsoft To-Do Into a Serious Task Manager"},{"location":"Highlights/Readwise/Articles/10%20Tips%20to%20Turn%20Microsoft%20To-Do%20Into%20a%20Serious%20Task%20Manager/#10-tips-to-turn-microsoft-to-do-into-a-serious-task-manager","text":"","title":"10 Tips to Turn Microsoft To-Do Into a Serious Task Manager"},{"location":"Highlights/Readwise/Articles/10%20Tips%20to%20Turn%20Microsoft%20To-Do%20Into%20a%20Serious%20Task%20Manager/#metadata","text":"Author: [[Dan Price]] Full Title: 10 Tips to Turn Microsoft To-Do Into a Serious Task Manager Category: #Type/Highlights/Article URL: https://www.makeuseof.com/tag/microsoft-todo-task-manager/","title":"Metadata"},{"location":"Highlights/Readwise/Articles/10%20Tips%20to%20Turn%20Microsoft%20To-Do%20Into%20a%20Serious%20Task%20Manager/#highlights","text":"Sub-Tasks on Microsoft To-Do Officially called Steps, they allow you to add a series of to-do items under a single parent task. You can use Steps in many ways. For example, they are useful if you want to control the workflow of a group of people who are all working on one project, but they also serve as bullet point reminders for you to jot down quick thoughts on a topic. Microsoft To-Do Keyboard Shortcuts Ctrl + N: Add a new task Ctrl + L: Create a new list Ctrl + T: Add a task to My Day Ctrl + D: Complete a task Ctrl + F: Search Ctrl + R: Sync Ctrl + 1: Open the sidebar Microsoft To-Do Integration With Cortana When you use Cortana with Microsoft To-Do, you will have the option to create your to-do lists and reminders directly on the app rather than in Cortana. Cortana can also read out your tasks in My Day and other lists you have made. To use Cortana with the app, you need to set up Microsoft To-Do as a Connected Service. To do so, go to Cortana > Notebook > Manage Skills > Connected services on a PC or Cortana > Settings > Connected services. Select either Outlook or Office 365 (depending on whether you\u2019re using a personal of enterprise account), then hit the Connect button. Flagged Emails in Outlook Manage Your Day If you use the app as a day-to-day task manager, you will probably find the My Day list to be one of its most useful features. In addition to flagged emails in Outlook appearing on the list, you can also add any other tasks onto it. To add a to-do item to My Day, open the task in question (on desktop or mobile) and select Add to My Day. The My Day list also offers suggestions on what you should add. On the desktop, go to the My Day list and click For Today in the upper right-hand corner. On mobile, open My Day and tap the icon at the bottom of the screen. The suggestions are based on recently added tasks and tasks that have a due date of today. The app will not make suggestions for tasks which have reminders set for today. Add Attachments to Tasks See Your Week Ahead A recent update brought a new smart list to the app: Planned. The Planned section is split into two parts: Overdue and Later. Later shows any tasks in your calendar for the upcoming five days; Overdue displays tasks that you should have already completed but which have not yet been marked as such. To turn on the smart lists, open the To-Do app on your desktop, then click on your profile picture and go to Settings > Smart Lists. Toggle the sliders next to the lists you want to enable.","title":"Highlights"},{"location":"Highlights/Readwise/Articles/10%20Ways%20to%20Improve%20How%20You%20Manage%20Information/","text":"10 Ways to Improve How You Manage Information \u00b6 Metadata \u00b6 Author: Full Title: 10 Ways to Improve How You Manage Information Category: #Type/Highlights/Article URL: http://sourcesofinsight.com/10-ways-to-improve-how-you-manage-information/ Highlights \u00b6 Information Management is a Hallmark of Better Productivity 10 Ways to Master Information Management Here are ten of my favorite ways to manage information: Factor reference from actio Carve out action items, To Dos, and tasks from your incoming streams of information. if it\u2019s not an action, it\u2019s reference. I first learned this practice when I was dealing with information overload as a support engineer. I ended up cementing the idea while working on our Microsoft Knowledge Base. The Knowledge Base is a vast collection of information, where each article tends to be optimized around either action or reference. Create lists. Make a new To Do list each day and use it to organize your key action items for the day. Create checklists for your common routines. Create collections. Put things into collections or think in terms of collections. Consolidate your notes into a single collection that you access quickly, such as in a personal notebook, a Word document or etc. Consolidate your thoughts or ideas into a single collection. Put things where you look for them. Where ever you look for it, that\u2019s where it should be. If you keep looking for something in a certain place, either just put it there when you find it or add some sort of pointer to the actual location. While you might logically think something belongs in a certain place, the real test is where you intuitively look for it. Keep things flat. Out of sight, out of mind holds true for information. Avoid nesting information. Keep it flat and simple where you can. Think in terms of iTunes or a playlist. A well organized playlist is easy to jump to what you need. Organize long lists or folders using A-Z. When you have long lists or big collections, then listing things A-Z tends to be a simple way to store things and to look things up fast. Once a list gets long, A-Z or a numbered list is the way to go. Archive old things. When information is no longer useful for you, consider archiving it to get it out of your way. This usually means having a separate location. I\u2019m a pack rat and I have a hard time letting things go, so I tend to archive instead. It let\u2019s me get things out of the way, and then eventually get rid of them if I need to. Archiving has really helped me get a ton of information out of my way, since I know I can easily rehydrate it if I need to. Bubble up key things to the top. When you have a lot of information, rather than worry about organizing all of it, bubble up things to the top. You can effectively have a quick, simple list or key things up top, followed by more information. Keep the things up front simple. This way you get the benefits of both exhaustive or complete, as well as simple. Whenever you have a large body of information, just add a simple entry point or key take aways or summary up front.","title":"10 Ways to Improve How You Manage Information"},{"location":"Highlights/Readwise/Articles/10%20Ways%20to%20Improve%20How%20You%20Manage%20Information/#10-ways-to-improve-how-you-manage-information","text":"","title":"10 Ways to Improve How You Manage Information"},{"location":"Highlights/Readwise/Articles/10%20Ways%20to%20Improve%20How%20You%20Manage%20Information/#metadata","text":"Author: Full Title: 10 Ways to Improve How You Manage Information Category: #Type/Highlights/Article URL: http://sourcesofinsight.com/10-ways-to-improve-how-you-manage-information/","title":"Metadata"},{"location":"Highlights/Readwise/Articles/10%20Ways%20to%20Improve%20How%20You%20Manage%20Information/#highlights","text":"Information Management is a Hallmark of Better Productivity 10 Ways to Master Information Management Here are ten of my favorite ways to manage information: Factor reference from actio Carve out action items, To Dos, and tasks from your incoming streams of information. if it\u2019s not an action, it\u2019s reference. I first learned this practice when I was dealing with information overload as a support engineer. I ended up cementing the idea while working on our Microsoft Knowledge Base. The Knowledge Base is a vast collection of information, where each article tends to be optimized around either action or reference. Create lists. Make a new To Do list each day and use it to organize your key action items for the day. Create checklists for your common routines. Create collections. Put things into collections or think in terms of collections. Consolidate your notes into a single collection that you access quickly, such as in a personal notebook, a Word document or etc. Consolidate your thoughts or ideas into a single collection. Put things where you look for them. Where ever you look for it, that\u2019s where it should be. If you keep looking for something in a certain place, either just put it there when you find it or add some sort of pointer to the actual location. While you might logically think something belongs in a certain place, the real test is where you intuitively look for it. Keep things flat. Out of sight, out of mind holds true for information. Avoid nesting information. Keep it flat and simple where you can. Think in terms of iTunes or a playlist. A well organized playlist is easy to jump to what you need. Organize long lists or folders using A-Z. When you have long lists or big collections, then listing things A-Z tends to be a simple way to store things and to look things up fast. Once a list gets long, A-Z or a numbered list is the way to go. Archive old things. When information is no longer useful for you, consider archiving it to get it out of your way. This usually means having a separate location. I\u2019m a pack rat and I have a hard time letting things go, so I tend to archive instead. It let\u2019s me get things out of the way, and then eventually get rid of them if I need to. Archiving has really helped me get a ton of information out of my way, since I know I can easily rehydrate it if I need to. Bubble up key things to the top. When you have a lot of information, rather than worry about organizing all of it, bubble up things to the top. You can effectively have a quick, simple list or key things up top, followed by more information. Keep the things up front simple. This way you get the benefits of both exhaustive or complete, as well as simple. Whenever you have a large body of information, just add a simple entry point or key take aways or summary up front.","title":"Highlights"},{"location":"Highlights/Readwise/Articles/10%20Windows%20Task%20Manager%20Tricks%20You%20Probably%20Didn%E2%80%99t%20Know/","text":"10 Windows Task Manager Tricks You Probably Didn\u2019t Know \u00b6 Metadata \u00b6 Author: Full Title: 10 Windows Task Manager Tricks You Probably Didn\u2019t Know Category: #Type/Highlights/Article URL: https://www.makeuseof.com/tag/10-windows-task-manager-tricks-didnt-know/ Highlights \u00b6 While you can press Ctrl + Alt + Del to open the security screen and launch the Task Manager that way, this is a slow method. Here\u2019s how to pull up the Task Manager quickly: use the Ctrl + Shift + Esc shortcut. This will instantly launch the app with no additional clicks needed. This is also how you bring the Task Manager to the front when it\u2019s minimized. Finally, you\u2019ll find a shortcut to the Task Manager on the Power User menu. Right-click on the Start button or hit Win + X to open this. It\u2019s a handy Windows Task Manager shortcut because it works well whether your hands are on the mouse or keyboard. Tags: [[favorite]] Find Out Why Apps Are Frozen To see which process is the real culprit, switch to the Details tab and find the process you want to look into. Right-click on it and choose Analyze wait chain to see the details. If that app is waiting on any other processes, you\u2019ll see them in the resulting window. Restart Windows Explorer To do this, find Windows Explorer on the Processes tab of the Task Manager. Right-click it and choose Restart to kill the task and run it again. You\u2019ll see your Taskbar and other elements disappear for a moment, which is normal. After they come back, everything should be back to normal. Monitor Performance and Resources Jump to the Performance tab to see these. Once you\u2019re there, have a look at the following tips. choose Summary View to display only that sidebar. You can instead right-click anywhere in the right panel and select Graph Summary View to display just the current graph. Copy Diagnostic Info Access Useful Details Each resource type has some interesting details that might come in handy. Under CPU, you\u2019ll find Up time, which shows how long it\u2019s been since the computer restarted. In Memory, you can check the number of Slots used to figure out if you have room to add more. The Read speed and Write speed under Disk give you an idea of how fast your storage media performs, too. Open Resource Monitor If you want even more details that the Task Manager doesn\u2019t show you, click Open Resource Monitor at the bottom of the window. This utility is an advanced way to view real-time data about your system, including threads used, disk response times, exact breakdowns of RAM used by processes, and more. Search Online for Suspicious Processes Add Extra Columns for More Details These include: Type, which tells you if the process is an App, Background process, or Windows process. Publisher, which shows the developer of the program. Process name, which is often the executable file. These will look familiar if you\u2019ve used the Task Manager in Windows 7 or earlier. Manage App Windows Task Manager is far from the best window management tool available, but it does have a few actions that you might find useful. To access them, you must click the arrow next to an item you want to manage in order to show all its processes. This only works for items listed under the Apps section of the Processes tab, and it didn\u2019t work for all apps in our testing. Once you\u2019ve expanded an item to show all processes, right-click the indented entry and you\u2019ll see these window actions for that app: Switch to: Brings the app into focus and minimizes the Task Manager. Bring to front: Puts the app in focus, but doesn\u2019t minimize the Task Manager. Minimize: Minimizes the program. Maximize: Maximizes the application. End Task: Kills the process. Open App File Locations Just right-click on any process and select Open File Location. This will take you directly to the folder that contains the process\u2019s executable file. It\u2019s quite convenient, especially since software can live all across your file system. This works for Apps, Background Processes, and Windows Processes, allowing you to quickly access pretty much anything that shows up under the Processes tab. Adjust Task Manager Options Under Options, you can enable Always on top to keep the Task Manager above other windows unless you manually minimize it. Also on this menu, select Set default tab to choose what the Task Manager should show when you open it. Look under the View menu to make the Update speed faster or slower. You can even pause it if you need to examine a snapshot in time.","title":"10 Windows Task Manager Tricks You Probably Didn\u2019t Know"},{"location":"Highlights/Readwise/Articles/10%20Windows%20Task%20Manager%20Tricks%20You%20Probably%20Didn%E2%80%99t%20Know/#10-windows-task-manager-tricks-you-probably-didnt-know","text":"","title":"10 Windows Task Manager Tricks You Probably Didn\u2019t Know"},{"location":"Highlights/Readwise/Articles/10%20Windows%20Task%20Manager%20Tricks%20You%20Probably%20Didn%E2%80%99t%20Know/#metadata","text":"Author: Full Title: 10 Windows Task Manager Tricks You Probably Didn\u2019t Know Category: #Type/Highlights/Article URL: https://www.makeuseof.com/tag/10-windows-task-manager-tricks-didnt-know/","title":"Metadata"},{"location":"Highlights/Readwise/Articles/10%20Windows%20Task%20Manager%20Tricks%20You%20Probably%20Didn%E2%80%99t%20Know/#highlights","text":"While you can press Ctrl + Alt + Del to open the security screen and launch the Task Manager that way, this is a slow method. Here\u2019s how to pull up the Task Manager quickly: use the Ctrl + Shift + Esc shortcut. This will instantly launch the app with no additional clicks needed. This is also how you bring the Task Manager to the front when it\u2019s minimized. Finally, you\u2019ll find a shortcut to the Task Manager on the Power User menu. Right-click on the Start button or hit Win + X to open this. It\u2019s a handy Windows Task Manager shortcut because it works well whether your hands are on the mouse or keyboard. Tags: [[favorite]] Find Out Why Apps Are Frozen To see which process is the real culprit, switch to the Details tab and find the process you want to look into. Right-click on it and choose Analyze wait chain to see the details. If that app is waiting on any other processes, you\u2019ll see them in the resulting window. Restart Windows Explorer To do this, find Windows Explorer on the Processes tab of the Task Manager. Right-click it and choose Restart to kill the task and run it again. You\u2019ll see your Taskbar and other elements disappear for a moment, which is normal. After they come back, everything should be back to normal. Monitor Performance and Resources Jump to the Performance tab to see these. Once you\u2019re there, have a look at the following tips. choose Summary View to display only that sidebar. You can instead right-click anywhere in the right panel and select Graph Summary View to display just the current graph. Copy Diagnostic Info Access Useful Details Each resource type has some interesting details that might come in handy. Under CPU, you\u2019ll find Up time, which shows how long it\u2019s been since the computer restarted. In Memory, you can check the number of Slots used to figure out if you have room to add more. The Read speed and Write speed under Disk give you an idea of how fast your storage media performs, too. Open Resource Monitor If you want even more details that the Task Manager doesn\u2019t show you, click Open Resource Monitor at the bottom of the window. This utility is an advanced way to view real-time data about your system, including threads used, disk response times, exact breakdowns of RAM used by processes, and more. Search Online for Suspicious Processes Add Extra Columns for More Details These include: Type, which tells you if the process is an App, Background process, or Windows process. Publisher, which shows the developer of the program. Process name, which is often the executable file. These will look familiar if you\u2019ve used the Task Manager in Windows 7 or earlier. Manage App Windows Task Manager is far from the best window management tool available, but it does have a few actions that you might find useful. To access them, you must click the arrow next to an item you want to manage in order to show all its processes. This only works for items listed under the Apps section of the Processes tab, and it didn\u2019t work for all apps in our testing. Once you\u2019ve expanded an item to show all processes, right-click the indented entry and you\u2019ll see these window actions for that app: Switch to: Brings the app into focus and minimizes the Task Manager. Bring to front: Puts the app in focus, but doesn\u2019t minimize the Task Manager. Minimize: Minimizes the program. Maximize: Maximizes the application. End Task: Kills the process. Open App File Locations Just right-click on any process and select Open File Location. This will take you directly to the folder that contains the process\u2019s executable file. It\u2019s quite convenient, especially since software can live all across your file system. This works for Apps, Background Processes, and Windows Processes, allowing you to quickly access pretty much anything that shows up under the Processes tab. Adjust Task Manager Options Under Options, you can enable Always on top to keep the Task Manager above other windows unless you manually minimize it. Also on this menu, select Set default tab to choose what the Task Manager should show when you open it. Look under the View menu to make the Update speed faster or slower. You can even pause it if you need to examine a snapshot in time.","title":"Highlights"},{"location":"Highlights/Readwise/Articles/11%20Fast%20Ways%20to%20Get%20Tasks%20Off%20Your%20Mind%20and%20Into%20Your%20Todoist/","text":"11 Fast Ways to Get Tasks Off Your Mind and Into Your Todoist \u00b6 Metadata \u00b6 Author: Full Title: 11 Fast Ways to Get Tasks Off Your Mind and Into Your Todoist Category: #Type/Highlights/Article URL: https://doist.com/blog/add-tasks-todoist/ Highlights \u00b6 Add a new task from anywhere within the Todoist app by pressing q To add tasks to the bottom of a list, press a To add a new task to the top of a list, use Shift + A. (Note: These two shortcuts will only work inside a project view.) Tags: [[tip]] [[todoist]] [[favorite]] While you\u2019re editing a task, you can change the indentation of the task by pressing Ctrl + Alt + \u2192 (Windows legacy app), Alt + Shift + \u2192 (Windows 10) or \u2318 + Option + \u2192 (Mac). If you indent a task, it becomes the sub-task of the task above it which can be highly useful for breaking down large to-dos into multi-step tasks. The desktop apps also have a universal shortcut you can use whenever the Todoist app is open. Just press Shift + Command + A (Mac) or Ctrl + Alt + A (Windows legacy app) to open the Quick Add. (Unfortunately, Windows 10 doesn\u2019t support global shortcuts.) Dictate tasks to Todoist If you use an iPhone or iPad, all you have to do is ask Siri to add a task \u2014 and even set a due date \u2014 in Todoist. For example, say \u201cHey Siri, add a task to start drafting the blog post tomorrow in Todoist\u201d. Tags: [[todoist]] [[favorite]] Add tasks from your web browser Add tasks by sharing content from any other mobile app Add tasks from shortcuts on your phone If you have an iPhone, you can add a Todoist widget to the Today tab in your Notification Center. You\u2019ll be able to see your upcoming tasks and add a new one without ever opening the full app. Add tasks from your email inbox Email is one of the biggest sources of stress in the modern workplace, but Todoist\u2019s plug-ins for Todoist widget to the Today tab in your Notification Center and Outlook can help you keep your digital correspondence wrangled and your inbox clean and organized. Easily add your emails as tasks in Todoist with specific due dates to remind you to respond or follow up. If you tend to check your email on your phone, there are also several 3rd-party app integrations that let you accomplish the same thing. Last month, the Todoist team published a full, updated guide on how to reach and stay at Inbox Zero with Todoist. Add whole groups of tasks using templates Checklists save lives! And stress. And embarrassment. Create your own for recurring projects to make sure nothing falls through the cracks. For example, every time I\u2019m planning a new blog post, video or podcast, I always need the same set of tasks. I can\u2019t set these up as recurring tasks because my project schedule fluctuates from week to week. Templates come to the rescue. I can simply import a template full of pre-organized tasks each time a video or podcast is coming up. This way, I don\u2019t have to sit down and type out each individual task every single time I need to work on a new project. You can create a template from any existing project, or just create a new project, fill it with your required tasks and use that one, instead. Exporting a project as a template and importing it into a new project is a simple process, and you can repeat it as often as necessary. Tip: Bookmark the template import link to load a new template with just a click. Automatically create tasks using IFTTT or Zapier Automatically add your most important emails as tasks in Todoist I use Pocket to keep track of my reading. I\u2019ve set up my own integration so that whenever I add a link to my Pocket, a Todoist task is created in my Reading project to remind me to come back to the article. Check out the applet (that\u2019s what IFTTT calls its custom integrations). You can also prevent flooding your Todoist by only adding tasks from Pocket articles that have a specific tag, like mustread. Automatically keep track of missed phone calls.","title":"11 Fast Ways to Get Tasks Off Your Mind and Into Your Todoist"},{"location":"Highlights/Readwise/Articles/11%20Fast%20Ways%20to%20Get%20Tasks%20Off%20Your%20Mind%20and%20Into%20Your%20Todoist/#11-fast-ways-to-get-tasks-off-your-mind-and-into-your-todoist","text":"","title":"11 Fast Ways to Get Tasks Off Your Mind and Into Your Todoist"},{"location":"Highlights/Readwise/Articles/11%20Fast%20Ways%20to%20Get%20Tasks%20Off%20Your%20Mind%20and%20Into%20Your%20Todoist/#metadata","text":"Author: Full Title: 11 Fast Ways to Get Tasks Off Your Mind and Into Your Todoist Category: #Type/Highlights/Article URL: https://doist.com/blog/add-tasks-todoist/","title":"Metadata"},{"location":"Highlights/Readwise/Articles/11%20Fast%20Ways%20to%20Get%20Tasks%20Off%20Your%20Mind%20and%20Into%20Your%20Todoist/#highlights","text":"Add a new task from anywhere within the Todoist app by pressing q To add tasks to the bottom of a list, press a To add a new task to the top of a list, use Shift + A. (Note: These two shortcuts will only work inside a project view.) Tags: [[tip]] [[todoist]] [[favorite]] While you\u2019re editing a task, you can change the indentation of the task by pressing Ctrl + Alt + \u2192 (Windows legacy app), Alt + Shift + \u2192 (Windows 10) or \u2318 + Option + \u2192 (Mac). If you indent a task, it becomes the sub-task of the task above it which can be highly useful for breaking down large to-dos into multi-step tasks. The desktop apps also have a universal shortcut you can use whenever the Todoist app is open. Just press Shift + Command + A (Mac) or Ctrl + Alt + A (Windows legacy app) to open the Quick Add. (Unfortunately, Windows 10 doesn\u2019t support global shortcuts.) Dictate tasks to Todoist If you use an iPhone or iPad, all you have to do is ask Siri to add a task \u2014 and even set a due date \u2014 in Todoist. For example, say \u201cHey Siri, add a task to start drafting the blog post tomorrow in Todoist\u201d. Tags: [[todoist]] [[favorite]] Add tasks from your web browser Add tasks by sharing content from any other mobile app Add tasks from shortcuts on your phone If you have an iPhone, you can add a Todoist widget to the Today tab in your Notification Center. You\u2019ll be able to see your upcoming tasks and add a new one without ever opening the full app. Add tasks from your email inbox Email is one of the biggest sources of stress in the modern workplace, but Todoist\u2019s plug-ins for Todoist widget to the Today tab in your Notification Center and Outlook can help you keep your digital correspondence wrangled and your inbox clean and organized. Easily add your emails as tasks in Todoist with specific due dates to remind you to respond or follow up. If you tend to check your email on your phone, there are also several 3rd-party app integrations that let you accomplish the same thing. Last month, the Todoist team published a full, updated guide on how to reach and stay at Inbox Zero with Todoist. Add whole groups of tasks using templates Checklists save lives! And stress. And embarrassment. Create your own for recurring projects to make sure nothing falls through the cracks. For example, every time I\u2019m planning a new blog post, video or podcast, I always need the same set of tasks. I can\u2019t set these up as recurring tasks because my project schedule fluctuates from week to week. Templates come to the rescue. I can simply import a template full of pre-organized tasks each time a video or podcast is coming up. This way, I don\u2019t have to sit down and type out each individual task every single time I need to work on a new project. You can create a template from any existing project, or just create a new project, fill it with your required tasks and use that one, instead. Exporting a project as a template and importing it into a new project is a simple process, and you can repeat it as often as necessary. Tip: Bookmark the template import link to load a new template with just a click. Automatically create tasks using IFTTT or Zapier Automatically add your most important emails as tasks in Todoist I use Pocket to keep track of my reading. I\u2019ve set up my own integration so that whenever I add a link to my Pocket, a Todoist task is created in my Reading project to remind me to come back to the article. Check out the applet (that\u2019s what IFTTT calls its custom integrations). You can also prevent flooding your Todoist by only adding tasks from Pocket articles that have a specific tag, like mustread. Automatically keep track of missed phone calls.","title":"Highlights"},{"location":"Highlights/Readwise/Articles/12%20Types%20of%20Lists%20You%20Should%20Keep%20to%20Get%20Things%20Done/","text":"12 Types of Lists You Should Keep to Get Things Done \u00b6 Metadata \u00b6 Author: Full Title: 12 Types of Lists You Should Keep to Get Things Done Category: #Type/Highlights/Article URL: https://www.dandywithlens.com/types-of-lists-you-should-keep-to-get-things-done/ Highlights \u00b6 The purpose of maintaining several types of lists is to have clearly defined parking spaces for your ideas and to-do items. This makes it easy to quickly add new items to a list, and easy to find what you are looking for when you need it. Tags: [[favorite]] List of goals What do you want in life? What\u2019s your career ambition? Do you want to work in another business, or in another country? Want to get married and have kids? Want to retire early? This is the list of things to stretch for. This is the list of things that require long-term planning and hard work. Don\u2019t be afraid to put things on this list. It\u2019s not like this is a permanent list with a limited number of spaces. You should review this list at least every sixth month. Contacts list I\u2019m surprised by the number of people around me who have, at some point in time, lost all phone numbers and other information on friends and colleagues just because their phone or computer was lost or stolen. I treat contact information as valuable data. This means that I regularly back up my phone using Jotta Cloud, besides using Google Contacts as my sync hub between my phone and my computers Task list / To do list The to do list is among the most common types of lists and also the most misused type of list. (Picture: Pixabay) I have written a lot about task lists. Of course, I would recommend you to use the GTD methodology, but even if you don\u2019t do that, a task list is better than no task list. Waiting for list This is a useful list for anyone who is delegating work or is dependent on input from others to get work done. The simple act of following up on people who have not responded to your emails not only make sure that you get what you need but also shows that you have control. List of books to read / Movies to see Whenever you hear about a good book or see a trailer for a movie that you would like to see, put it on a dedicated list. The same goes for theatre plays or comedy shows and concerts. After I started to have a dedicated list for this, I feel that I\u2019m able to experience the things I want to experience instead of ending up with what Netflix recommended or what was at the top of the list in the in-flight entertainment system. gift list Ideas list Sometimes you have a really good idea. It can be how to solve a problem at work, or how to improve the toaster. It does not matter if it\u2019s a million dollar idea or an idea about how to build a bench around the tree in the garden. The idea (pun intended) behind this list is to create a place that you can access quickly to be able to document the idea before it is lost due to the \u201cbuy cat food\u201d reminder on your phone. Bucket list Someday/maybe list Unlike your Bucket list, your someday/maybe list should consist of things that you maybe consider doing someday. The whole point with this list is to store the link to that sky-diving class you found online or that great article on how to get started as a vine collector. Packing list One of my favorite types of lists is the packing list. Technically I have several lists which I combine into one long list. The content of the final list is dependent on where I\u2019m going, what type of travel (work or vacation) and the length of my stay. Grocery list Having a dedicated grocery list, and having the discipline to add \u201coranges\u201d to the list when you take the last one out of the fridge is one of those things that can remove a lot of friction in your life. I have earlier mentioned Listonic, which is my dedicated app for shopping lists.","title":"12 Types of Lists You Should Keep to Get Things Done"},{"location":"Highlights/Readwise/Articles/12%20Types%20of%20Lists%20You%20Should%20Keep%20to%20Get%20Things%20Done/#12-types-of-lists-you-should-keep-to-get-things-done","text":"","title":"12 Types of Lists You Should Keep to Get Things Done"},{"location":"Highlights/Readwise/Articles/12%20Types%20of%20Lists%20You%20Should%20Keep%20to%20Get%20Things%20Done/#metadata","text":"Author: Full Title: 12 Types of Lists You Should Keep to Get Things Done Category: #Type/Highlights/Article URL: https://www.dandywithlens.com/types-of-lists-you-should-keep-to-get-things-done/","title":"Metadata"},{"location":"Highlights/Readwise/Articles/12%20Types%20of%20Lists%20You%20Should%20Keep%20to%20Get%20Things%20Done/#highlights","text":"The purpose of maintaining several types of lists is to have clearly defined parking spaces for your ideas and to-do items. This makes it easy to quickly add new items to a list, and easy to find what you are looking for when you need it. Tags: [[favorite]] List of goals What do you want in life? What\u2019s your career ambition? Do you want to work in another business, or in another country? Want to get married and have kids? Want to retire early? This is the list of things to stretch for. This is the list of things that require long-term planning and hard work. Don\u2019t be afraid to put things on this list. It\u2019s not like this is a permanent list with a limited number of spaces. You should review this list at least every sixth month. Contacts list I\u2019m surprised by the number of people around me who have, at some point in time, lost all phone numbers and other information on friends and colleagues just because their phone or computer was lost or stolen. I treat contact information as valuable data. This means that I regularly back up my phone using Jotta Cloud, besides using Google Contacts as my sync hub between my phone and my computers Task list / To do list The to do list is among the most common types of lists and also the most misused type of list. (Picture: Pixabay) I have written a lot about task lists. Of course, I would recommend you to use the GTD methodology, but even if you don\u2019t do that, a task list is better than no task list. Waiting for list This is a useful list for anyone who is delegating work or is dependent on input from others to get work done. The simple act of following up on people who have not responded to your emails not only make sure that you get what you need but also shows that you have control. List of books to read / Movies to see Whenever you hear about a good book or see a trailer for a movie that you would like to see, put it on a dedicated list. The same goes for theatre plays or comedy shows and concerts. After I started to have a dedicated list for this, I feel that I\u2019m able to experience the things I want to experience instead of ending up with what Netflix recommended or what was at the top of the list in the in-flight entertainment system. gift list Ideas list Sometimes you have a really good idea. It can be how to solve a problem at work, or how to improve the toaster. It does not matter if it\u2019s a million dollar idea or an idea about how to build a bench around the tree in the garden. The idea (pun intended) behind this list is to create a place that you can access quickly to be able to document the idea before it is lost due to the \u201cbuy cat food\u201d reminder on your phone. Bucket list Someday/maybe list Unlike your Bucket list, your someday/maybe list should consist of things that you maybe consider doing someday. The whole point with this list is to store the link to that sky-diving class you found online or that great article on how to get started as a vine collector. Packing list One of my favorite types of lists is the packing list. Technically I have several lists which I combine into one long list. The content of the final list is dependent on where I\u2019m going, what type of travel (work or vacation) and the length of my stay. Grocery list Having a dedicated grocery list, and having the discipline to add \u201coranges\u201d to the list when you take the last one out of the fridge is one of those things that can remove a lot of friction in your life. I have earlier mentioned Listonic, which is my dedicated app for shopping lists.","title":"Highlights"},{"location":"Highlights/Readwise/Articles/13%20Things%20to%20Put%20on%20Your%20Daily%20Checklist%20for%20Boosted%20Productivity/","text":"13 Things to Put on Your Daily Checklist for Boosted Productivity \u00b6 Metadata \u00b6 Author: [[lifehack.org]] Full Title: 13 Things to Put on Your Daily Checklist for Boosted Productivity Category: #Type/Highlights/Article Document Tags: [[Liked]] URL: https://www.lifehack.org/833077/daily-checklist Highlights \u00b6 Now, there is a good way and a bad way to create a daily checklist. One will super boost your productivity, and the other one will be a mind-numbing list of tasks you\u2019ll give up on in two days. To avoid the latter, you should limit your checklist to the essentials in order to super boost your productivity, and it starts with your morning routine. When creating your checklist, you can use a bullet journal or a simple pie ( View Highlight ) Sleep for 8 Hours You need to sleep for 8 hours[1]. There\u2019s just no way around it. There is a plethora of research that says that you need 8 hours of sleep to be productive and cognitively optimal during the day. But what is even scarier is that there is a ton of research done on the effects lack of sleep brings to people, and the results are devastating. If you want to be productive, sleep should be the first thing on your daily checklist. ( View Highlight ) Early Physical Activity This doesn\u2019t have to be an hour-long session in the gym. You can do that if that\u2019s your thing, but simple stretching, a 10-minute walk, or a short 5 to 7 minute exercise routine can be enough to get your body moving and ready for the day ahead. You just need something to wake up your body and get the blood flow going. One example would be Tony Robbins, who jumps into his pool and swims a couple of laps. ( View Highlight ) Eat Some (Healthy) Food Food gets energy in your body early in the morning and wakes up your mind in a different way than exercise. You need food in the morning, and something healthy will offer the best benefits for your mind and body. Even if you work sitting down for most of the day, you should still plan on including a couple of healthy snacks on your daily checklist. Bring some nuts, a piece of fruit, or some granola to act as a pick-me-up when you\u2019re feeling tired. ( View Highlight ) Do Your Favorite Unproductive Activity You are a human being and we need fun, unproductive, and lazy time. If you spend 10 to 20 minutes in the morning doing your favorite unproductive activity, you will settle down \u201cthe instant gratification monkey\u201d everyone has inside.[2] Once you\u2019re done with it, you will clear it from your mind and carry on. Some people watch YouTube, some play Minesweeper or BubbleSpinner, but you can do whatever you like. That\u2019s why it\u2019s your favorite unproductive activity and why it should have a small place on your daily checklist. ( View Highlight ) Personal Reflection Time Meditation is just one thing you can do for your personal reflection time. You can also spend a couple of minutes centering yourself for the upcoming day or writing a page in a journal. Some people focus on gratitude,[3] but anything you include in personal reflection time is time well spent. This time can take the form of a prayer, a minute of silence, sitting down in the car and doing nothing, etc. ( View Highlight ) A 10-Second Plan You already know what the most important thing you have to do today is. If I gave you only 10 seconds right now to plan your day to be productive, that activity would be the only one you wrote down on your daily checklist in those 10 seconds. ( View Highlight ) That is your plan for today. Do only that for today, and your day will be productive. ( View Highlight ) Get Yourself Into a Working Mindset by Reading When they get to work, most people first sit down, open their browser, and randomly scroll the internet for half an hour. If you\u2019re looking to be more productive, you should sit down and open up a book or an article that is related to your field of work. Once you read for a few minutes, your brain will focus on that information, and it will start producing creative ideas and solutions. Reading is also a great thing to have on your daily checklist for after work when you\u2019re winding down. ( View Highlight ) Remove Distractions Put your front page on your browser to something which won\u2019t seduce you into procrastinating. Use headphones, even if you don\u2019t listen to music, because your colleagues will know that you mean business when they are on. Close the door to avoid people walking in at inopportune times. Turn off Wi-Fi on your phone. Take a look at these tips on How to Minimize Distraction to Get Things Done and then add it to your daily checklist. ( View Highlight ) When Tired, Rest Since I\u2019m a writer, taking a nap in the middle of the day to rest is a possibility and almost a daily occurrence for me (sometimes I take a long walk instead). You will get tired during the day, and when that happens, don\u2019t try to push through it. Simply stop working and go rest. ( View Highlight ) Know When the Day Is Done Many people feel they lack productivity simply because there is always something more they could be doing. While that\u2019s true, make sure you know what you want to achieve and allow yourself to feel accomplished once you\u2019ve done that. As part of your daily checklist, add in a moment of recognition for what you\u2019ve managed to achieve during the day. ( View Highlight ) Track Your Day By tracking your day, you realize what you did and didn\u2019t do for that day. After a couple of days of working on everything from your checklist, the goal becomes to not \u201cbreak the chain.\u201d This is something attributed to Jerry Seinfeld[4] who, when asked how he became a great comedian, responded: \u201cI just wrote one joke a day and then tried not to break the chain on my calendar.\u201d On your daily checklist, make it a point to mark off what you\u2019ve completed. You may want to make use of these apps to keep track of your day: 24 Best Habit Tracking Apps ( View Highlight ) Reward Yourself The best thing after a productive day is the reward you get by being productive. Don\u2019t ignore this thing on your daily checklist. If you\u2019ve done everything from the checklist, give yourself a proper reward. It will make your brain remember the activity as pleasurable, and it will become easier for you to do it. Learn to celebrate small wins so you\u2019ll stay motivated and keep up the momentum. ( View Highlight ) Change What Isn\u2019t Working A daily checklist is a tool which you use, so understand that over time, your life, work, job, situation, and position will change. And alongside that, your daily checklist should change as well. Make it a point to reevaluate your daily checklist each day to make sure it\u2019s serving you in the best way possible. You can also use a point on your daily checklist to reevaluate what isn\u2019t working in certain areas of your life in general. ( View Highlight ) The Bottom Line You now have 13 things for your daily checklist that will help you become more productive and spend time on things that matter. Put it somewhere visible where it can look at you every single morning and evening. If you commit to completing each item every day, eventually, it will bring you massive results. Every journey, no matter how long, always begins the same way\u2014with a single step. ( View Highlight )","title":"13 Things to Put on Your Daily Checklist for Boosted Productivity"},{"location":"Highlights/Readwise/Articles/13%20Things%20to%20Put%20on%20Your%20Daily%20Checklist%20for%20Boosted%20Productivity/#13-things-to-put-on-your-daily-checklist-for-boosted-productivity","text":"","title":"13 Things to Put on Your Daily Checklist for Boosted Productivity"},{"location":"Highlights/Readwise/Articles/13%20Things%20to%20Put%20on%20Your%20Daily%20Checklist%20for%20Boosted%20Productivity/#metadata","text":"Author: [[lifehack.org]] Full Title: 13 Things to Put on Your Daily Checklist for Boosted Productivity Category: #Type/Highlights/Article Document Tags: [[Liked]] URL: https://www.lifehack.org/833077/daily-checklist","title":"Metadata"},{"location":"Highlights/Readwise/Articles/13%20Things%20to%20Put%20on%20Your%20Daily%20Checklist%20for%20Boosted%20Productivity/#highlights","text":"Now, there is a good way and a bad way to create a daily checklist. One will super boost your productivity, and the other one will be a mind-numbing list of tasks you\u2019ll give up on in two days. To avoid the latter, you should limit your checklist to the essentials in order to super boost your productivity, and it starts with your morning routine. When creating your checklist, you can use a bullet journal or a simple pie ( View Highlight ) Sleep for 8 Hours You need to sleep for 8 hours[1]. There\u2019s just no way around it. There is a plethora of research that says that you need 8 hours of sleep to be productive and cognitively optimal during the day. But what is even scarier is that there is a ton of research done on the effects lack of sleep brings to people, and the results are devastating. If you want to be productive, sleep should be the first thing on your daily checklist. ( View Highlight ) Early Physical Activity This doesn\u2019t have to be an hour-long session in the gym. You can do that if that\u2019s your thing, but simple stretching, a 10-minute walk, or a short 5 to 7 minute exercise routine can be enough to get your body moving and ready for the day ahead. You just need something to wake up your body and get the blood flow going. One example would be Tony Robbins, who jumps into his pool and swims a couple of laps. ( View Highlight ) Eat Some (Healthy) Food Food gets energy in your body early in the morning and wakes up your mind in a different way than exercise. You need food in the morning, and something healthy will offer the best benefits for your mind and body. Even if you work sitting down for most of the day, you should still plan on including a couple of healthy snacks on your daily checklist. Bring some nuts, a piece of fruit, or some granola to act as a pick-me-up when you\u2019re feeling tired. ( View Highlight ) Do Your Favorite Unproductive Activity You are a human being and we need fun, unproductive, and lazy time. If you spend 10 to 20 minutes in the morning doing your favorite unproductive activity, you will settle down \u201cthe instant gratification monkey\u201d everyone has inside.[2] Once you\u2019re done with it, you will clear it from your mind and carry on. Some people watch YouTube, some play Minesweeper or BubbleSpinner, but you can do whatever you like. That\u2019s why it\u2019s your favorite unproductive activity and why it should have a small place on your daily checklist. ( View Highlight ) Personal Reflection Time Meditation is just one thing you can do for your personal reflection time. You can also spend a couple of minutes centering yourself for the upcoming day or writing a page in a journal. Some people focus on gratitude,[3] but anything you include in personal reflection time is time well spent. This time can take the form of a prayer, a minute of silence, sitting down in the car and doing nothing, etc. ( View Highlight ) A 10-Second Plan You already know what the most important thing you have to do today is. If I gave you only 10 seconds right now to plan your day to be productive, that activity would be the only one you wrote down on your daily checklist in those 10 seconds. ( View Highlight ) That is your plan for today. Do only that for today, and your day will be productive. ( View Highlight ) Get Yourself Into a Working Mindset by Reading When they get to work, most people first sit down, open their browser, and randomly scroll the internet for half an hour. If you\u2019re looking to be more productive, you should sit down and open up a book or an article that is related to your field of work. Once you read for a few minutes, your brain will focus on that information, and it will start producing creative ideas and solutions. Reading is also a great thing to have on your daily checklist for after work when you\u2019re winding down. ( View Highlight ) Remove Distractions Put your front page on your browser to something which won\u2019t seduce you into procrastinating. Use headphones, even if you don\u2019t listen to music, because your colleagues will know that you mean business when they are on. Close the door to avoid people walking in at inopportune times. Turn off Wi-Fi on your phone. Take a look at these tips on How to Minimize Distraction to Get Things Done and then add it to your daily checklist. ( View Highlight ) When Tired, Rest Since I\u2019m a writer, taking a nap in the middle of the day to rest is a possibility and almost a daily occurrence for me (sometimes I take a long walk instead). You will get tired during the day, and when that happens, don\u2019t try to push through it. Simply stop working and go rest. ( View Highlight ) Know When the Day Is Done Many people feel they lack productivity simply because there is always something more they could be doing. While that\u2019s true, make sure you know what you want to achieve and allow yourself to feel accomplished once you\u2019ve done that. As part of your daily checklist, add in a moment of recognition for what you\u2019ve managed to achieve during the day. ( View Highlight ) Track Your Day By tracking your day, you realize what you did and didn\u2019t do for that day. After a couple of days of working on everything from your checklist, the goal becomes to not \u201cbreak the chain.\u201d This is something attributed to Jerry Seinfeld[4] who, when asked how he became a great comedian, responded: \u201cI just wrote one joke a day and then tried not to break the chain on my calendar.\u201d On your daily checklist, make it a point to mark off what you\u2019ve completed. You may want to make use of these apps to keep track of your day: 24 Best Habit Tracking Apps ( View Highlight ) Reward Yourself The best thing after a productive day is the reward you get by being productive. Don\u2019t ignore this thing on your daily checklist. If you\u2019ve done everything from the checklist, give yourself a proper reward. It will make your brain remember the activity as pleasurable, and it will become easier for you to do it. Learn to celebrate small wins so you\u2019ll stay motivated and keep up the momentum. ( View Highlight ) Change What Isn\u2019t Working A daily checklist is a tool which you use, so understand that over time, your life, work, job, situation, and position will change. And alongside that, your daily checklist should change as well. Make it a point to reevaluate your daily checklist each day to make sure it\u2019s serving you in the best way possible. You can also use a point on your daily checklist to reevaluate what isn\u2019t working in certain areas of your life in general. ( View Highlight ) The Bottom Line You now have 13 things for your daily checklist that will help you become more productive and spend time on things that matter. Put it somewhere visible where it can look at you every single morning and evening. If you commit to completing each item every day, eventually, it will bring you massive results. Every journey, no matter how long, always begins the same way\u2014with a single step. ( View Highlight )","title":"Highlights"},{"location":"Highlights/Readwise/Articles/27%20Incredibly%20Useful%20Things%20You%20Didn%E2%80%99t%20Know%20Chrome%20Could%20Do/","text":"27 Incredibly Useful Things You Didn\u2019t Know Chrome Could Do \u00b6 Metadata \u00b6 Author: [[JR Raphael]] Full Title: 27 Incredibly Useful Things You Didn\u2019t Know Chrome Could Do Category: #Type/Highlights/Article URL: https://www.fastcompany.com/40557798/27-incredibly-useful-things-you-didnt-know-chrome-could-do Highlights \u00b6 open a link into a new tab in the background, so it won\u2019t interrupt what you\u2019re doing? Hold down Ctrl- or Cmd- and click it. To open a link in a whole new window, meanwhile, use Shift instead. (This\u2019ll work within most areas of Chrome, by the way\u2014including the History page and the dropdown history list within the Back button, which we\u2019ll get to in a bit.) press the space bar to scroll down a full page-length, but there\u2019s another side to that shortcut: If you press Shift and the space bar together, Chrome will do the opposite and scroll up by a full page-length at a time. Ctrl- or Cmd-Shift-T. Chrome will reopen your most recently closed tab When you have a bunch of tabs open and want to hang onto the entire session for later, hit Ctrl-Shift-D. That\u2019ll let you save all your open tabs into a folder for easy future access. Skip a step and get info about any word or phrase in a page by highlighting it and then right-clicking and selecting the \u201cSearch Google\u201d option. Save a link with a single click: Just click, hold down your mouse button, and drag the link up into Chrome\u2019s bookmarks bar If you download a file and then want to move it somewhere specific, click on its tile in the download bar that appears at the bottom of the browser. You can then drag and drop whatever you downloaded directly onto your desktop or into any folder. Should you ever find Chrome mysteriously misbehaving, remember this command: chrome://restart. Type it into Chrome\u2019s address bar, and your browser will restart itself and restore all your tabs and windows in a jiffy. You never know when it might come in handy. With 60 seconds of setup, you can give Chrome its own quick-access scratchpad that\u2019ll let you jot down thoughts right within the browser\u2014no extensions required. All you have to do is paste a snippet of code into Chrome\u2019s address bar. Click here or on the image below to view and copy the necessary code. \u2026and then save the page to your bookmarks bar for easy access. The scratchpad supports text formatting (Ctrl- or Cmd-B for bold, Ctrl- or Cmd-I for italics, and Ctrl- or Cmd-U for underlining) and even has a built-in spell check feature. Just open it and start typing\u2014and if you want to save your thoughts for later retrieval, hit Ctrl- or Cmd-S. Note: data:text/html;charset=utf-8, Scratchpad body {padding: 5%; font-size: 1.5em; font-family: Arial; }\"&gt; create simple shortcuts to pages you visit often\u2014anything from favorite websites to internal Chrome pages or even the scratchpad described in the previous tip. Just open up Chrome\u2019s settings, click the line labeled \u201cManage search engines,\u201d then click the \u201cAdd\u201d command next to the \u201cOther search engines\u201d heading. Type the name of the page in the \u201cSearch engine\u201d field, the shortcut you want for it in the \u201cKeyword\u201d field, and the page\u2019s full URL in the \u201cURL\u201d field. For instance, if you want to be able to pull up Chrome\u2019s settings simply by typing \u201ccs\u201d into your address bar, you could use \u201cChrome Settings\u201d as the search engine name, \u201ccs\u201d as the keyword, and chrome://settings as the URL. To get to your new scratchpad quickly, you could use \u201cScratchpad\u201d as the search engine name, \u201cs\u201d as the keyword, and the full string of code from above as the URL. You can also use Chrome\u2019s custom search engines feature to create shortcuts for searching any sites you want. The trick is to first find the full URL of the site\u2019s own search system\u2014so if you wanted to do it for Fast Company, you\u2019d go to fastcompany.com, click the search icon in the upper-right corner of the screen, then search for a word like \u201ctest.\u201d The site will take you to https://www.fastcompany.com/search/test. With that knowledge in tow, head back to Chrome\u2019s \u201cManage search engines\u201d section and click the \u201cAdd\u201d command. This time, type \u201cFast Company\u201d in as the search engine name, \u201cfastcompany.com\u201d as the keyword, and \u201chttps://www.fastcompany.com/search/%s\u201d\u2014with \u201c%s\u201d taking the place of the actual query\u2014as the URL. Want to be able to search your email directly from Chrome\u2019s address bar? Create a new custom search engine with the name Gmail, whatever keyword you want (either \u201cgmail.com\u201d or some shortened command), and \u201chttps://mail.google.com/mail/ca/u/0/#search/%s\u201d as the URL. Search Google Drive from the address bar by creating a custom search engine with \u201chttps://drive.google.com/drive/u/0/search?q=%s\u201d as the URL. Quiet annoying sites once and for all by right-clicking their tabs (where the title is displayed) and selecting \u201cMute site.\u201d This recently added option will prevent the site from playing any audio on your computer anytime you visit it. Chrome\u2019s History page\u2014accessible by hitting Ctrl- or Cmd-H or by typing chrome://history into your address bar\u2014has a powerful yet easily overlooked feature: an always-synced list of tabs you have open in Chrome on other devices. Surf over there anytime you want to find what you were last viewing on your phone, your tablet, or another computer. Let Chrome act as your file explorer: Drag and drop any image, video, or audio file into the browser to open it right then and there\u2014and on Windows, try typing C:\\ into Chrome\u2019s address bar to browse your hard drive\u2019s contents.","title":"27 Incredibly Useful Things You Didn\u2019t Know Chrome Could Do"},{"location":"Highlights/Readwise/Articles/27%20Incredibly%20Useful%20Things%20You%20Didn%E2%80%99t%20Know%20Chrome%20Could%20Do/#27-incredibly-useful-things-you-didnt-know-chrome-could-do","text":"","title":"27 Incredibly Useful Things You Didn\u2019t Know Chrome Could Do"},{"location":"Highlights/Readwise/Articles/27%20Incredibly%20Useful%20Things%20You%20Didn%E2%80%99t%20Know%20Chrome%20Could%20Do/#metadata","text":"Author: [[JR Raphael]] Full Title: 27 Incredibly Useful Things You Didn\u2019t Know Chrome Could Do Category: #Type/Highlights/Article URL: https://www.fastcompany.com/40557798/27-incredibly-useful-things-you-didnt-know-chrome-could-do","title":"Metadata"},{"location":"Highlights/Readwise/Articles/27%20Incredibly%20Useful%20Things%20You%20Didn%E2%80%99t%20Know%20Chrome%20Could%20Do/#highlights","text":"open a link into a new tab in the background, so it won\u2019t interrupt what you\u2019re doing? Hold down Ctrl- or Cmd- and click it. To open a link in a whole new window, meanwhile, use Shift instead. (This\u2019ll work within most areas of Chrome, by the way\u2014including the History page and the dropdown history list within the Back button, which we\u2019ll get to in a bit.) press the space bar to scroll down a full page-length, but there\u2019s another side to that shortcut: If you press Shift and the space bar together, Chrome will do the opposite and scroll up by a full page-length at a time. Ctrl- or Cmd-Shift-T. Chrome will reopen your most recently closed tab When you have a bunch of tabs open and want to hang onto the entire session for later, hit Ctrl-Shift-D. That\u2019ll let you save all your open tabs into a folder for easy future access. Skip a step and get info about any word or phrase in a page by highlighting it and then right-clicking and selecting the \u201cSearch Google\u201d option. Save a link with a single click: Just click, hold down your mouse button, and drag the link up into Chrome\u2019s bookmarks bar If you download a file and then want to move it somewhere specific, click on its tile in the download bar that appears at the bottom of the browser. You can then drag and drop whatever you downloaded directly onto your desktop or into any folder. Should you ever find Chrome mysteriously misbehaving, remember this command: chrome://restart. Type it into Chrome\u2019s address bar, and your browser will restart itself and restore all your tabs and windows in a jiffy. You never know when it might come in handy. With 60 seconds of setup, you can give Chrome its own quick-access scratchpad that\u2019ll let you jot down thoughts right within the browser\u2014no extensions required. All you have to do is paste a snippet of code into Chrome\u2019s address bar. Click here or on the image below to view and copy the necessary code. \u2026and then save the page to your bookmarks bar for easy access. The scratchpad supports text formatting (Ctrl- or Cmd-B for bold, Ctrl- or Cmd-I for italics, and Ctrl- or Cmd-U for underlining) and even has a built-in spell check feature. Just open it and start typing\u2014and if you want to save your thoughts for later retrieval, hit Ctrl- or Cmd-S. Note: data:text/html;charset=utf-8, Scratchpad body {padding: 5%; font-size: 1.5em; font-family: Arial; }\"&gt; create simple shortcuts to pages you visit often\u2014anything from favorite websites to internal Chrome pages or even the scratchpad described in the previous tip. Just open up Chrome\u2019s settings, click the line labeled \u201cManage search engines,\u201d then click the \u201cAdd\u201d command next to the \u201cOther search engines\u201d heading. Type the name of the page in the \u201cSearch engine\u201d field, the shortcut you want for it in the \u201cKeyword\u201d field, and the page\u2019s full URL in the \u201cURL\u201d field. For instance, if you want to be able to pull up Chrome\u2019s settings simply by typing \u201ccs\u201d into your address bar, you could use \u201cChrome Settings\u201d as the search engine name, \u201ccs\u201d as the keyword, and chrome://settings as the URL. To get to your new scratchpad quickly, you could use \u201cScratchpad\u201d as the search engine name, \u201cs\u201d as the keyword, and the full string of code from above as the URL. You can also use Chrome\u2019s custom search engines feature to create shortcuts for searching any sites you want. The trick is to first find the full URL of the site\u2019s own search system\u2014so if you wanted to do it for Fast Company, you\u2019d go to fastcompany.com, click the search icon in the upper-right corner of the screen, then search for a word like \u201ctest.\u201d The site will take you to https://www.fastcompany.com/search/test. With that knowledge in tow, head back to Chrome\u2019s \u201cManage search engines\u201d section and click the \u201cAdd\u201d command. This time, type \u201cFast Company\u201d in as the search engine name, \u201cfastcompany.com\u201d as the keyword, and \u201chttps://www.fastcompany.com/search/%s\u201d\u2014with \u201c%s\u201d taking the place of the actual query\u2014as the URL. Want to be able to search your email directly from Chrome\u2019s address bar? Create a new custom search engine with the name Gmail, whatever keyword you want (either \u201cgmail.com\u201d or some shortened command), and \u201chttps://mail.google.com/mail/ca/u/0/#search/%s\u201d as the URL. Search Google Drive from the address bar by creating a custom search engine with \u201chttps://drive.google.com/drive/u/0/search?q=%s\u201d as the URL. Quiet annoying sites once and for all by right-clicking their tabs (where the title is displayed) and selecting \u201cMute site.\u201d This recently added option will prevent the site from playing any audio on your computer anytime you visit it. Chrome\u2019s History page\u2014accessible by hitting Ctrl- or Cmd-H or by typing chrome://history into your address bar\u2014has a powerful yet easily overlooked feature: an always-synced list of tabs you have open in Chrome on other devices. Surf over there anytime you want to find what you were last viewing on your phone, your tablet, or another computer. Let Chrome act as your file explorer: Drag and drop any image, video, or audio file into the browser to open it right then and there\u2014and on Windows, try typing C:\\ into Chrome\u2019s address bar to browse your hard drive\u2019s contents.","title":"Highlights"},{"location":"Highlights/Readwise/Articles/3%20Smart%20Uses%20of%20Curated%20Lists%20and%20How%20to%20Create%20Them/","text":"3 Smart Uses of Curated Lists and How to Create Them \u00b6 Metadata \u00b6 Author: [[Courtney Jones]] Full Title: 3 Smart Uses of Curated Lists and How to Create Them Category: #Type/Highlights/Article URL: https://www.cminds.com/3-uses-curated-lists-manager/ Highlights \u00b6 A curated list is a list on a certain topic that has been compiled carefully, usually by research and by a creator of the included content. Having content curated makes it much easier for users to find online, instead of searching through all the available web pages. Curated lists allow for users to discover a list of curated information and find the answers they need all in one helpful place. Curated Lists vs. RSS RSS (Really Simple Syndication) is another useful component to curated lists, as RSS allows users to access updates to online content such as content in curated lists. The difference with RSS is that it is fast fetching content, and then making it available daily or instantly. This makes it ideal for indexing content that is quick to consume. On the other hand, a curated list takes time to build and grow and can be added to over time. This makes it especially useful for organizing in-depth content that can be used as reference. Curated List Manager Plugin The curated list manager plugin lets users create a collection of similar links by category and display them as a helpful list or directory. This plugin is a great tool for content marketing and building a strong knowledge base. Each curated list can be shown on any page or post using a simple shortcode. Tags: [[favorite]]","title":"3 Smart Uses of Curated Lists and How to Create Them"},{"location":"Highlights/Readwise/Articles/3%20Smart%20Uses%20of%20Curated%20Lists%20and%20How%20to%20Create%20Them/#3-smart-uses-of-curated-lists-and-how-to-create-them","text":"","title":"3 Smart Uses of Curated Lists and How to Create Them"},{"location":"Highlights/Readwise/Articles/3%20Smart%20Uses%20of%20Curated%20Lists%20and%20How%20to%20Create%20Them/#metadata","text":"Author: [[Courtney Jones]] Full Title: 3 Smart Uses of Curated Lists and How to Create Them Category: #Type/Highlights/Article URL: https://www.cminds.com/3-uses-curated-lists-manager/","title":"Metadata"},{"location":"Highlights/Readwise/Articles/3%20Smart%20Uses%20of%20Curated%20Lists%20and%20How%20to%20Create%20Them/#highlights","text":"A curated list is a list on a certain topic that has been compiled carefully, usually by research and by a creator of the included content. Having content curated makes it much easier for users to find online, instead of searching through all the available web pages. Curated lists allow for users to discover a list of curated information and find the answers they need all in one helpful place. Curated Lists vs. RSS RSS (Really Simple Syndication) is another useful component to curated lists, as RSS allows users to access updates to online content such as content in curated lists. The difference with RSS is that it is fast fetching content, and then making it available daily or instantly. This makes it ideal for indexing content that is quick to consume. On the other hand, a curated list takes time to build and grow and can be added to over time. This makes it especially useful for organizing in-depth content that can be used as reference. Curated List Manager Plugin The curated list manager plugin lets users create a collection of similar links by category and display them as a helpful list or directory. This plugin is a great tool for content marketing and building a strong knowledge base. Each curated list can be shown on any page or post using a simple shortcode. Tags: [[favorite]]","title":"Highlights"},{"location":"Highlights/Readwise/Articles/3%20Steps%20to%20Designing%20a%20Powerful%20Project%20Workflow%20-%20ProjectManager.com/","text":"3 Steps to Designing a Powerful Project Workflow - ProjectManager.com \u00b6 Metadata \u00b6 Author: Full Title: 3 Steps to Designing a Powerful Project Workflow - ProjectManager.com Category: #Type/Highlights/Article URL: https://www.projectmanager.com/training/define-workflow-process Highlights \u00b6 Start with the End in Mind When you\u2019re first thinking about a workflow, you want to start with the end in mind. That is, look towards the end goal and then work backwards, so you can figure out the right path to get there. This will help you determine your workflow process. Tags: [[favorite]] From this perspective, you\u2019ll want to ask yourself some questions, such as: what are the processes, workflows and systems needed to reach the endpoint in the project, and what are the best practices to employ? You\u2019ll want to create a checklist, and ask questions. Note who you\u2019ll partner with, and decide what leadership team will drive the whole endeavor. Here are three tips for defining a workflow for your project. Create a realistic workflow diagram, and involve the people doing the work. Get buy-in from the team, have them sign-off, and then adopt the plan for the project. Match workflow process to a tool functionality so that the process drives the tool selection, and not the other way around. The benefits of following this course are that it will improve your productivity, reduce errors as you\u2019re working on the project, help relieve the stress and keep you consistent. How to Optimize Your Workflow Process Once you\u2019ve defined your workflow, you\u2019ll want to make it more efficient. One way to do this is through automation. It will help to streamline the internal workflow by getting rid of much of the manual data entry and request handling. Analyze Your Workflow By working to identify trends in the performance of your workflow, both in the teams and team members involved, you can tighten up the loose ends over time. One way to do that is by identifying the process redundancies and eliminating them. Software will help you analyze your processes as well.","title":"3 Steps to Designing a Powerful Project Workflow - ProjectManager.com"},{"location":"Highlights/Readwise/Articles/3%20Steps%20to%20Designing%20a%20Powerful%20Project%20Workflow%20-%20ProjectManager.com/#3-steps-to-designing-a-powerful-project-workflow-projectmanagercom","text":"","title":"3 Steps to Designing a Powerful Project Workflow - ProjectManager.com"},{"location":"Highlights/Readwise/Articles/3%20Steps%20to%20Designing%20a%20Powerful%20Project%20Workflow%20-%20ProjectManager.com/#metadata","text":"Author: Full Title: 3 Steps to Designing a Powerful Project Workflow - ProjectManager.com Category: #Type/Highlights/Article URL: https://www.projectmanager.com/training/define-workflow-process","title":"Metadata"},{"location":"Highlights/Readwise/Articles/3%20Steps%20to%20Designing%20a%20Powerful%20Project%20Workflow%20-%20ProjectManager.com/#highlights","text":"Start with the End in Mind When you\u2019re first thinking about a workflow, you want to start with the end in mind. That is, look towards the end goal and then work backwards, so you can figure out the right path to get there. This will help you determine your workflow process. Tags: [[favorite]] From this perspective, you\u2019ll want to ask yourself some questions, such as: what are the processes, workflows and systems needed to reach the endpoint in the project, and what are the best practices to employ? You\u2019ll want to create a checklist, and ask questions. Note who you\u2019ll partner with, and decide what leadership team will drive the whole endeavor. Here are three tips for defining a workflow for your project. Create a realistic workflow diagram, and involve the people doing the work. Get buy-in from the team, have them sign-off, and then adopt the plan for the project. Match workflow process to a tool functionality so that the process drives the tool selection, and not the other way around. The benefits of following this course are that it will improve your productivity, reduce errors as you\u2019re working on the project, help relieve the stress and keep you consistent. How to Optimize Your Workflow Process Once you\u2019ve defined your workflow, you\u2019ll want to make it more efficient. One way to do this is through automation. It will help to streamline the internal workflow by getting rid of much of the manual data entry and request handling. Analyze Your Workflow By working to identify trends in the performance of your workflow, both in the teams and team members involved, you can tighten up the loose ends over time. One way to do that is by identifying the process redundancies and eliminating them. Software will help you analyze your processes as well.","title":"Highlights"},{"location":"Highlights/Readwise/Articles/3%20Steps%20to%20Managing%20Your%20Time%20and%20Maximizing%20Your%20Workday/","text":"3 Steps to Managing Your Time and Maximizing Your Workday \u00b6 Metadata \u00b6 Author: [[John Furneaux]] Full Title: 3 Steps to Managing Your Time and Maximizing Your Workday Category: #Type/Highlights/Article URL: https://addicted2success.com/success-advice/3-steps-to-managing-your-time-and-maximizing-your-workday/ Highlights \u00b6 Start by setting a time each night to turn off your computer and mute notifications.","title":"3 Steps to Managing Your Time and Maximizing Your Workday"},{"location":"Highlights/Readwise/Articles/3%20Steps%20to%20Managing%20Your%20Time%20and%20Maximizing%20Your%20Workday/#3-steps-to-managing-your-time-and-maximizing-your-workday","text":"","title":"3 Steps to Managing Your Time and Maximizing Your Workday"},{"location":"Highlights/Readwise/Articles/3%20Steps%20to%20Managing%20Your%20Time%20and%20Maximizing%20Your%20Workday/#metadata","text":"Author: [[John Furneaux]] Full Title: 3 Steps to Managing Your Time and Maximizing Your Workday Category: #Type/Highlights/Article URL: https://addicted2success.com/success-advice/3-steps-to-managing-your-time-and-maximizing-your-workday/","title":"Metadata"},{"location":"Highlights/Readwise/Articles/3%20Steps%20to%20Managing%20Your%20Time%20and%20Maximizing%20Your%20Workday/#highlights","text":"Start by setting a time each night to turn off your computer and mute notifications.","title":"Highlights"},{"location":"Highlights/Readwise/Articles/4%20Efficient%20Workflow%20%20Efficient%20R%20Programming/","text":"4 Efficient Workflow | Efficient R Programming \u00b6 Metadata \u00b6 Author: Full Title: 4 Efficient Workflow | Efficient R Programming Category: #Type/Highlights/Article URL: https://csgillespie.github.io/efficientR/ Highlights \u00b6 the project will probably transcend the confines of the R world; it must engage with a whole range of other factors. In this context, we define \u2018workflow\u2019 as the sum of practices, habits and systems that enable productivity For project planning and management, we\u2019ll use the DiagrammeR package. For project reporting, we\u2019ll focus on R Markdown and knitr which are bundled with RStudio Top 5 tips for efficient workflow Start without writing code but with a clear mind and perhaps a pen and paper. This will ensure you keep your objectives at the forefront of your mind, without getting lost in the technology. Make a plan. The size and nature will depend on the project but timelines, resources and \u2018chunking\u2019 the work will make you more effective when you start. Select the packages you will use for implementing the plan early. Minutes spent researching and selecting from the available options could save hours in the future. Document your work at every stage; work can only be effective if it\u2019s communicated clearly and code can only be efficiently understood if it\u2019s commented. Make your entire workflow as reproducible as possible. knitr can help with this in the phase of documentation. A project planning typology Appropriate project management structures and workflow depend on the type of project you are undertaking. The typology below demonstrates the links between project type and project management requirements Data analysis. Here you are trying to explore datasets to discover something interesting/answer some questions. The emphasis is on the speed of manipulating your data to generate interesting results. Formality is less important in this type of project. Sometimes this analysis project may only be part of a larger project (the data may have to be created in a lab, for example). How the data analysts interact with the rest of the team may be as important for the project\u2019s success as how they interact with each other Package creation. Here you want to create code that can be reused across projects, possibly by people whose use case you don\u2019t know (if you make it publicly available). The emphasis in this case will be on clarity of user interface and documentation, meaning style and code review are important. Robustness and testing are important in this type of project too. Reporting and publishing. Here you are writing a report or journal paper or book. The level of formality varies depending upon the audience, but you have additional worries like how much code it takes to arrive at the conclusions, and how much output does the code create. Software applications. This could range from a simple Shiny app to R being embedded in the server of a much larger piece of software. Either way, since there is limited opportunity for human interaction, the emphasis is on robust code and gracefully dealing with failure.","title":"4 Efficient Workflow | Efficient R Programming"},{"location":"Highlights/Readwise/Articles/4%20Efficient%20Workflow%20%20Efficient%20R%20Programming/#4-efficient-workflow-efficient-r-programming","text":"","title":"4 Efficient Workflow | Efficient R Programming"},{"location":"Highlights/Readwise/Articles/4%20Efficient%20Workflow%20%20Efficient%20R%20Programming/#metadata","text":"Author: Full Title: 4 Efficient Workflow | Efficient R Programming Category: #Type/Highlights/Article URL: https://csgillespie.github.io/efficientR/","title":"Metadata"},{"location":"Highlights/Readwise/Articles/4%20Efficient%20Workflow%20%20Efficient%20R%20Programming/#highlights","text":"the project will probably transcend the confines of the R world; it must engage with a whole range of other factors. In this context, we define \u2018workflow\u2019 as the sum of practices, habits and systems that enable productivity For project planning and management, we\u2019ll use the DiagrammeR package. For project reporting, we\u2019ll focus on R Markdown and knitr which are bundled with RStudio Top 5 tips for efficient workflow Start without writing code but with a clear mind and perhaps a pen and paper. This will ensure you keep your objectives at the forefront of your mind, without getting lost in the technology. Make a plan. The size and nature will depend on the project but timelines, resources and \u2018chunking\u2019 the work will make you more effective when you start. Select the packages you will use for implementing the plan early. Minutes spent researching and selecting from the available options could save hours in the future. Document your work at every stage; work can only be effective if it\u2019s communicated clearly and code can only be efficiently understood if it\u2019s commented. Make your entire workflow as reproducible as possible. knitr can help with this in the phase of documentation. A project planning typology Appropriate project management structures and workflow depend on the type of project you are undertaking. The typology below demonstrates the links between project type and project management requirements Data analysis. Here you are trying to explore datasets to discover something interesting/answer some questions. The emphasis is on the speed of manipulating your data to generate interesting results. Formality is less important in this type of project. Sometimes this analysis project may only be part of a larger project (the data may have to be created in a lab, for example). How the data analysts interact with the rest of the team may be as important for the project\u2019s success as how they interact with each other Package creation. Here you want to create code that can be reused across projects, possibly by people whose use case you don\u2019t know (if you make it publicly available). The emphasis in this case will be on clarity of user interface and documentation, meaning style and code review are important. Robustness and testing are important in this type of project too. Reporting and publishing. Here you are writing a report or journal paper or book. The level of formality varies depending upon the audience, but you have additional worries like how much code it takes to arrive at the conclusions, and how much output does the code create. Software applications. This could range from a simple Shiny app to R being embedded in the server of a much larger piece of software. Either way, since there is limited opportunity for human interaction, the emphasis is on robust code and gracefully dealing with failure.","title":"Highlights"},{"location":"Highlights/Readwise/Articles/4%20Great%20Habits%20to%20Increase%20Productivity%2C%20Focus%2C%20Concentration%2C%20and%20Determination/","text":"4 Great Habits to Increase Productivity, Focus, Concentration, and Determination \u00b6 Metadata \u00b6 Author: [[Micha\u0142 Stawicki]] Full Title: 4 Great Habits to Increase Productivity, Focus, Concentration, and Determination Category: #Type/Highlights/Article URL: https://medium.com/p/55b7d687498b Highlights \u00b6 The real power doesn\u2019t lie in executing those tasks. It lies in realizing what they are. Clarity and focus are born out of writing down your priorities, not out of doing them.","title":"4 Great Habits to Increase Productivity, Focus, Concentration, and Determination"},{"location":"Highlights/Readwise/Articles/4%20Great%20Habits%20to%20Increase%20Productivity%2C%20Focus%2C%20Concentration%2C%20and%20Determination/#4-great-habits-to-increase-productivity-focus-concentration-and-determination","text":"","title":"4 Great Habits to Increase Productivity, Focus, Concentration, and Determination"},{"location":"Highlights/Readwise/Articles/4%20Great%20Habits%20to%20Increase%20Productivity%2C%20Focus%2C%20Concentration%2C%20and%20Determination/#metadata","text":"Author: [[Micha\u0142 Stawicki]] Full Title: 4 Great Habits to Increase Productivity, Focus, Concentration, and Determination Category: #Type/Highlights/Article URL: https://medium.com/p/55b7d687498b","title":"Metadata"},{"location":"Highlights/Readwise/Articles/4%20Great%20Habits%20to%20Increase%20Productivity%2C%20Focus%2C%20Concentration%2C%20and%20Determination/#highlights","text":"The real power doesn\u2019t lie in executing those tasks. It lies in realizing what they are. Clarity and focus are born out of writing down your priorities, not out of doing them.","title":"Highlights"},{"location":"Highlights/Readwise/Articles/4%20Solid%20Ways%20to%20Get%20the%20Best%20of%20the%20Web/","text":"4 Solid Ways to Get the Best of the Web \u00b6 Metadata \u00b6 Author: Full Title: 4 Solid Ways to Get the Best of the Web Category: #Type/Highlights/Article URL: https://www.makeuseof.com/tag/4-solid-ways-get-best-web/ Highlights \u00b6 Less Is More Websites, ideas, articles, videos, apps, discussions, groups, etc. keep popping up online every second of every day. Some of them become insanely popular, while some drift into oblivion. The others hover somewhere in between, waiting to be discovered by those on the same wavelength. You\u2019re guaranteed to miss out on a lot. The smart thing to do is to focus only on a handful of areas that you deeply care about. Use the Less is more slogan as a solution to absorb only the best of what the Web offers in those areas. Leave the rest for the rare surfing binge. Tags: [[favorite]] If your interests are too wide and too varied, delving into them on a rotational basis is a good idea. Create a library of your favorite content with a service like Pearltrees, so that you can return to it when the mood strikes. You can also try a curation service to select fresh content and deliver it to you. If you still find yourself falling back on a bad information diet, block time-wasting websites. Tags: [[favorite]] Substance Over Style On many occasions, I browsed through websites and installed apps for the only reason that they were shiny and inviting. On the other hand, I ignored some really informative websites because they did not hold much aesthetic appeal. Only after I decided to declutter did I notice that I spent too much time being taken in by clever marketing strategies and slick interfaces, while not spending enough of it on things that provided something of use to me. Tags: [[pkm]] [[declutter]] productivity [[favorite]] A simple way to deal with information onslaught online is by limiting yourself to a magic number, of your choice of course. For example, if you\u2019re an RSS packrat who doesn\u2019t read most of the articles in his feed, decide on a certain number, say, 20. Go through your subscriptions and retain only the top 20 \u2014 the ones that appeal to you the most. The idea here is not to put a damper on your exploration of the Web, but to help you devote your attention to what you consider the best of the best. Tags: [[favorite]] Note: TODO - do this across accounts (Feedly, etc.) The Weekly Purge We power through (and hoard) digital content at an alarming rate, often without being aware of it. It\u2019s necessary to have some system in place to counter the anxiety that comes from relentlessly taking in, or being forced to take in, too much information. Clear out the extras from your digital life regularly. Delete bookmarks, unused apps and accounts, old emails, unread newsletters and feeds, and anything else that clutters up your digital space. Tags: [[favorite]] Unsubscribe, unfollow, unfriend ruthlessly. Keep only those elements in which you have more than a passing interest. Doing this purge weekly prevents the clutter from assuming scary proportions in future. It also allows you to focus on the portion of the Web that you love, without having to wade through the one that you don\u2019t. You can also try a digital sabbatical and return to the Web with a refreshed mindset. Such a break promises to renew your appreciation of your life online as well as offline. Tags: [[favorite]] Start Trimming The Fluff The Web has creators and consumers of every kind. It belongs to everyone and no one. The best way to make it work for you is by aligning your Web experience with your interests, needs, and habits. This will not only save you a lot of time and effort, but also make the Web less overwhelming and more manageable.","title":"4 Solid Ways to Get the Best of the Web"},{"location":"Highlights/Readwise/Articles/4%20Solid%20Ways%20to%20Get%20the%20Best%20of%20the%20Web/#4-solid-ways-to-get-the-best-of-the-web","text":"","title":"4 Solid Ways to Get the Best of the Web"},{"location":"Highlights/Readwise/Articles/4%20Solid%20Ways%20to%20Get%20the%20Best%20of%20the%20Web/#metadata","text":"Author: Full Title: 4 Solid Ways to Get the Best of the Web Category: #Type/Highlights/Article URL: https://www.makeuseof.com/tag/4-solid-ways-get-best-web/","title":"Metadata"},{"location":"Highlights/Readwise/Articles/4%20Solid%20Ways%20to%20Get%20the%20Best%20of%20the%20Web/#highlights","text":"Less Is More Websites, ideas, articles, videos, apps, discussions, groups, etc. keep popping up online every second of every day. Some of them become insanely popular, while some drift into oblivion. The others hover somewhere in between, waiting to be discovered by those on the same wavelength. You\u2019re guaranteed to miss out on a lot. The smart thing to do is to focus only on a handful of areas that you deeply care about. Use the Less is more slogan as a solution to absorb only the best of what the Web offers in those areas. Leave the rest for the rare surfing binge. Tags: [[favorite]] If your interests are too wide and too varied, delving into them on a rotational basis is a good idea. Create a library of your favorite content with a service like Pearltrees, so that you can return to it when the mood strikes. You can also try a curation service to select fresh content and deliver it to you. If you still find yourself falling back on a bad information diet, block time-wasting websites. Tags: [[favorite]] Substance Over Style On many occasions, I browsed through websites and installed apps for the only reason that they were shiny and inviting. On the other hand, I ignored some really informative websites because they did not hold much aesthetic appeal. Only after I decided to declutter did I notice that I spent too much time being taken in by clever marketing strategies and slick interfaces, while not spending enough of it on things that provided something of use to me. Tags: [[pkm]] [[declutter]] productivity [[favorite]] A simple way to deal with information onslaught online is by limiting yourself to a magic number, of your choice of course. For example, if you\u2019re an RSS packrat who doesn\u2019t read most of the articles in his feed, decide on a certain number, say, 20. Go through your subscriptions and retain only the top 20 \u2014 the ones that appeal to you the most. The idea here is not to put a damper on your exploration of the Web, but to help you devote your attention to what you consider the best of the best. Tags: [[favorite]] Note: TODO - do this across accounts (Feedly, etc.) The Weekly Purge We power through (and hoard) digital content at an alarming rate, often without being aware of it. It\u2019s necessary to have some system in place to counter the anxiety that comes from relentlessly taking in, or being forced to take in, too much information. Clear out the extras from your digital life regularly. Delete bookmarks, unused apps and accounts, old emails, unread newsletters and feeds, and anything else that clutters up your digital space. Tags: [[favorite]] Unsubscribe, unfollow, unfriend ruthlessly. Keep only those elements in which you have more than a passing interest. Doing this purge weekly prevents the clutter from assuming scary proportions in future. It also allows you to focus on the portion of the Web that you love, without having to wade through the one that you don\u2019t. You can also try a digital sabbatical and return to the Web with a refreshed mindset. Such a break promises to renew your appreciation of your life online as well as offline. Tags: [[favorite]] Start Trimming The Fluff The Web has creators and consumers of every kind. It belongs to everyone and no one. The best way to make it work for you is by aligning your Web experience with your interests, needs, and habits. This will not only save you a lot of time and effort, but also make the Web less overwhelming and more manageable.","title":"Highlights"},{"location":"Highlights/Readwise/Articles/4%20Steps%20to%20Organize%20Your%20Massive%20To-Do%20List/","text":"4 Steps to Organize Your Massive To-Do List \u00b6 Metadata \u00b6 Author: [[kalynbrooke.com]] Full Title: 4 Steps to Organize Your Massive To-Do List Category: #Type/Highlights/Article URL: https://kalynbrooke.com/life-and-style/time-management/brain-dump-101/ Highlights \u00b6 We simply can't fill our brains to the brim and expect it to hold everything well A brain dump is exactly what it sounds like\u2014a chance to get everything out of your brain and onto paper. You not only create room in that pretty little head of yours, you process and organize exactly what you need to do going forward. How to Brain Dump In it's purest form, brain-dumping is simply creating a list of unconnected thoughts on a page. I like to make a list of bullet points, then jot a thought or sentence next to each one. If I have more to say regarding a specific bullet, I just keep writing. If I have something to add a little later down the page, I will draw an arrow back to the original thought. Quick Note: Don't worry about being organized at this point. Just write. It's okay to be messy, because we are going to process everything later! How to Process Your Brain Dump After your brain dump is complete, take a quick break so you can come back with a fresh perspective. Then it's time to get organized. Delete. Delete. Delete. I'll let you in on a little secret\u2014you do not have to accomplish everything that comes out of your head. In fact, I would encourage you not too! Select a Red or Black pen, and cross off anything that is not reasonable for you to do. If it's a legitimate \u201csomeday\u201d task, keep it. But it's better to be ruthless now than later. Pull out a blank page and draw four quadrants. Label them as follows: A) Urgent and Important \u2013 Tasks that go here are your first priority and should be accomplished within the next few weeks. B) Important, but Not Urgent \u2013 Tasks that need to get done, but don't need to be done right away. C) Urgent, but Not Important \u2013 Tasks that seem urgent {like email and social media}, but really are not that important. D) Not Urgent, and Not Important \u2013 Consider deleting or adding to your \u201cSomeday\u201d list. Migrate all relevant tasks from your Brain Dump over to this Task Management Page. Do this until all tasks are written down in their specific quadrants according to color. If you have a lot of tasks in a specific category {like Home}, you may want to create a single Task Management Page for that category.","title":"4 Steps to Organize Your Massive To-Do List"},{"location":"Highlights/Readwise/Articles/4%20Steps%20to%20Organize%20Your%20Massive%20To-Do%20List/#4-steps-to-organize-your-massive-to-do-list","text":"","title":"4 Steps to Organize Your Massive To-Do List"},{"location":"Highlights/Readwise/Articles/4%20Steps%20to%20Organize%20Your%20Massive%20To-Do%20List/#metadata","text":"Author: [[kalynbrooke.com]] Full Title: 4 Steps to Organize Your Massive To-Do List Category: #Type/Highlights/Article URL: https://kalynbrooke.com/life-and-style/time-management/brain-dump-101/","title":"Metadata"},{"location":"Highlights/Readwise/Articles/4%20Steps%20to%20Organize%20Your%20Massive%20To-Do%20List/#highlights","text":"We simply can't fill our brains to the brim and expect it to hold everything well A brain dump is exactly what it sounds like\u2014a chance to get everything out of your brain and onto paper. You not only create room in that pretty little head of yours, you process and organize exactly what you need to do going forward. How to Brain Dump In it's purest form, brain-dumping is simply creating a list of unconnected thoughts on a page. I like to make a list of bullet points, then jot a thought or sentence next to each one. If I have more to say regarding a specific bullet, I just keep writing. If I have something to add a little later down the page, I will draw an arrow back to the original thought. Quick Note: Don't worry about being organized at this point. Just write. It's okay to be messy, because we are going to process everything later! How to Process Your Brain Dump After your brain dump is complete, take a quick break so you can come back with a fresh perspective. Then it's time to get organized. Delete. Delete. Delete. I'll let you in on a little secret\u2014you do not have to accomplish everything that comes out of your head. In fact, I would encourage you not too! Select a Red or Black pen, and cross off anything that is not reasonable for you to do. If it's a legitimate \u201csomeday\u201d task, keep it. But it's better to be ruthless now than later. Pull out a blank page and draw four quadrants. Label them as follows: A) Urgent and Important \u2013 Tasks that go here are your first priority and should be accomplished within the next few weeks. B) Important, but Not Urgent \u2013 Tasks that need to get done, but don't need to be done right away. C) Urgent, but Not Important \u2013 Tasks that seem urgent {like email and social media}, but really are not that important. D) Not Urgent, and Not Important \u2013 Consider deleting or adding to your \u201cSomeday\u201d list. Migrate all relevant tasks from your Brain Dump over to this Task Management Page. Do this until all tasks are written down in their specific quadrants according to color. If you have a lot of tasks in a specific category {like Home}, you may want to create a single Task Management Page for that category.","title":"Highlights"},{"location":"Highlights/Readwise/Articles/5%20Bookmark%20Apps%20to%20Organize%20Links%2C%20Save%20Social%20Posts%2C%20and%20Read%20It%20Later/","text":"5 Bookmark Apps to Organize Links, Save Social Posts, and Read It Later \u00b6 Metadata \u00b6 Author: Full Title: 5 Bookmark Apps to Organize Links, Save Social Posts, and Read It Later Category: #Type/Highlights/Article URL: https://www.makeuseof.com/tag/bookmark-apps-organize-links-save-social-posts-read-later/ Highlights \u00b6 Memex is one of the most powerful bookmark apps to meet the needs of the modern user, who wants to save links while using a phone, tablet, or computer. Install the extension on your browser and the app on your phone. To bookmark a link on the phone, \u201cshare\u201d any link, and from the Share Menu, choose Memex. You can save a link and quickly move on, but it\u2019s best to add tags or put it in a particular collection. That will make it easier to find the link later. Memex also includes built-in annotation and notes, which is a handy feature for researchers. Highlight any part of the page that\u2019s important for you, and add notes for later too. And yes, you can easily export all previous bookmarks from a browser or another service and import them into Memex. Scrapp is a progressive web app (PWA), which means it works offline through browsers like Chrome and Safari on phones and tablets. Once you create an account, you will get a prompt to add it to the home screen. After that, it works just like any phone app, you won\u2019t know the difference. On a desktop browser, you can continue to use it with the extensions. Scrapp makes organizing bookmarks as simple as possible and looks good doing it. It uses auto-tags to add labels to any new bookmarks, based on your current labels. So if a link\u2019s URL, title, description, or text have any similar keywords to labels you\u2019ve already created, it will be easier to find it in the future. The app also has a \u201creading list\u201d mode to add links to. Every day, it will send a notification about how many items you have in your reading list, along with a random link from it. The idea is to not let your \u201cread it later\u201d list pile up too much. Plus, you can read links offline by tapping the \u201cread\u201d button on any bookmark. Ktab is like a souped-up version of OneTab, one of the best browser tab management extensions. In fact, many OneTab users might want to switch to Ktab after reading this comparison, since you are once again mass-saving links in a session, and clearing up memory. PageMarker is a really interesting bookmark manager and organizer because it packages the best features people want from various bookmark apps. Import your current bookmarks into it and get started. The app has both tags and folders, letting you organize bookmarks better than ever before. The free version limits you to five tags and folders, while the premium version makes both unlimited. You can also add notes to any bookmark, in markdown. And there\u2019s a robust search engine to quickly find any link. PageMarker focuses on actually reading your \u201cread it later\u201d items. It attacks the problem in two ways. First, it marks all links in two default folders: Read and Unread. Next, it sends a newsletter of your most recent bookmarks to your inbox, reminding you to read the links rather than letting them saturate. In the free version, you can choose which days of the week you want the newsletter, while the paid version even lets you choose the time. But PageMarker doesn\u2019t yet have extensions or mobile apps, so it\u2019s more an organizer than your main bookmarking tool. You have to visit the website and manually add links. Once extensions and apps come in, it promises to be one of the best bookmark managers out there. Some apps don\u2019t need to do a lot to be just what you\u2019re looking for. Chrome\u2019s bookmark manager is a bit frustrating for power users and lacks a few simple things. Savory tries to fix those limitations as a wrapper for Chrome bookmarks. If you have years and years of unorganized bookmarks, you know that Chrome\u2019s bookmark manager doesn\u2019t have the best search engine. Savory is lightning fast at finding links and auto-tags the websites too. You can also add your own tags to make bookmark management easier. Chrome also doesn\u2019t let you select multiple links to delete them in bulk. It\u2019s one of the most frustrating limitations, but Savory solves that too. A note before you install it: Savory asks you to sign in before it can get to work. It\u2019s unclear why that is, or the privacy implications of it.","title":"5 Bookmark Apps to Organize Links, Save Social Posts, and Read It Later"},{"location":"Highlights/Readwise/Articles/5%20Bookmark%20Apps%20to%20Organize%20Links%2C%20Save%20Social%20Posts%2C%20and%20Read%20It%20Later/#5-bookmark-apps-to-organize-links-save-social-posts-and-read-it-later","text":"","title":"5 Bookmark Apps to Organize Links, Save Social Posts, and Read It Later"},{"location":"Highlights/Readwise/Articles/5%20Bookmark%20Apps%20to%20Organize%20Links%2C%20Save%20Social%20Posts%2C%20and%20Read%20It%20Later/#metadata","text":"Author: Full Title: 5 Bookmark Apps to Organize Links, Save Social Posts, and Read It Later Category: #Type/Highlights/Article URL: https://www.makeuseof.com/tag/bookmark-apps-organize-links-save-social-posts-read-later/","title":"Metadata"},{"location":"Highlights/Readwise/Articles/5%20Bookmark%20Apps%20to%20Organize%20Links%2C%20Save%20Social%20Posts%2C%20and%20Read%20It%20Later/#highlights","text":"Memex is one of the most powerful bookmark apps to meet the needs of the modern user, who wants to save links while using a phone, tablet, or computer. Install the extension on your browser and the app on your phone. To bookmark a link on the phone, \u201cshare\u201d any link, and from the Share Menu, choose Memex. You can save a link and quickly move on, but it\u2019s best to add tags or put it in a particular collection. That will make it easier to find the link later. Memex also includes built-in annotation and notes, which is a handy feature for researchers. Highlight any part of the page that\u2019s important for you, and add notes for later too. And yes, you can easily export all previous bookmarks from a browser or another service and import them into Memex. Scrapp is a progressive web app (PWA), which means it works offline through browsers like Chrome and Safari on phones and tablets. Once you create an account, you will get a prompt to add it to the home screen. After that, it works just like any phone app, you won\u2019t know the difference. On a desktop browser, you can continue to use it with the extensions. Scrapp makes organizing bookmarks as simple as possible and looks good doing it. It uses auto-tags to add labels to any new bookmarks, based on your current labels. So if a link\u2019s URL, title, description, or text have any similar keywords to labels you\u2019ve already created, it will be easier to find it in the future. The app also has a \u201creading list\u201d mode to add links to. Every day, it will send a notification about how many items you have in your reading list, along with a random link from it. The idea is to not let your \u201cread it later\u201d list pile up too much. Plus, you can read links offline by tapping the \u201cread\u201d button on any bookmark. Ktab is like a souped-up version of OneTab, one of the best browser tab management extensions. In fact, many OneTab users might want to switch to Ktab after reading this comparison, since you are once again mass-saving links in a session, and clearing up memory. PageMarker is a really interesting bookmark manager and organizer because it packages the best features people want from various bookmark apps. Import your current bookmarks into it and get started. The app has both tags and folders, letting you organize bookmarks better than ever before. The free version limits you to five tags and folders, while the premium version makes both unlimited. You can also add notes to any bookmark, in markdown. And there\u2019s a robust search engine to quickly find any link. PageMarker focuses on actually reading your \u201cread it later\u201d items. It attacks the problem in two ways. First, it marks all links in two default folders: Read and Unread. Next, it sends a newsletter of your most recent bookmarks to your inbox, reminding you to read the links rather than letting them saturate. In the free version, you can choose which days of the week you want the newsletter, while the paid version even lets you choose the time. But PageMarker doesn\u2019t yet have extensions or mobile apps, so it\u2019s more an organizer than your main bookmarking tool. You have to visit the website and manually add links. Once extensions and apps come in, it promises to be one of the best bookmark managers out there. Some apps don\u2019t need to do a lot to be just what you\u2019re looking for. Chrome\u2019s bookmark manager is a bit frustrating for power users and lacks a few simple things. Savory tries to fix those limitations as a wrapper for Chrome bookmarks. If you have years and years of unorganized bookmarks, you know that Chrome\u2019s bookmark manager doesn\u2019t have the best search engine. Savory is lightning fast at finding links and auto-tags the websites too. You can also add your own tags to make bookmark management easier. Chrome also doesn\u2019t let you select multiple links to delete them in bulk. It\u2019s one of the most frustrating limitations, but Savory solves that too. A note before you install it: Savory asks you to sign in before it can get to work. It\u2019s unclear why that is, or the privacy implications of it.","title":"Highlights"},{"location":"Highlights/Readwise/Articles/5%20Pitfalls%20of%20Being%20an%20Information%20Hoarder%20%20Foolishly%20Creative/","text":"5 Pitfalls of Being an Information Hoarder | Foolishly Creative \u00b6 Metadata \u00b6 Author: Full Title: 5 Pitfalls of Being an Information Hoarder | Foolishly Creative Category: #Type/Highlights/Article URL: https://foolishlycreative.com/5-pitfalls-of-being-an-information-hoarder/ Highlights \u00b6 Do you know the difference between information and knowledge? Do you even understand that there even is a difference? The purpose of this post is to not only draw a clear distinction between information and knowledge but to explain why hoarding too much information can be detrimental to getting your business started. \u201cI would start _ , if I know knew enough about ______.\u201d So how do you know if you\u2019ve overloaded yourself with information? There are 5 tell-tale pitfalls: You are too overwhelmed to effectively consume all of the information you\u2019ve collected. You\u2019ve already forgotten about what you\u2019ve already signed up for. You didn\u2019t find the information, it found you. You\u2019ve spent too much time researching and now you\u2019ve compared yourself to others. You are procrastinating. You are using your alleged lack of knowledge as an excuse. How do you get back on track? Sort through the information you\u2019ve collected (and probably paid for). Categorize it and save it for when you need it. Make a list of the skills you need right now. What\u2019s the most effective way to obtain those skills? This will likely not be the cheapest. Seek an expert/coach/mentor to help you identify the fastest way to do what you need to do. Surf the internet (and social media) with caution. Beware of free downloads that you don\u2019t need. Unsubscribe from emails that aren\u2019t useful. Look through your book collection (can you sell or give some away)? Look at your e-books. Can you organize and make time to read? Carve out time to read only what is useful in the present moment. Realize that you are enough. There is someone that is waiting to be your client with the knowledge that you have now. Remember, information is just data that has been defined, interpreted, and analyzed by someone else. Knowledge and experience are only gained by what you do with what you know. Ready to do something with your knowledge, life experience, and talents? If you have a business, you need a (better) website. Partner with me instead of spending time doing it yourself. Tags: [[favorite]]","title":"5 Pitfalls of Being an Information Hoarder | Foolishly Creative"},{"location":"Highlights/Readwise/Articles/5%20Pitfalls%20of%20Being%20an%20Information%20Hoarder%20%20Foolishly%20Creative/#5-pitfalls-of-being-an-information-hoarder-foolishly-creative","text":"","title":"5 Pitfalls of Being an Information Hoarder | Foolishly Creative"},{"location":"Highlights/Readwise/Articles/5%20Pitfalls%20of%20Being%20an%20Information%20Hoarder%20%20Foolishly%20Creative/#metadata","text":"Author: Full Title: 5 Pitfalls of Being an Information Hoarder | Foolishly Creative Category: #Type/Highlights/Article URL: https://foolishlycreative.com/5-pitfalls-of-being-an-information-hoarder/","title":"Metadata"},{"location":"Highlights/Readwise/Articles/5%20Pitfalls%20of%20Being%20an%20Information%20Hoarder%20%20Foolishly%20Creative/#highlights","text":"Do you know the difference between information and knowledge? Do you even understand that there even is a difference? The purpose of this post is to not only draw a clear distinction between information and knowledge but to explain why hoarding too much information can be detrimental to getting your business started. \u201cI would start _ , if I know knew enough about ______.\u201d So how do you know if you\u2019ve overloaded yourself with information? There are 5 tell-tale pitfalls: You are too overwhelmed to effectively consume all of the information you\u2019ve collected. You\u2019ve already forgotten about what you\u2019ve already signed up for. You didn\u2019t find the information, it found you. You\u2019ve spent too much time researching and now you\u2019ve compared yourself to others. You are procrastinating. You are using your alleged lack of knowledge as an excuse. How do you get back on track? Sort through the information you\u2019ve collected (and probably paid for). Categorize it and save it for when you need it. Make a list of the skills you need right now. What\u2019s the most effective way to obtain those skills? This will likely not be the cheapest. Seek an expert/coach/mentor to help you identify the fastest way to do what you need to do. Surf the internet (and social media) with caution. Beware of free downloads that you don\u2019t need. Unsubscribe from emails that aren\u2019t useful. Look through your book collection (can you sell or give some away)? Look at your e-books. Can you organize and make time to read? Carve out time to read only what is useful in the present moment. Realize that you are enough. There is someone that is waiting to be your client with the knowledge that you have now. Remember, information is just data that has been defined, interpreted, and analyzed by someone else. Knowledge and experience are only gained by what you do with what you know. Ready to do something with your knowledge, life experience, and talents? If you have a business, you need a (better) website. Partner with me instead of spending time doing it yourself. Tags: [[favorite]]","title":"Highlights"},{"location":"Highlights/Readwise/Articles/5%20Quotes%20by%20Keanu%20Reeves%20That%20May%20Help%20You%20Live%20an%20Authentic%20and%20Wholesome%20Life/","text":"5 Quotes by Keanu Reeves That May Help You Live an Authentic and Wholesome Life \u00b6 Metadata \u00b6 Author: [[Jaleel & Nicole]] Full Title: 5 Quotes by Keanu Reeves That May Help You Live an Authentic and Wholesome Life Category: #Type/Highlights/Article URL: https://medium.com/p/d2a51d80a9d9 Highlights \u00b6 With that in mind, here are some of my favorite quotes from Keanu Reeves that perfectly encapsulates how to live an authentic and wholesome life. Hopefully, by the end, you\u2019ll be moved to apply these lessons to your life as well. \u201cSometimes we get so caught up in our daily lives that we forget to take the time out to enjoy the beauty in life.\u201d","title":"5 Quotes by Keanu Reeves That May Help You Live an Authentic and Wholesome Life"},{"location":"Highlights/Readwise/Articles/5%20Quotes%20by%20Keanu%20Reeves%20That%20May%20Help%20You%20Live%20an%20Authentic%20and%20Wholesome%20Life/#5-quotes-by-keanu-reeves-that-may-help-you-live-an-authentic-and-wholesome-life","text":"","title":"5 Quotes by Keanu Reeves That May Help You Live an Authentic and Wholesome Life"},{"location":"Highlights/Readwise/Articles/5%20Quotes%20by%20Keanu%20Reeves%20That%20May%20Help%20You%20Live%20an%20Authentic%20and%20Wholesome%20Life/#metadata","text":"Author: [[Jaleel & Nicole]] Full Title: 5 Quotes by Keanu Reeves That May Help You Live an Authentic and Wholesome Life Category: #Type/Highlights/Article URL: https://medium.com/p/d2a51d80a9d9","title":"Metadata"},{"location":"Highlights/Readwise/Articles/5%20Quotes%20by%20Keanu%20Reeves%20That%20May%20Help%20You%20Live%20an%20Authentic%20and%20Wholesome%20Life/#highlights","text":"With that in mind, here are some of my favorite quotes from Keanu Reeves that perfectly encapsulates how to live an authentic and wholesome life. Hopefully, by the end, you\u2019ll be moved to apply these lessons to your life as well. \u201cSometimes we get so caught up in our daily lives that we forget to take the time out to enjoy the beauty in life.\u201d","title":"Highlights"},{"location":"Highlights/Readwise/Articles/5%20Steps%20for%20Tracking%20Your%20Monthly%20Expenses%20-%20NerdWallet/","text":"5 Steps for Tracking Your Monthly Expenses - NerdWallet \u00b6 Metadata \u00b6 Author: [[nerdwallet.com]] Full Title: 5 Steps for Tracking Your Monthly Expenses - NerdWallet Category: #Type/Highlights/Article URL: https://www.nerdwallet.com/article/finance/tracking-monthly-expenses Highlights \u00b6 Check your account statements ( View Highlight ) Pinpoint your money habits by taking inventory of all of your accounts, including your checking account and all credit cards you have. Looking at your accounts will help you identify where you\u2019re spending. ( View Highlight ) Categorize your expenses ( View Highlight ) Start grouping your expenses. Some credit cards automatically tag your purchases in categories like department store or automotive ( View Highlight )","title":"5 Steps for Tracking Your Monthly Expenses - NerdWallet"},{"location":"Highlights/Readwise/Articles/5%20Steps%20for%20Tracking%20Your%20Monthly%20Expenses%20-%20NerdWallet/#5-steps-for-tracking-your-monthly-expenses-nerdwallet","text":"","title":"5 Steps for Tracking Your Monthly Expenses - NerdWallet"},{"location":"Highlights/Readwise/Articles/5%20Steps%20for%20Tracking%20Your%20Monthly%20Expenses%20-%20NerdWallet/#metadata","text":"Author: [[nerdwallet.com]] Full Title: 5 Steps for Tracking Your Monthly Expenses - NerdWallet Category: #Type/Highlights/Article URL: https://www.nerdwallet.com/article/finance/tracking-monthly-expenses","title":"Metadata"},{"location":"Highlights/Readwise/Articles/5%20Steps%20for%20Tracking%20Your%20Monthly%20Expenses%20-%20NerdWallet/#highlights","text":"Check your account statements ( View Highlight ) Pinpoint your money habits by taking inventory of all of your accounts, including your checking account and all credit cards you have. Looking at your accounts will help you identify where you\u2019re spending. ( View Highlight ) Categorize your expenses ( View Highlight ) Start grouping your expenses. Some credit cards automatically tag your purchases in categories like department store or automotive ( View Highlight )","title":"Highlights"},{"location":"Highlights/Readwise/Articles/5%20Useful%20Golang%20Modules%20Developers%20Should%20Know%20in%202021-2/","text":"5 Useful Golang Modules Developers Should Know in 2021 \u00b6 Metadata \u00b6 Author: [[Bryan Dijkhuizen]] Full Title: 5 Useful Golang Modules Developers Should Know in 2021 Category: #Type/Highlights/Article URL: https://medium.com/p/340ed21177e5 Highlights \u00b6 Etcd is a reliable distributed key-value store.","title":"5 Useful Golang Modules Developers Should Know in 2021"},{"location":"Highlights/Readwise/Articles/5%20Useful%20Golang%20Modules%20Developers%20Should%20Know%20in%202021-2/#5-useful-golang-modules-developers-should-know-in-2021","text":"","title":"5 Useful Golang Modules Developers Should Know in 2021"},{"location":"Highlights/Readwise/Articles/5%20Useful%20Golang%20Modules%20Developers%20Should%20Know%20in%202021-2/#metadata","text":"Author: [[Bryan Dijkhuizen]] Full Title: 5 Useful Golang Modules Developers Should Know in 2021 Category: #Type/Highlights/Article URL: https://medium.com/p/340ed21177e5","title":"Metadata"},{"location":"Highlights/Readwise/Articles/5%20Useful%20Golang%20Modules%20Developers%20Should%20Know%20in%202021-2/#highlights","text":"Etcd is a reliable distributed key-value store.","title":"Highlights"},{"location":"Highlights/Readwise/Articles/5%20Useful%20Golang%20Modules%20Developers%20Should%20Know%20in%202021/","text":"5 Useful Golang Modules Developers Should Know in 2021 \u00b6 Metadata \u00b6 Author: [[Emmy Chamberlain]] Full Title: 5 Useful Golang Modules Developers Should Know in 2021 Category: #Type/Highlights/Article URL: https://medium.com/p/340ed21177e5 Highlights \u00b6 Etcd is a reliable distributed key-value store.","title":"5 Useful Golang Modules Developers Should Know in 2021"},{"location":"Highlights/Readwise/Articles/5%20Useful%20Golang%20Modules%20Developers%20Should%20Know%20in%202021/#5-useful-golang-modules-developers-should-know-in-2021","text":"","title":"5 Useful Golang Modules Developers Should Know in 2021"},{"location":"Highlights/Readwise/Articles/5%20Useful%20Golang%20Modules%20Developers%20Should%20Know%20in%202021/#metadata","text":"Author: [[Emmy Chamberlain]] Full Title: 5 Useful Golang Modules Developers Should Know in 2021 Category: #Type/Highlights/Article URL: https://medium.com/p/340ed21177e5","title":"Metadata"},{"location":"Highlights/Readwise/Articles/5%20Useful%20Golang%20Modules%20Developers%20Should%20Know%20in%202021/#highlights","text":"Etcd is a reliable distributed key-value store.","title":"Highlights"},{"location":"Highlights/Readwise/Articles/6%20Windows%20Apps%20That%20Automatically%20Organize%20Files%20for%20You/","text":"6 Windows Apps That Automatically Organize Files for You \u00b6 Metadata \u00b6 Author: Full Title: 6 Windows Apps That Automatically Organize Files for You Category: #Type/Highlights/Article URL: https://www.makeuseof.com/tag/automatically-organize-files-windows/ Highlights \u00b6 The only way to overcome information overload is to put everything in its place on arrival After organizing a file, you can tell File juggler to upload the file in Evernote. Select the notebook you want and add tags to the notes. There is a separate tab called Log to help you keep track and check if it\u2019s working correctly or not. Listary is an excellent search utility app to quickly find files. Listary seamlessly integrates with Open and Save Dialog Box to quickly open and save files. You can search for files to open within any app that uses the Open File dialog. Use the Quick Switch hotkey to instantly jump to the folder of the file you\u2019re working with. Open files faster without manually navigating the Open File dialog. You can set custom keywords for any number of folders. Search for files only in that folder. Create shortcuts to files, folders, and apps you use frequently.","title":"6 Windows Apps That Automatically Organize Files for You"},{"location":"Highlights/Readwise/Articles/6%20Windows%20Apps%20That%20Automatically%20Organize%20Files%20for%20You/#6-windows-apps-that-automatically-organize-files-for-you","text":"","title":"6 Windows Apps That Automatically Organize Files for You"},{"location":"Highlights/Readwise/Articles/6%20Windows%20Apps%20That%20Automatically%20Organize%20Files%20for%20You/#metadata","text":"Author: Full Title: 6 Windows Apps That Automatically Organize Files for You Category: #Type/Highlights/Article URL: https://www.makeuseof.com/tag/automatically-organize-files-windows/","title":"Metadata"},{"location":"Highlights/Readwise/Articles/6%20Windows%20Apps%20That%20Automatically%20Organize%20Files%20for%20You/#highlights","text":"The only way to overcome information overload is to put everything in its place on arrival After organizing a file, you can tell File juggler to upload the file in Evernote. Select the notebook you want and add tags to the notes. There is a separate tab called Log to help you keep track and check if it\u2019s working correctly or not. Listary is an excellent search utility app to quickly find files. Listary seamlessly integrates with Open and Save Dialog Box to quickly open and save files. You can search for files to open within any app that uses the Open File dialog. Use the Quick Switch hotkey to instantly jump to the folder of the file you\u2019re working with. Open files faster without manually navigating the Open File dialog. You can set custom keywords for any number of folders. Search for files only in that folder. Create shortcuts to files, folders, and apps you use frequently.","title":"Highlights"},{"location":"Highlights/Readwise/Articles/6%20YAML%20Features%20Most%20Programmers%20Don%E2%80%99t%20Know/","text":"6 YAML Features Most Programmers Don\u2019t Know \u00b6 Metadata \u00b6 Author: [[Martin Thoma]] Full Title: 6 YAML Features Most Programmers Don\u2019t Know Category: #Type/Highlights/Article URL: https://medium.com/p/164762343af3 Highlights \u00b6 This no is interpreted as false . You need to write \"no\" or 'no' . Now you might want to insert a password to the dev and prod settings. You can do that by using the merge key<< : The double bang !! has a special meaning in YAML. It is called \u201csecondary tag handle\u201d and a shorthand for !tag:yaml.org,2002: (source).","title":"6 YAML Features Most Programmers Don\u2019t Know"},{"location":"Highlights/Readwise/Articles/6%20YAML%20Features%20Most%20Programmers%20Don%E2%80%99t%20Know/#6-yaml-features-most-programmers-dont-know","text":"","title":"6 YAML Features Most Programmers Don\u2019t Know"},{"location":"Highlights/Readwise/Articles/6%20YAML%20Features%20Most%20Programmers%20Don%E2%80%99t%20Know/#metadata","text":"Author: [[Martin Thoma]] Full Title: 6 YAML Features Most Programmers Don\u2019t Know Category: #Type/Highlights/Article URL: https://medium.com/p/164762343af3","title":"Metadata"},{"location":"Highlights/Readwise/Articles/6%20YAML%20Features%20Most%20Programmers%20Don%E2%80%99t%20Know/#highlights","text":"This no is interpreted as false . You need to write \"no\" or 'no' . Now you might want to insert a password to the dev and prod settings. You can do that by using the merge key<< : The double bang !! has a special meaning in YAML. It is called \u201csecondary tag handle\u201d and a shorthand for !tag:yaml.org,2002: (source).","title":"Highlights"},{"location":"Highlights/Readwise/Articles/62%20Productive%20Things%20to%20Do%20When%20Bored%20at%20Home/","text":"62 Productive Things to Do When Bored at Home \u00b6 Metadata \u00b6 Author: [[quickbooost.com]] Full Title: 62 Productive Things to Do When Bored at Home Category: #Type/Highlights/Article URL: https://quickbooost.com/productive-things-to-do-when-bored/ Highlights \u00b6 I recently completed David Allen\u2019s book, Getting Things Done. I read it as part of my goal to complete at least two books each month and found it to be quite insightful. Among other lessons, one thing I took away from it was the concept of a bored list. The premise behind it is simple: Create a list of tasks that you can do when you\u2019re bored Next time you\u2019re bored, look at that list and work through it So, I pulled up my bored list. And one of the tasks on my list was to transfer photos from my phone into the cloud. Something super easy and mindless. I took action. No show was going to hold my attention anyways. I just wasn\u2019t in the mood for it. But instead of wasting my time by complaining or going on Snapchat, I used it productively. I transferred my photos, checked an item off my list while still relaxing, and made good use of that excess energy. My bored list sits at the top of my schedule. And when I\u2019m bored, it\u2019s the place I go to use that time well. You can put your list anywhere though. The where doesn\u2019t matter as long as you know where to find it. Note: Before you can be productive, you first need to understand what it is that you want (so that you move in the right direction) Productive things to do when bored at home (by category) Productive things to do: Improve yourself incremental improvements each and every day and continuously leveling yourself up. Whether you\u2019re looking for productive things to do at work, home, or while stuck in line somewhere, personal development is a great place to start Learn something new One of the best things to do to be productive when bored is to learn something new. Whether that means: Reading a book Going through a course on goal success Or reviewing that article you\u2019ve been meaning to check out There is no better investment for your boredom than learning. Productive things to do: Hone your talent What are you good at? How can you get even better? Determine your strengths and work on building them up even more. One area that I\u2019ve recently been improving on is my reading ability. As a former slow reader, I\u2019ve been practicing speed reading this year and have witnessed some great results because of it. Read Although mentioned in number one above, reading is really an item all its own. There are so many amazing books out there. Ones with adventure, wisdom, emotion, and more. When you\u2019re bored (especially at home on a rainy day), I highly recommend picking up a book Productive things to do: Visit the library Go to a museum Productive things to do: Make a playlist Listen to a podcast Productive things to do: Learn from mistakes Have a misstep that you keep revisiting in your head over and over again? See it as a lesson to be learned. Create a new note on your phone and write down: What you wanted to happen What actually happened And how you will do things differently next time This is something I will be doing myself as I finish the book Failing Forward by John C. Maxwell (where I originally came across the idea). Set goals Goal setting is incredibly important. It adds a direction to your time, a focus. Without it, you can be productive but lost. Like a ship without a compass or map. If you want to be more deliberate about your time, I can\u2019t recommend goal setting enough. I know it can be challenging though. In fact, here\u2019s a post about my (many) struggles with goal setting. Productive things to do: Write a letter to your future self Here\u2019s one of the more fun productive things to do \u2013 write a letter to yourself. I wrote one to myself a few years back and will have it locked away for a total of 10 years. Part time-capsule of my life in that moment, part prediction for what I hope my future will look like, the letter is patiently waiting to be opened and enjoyed. Productive things to do: Try something new Doing new things is an excellent way to learn and grow. By pushing yourself out of your comfort zone, or by testing out new things that interest you, you open yourself up to a whole slew of new opportunities. It doesn\u2019t matter if you\u2019re looking for productive things to do at home, on vacation, or in some other locale, there are many unique things that you could be trying out right now. Take a look at the list below and get inspired to experience something new. Change your morning routine If you\u2019ve been in a rut lately, consider changing your morning routine. After all, your morning routine is the first impression of your day. The better the morning, the better your afternoon and evening will be. Productive things to do: Create an evening routine Don\u2019t have a bedtime ritual? You probably do but don\u2019t realize it. Your evening routine is the last impression of your day and sets you up for success tomorrow. So don\u2019t neglect it. If you\u2019re bored and want to switch things up, change up your night routine. Try stargazing If you have a good vantage point or live in an area without too much interfering light, try stargazing. Do some research beforehand on what to look for and then go out and enjoy the vastness of space. Productive things to do: Go camping Here\u2019s one of the more adventurous and productive things to do at home when bored \u2013 plan a camping trip. You don\u2019t necessarily need to go on it right now, but you can start planning for it. Give yourself something fun to look forward to. Gather supplies, get your gear ready, and then go out and enjoy yourself. You\u2019ll feel much closer to nature and will get a much-needed rest from technology for the night. Venture outside Take a break from work, regain some balance, and try something new outside. Maybe do a little yoga on the lawn. Maybe try going on a hike. Explore your interests and tackle an activity that you\u2019ve never tried before. Productive things to do: Watch tutorials Speaking of interests, now\u2019s a great time to explore them. Is there some activity that you\u2019ve always wanted to try but never learned how? Like the previously mentioned yoga? Go on YouTube, find a video, and start doing it. Learn a foreign language Along those same lines, you can apply the principles from number 16 to learning a foreign language as well. Then, as you begin to master that language\u2026 Keep one plant alive This is probably one of the stranger productive things to do, but bear with me. I currently have three plants that I\u2019m growing right now and it\u2019s\u2026 well\u2026 oddly rewarding. You can spend time researching the plants you want and how to take care of them. You can purchase them and begin nourishing them. And from there you can watch them grow. Start with just one plant and see how you do! *Note: In case you\u2019re curious, I use an app called Planta for information about watering schedules. And the plants I currently have are: Lucky bamboo Peace lily And bird\u2019s nest fern Note: Need to get a plant - added to Todoist Productive things to do: Start a bullet journal If you don\u2019t currently have a system in place for note-taking, planning, or thought-jotting, consider starting a bullet journal. Here are a few ideas to help you get started Productive things to do: Invest in your future Looking ahead and creating a plan for it is one of the best ways that you can spend your downtime. Plus, it\u2019s fun to do! Consider where you are today and imagine where you\u2019d like to be tomorrow. Then with your plan of the future ready, you can start to take action and move forward in that direction. Here are some productive things to do to help create a brighter future for yourself. Learn how to grow your money Or at the very least, get a retirement account set up. It\u2019s one of those productive things to do in life that will pay off massively as you approach the future. Now, I know this topic can feel overwhelmingly complex and time-consuming \u2013 but hey \u2013 you\u2019re bored so why not take a few minutes to look into it? Productive things to do: Again, set some goals Please, for my sake, if you haven\u2019t set any goals in your life yet, do me a favor and set some. You will be surprised by how much of an impact they will make on your future. Spend time with those that push and challenge you Do you have a friend that is super motivating? That when you end your time together you: Get in your car Pull up a new note on your phone Jot down a ton of ideas And can\u2019t wait to get home to start implementing them? If you have someone in your life like that, call them. Right now. That\u2019ll put an end to your boredom, but more importantly, it will give you a nice lift in inspiration. Productive things to do: Meet up with someone that you can learn from Here\u2019s one of the more useful things to do when bored \u2013 find someone to learn from. I love meeting new people that I can learn from. It\u2019s like eating at an upscale buffet, but for my mind. It\u2019s so satisfying and always leaves me feeling inspired and motivated to put that newfound knowledge into action. So if you\u2019re bored, see if there\u2019s someone of interest that you can reach out to and learn from. *Note: I found Judy Robinett\u2019s book, How to Be a Power Connector, to be quite helpful on this matter. Start a side project Also known as a side hustle or side business, this is a great way to earn some extra money and pursue your larger goals \u2013 all while warding off boredom. Now, I\u2019ve started a lot of side projects \u2013 many of which have failed. But I learned a great deal from those experiences and have continued to use those lessons as I move forward. In fact, QuickBooost (what you\u2019re reading right now), started off as a side project and is now my full-time gig. If you have an entrepreneurial spirit, starting a side project is a great productive thing to do when bored. Productive things to do: Test out new time management strategies While you\u2019re bored, why not try out a new time management strategy or two? That way you can spend more time doing what you enjoy \u2013 and less on what you don\u2019t. Check out my post here for some strategies to test. Create a plan to pay off debt It seems like many of the things to do that are productive with your time include evaluating your finances. And no task is more important in that regard than creating a plan to pay off any debts that you owe. Consider how much you make (monthly), how much you spend (monthly), and how you can use that extra income to pay off your bills. Productive things to do: Create a list of travel destinations It doesn\u2019t matter if you\u2019re not traveling at this very moment, you can still use this time to get excited about the future. So pull up a note on your phone, do a little digging through Lonely Planet or Pinterest, and start listing all of the amazing places you will travel to. Then\u2026 start planning the trips! Try some productivity hacks This productive thing to do is similar to number 27, but that\u2019s ok. Productivity hacks are just as valuable as time management strategies. That said, you can see my post on hacks here. Productive things to do: Start planning your days If you\u2019re not already a planner, I highly recommend that you become one. Because when combined with your goals, having a plan for your time allows you to focus on things that actually matter. Productive things to do: Have fun One of my favorite productive things to do is simple \u2013 do something fun! It\u2019s similar to the previous section (Try something new), except doing something fun doesn\u2019t necessarily need to be something original. As long as you find joy in doing it, that\u2019s a great use of your time. Here are some productive things to do with that in mind. Productive things to do: Go for a bike ride somewhere scenic Productive things to do: Share your knowledge Here\u2019s another of the fun productive things to do at home if you\u2019re bored\u2026 make a how-to video for YouTube and share your knowledge with the world. Best case, you help someone. Worst case, you spend a few hours doing something fun. Challenge yourself to get out of your comfort zone Is there something you know you should do but have been putting it off? Now\u2019s a great time for it. Start a new hobby I love to read. I\u2019ve noticed other common hobbies include: Woodworking Guitar playing Hiking Knitting Golfing Running Bread making Productive things to do: Become a better decision maker Umm\u2026 how is making decisions fun? Ya, that\u2019s a solid question. Here\u2019s your answer \u2013 the better you are at making decisions, the less friction you will have in your life. So by enhancing that skill, you are removing much discomfort down the road, thus allowing yourself to have more future fun. Here\u2019s my post on becoming a better decision maker. Productive things to do: Better your health One of the best uses of your time, and one of the top productive things to do, is to get healthy. Whether that means striving for a healthier mind or body, being healthy allows you to feel better, look better, and do better. Plus, you will have more energy. Energy that you can use to work towards your goals. With that in mind, here are some productive things you can do to get healthier. Watch the sunrise (or sunset) This is one of those productive things to do outside that is great for contemplation and relaxation. Grab a chair, put in your headphones along with some music that you love, and watch the sun move through the sky. Productive things to do: Go for a swim Pretty straightforward \u2013 swimming is a great form of exercise. Try it out. Take a walk What are some productive things to do? Things that are particularly easy and beneficial? Here\u2019s one \u2013 get outside and take a walk. Walking always helps clear my mind and see problems in a new way. Oh and while on your walk, tell yourself 20 things that you are grateful for. Try it and see how you feel. Productive things to do: Go airplane mode If you want to know what to do to be productive, here\u2019s another great idea \u2013 put your phone on airplane mode. Take a break from the constant notifications and give yourself the chance to focus on whatever is most important to you. Take a nap Don\u2019t take one because you\u2019re procrastinating though. In that case, you\u2019re better off just doing your work. But if you\u2019re bored, having nothing to do, and are having a tough time keeping your eyes open, try taking a short power nap. Productive things to do: Go for a hike Similar to number 15, one of my favorite productive things to do is to get outside into nature. Explore a new trail away from your boring house. Try something new physically Here\u2019s one of the more challenging things to do to feel productive \u2013 do a new physical activity. Make a list of four or five exercises you always wanted to partake in and then make it happen. Some ideas include: Yoga Hiking Surfing Skiing Weight lifting Meditating Productive things to do: Envision your ideal body Imagine what your ideal body looks like. Are you a little trimmer? Or maybe a little bigger and stronger? Consider what would make you feel most confident and then create a plan to make it happen. Create a new food regime If you have a regular routine that you follow, you likely eat similar foods each day. If that is the case, one of the smartest and productive things to do when you\u2019re bored is to reevaluate your meals. Look at your average breakfast. Is it as healthy as it can be? Or is there something small that you can sub out to make it healthier? For example, I used to eat flavored greek yogurt each morning but now eat plain greek yogurt with a little cinnamon; fewer calories, fewer ingredients. Do that across all your meals and watch how much better you feel. Productive things to do: Clear out your mental clutter When I have a lot of thoughts bouncing around in my head, I write them down. I get everything out of my brain and onto paper so that I can focus. Then at the end of each day, I look at that list, organize it, and move each item to its rightful home. I highly recommend doing this if you feel like you have a lot of ideas bouncing around in your head. Productive things to do: Get organized I love putting things in their place and preparing for whatever I need to do next. Whether that\u2019s planning out my day or clearing off my desk, I find getting organized to be a satisfying activity. With that in mind, here are some various ways that you can get organized in your own life. Create email templates Create email templates for both your personal and professional emails. It will save you so much time \u2013 especially if you often find yourself repeating the same messages over and over. *Bonus: If you like that, here are some other things to try. Productive things to do: Clean out your junk drawer What productive things can I do at home? This one is a must! You definitely have some drawer or cabinet filled with junk in your house. Put on some music, get a trash bag ready, and clean it out. Productive things to do: Prep your meals for the week Hey look! Another (of the many) useful things to do at home \u2013 get your meals ready for the week. Or at the very least, plan for what meals you will have. That way there will be no surprises and no wasted time scrambling to figure out what to scramble. Plan out your week Every Sunday, I sit down and plan out my week. I look at my goals, check out my calendar, and map out each day. Doing so has allowed me to go into my weeks with focus and determination. You can learn more about my Sunday practices here. Productive things to do: Make backups of everything If you\u2019re still wondering how to be productive at home when bored, try this \u2013 make a backup of everything digitally important to you. Sync your data with the cloud, get your laptop backed up. Do whatever you need to do to get the peace of mind that comes with knowing that you have copies of everything important. Organize your phone What to do to be productive at home, you ask? Here\u2019s an easy one \u2013 organize the apps on your phone. I bet you don\u2019t use all of the apps on your phone. In fact, you probably only use a fraction. Delete the ones you aren\u2019t using and remove the excess clutter. Productive things to do: Get your goals in order To add to the list of things to do to be productive at home, be sure to check in on your goals. Consider: Are they still positively serving you? Are you making the progress that you want? Do you need to make any adjustments? Evaluate your goals and decide if you need to change anything up. Productive things to do when you are bored at home That\u2019s it! You\u2019ve made it through the entire list of productive things to do when bored at home. I know there\u2019s a lot to go through so to make it a little easier, here is what I suggest you tackle from each category: Improve yourself \u2013 Read Try something new \u2013 Keep one plant alive Invest in your future \u2013 Again, set some goals Have fun \u2013 Make a new dish Better your health \u2013 Take a walk Get organized \u2013 Plan out your week If you even do a quarter of the things I just listed, you will surely eliminate boredom and positively set yourself up for a better future. Productive things to do moving forward There are a lot of productive things to do when bored. Start working toward something amazing today and give one of the activities above a try. With each new experience, you\u2019ll learn more about yourself. In time, you\u2019ll formulate an even better understanding of what motivates and inspires you. And with those ideas in mind, you can create new goals and start building a better future off of that. So say goodbye to boredom and say hello to a more fulfilled life.","title":"62 Productive Things to Do When Bored at Home"},{"location":"Highlights/Readwise/Articles/62%20Productive%20Things%20to%20Do%20When%20Bored%20at%20Home/#62-productive-things-to-do-when-bored-at-home","text":"","title":"62 Productive Things to Do When Bored at Home"},{"location":"Highlights/Readwise/Articles/62%20Productive%20Things%20to%20Do%20When%20Bored%20at%20Home/#metadata","text":"Author: [[quickbooost.com]] Full Title: 62 Productive Things to Do When Bored at Home Category: #Type/Highlights/Article URL: https://quickbooost.com/productive-things-to-do-when-bored/","title":"Metadata"},{"location":"Highlights/Readwise/Articles/62%20Productive%20Things%20to%20Do%20When%20Bored%20at%20Home/#highlights","text":"I recently completed David Allen\u2019s book, Getting Things Done. I read it as part of my goal to complete at least two books each month and found it to be quite insightful. Among other lessons, one thing I took away from it was the concept of a bored list. The premise behind it is simple: Create a list of tasks that you can do when you\u2019re bored Next time you\u2019re bored, look at that list and work through it So, I pulled up my bored list. And one of the tasks on my list was to transfer photos from my phone into the cloud. Something super easy and mindless. I took action. No show was going to hold my attention anyways. I just wasn\u2019t in the mood for it. But instead of wasting my time by complaining or going on Snapchat, I used it productively. I transferred my photos, checked an item off my list while still relaxing, and made good use of that excess energy. My bored list sits at the top of my schedule. And when I\u2019m bored, it\u2019s the place I go to use that time well. You can put your list anywhere though. The where doesn\u2019t matter as long as you know where to find it. Note: Before you can be productive, you first need to understand what it is that you want (so that you move in the right direction) Productive things to do when bored at home (by category) Productive things to do: Improve yourself incremental improvements each and every day and continuously leveling yourself up. Whether you\u2019re looking for productive things to do at work, home, or while stuck in line somewhere, personal development is a great place to start Learn something new One of the best things to do to be productive when bored is to learn something new. Whether that means: Reading a book Going through a course on goal success Or reviewing that article you\u2019ve been meaning to check out There is no better investment for your boredom than learning. Productive things to do: Hone your talent What are you good at? How can you get even better? Determine your strengths and work on building them up even more. One area that I\u2019ve recently been improving on is my reading ability. As a former slow reader, I\u2019ve been practicing speed reading this year and have witnessed some great results because of it. Read Although mentioned in number one above, reading is really an item all its own. There are so many amazing books out there. Ones with adventure, wisdom, emotion, and more. When you\u2019re bored (especially at home on a rainy day), I highly recommend picking up a book Productive things to do: Visit the library Go to a museum Productive things to do: Make a playlist Listen to a podcast Productive things to do: Learn from mistakes Have a misstep that you keep revisiting in your head over and over again? See it as a lesson to be learned. Create a new note on your phone and write down: What you wanted to happen What actually happened And how you will do things differently next time This is something I will be doing myself as I finish the book Failing Forward by John C. Maxwell (where I originally came across the idea). Set goals Goal setting is incredibly important. It adds a direction to your time, a focus. Without it, you can be productive but lost. Like a ship without a compass or map. If you want to be more deliberate about your time, I can\u2019t recommend goal setting enough. I know it can be challenging though. In fact, here\u2019s a post about my (many) struggles with goal setting. Productive things to do: Write a letter to your future self Here\u2019s one of the more fun productive things to do \u2013 write a letter to yourself. I wrote one to myself a few years back and will have it locked away for a total of 10 years. Part time-capsule of my life in that moment, part prediction for what I hope my future will look like, the letter is patiently waiting to be opened and enjoyed. Productive things to do: Try something new Doing new things is an excellent way to learn and grow. By pushing yourself out of your comfort zone, or by testing out new things that interest you, you open yourself up to a whole slew of new opportunities. It doesn\u2019t matter if you\u2019re looking for productive things to do at home, on vacation, or in some other locale, there are many unique things that you could be trying out right now. Take a look at the list below and get inspired to experience something new. Change your morning routine If you\u2019ve been in a rut lately, consider changing your morning routine. After all, your morning routine is the first impression of your day. The better the morning, the better your afternoon and evening will be. Productive things to do: Create an evening routine Don\u2019t have a bedtime ritual? You probably do but don\u2019t realize it. Your evening routine is the last impression of your day and sets you up for success tomorrow. So don\u2019t neglect it. If you\u2019re bored and want to switch things up, change up your night routine. Try stargazing If you have a good vantage point or live in an area without too much interfering light, try stargazing. Do some research beforehand on what to look for and then go out and enjoy the vastness of space. Productive things to do: Go camping Here\u2019s one of the more adventurous and productive things to do at home when bored \u2013 plan a camping trip. You don\u2019t necessarily need to go on it right now, but you can start planning for it. Give yourself something fun to look forward to. Gather supplies, get your gear ready, and then go out and enjoy yourself. You\u2019ll feel much closer to nature and will get a much-needed rest from technology for the night. Venture outside Take a break from work, regain some balance, and try something new outside. Maybe do a little yoga on the lawn. Maybe try going on a hike. Explore your interests and tackle an activity that you\u2019ve never tried before. Productive things to do: Watch tutorials Speaking of interests, now\u2019s a great time to explore them. Is there some activity that you\u2019ve always wanted to try but never learned how? Like the previously mentioned yoga? Go on YouTube, find a video, and start doing it. Learn a foreign language Along those same lines, you can apply the principles from number 16 to learning a foreign language as well. Then, as you begin to master that language\u2026 Keep one plant alive This is probably one of the stranger productive things to do, but bear with me. I currently have three plants that I\u2019m growing right now and it\u2019s\u2026 well\u2026 oddly rewarding. You can spend time researching the plants you want and how to take care of them. You can purchase them and begin nourishing them. And from there you can watch them grow. Start with just one plant and see how you do! *Note: In case you\u2019re curious, I use an app called Planta for information about watering schedules. And the plants I currently have are: Lucky bamboo Peace lily And bird\u2019s nest fern Note: Need to get a plant - added to Todoist Productive things to do: Start a bullet journal If you don\u2019t currently have a system in place for note-taking, planning, or thought-jotting, consider starting a bullet journal. Here are a few ideas to help you get started Productive things to do: Invest in your future Looking ahead and creating a plan for it is one of the best ways that you can spend your downtime. Plus, it\u2019s fun to do! Consider where you are today and imagine where you\u2019d like to be tomorrow. Then with your plan of the future ready, you can start to take action and move forward in that direction. Here are some productive things to do to help create a brighter future for yourself. Learn how to grow your money Or at the very least, get a retirement account set up. It\u2019s one of those productive things to do in life that will pay off massively as you approach the future. Now, I know this topic can feel overwhelmingly complex and time-consuming \u2013 but hey \u2013 you\u2019re bored so why not take a few minutes to look into it? Productive things to do: Again, set some goals Please, for my sake, if you haven\u2019t set any goals in your life yet, do me a favor and set some. You will be surprised by how much of an impact they will make on your future. Spend time with those that push and challenge you Do you have a friend that is super motivating? That when you end your time together you: Get in your car Pull up a new note on your phone Jot down a ton of ideas And can\u2019t wait to get home to start implementing them? If you have someone in your life like that, call them. Right now. That\u2019ll put an end to your boredom, but more importantly, it will give you a nice lift in inspiration. Productive things to do: Meet up with someone that you can learn from Here\u2019s one of the more useful things to do when bored \u2013 find someone to learn from. I love meeting new people that I can learn from. It\u2019s like eating at an upscale buffet, but for my mind. It\u2019s so satisfying and always leaves me feeling inspired and motivated to put that newfound knowledge into action. So if you\u2019re bored, see if there\u2019s someone of interest that you can reach out to and learn from. *Note: I found Judy Robinett\u2019s book, How to Be a Power Connector, to be quite helpful on this matter. Start a side project Also known as a side hustle or side business, this is a great way to earn some extra money and pursue your larger goals \u2013 all while warding off boredom. Now, I\u2019ve started a lot of side projects \u2013 many of which have failed. But I learned a great deal from those experiences and have continued to use those lessons as I move forward. In fact, QuickBooost (what you\u2019re reading right now), started off as a side project and is now my full-time gig. If you have an entrepreneurial spirit, starting a side project is a great productive thing to do when bored. Productive things to do: Test out new time management strategies While you\u2019re bored, why not try out a new time management strategy or two? That way you can spend more time doing what you enjoy \u2013 and less on what you don\u2019t. Check out my post here for some strategies to test. Create a plan to pay off debt It seems like many of the things to do that are productive with your time include evaluating your finances. And no task is more important in that regard than creating a plan to pay off any debts that you owe. Consider how much you make (monthly), how much you spend (monthly), and how you can use that extra income to pay off your bills. Productive things to do: Create a list of travel destinations It doesn\u2019t matter if you\u2019re not traveling at this very moment, you can still use this time to get excited about the future. So pull up a note on your phone, do a little digging through Lonely Planet or Pinterest, and start listing all of the amazing places you will travel to. Then\u2026 start planning the trips! Try some productivity hacks This productive thing to do is similar to number 27, but that\u2019s ok. Productivity hacks are just as valuable as time management strategies. That said, you can see my post on hacks here. Productive things to do: Start planning your days If you\u2019re not already a planner, I highly recommend that you become one. Because when combined with your goals, having a plan for your time allows you to focus on things that actually matter. Productive things to do: Have fun One of my favorite productive things to do is simple \u2013 do something fun! It\u2019s similar to the previous section (Try something new), except doing something fun doesn\u2019t necessarily need to be something original. As long as you find joy in doing it, that\u2019s a great use of your time. Here are some productive things to do with that in mind. Productive things to do: Go for a bike ride somewhere scenic Productive things to do: Share your knowledge Here\u2019s another of the fun productive things to do at home if you\u2019re bored\u2026 make a how-to video for YouTube and share your knowledge with the world. Best case, you help someone. Worst case, you spend a few hours doing something fun. Challenge yourself to get out of your comfort zone Is there something you know you should do but have been putting it off? Now\u2019s a great time for it. Start a new hobby I love to read. I\u2019ve noticed other common hobbies include: Woodworking Guitar playing Hiking Knitting Golfing Running Bread making Productive things to do: Become a better decision maker Umm\u2026 how is making decisions fun? Ya, that\u2019s a solid question. Here\u2019s your answer \u2013 the better you are at making decisions, the less friction you will have in your life. So by enhancing that skill, you are removing much discomfort down the road, thus allowing yourself to have more future fun. Here\u2019s my post on becoming a better decision maker. Productive things to do: Better your health One of the best uses of your time, and one of the top productive things to do, is to get healthy. Whether that means striving for a healthier mind or body, being healthy allows you to feel better, look better, and do better. Plus, you will have more energy. Energy that you can use to work towards your goals. With that in mind, here are some productive things you can do to get healthier. Watch the sunrise (or sunset) This is one of those productive things to do outside that is great for contemplation and relaxation. Grab a chair, put in your headphones along with some music that you love, and watch the sun move through the sky. Productive things to do: Go for a swim Pretty straightforward \u2013 swimming is a great form of exercise. Try it out. Take a walk What are some productive things to do? Things that are particularly easy and beneficial? Here\u2019s one \u2013 get outside and take a walk. Walking always helps clear my mind and see problems in a new way. Oh and while on your walk, tell yourself 20 things that you are grateful for. Try it and see how you feel. Productive things to do: Go airplane mode If you want to know what to do to be productive, here\u2019s another great idea \u2013 put your phone on airplane mode. Take a break from the constant notifications and give yourself the chance to focus on whatever is most important to you. Take a nap Don\u2019t take one because you\u2019re procrastinating though. In that case, you\u2019re better off just doing your work. But if you\u2019re bored, having nothing to do, and are having a tough time keeping your eyes open, try taking a short power nap. Productive things to do: Go for a hike Similar to number 15, one of my favorite productive things to do is to get outside into nature. Explore a new trail away from your boring house. Try something new physically Here\u2019s one of the more challenging things to do to feel productive \u2013 do a new physical activity. Make a list of four or five exercises you always wanted to partake in and then make it happen. Some ideas include: Yoga Hiking Surfing Skiing Weight lifting Meditating Productive things to do: Envision your ideal body Imagine what your ideal body looks like. Are you a little trimmer? Or maybe a little bigger and stronger? Consider what would make you feel most confident and then create a plan to make it happen. Create a new food regime If you have a regular routine that you follow, you likely eat similar foods each day. If that is the case, one of the smartest and productive things to do when you\u2019re bored is to reevaluate your meals. Look at your average breakfast. Is it as healthy as it can be? Or is there something small that you can sub out to make it healthier? For example, I used to eat flavored greek yogurt each morning but now eat plain greek yogurt with a little cinnamon; fewer calories, fewer ingredients. Do that across all your meals and watch how much better you feel. Productive things to do: Clear out your mental clutter When I have a lot of thoughts bouncing around in my head, I write them down. I get everything out of my brain and onto paper so that I can focus. Then at the end of each day, I look at that list, organize it, and move each item to its rightful home. I highly recommend doing this if you feel like you have a lot of ideas bouncing around in your head. Productive things to do: Get organized I love putting things in their place and preparing for whatever I need to do next. Whether that\u2019s planning out my day or clearing off my desk, I find getting organized to be a satisfying activity. With that in mind, here are some various ways that you can get organized in your own life. Create email templates Create email templates for both your personal and professional emails. It will save you so much time \u2013 especially if you often find yourself repeating the same messages over and over. *Bonus: If you like that, here are some other things to try. Productive things to do: Clean out your junk drawer What productive things can I do at home? This one is a must! You definitely have some drawer or cabinet filled with junk in your house. Put on some music, get a trash bag ready, and clean it out. Productive things to do: Prep your meals for the week Hey look! Another (of the many) useful things to do at home \u2013 get your meals ready for the week. Or at the very least, plan for what meals you will have. That way there will be no surprises and no wasted time scrambling to figure out what to scramble. Plan out your week Every Sunday, I sit down and plan out my week. I look at my goals, check out my calendar, and map out each day. Doing so has allowed me to go into my weeks with focus and determination. You can learn more about my Sunday practices here. Productive things to do: Make backups of everything If you\u2019re still wondering how to be productive at home when bored, try this \u2013 make a backup of everything digitally important to you. Sync your data with the cloud, get your laptop backed up. Do whatever you need to do to get the peace of mind that comes with knowing that you have copies of everything important. Organize your phone What to do to be productive at home, you ask? Here\u2019s an easy one \u2013 organize the apps on your phone. I bet you don\u2019t use all of the apps on your phone. In fact, you probably only use a fraction. Delete the ones you aren\u2019t using and remove the excess clutter. Productive things to do: Get your goals in order To add to the list of things to do to be productive at home, be sure to check in on your goals. Consider: Are they still positively serving you? Are you making the progress that you want? Do you need to make any adjustments? Evaluate your goals and decide if you need to change anything up. Productive things to do when you are bored at home That\u2019s it! You\u2019ve made it through the entire list of productive things to do when bored at home. I know there\u2019s a lot to go through so to make it a little easier, here is what I suggest you tackle from each category: Improve yourself \u2013 Read Try something new \u2013 Keep one plant alive Invest in your future \u2013 Again, set some goals Have fun \u2013 Make a new dish Better your health \u2013 Take a walk Get organized \u2013 Plan out your week If you even do a quarter of the things I just listed, you will surely eliminate boredom and positively set yourself up for a better future. Productive things to do moving forward There are a lot of productive things to do when bored. Start working toward something amazing today and give one of the activities above a try. With each new experience, you\u2019ll learn more about yourself. In time, you\u2019ll formulate an even better understanding of what motivates and inspires you. And with those ideas in mind, you can create new goals and start building a better future off of that. So say goodbye to boredom and say hello to a more fulfilled life.","title":"Highlights"},{"location":"Highlights/Readwise/Articles/7%20Best%20DNS%20Monitoring%20Tools%20%2B%20How%20to%20Monitor%20DNS%20Server%20-%20DNSstuff/","text":"7 Best DNS Monitoring Tools + How to Monitor DNS Server - DNSstuff \u00b6 Metadata \u00b6 Author: [[dnsstuff.com]] Full Title: 7 Best DNS Monitoring Tools + How to Monitor DNS Server - DNSstuff Category: #Type/Highlights/Article URL: https://www.dnsstuff.com/dns-monitoring-software Highlights \u00b6 DNS is one of the most crucial internet services. It\u2019s the communicator and concierge of online experiences. Everything, from the web content you browse and the email and chat services you use to social platforms like Facebook and Instagram, depends on DNS functioning on a round-the-clock basis. Given its importance, it\u2019s no surprise this fundamental service is targeted by hackers and cyber criminals. ( View Highlight ) Employing a robust DNS monitoring strategy is crucial to safeguarding your DNS server. By tracking your DNS performance, you can confirm it routes traffic appropriately, and continuously, to your services and websites. ( View Highlight ) What Is DNS? ( View Highlight ) DNS stands for Domain Name System. It\u2019s essentially the utility responsible for converting simple domain names into IP addresses. For example, Google.com is a user-friendly domain name, being both simple and easy to remember. A computer-compatible IP address, however, might look something like this: 64.233.160.0. This isn\u2019t especially user-friendly, which is why we need a DNS to convert it. The IP address allows the browser to access the appropriate server with the content requested by the user. ( View Highlight ) DNS is a formidable utility with a hierarchical, distributed structure. Each DNS database stores a mere portion of the data leading to a certain site or piece of hardware. DNS functions in collaboration with the TCP/IP network protocol, and the result of their combined efforts is a streamlined and user-friendly end-user experience. ( View Highlight ) The DNS server\u2019s database is extremely busy, because it handles billions of requests from billions of devices and people. To give you an idea of how colossal the DNS server is, one-page request is likely to result in more than 50 DNS requests. This means you could potentially create thousands of DNS requests in one session of browsing. Take into account the billions of people submitting thousands of requests every time they surf the web, and the total number of DNS queries is overwhelming. And yet the DNS can resolve domain names in less than a second, proving how powerful it is. ( View Highlight ) How Does DNS Work? ( View Highlight ) The process of \u201cresolving\u201d refers to the conversion of domain name to IP address. The user doesn\u2019t have visibility into the resolving process, which goes on behind the scenes. When the hostname is typed into the browser search bar, there\u2019s a moment\u2014usually less than a second\u2014during which the request is resolved. This process happens in a matter of microseconds, but it involves four different types of DNS server: the DNS recursor, the root name server, the TLD name server, and the authoritative name server. Each of these serves a different purpose, and they work together to give users access to the content they\u2019re requesting. ( View Highlight ) DNS recursor: The DNS recursor\u2014also called the recursive DNS server\u2014is usually supplied by the internet service provider. This server is responsible for receiving user queries, resolving them, and responding with the IP address. Think of it as being the middleman. It serves as the liaison between the other servers, and undertakes all the communicating, organizing, and transferring of information. It visits the cache initially, to see if the IP address requested already exists there and contacts the root name server if not. ( View Highlight ) Root name server: The root name server, or root server, gets involved when the DNS recursor can\u2019t find what it needs in its cache. The root server exists at the top of the DNS hierarchy, in a position called the root zone\u2014this is the point at which requests are redirected to the appropriate zone. There are 13 root zone servers, which are run by a dozen independent organizations. At this stage, the 13 servers respond to the recursor with the IP address for the TLD name server. ( View Highlight ) TLD name server: Next, the request goes through the TLD (Top Level Domain) name server. This server retains the information for hostnames sharing common extensions\u2014for example, .com, .net, .gov, .edu, or .co.uk. The TLD server then points the recursor server to the authoritative name server IP address. ( View Highlight ) Authoritative name server: The authoritative name server is the last step before the request is resolved. This server contains all the data for specific domains (e.g., google.com). The authoritative server resolves the hostname to the correct IP address, then sends this back to the recursor to be cached. It\u2019s then returned to the user\u2019s browser, so the requested site can be accessed via the IP address. ( View Highlight ) There is also round-robin DNS, a technique in which load balancing is undertaken by the authoritative name server. Numerous entries are queued for an individual domain name, so when a query arrives, round-robin DNS will identify the first DNS entry and respond with the relevant IP address. This DNS record is then pushed to the end of the queue, and the next time a domain name needs to be resolved, the next entry in the queue is sent. ( View Highlight ) Round robin is a distinct DNS server methodology used to supply load balancing to a website with numerous redundant servers. The issue with this approach is it doesn\u2019t necessarily recognize when a server is offline and may continue to deliver queries to it. This problem could be resolved by ensuring the name server features built-in fail-safes, which check IP address status ( View Highlight )","title":"7 Best DNS Monitoring Tools + How to Monitor DNS Server - DNSstuff"},{"location":"Highlights/Readwise/Articles/7%20Best%20DNS%20Monitoring%20Tools%20%2B%20How%20to%20Monitor%20DNS%20Server%20-%20DNSstuff/#7-best-dns-monitoring-tools-how-to-monitor-dns-server-dnsstuff","text":"","title":"7 Best DNS Monitoring Tools + How to Monitor DNS Server - DNSstuff"},{"location":"Highlights/Readwise/Articles/7%20Best%20DNS%20Monitoring%20Tools%20%2B%20How%20to%20Monitor%20DNS%20Server%20-%20DNSstuff/#metadata","text":"Author: [[dnsstuff.com]] Full Title: 7 Best DNS Monitoring Tools + How to Monitor DNS Server - DNSstuff Category: #Type/Highlights/Article URL: https://www.dnsstuff.com/dns-monitoring-software","title":"Metadata"},{"location":"Highlights/Readwise/Articles/7%20Best%20DNS%20Monitoring%20Tools%20%2B%20How%20to%20Monitor%20DNS%20Server%20-%20DNSstuff/#highlights","text":"DNS is one of the most crucial internet services. It\u2019s the communicator and concierge of online experiences. Everything, from the web content you browse and the email and chat services you use to social platforms like Facebook and Instagram, depends on DNS functioning on a round-the-clock basis. Given its importance, it\u2019s no surprise this fundamental service is targeted by hackers and cyber criminals. ( View Highlight ) Employing a robust DNS monitoring strategy is crucial to safeguarding your DNS server. By tracking your DNS performance, you can confirm it routes traffic appropriately, and continuously, to your services and websites. ( View Highlight ) What Is DNS? ( View Highlight ) DNS stands for Domain Name System. It\u2019s essentially the utility responsible for converting simple domain names into IP addresses. For example, Google.com is a user-friendly domain name, being both simple and easy to remember. A computer-compatible IP address, however, might look something like this: 64.233.160.0. This isn\u2019t especially user-friendly, which is why we need a DNS to convert it. The IP address allows the browser to access the appropriate server with the content requested by the user. ( View Highlight ) DNS is a formidable utility with a hierarchical, distributed structure. Each DNS database stores a mere portion of the data leading to a certain site or piece of hardware. DNS functions in collaboration with the TCP/IP network protocol, and the result of their combined efforts is a streamlined and user-friendly end-user experience. ( View Highlight ) The DNS server\u2019s database is extremely busy, because it handles billions of requests from billions of devices and people. To give you an idea of how colossal the DNS server is, one-page request is likely to result in more than 50 DNS requests. This means you could potentially create thousands of DNS requests in one session of browsing. Take into account the billions of people submitting thousands of requests every time they surf the web, and the total number of DNS queries is overwhelming. And yet the DNS can resolve domain names in less than a second, proving how powerful it is. ( View Highlight ) How Does DNS Work? ( View Highlight ) The process of \u201cresolving\u201d refers to the conversion of domain name to IP address. The user doesn\u2019t have visibility into the resolving process, which goes on behind the scenes. When the hostname is typed into the browser search bar, there\u2019s a moment\u2014usually less than a second\u2014during which the request is resolved. This process happens in a matter of microseconds, but it involves four different types of DNS server: the DNS recursor, the root name server, the TLD name server, and the authoritative name server. Each of these serves a different purpose, and they work together to give users access to the content they\u2019re requesting. ( View Highlight ) DNS recursor: The DNS recursor\u2014also called the recursive DNS server\u2014is usually supplied by the internet service provider. This server is responsible for receiving user queries, resolving them, and responding with the IP address. Think of it as being the middleman. It serves as the liaison between the other servers, and undertakes all the communicating, organizing, and transferring of information. It visits the cache initially, to see if the IP address requested already exists there and contacts the root name server if not. ( View Highlight ) Root name server: The root name server, or root server, gets involved when the DNS recursor can\u2019t find what it needs in its cache. The root server exists at the top of the DNS hierarchy, in a position called the root zone\u2014this is the point at which requests are redirected to the appropriate zone. There are 13 root zone servers, which are run by a dozen independent organizations. At this stage, the 13 servers respond to the recursor with the IP address for the TLD name server. ( View Highlight ) TLD name server: Next, the request goes through the TLD (Top Level Domain) name server. This server retains the information for hostnames sharing common extensions\u2014for example, .com, .net, .gov, .edu, or .co.uk. The TLD server then points the recursor server to the authoritative name server IP address. ( View Highlight ) Authoritative name server: The authoritative name server is the last step before the request is resolved. This server contains all the data for specific domains (e.g., google.com). The authoritative server resolves the hostname to the correct IP address, then sends this back to the recursor to be cached. It\u2019s then returned to the user\u2019s browser, so the requested site can be accessed via the IP address. ( View Highlight ) There is also round-robin DNS, a technique in which load balancing is undertaken by the authoritative name server. Numerous entries are queued for an individual domain name, so when a query arrives, round-robin DNS will identify the first DNS entry and respond with the relevant IP address. This DNS record is then pushed to the end of the queue, and the next time a domain name needs to be resolved, the next entry in the queue is sent. ( View Highlight ) Round robin is a distinct DNS server methodology used to supply load balancing to a website with numerous redundant servers. The issue with this approach is it doesn\u2019t necessarily recognize when a server is offline and may continue to deliver queries to it. This problem could be resolved by ensuring the name server features built-in fail-safes, which check IP address status ( View Highlight )","title":"Highlights"},{"location":"Highlights/Readwise/Articles/7%20Best%20Practices%20for%20Your%20Developer%20Onboarding%20Process/","text":"7 Best Practices for Your Developer Onboarding Process \u00b6 Metadata \u00b6 Author: Full Title: 7 Best Practices for Your Developer Onboarding Process Category: #Type/Highlights/Article URL: https://www.codementor.io/blog/developer-onboarding-process-32y3zqg1vc Highlights \u00b6 Documentation To provide team members with the information they need to do their jobs effectively, you should document everything: from user guides of commonly used tools, organizational charts, SOPs, common bugs and how to solve them, workplace setup, software tutorials, anything that requires step-by-step instructions, organizational charts, and contact lists. To stay organized, all of this information should be available in a centralized place, like an internal wiki page. To streamline the onboarding processes, some have suggested a welcome ebook or a tutorial series. While this would require some initial investment and planning, once launched, there would be minimum upkeep and it would be of lasting utility. choose the workflow framework most suitable for their projects and programming process \u2014 some popular workflows include GitFlow, Feature Branch Workflow, and Trunk-Based Development. As early as possible, you want to integrate your new developer into this workflow. Repository documentation should not be overlooked. This should include a wiki detailing how to use the codebase, how it\u2019s been designed, manifestos on core principles, and any other long-form content pertinent to the project. Also include a README, which should be a quick introduction to the project. Mentorship From day one, or even before day one, new recruits should have a person to reach out to who is ready to answer any technical questions, introduce the team, and even walk them through initial projects. transitions new programmers into their new development workflow by quickly assigning an easy task for them to complete using GitFlow practices. This helps the new dev gain a sense of achievement and contribute to production while learning the workflow. Here are some tips for mentors-to-be: Get started early with planning, documentation, and SOPs (like code reviews) Don\u2019t solve their problems \u2014 help them figure it out by themselves Give and receive feedback Help them learn from their mistakes Do regular pair coding exercises Encourage independent learning with recommended reading like The Pragmatic Programmer Communication Even before work begins, you should start to include your new team member in communications: email chains, Slack channels, weekly updates, etc. There\u2019s no need to pile everything on all at once \u2014 ease them in one channel at a time to let them get comfortable with your communication flows. Zapier has a useful meeting strategy to solicit two-way feedback we\u2019ll call the four one\u2019s. In sit-downs, one of the founders will ask the following questions: One thing you are worried about One thing you are excited about One thing I can do better to help you with your job One thing you can do to improve Culture Encouraging creativity and spontaneity with team building activities is a great way to help your new developer feel at home on your team. Evaluation To best evaluate the performance of new developers, it\u2019s important that they work in public. Programming related tasks can be done on platforms like Bitbucket or GitHub where everyone has access to the repository and can see what pull requests have been submitted or what changes were made. Non-coding tasks should be done in shared spaces like Google Docs, and updates made on project management tools like Asana or Trello. Evaluate not based on time spent but value produced. Lastly, remember that evaluations should not only be for the manager's and the company's benefit. Developmental feedback is key to helping engineers learn and grow, and collaborate better across teams. Conclusion What we have presented here is not a rigid template to be followed, but a formula to be adjusted for your specific project and team. To optimize your own onboarding process, you can ask yourself a series of simple questions: What does my developer need before they start? What information, hardware, software, etc. do I need to provide prior to day 1? What are the biggest time consumers with new hires? What are the most frequent mistakes made by, or in connection with, new hires?","title":"7 Best Practices for Your Developer Onboarding Process"},{"location":"Highlights/Readwise/Articles/7%20Best%20Practices%20for%20Your%20Developer%20Onboarding%20Process/#7-best-practices-for-your-developer-onboarding-process","text":"","title":"7 Best Practices for Your Developer Onboarding Process"},{"location":"Highlights/Readwise/Articles/7%20Best%20Practices%20for%20Your%20Developer%20Onboarding%20Process/#metadata","text":"Author: Full Title: 7 Best Practices for Your Developer Onboarding Process Category: #Type/Highlights/Article URL: https://www.codementor.io/blog/developer-onboarding-process-32y3zqg1vc","title":"Metadata"},{"location":"Highlights/Readwise/Articles/7%20Best%20Practices%20for%20Your%20Developer%20Onboarding%20Process/#highlights","text":"Documentation To provide team members with the information they need to do their jobs effectively, you should document everything: from user guides of commonly used tools, organizational charts, SOPs, common bugs and how to solve them, workplace setup, software tutorials, anything that requires step-by-step instructions, organizational charts, and contact lists. To stay organized, all of this information should be available in a centralized place, like an internal wiki page. To streamline the onboarding processes, some have suggested a welcome ebook or a tutorial series. While this would require some initial investment and planning, once launched, there would be minimum upkeep and it would be of lasting utility. choose the workflow framework most suitable for their projects and programming process \u2014 some popular workflows include GitFlow, Feature Branch Workflow, and Trunk-Based Development. As early as possible, you want to integrate your new developer into this workflow. Repository documentation should not be overlooked. This should include a wiki detailing how to use the codebase, how it\u2019s been designed, manifestos on core principles, and any other long-form content pertinent to the project. Also include a README, which should be a quick introduction to the project. Mentorship From day one, or even before day one, new recruits should have a person to reach out to who is ready to answer any technical questions, introduce the team, and even walk them through initial projects. transitions new programmers into their new development workflow by quickly assigning an easy task for them to complete using GitFlow practices. This helps the new dev gain a sense of achievement and contribute to production while learning the workflow. Here are some tips for mentors-to-be: Get started early with planning, documentation, and SOPs (like code reviews) Don\u2019t solve their problems \u2014 help them figure it out by themselves Give and receive feedback Help them learn from their mistakes Do regular pair coding exercises Encourage independent learning with recommended reading like The Pragmatic Programmer Communication Even before work begins, you should start to include your new team member in communications: email chains, Slack channels, weekly updates, etc. There\u2019s no need to pile everything on all at once \u2014 ease them in one channel at a time to let them get comfortable with your communication flows. Zapier has a useful meeting strategy to solicit two-way feedback we\u2019ll call the four one\u2019s. In sit-downs, one of the founders will ask the following questions: One thing you are worried about One thing you are excited about One thing I can do better to help you with your job One thing you can do to improve Culture Encouraging creativity and spontaneity with team building activities is a great way to help your new developer feel at home on your team. Evaluation To best evaluate the performance of new developers, it\u2019s important that they work in public. Programming related tasks can be done on platforms like Bitbucket or GitHub where everyone has access to the repository and can see what pull requests have been submitted or what changes were made. Non-coding tasks should be done in shared spaces like Google Docs, and updates made on project management tools like Asana or Trello. Evaluate not based on time spent but value produced. Lastly, remember that evaluations should not only be for the manager's and the company's benefit. Developmental feedback is key to helping engineers learn and grow, and collaborate better across teams. Conclusion What we have presented here is not a rigid template to be followed, but a formula to be adjusted for your specific project and team. To optimize your own onboarding process, you can ask yourself a series of simple questions: What does my developer need before they start? What information, hardware, software, etc. do I need to provide prior to day 1? What are the biggest time consumers with new hires? What are the most frequent mistakes made by, or in connection with, new hires?","title":"Highlights"},{"location":"Highlights/Readwise/Articles/7%20Effective%20Tools%20to%20Increase%20Your%20Hard%20Drive%20Performance%20on%20Windows/","text":"7 Effective Tools to Increase Your Hard Drive Performance on Windows \u00b6 Metadata \u00b6 Author: Full Title: 7 Effective Tools to Increase Your Hard Drive Performance on Windows Category: #Type/Highlights/Article URL: https://www.makeuseof.com/tag/2-effective-tools-that-can-increase-your-hard-drive-performance-windows/ Highlights \u00b6 Windows Optimize Drives IOBit Advanced SystemCare Razer Cortex Ashampoo WinOptimizer The final tool that can give your hard disk a health increase is Ashampoo WinOptimizer. The tool brands itself as a \u201cSwiss army for your PC.\u201d It\u2019s a fair description. In terms of improving hard drive health, it can schedule maintenance and optimization tasks, scan for junk files, fix broken registry entries, and clean your browser cookies. The tool offers both a one-click fix and user-controlled corrections. Separately, you can add additional modules to the app. There are 38 to choose from, covering tasks such as service management, start-up tuning, process management, privacy tuning, and much more.","title":"7 Effective Tools to Increase Your Hard Drive Performance on Windows"},{"location":"Highlights/Readwise/Articles/7%20Effective%20Tools%20to%20Increase%20Your%20Hard%20Drive%20Performance%20on%20Windows/#7-effective-tools-to-increase-your-hard-drive-performance-on-windows","text":"","title":"7 Effective Tools to Increase Your Hard Drive Performance on Windows"},{"location":"Highlights/Readwise/Articles/7%20Effective%20Tools%20to%20Increase%20Your%20Hard%20Drive%20Performance%20on%20Windows/#metadata","text":"Author: Full Title: 7 Effective Tools to Increase Your Hard Drive Performance on Windows Category: #Type/Highlights/Article URL: https://www.makeuseof.com/tag/2-effective-tools-that-can-increase-your-hard-drive-performance-windows/","title":"Metadata"},{"location":"Highlights/Readwise/Articles/7%20Effective%20Tools%20to%20Increase%20Your%20Hard%20Drive%20Performance%20on%20Windows/#highlights","text":"Windows Optimize Drives IOBit Advanced SystemCare Razer Cortex Ashampoo WinOptimizer The final tool that can give your hard disk a health increase is Ashampoo WinOptimizer. The tool brands itself as a \u201cSwiss army for your PC.\u201d It\u2019s a fair description. In terms of improving hard drive health, it can schedule maintenance and optimization tasks, scan for junk files, fix broken registry entries, and clean your browser cookies. The tool offers both a one-click fix and user-controlled corrections. Separately, you can add additional modules to the app. There are 38 to choose from, covering tasks such as service management, start-up tuning, process management, privacy tuning, and much more.","title":"Highlights"},{"location":"Highlights/Readwise/Articles/7%20Quick%20Tips%20to%20Control%20Clutter%20and%20Stop%20Hoarding/","text":"7 Quick Tips to Control Clutter and Stop Hoarding \u00b6 Metadata \u00b6 Author: [[thespruce.com]] Full Title: 7 Quick Tips to Control Clutter and Stop Hoarding Category: #Type/Highlights/Article URL: https://www.thespruce.com/6-quick-tips-to-control-clutter-and-stop-hoarding-2648657 Highlights \u00b6 Start Slow This may lead to strong feelings of regret and anxiety; rather, go through one small space or collection each week. Handle Objects Only Once Curb the tendency to put something aside \"for now.\" Fans of David Allen's \"Getting Things Done\" system have been applying this trick to their email for years. Take the time to make a decision about an item in the present so you don't have to handle it, again and again, each time you decide to get organized. Put It in a Box If you cannot decide to toss or keep an item, put it in a box for 6 months. If you don't open the box before then, you can let it go without regret. This is a great idea for people who hoard items like magazines, travel toiletries, and newspaper clippings Toss Unused Items Once you start tossing the items you never use, it will be easier to keep clutter from creeping up. You'll be used to having a more minimalist approach.","title":"7 Quick Tips to Control Clutter and Stop Hoarding"},{"location":"Highlights/Readwise/Articles/7%20Quick%20Tips%20to%20Control%20Clutter%20and%20Stop%20Hoarding/#7-quick-tips-to-control-clutter-and-stop-hoarding","text":"","title":"7 Quick Tips to Control Clutter and Stop Hoarding"},{"location":"Highlights/Readwise/Articles/7%20Quick%20Tips%20to%20Control%20Clutter%20and%20Stop%20Hoarding/#metadata","text":"Author: [[thespruce.com]] Full Title: 7 Quick Tips to Control Clutter and Stop Hoarding Category: #Type/Highlights/Article URL: https://www.thespruce.com/6-quick-tips-to-control-clutter-and-stop-hoarding-2648657","title":"Metadata"},{"location":"Highlights/Readwise/Articles/7%20Quick%20Tips%20to%20Control%20Clutter%20and%20Stop%20Hoarding/#highlights","text":"Start Slow This may lead to strong feelings of regret and anxiety; rather, go through one small space or collection each week. Handle Objects Only Once Curb the tendency to put something aside \"for now.\" Fans of David Allen's \"Getting Things Done\" system have been applying this trick to their email for years. Take the time to make a decision about an item in the present so you don't have to handle it, again and again, each time you decide to get organized. Put It in a Box If you cannot decide to toss or keep an item, put it in a box for 6 months. If you don't open the box before then, you can let it go without regret. This is a great idea for people who hoard items like magazines, travel toiletries, and newspaper clippings Toss Unused Items Once you start tossing the items you never use, it will be easier to keep clutter from creeping up. You'll be used to having a more minimalist approach.","title":"Highlights"},{"location":"Highlights/Readwise/Articles/8%20Best%20Practices%20to%20Facilitate%20Personal%20Knowledge%20Management%20in%20eLearning%20-%20eLearning%20Industry/","text":"8 Best Practices to Facilitate Personal Knowledge Management in eLearning - eLearning Industry \u00b6 Metadata \u00b6 Author: [[Christopher Pappas]] Full Title: 8 Best Practices to Facilitate Personal Knowledge Management in eLearning - eLearning Industry Category: #Type/Highlights/Article URL: https://elearningindustry.com/best-practices-facilitate-personal-knowledge-management-elearning Highlights \u00b6 Create An Online Resource Repository Develop a list of valuable resources your online learners can use to expand their knowledge base. For example, articles, video tutorials, and eLearning blogs that align with your learning goals. Alternatively, you can create a microlearning resource repository that features your own eLearning materials. For instance, bite-sized online simulations that explore work-related tasks or compliance-based serious games. The secret is to make eLearning convenient and easily accessible. Keep in mind that your online learners are looking for tools and information they need to solve a problem. An online resource repository gives them the opportunity to continually improve and expand their knowledge on their own time. Give Online Learners A List Of Must-Have Tools There are a variety of virtual tools that can help your online learners manage their personal knowledge. For example, Project Management online tools that allow them to track eLearning assignments and compile a list of online resources. There are also MOOCs, social media groups, and video sharing sites where they can find valuable information. Provide them with a list of these essential online tools so that they can broaden and curate their own knowledge. Just make sure to update it on a regular basis and remove outdated links. Develop Resource Criteria As they say, \"you can't believe everything you read on the internet\". You should emphasize the importance of developing evaluation criteria. This helps your online learners identify relevant and reliable online resources so that they get accurate information. You might even consider a criteria checklist to help them find the right sources. In addition, start a database and invite your online learners to add their own suggestions. For instance, the online sources they've used in the past for specific subject matter. Personal Knowledge Management allows your online learners to weed out irrelevant information and commit the key facts to memory. eLearning professionals can even use these Personal Knowledge Management tips when designing their own eLearning courses. You must be able to collect, verify, and organize information in order to optimize the eLearning experience.","title":"8 Best Practices to Facilitate Personal Knowledge Management in eLearning - eLearning Industry"},{"location":"Highlights/Readwise/Articles/8%20Best%20Practices%20to%20Facilitate%20Personal%20Knowledge%20Management%20in%20eLearning%20-%20eLearning%20Industry/#8-best-practices-to-facilitate-personal-knowledge-management-in-elearning-elearning-industry","text":"","title":"8 Best Practices to Facilitate Personal Knowledge Management in eLearning - eLearning Industry"},{"location":"Highlights/Readwise/Articles/8%20Best%20Practices%20to%20Facilitate%20Personal%20Knowledge%20Management%20in%20eLearning%20-%20eLearning%20Industry/#metadata","text":"Author: [[Christopher Pappas]] Full Title: 8 Best Practices to Facilitate Personal Knowledge Management in eLearning - eLearning Industry Category: #Type/Highlights/Article URL: https://elearningindustry.com/best-practices-facilitate-personal-knowledge-management-elearning","title":"Metadata"},{"location":"Highlights/Readwise/Articles/8%20Best%20Practices%20to%20Facilitate%20Personal%20Knowledge%20Management%20in%20eLearning%20-%20eLearning%20Industry/#highlights","text":"Create An Online Resource Repository Develop a list of valuable resources your online learners can use to expand their knowledge base. For example, articles, video tutorials, and eLearning blogs that align with your learning goals. Alternatively, you can create a microlearning resource repository that features your own eLearning materials. For instance, bite-sized online simulations that explore work-related tasks or compliance-based serious games. The secret is to make eLearning convenient and easily accessible. Keep in mind that your online learners are looking for tools and information they need to solve a problem. An online resource repository gives them the opportunity to continually improve and expand their knowledge on their own time. Give Online Learners A List Of Must-Have Tools There are a variety of virtual tools that can help your online learners manage their personal knowledge. For example, Project Management online tools that allow them to track eLearning assignments and compile a list of online resources. There are also MOOCs, social media groups, and video sharing sites where they can find valuable information. Provide them with a list of these essential online tools so that they can broaden and curate their own knowledge. Just make sure to update it on a regular basis and remove outdated links. Develop Resource Criteria As they say, \"you can't believe everything you read on the internet\". You should emphasize the importance of developing evaluation criteria. This helps your online learners identify relevant and reliable online resources so that they get accurate information. You might even consider a criteria checklist to help them find the right sources. In addition, start a database and invite your online learners to add their own suggestions. For instance, the online sources they've used in the past for specific subject matter. Personal Knowledge Management allows your online learners to weed out irrelevant information and commit the key facts to memory. eLearning professionals can even use these Personal Knowledge Management tips when designing their own eLearning courses. You must be able to collect, verify, and organize information in order to optimize the eLearning experience.","title":"Highlights"},{"location":"Highlights/Readwise/Articles/8%20Ways%20to%20Free%20Up%20RAM%20on%20Your%20Windows%20Computer/","text":"8 Ways to Free Up RAM on Your Windows Computer \u00b6 Metadata \u00b6 Author: Full Title: 8 Ways to Free Up RAM on Your Windows Computer Category: #Type/Highlights/Article URL: https://www.makeuseof.com/tag/5-ways-clear-memory-increase-ram-windows-computer/ Highlights \u00b6 RAM stands for Random Access Memory. It\u2019s a short term storage medium that holds programs and processes currently running on your computer. The more RAM that\u2019s in your machine, the more programs you can run at once without negatively affecting performance. When your computer runs low on RAM, it uses a part of the storage drive called the page file that acts as pretend RAM. This is much slower than actual RAM, which is why you notice slowdowns when Windows uses it. Because RAM is volatile, you\u2019ll lose its contents when your computer shuts off. Anything you want to keep must save to permanent storage, like a hard drive or solid-state drive. Restart Your PC This is a tip you\u2019re probably familiar with, but it\u2019s popular for a reason. Restarting your PC will also completely clear the RAM and restart all running processes. While this obviously won\u2019t increase the maximum RAM available, it will clean up processes running in the background that could be eating up your memory. Uninstall or Disable Software Now that you\u2019ve seen what apps use the most RAM on your system, think about whether you really use them. An easy way to free up RAM is to keep programs you never use anyway from consuming it! Use Lighter Apps and Manage Programs Try ReadyBoost If your computer still has an older mechanical hard disk drive (HDD) inside, you can try a lesser-known Windows feature called ReadyBoost to increase RAM. This allows you to plug in a flash drive or SD card that Windows effectively treats as extra RAM. While it sounds great, this feature offers limited use today. If your computer has an SSD, ReadyBoost won\u2019t do anything. This is because an SSD is faster than a flash drive. Plus, since computers have more RAM installed by default now, you won\u2019t see as much gain from ReadyBoost as you would on an anemic system from many years ago. The \u201cpretend RAM\u201d from ReadyBoost doesn\u2019t offer the same performance gains as actually adding more RAM. Tags: [[favorite]]","title":"8 Ways to Free Up RAM on Your Windows Computer"},{"location":"Highlights/Readwise/Articles/8%20Ways%20to%20Free%20Up%20RAM%20on%20Your%20Windows%20Computer/#8-ways-to-free-up-ram-on-your-windows-computer","text":"","title":"8 Ways to Free Up RAM on Your Windows Computer"},{"location":"Highlights/Readwise/Articles/8%20Ways%20to%20Free%20Up%20RAM%20on%20Your%20Windows%20Computer/#metadata","text":"Author: Full Title: 8 Ways to Free Up RAM on Your Windows Computer Category: #Type/Highlights/Article URL: https://www.makeuseof.com/tag/5-ways-clear-memory-increase-ram-windows-computer/","title":"Metadata"},{"location":"Highlights/Readwise/Articles/8%20Ways%20to%20Free%20Up%20RAM%20on%20Your%20Windows%20Computer/#highlights","text":"RAM stands for Random Access Memory. It\u2019s a short term storage medium that holds programs and processes currently running on your computer. The more RAM that\u2019s in your machine, the more programs you can run at once without negatively affecting performance. When your computer runs low on RAM, it uses a part of the storage drive called the page file that acts as pretend RAM. This is much slower than actual RAM, which is why you notice slowdowns when Windows uses it. Because RAM is volatile, you\u2019ll lose its contents when your computer shuts off. Anything you want to keep must save to permanent storage, like a hard drive or solid-state drive. Restart Your PC This is a tip you\u2019re probably familiar with, but it\u2019s popular for a reason. Restarting your PC will also completely clear the RAM and restart all running processes. While this obviously won\u2019t increase the maximum RAM available, it will clean up processes running in the background that could be eating up your memory. Uninstall or Disable Software Now that you\u2019ve seen what apps use the most RAM on your system, think about whether you really use them. An easy way to free up RAM is to keep programs you never use anyway from consuming it! Use Lighter Apps and Manage Programs Try ReadyBoost If your computer still has an older mechanical hard disk drive (HDD) inside, you can try a lesser-known Windows feature called ReadyBoost to increase RAM. This allows you to plug in a flash drive or SD card that Windows effectively treats as extra RAM. While it sounds great, this feature offers limited use today. If your computer has an SSD, ReadyBoost won\u2019t do anything. This is because an SSD is faster than a flash drive. Plus, since computers have more RAM installed by default now, you won\u2019t see as much gain from ReadyBoost as you would on an anemic system from many years ago. The \u201cpretend RAM\u201d from ReadyBoost doesn\u2019t offer the same performance gains as actually adding more RAM. Tags: [[favorite]]","title":"Highlights"},{"location":"Highlights/Readwise/Articles/9%20Project%20Controls%20%26%20How%20to%20Use%20Them%20to%20Tame%20Your%20Project%20Chaos%20-%20The%20Digital%20Project%20Manager/","text":"9 Project Controls & How to Use Them to Tame Your Project Chaos - The Digital Project Manager \u00b6 Metadata \u00b6 Author: Full Title: 9 Project Controls & How to Use Them to Tame Your Project Chaos - The Digital Project Manager Category: #Type/Highlights/Article URL: https://thedigitalprojectmanager.com/project-controls-simplified/ Highlights \u00b6 A project control system aims to minimize the gap between project planning and project execution in order to achieve project aims, i.e., cost, time, and content. Controlling projects is one of the hard skills of project management. Hard skills 3Rs Process management Project Initiation Project Planning Scheduling Documentation Development Task management Project Control Risk Management PM Tools Technical skills 9 Project Controls To Help You Tame Your Project Chaos Project planning documents RACI chart Communications plan Contact report Investment authorization QA checklist RAID log (sometimes called a risk register) Status report (similar to a cost report) Change request (related to a change management register) Project planning documents Project planning documents Stop here. Go no further into this article if you don\u2019t have some kind of essential project planning document yet. That\u2019s the basis for your controls\u2014it\u2019s a record that shows what you intended for the project so you can see if it\u2019s tracking according to plan. Project planning documents include: Project Brief This covers off the Why, What, When, How, Who, and other essentials of your projects in this brief so you can build a solid foundation for the rest of your project. Timeline, Project Plan, Schedule and/or Gantt Chart To track changes to your schedule using other types of project controls, you first need to have a schedule. You may use one of these or all of these\u2014but definitely use at least one! It\u2019s your most basic tool for controlling your projects\u2014and setting them to be controll-able in the first place. Statement of Work Communications plan A communication plan defines who should be connected, as well as when and how, to prevent missed information. Creating a communication plan can define communication goals, clearly, state stakeholder information, indicate communication frequency, and pinpoint what information to share. This document should be a guide to structure the communication across a project. Remember that the communication plan is for your own benefit as the PM just as much as it is for anyone else. It will determine how often you are to communicate with the client and let them know your intentions before the project even starts. You will most likely use different communication techniques, like daily emails for quick questions or weekly conference calls for updates. The Communication Plan will be designed before the project starts. There are several things that you will want to do: Note what your communication goals are Note all stakeholders and their preference/frequency of communication Plan key communication moments, including the who, how, and when Contact Report A contact report is a collection of documents and notes that is a record of communications like email, meeting minutes, phone calls, and even records of in-person conversations. There\u2019s a good chance that your project will use many different communication tools on top of the expected phone calls, emails, and face-to-face meetings. A contact report is a way to make sure that bits of important information, like insights, feedback, or key goals, are extracted from these various sources and circumstances and stored somewhere accessible. A good contact report will be more than a cut-and-paste of different text and screenshot\u2014they should be contextualized and important details should be highlighted in an easily readable way. In particular, any action items need to be collected and called out. The team will need these to know what the next steps should be. The very first thing you add to the Contact Report will probably be the project plan. Then, all items of communication can point back to key tasks and milestones. Note who was a part of the meeting Note the source of the meeting (email, phone, in-person, text, app) Add context, screenshots, and takeaways QA Checklist A Quality Assurance (QA) checklist is a catalogue list of important not-to-be-missed items relating to a project\u2019s process type, testing methodology, and/or product category. A QA checklist starts by breaking your project down into categories of phases, each which may require their own testing by specialists on your team. Define project categories Itemize testing areas in each category Assign testing items to your team according to priority Status report/cost report A Status Report contains all relevant metrics of an ongoing project and ensures all involved parties have a clear understanding of where the project is at. When do I need it? Being consistent with Status Reports is key for transparency and effective management. It\u2019s essential to have an updated Status Report ready in each weekly meeting. To establish a proper reporting cadence, aim for weekly project Status Reports. They don\u2019t need to belong\u201430 minutes might be plenty\u2014but it\u2019s an important aspect of the client relationship and establishes trust and transparency. Make sure your client understands the content of the report\u2014walk them through the information so they can explain it to their colleagues down the line. Change Request/Change Management Register A Change Request (CR) outlines and defines a change in scope that occurred in the project, as compared to the initial Statement of Work or estimate that was provided. When do I need it? A Change Request should always be formalized and acknowledged by both parties. Once identified, map out the description, impacts on budget and timeline, and send it to the client. A big part of project controls has to do with controlling scope and Change Requests are essential to this process. In order to educate everyone on the process, don\u2019t shy away from issuing Change Requests, even for seemingly simple items with minor impacts. Change requests with no budget impact help enforce the process and keep everyone aligned on decisions Change requests typically map out the following: Description of scope change Reason for scope change Implications of scope change (budget, timeline) Official acknowledgment (signature or confirmation of acceptance) The Day-To-Day Process Of Controlling Projects Analysis and communication are your most powerful tools for controlling your projects. Evaluate Keep an eye on the project plan, the anticipated output, and the overall trajectory of the work. You must always know where you stand when it comes to expectations versus reality. Ask questions to ensure you understand the current status. When you evaluate, use project Status Reports and metrics as a basis for decisions. Tags: [[favorite]] Plan Based on the determined status, course corrections are often in order. Ensure they are planned appropriately\u2014try to anticipate where things are headed. Follow up with your team: We can\u2019t assume that our team will remember every request or wise piece of advice that we give them. You will have to dispense a lot of friendly reminders like \u201chey, sorry to be a pain, but did you get to X yet?\u201d or \u201cdon\u2019t forget about Y.\u201d This will give you some peace of mind that people are on track as well as giving a quick pulse check on how things are going overall. It\u2019s often during those brief check-ins that you\u2019ll discover something isn\u2019t quite going to plan.","title":"9 Project Controls & How to Use Them to Tame Your Project Chaos - The Digital Project Manager"},{"location":"Highlights/Readwise/Articles/9%20Project%20Controls%20%26%20How%20to%20Use%20Them%20to%20Tame%20Your%20Project%20Chaos%20-%20The%20Digital%20Project%20Manager/#9-project-controls-how-to-use-them-to-tame-your-project-chaos-the-digital-project-manager","text":"","title":"9 Project Controls &amp; How to Use Them to Tame Your Project Chaos - The Digital Project Manager"},{"location":"Highlights/Readwise/Articles/9%20Project%20Controls%20%26%20How%20to%20Use%20Them%20to%20Tame%20Your%20Project%20Chaos%20-%20The%20Digital%20Project%20Manager/#metadata","text":"Author: Full Title: 9 Project Controls & How to Use Them to Tame Your Project Chaos - The Digital Project Manager Category: #Type/Highlights/Article URL: https://thedigitalprojectmanager.com/project-controls-simplified/","title":"Metadata"},{"location":"Highlights/Readwise/Articles/9%20Project%20Controls%20%26%20How%20to%20Use%20Them%20to%20Tame%20Your%20Project%20Chaos%20-%20The%20Digital%20Project%20Manager/#highlights","text":"A project control system aims to minimize the gap between project planning and project execution in order to achieve project aims, i.e., cost, time, and content. Controlling projects is one of the hard skills of project management. Hard skills 3Rs Process management Project Initiation Project Planning Scheduling Documentation Development Task management Project Control Risk Management PM Tools Technical skills 9 Project Controls To Help You Tame Your Project Chaos Project planning documents RACI chart Communications plan Contact report Investment authorization QA checklist RAID log (sometimes called a risk register) Status report (similar to a cost report) Change request (related to a change management register) Project planning documents Project planning documents Stop here. Go no further into this article if you don\u2019t have some kind of essential project planning document yet. That\u2019s the basis for your controls\u2014it\u2019s a record that shows what you intended for the project so you can see if it\u2019s tracking according to plan. Project planning documents include: Project Brief This covers off the Why, What, When, How, Who, and other essentials of your projects in this brief so you can build a solid foundation for the rest of your project. Timeline, Project Plan, Schedule and/or Gantt Chart To track changes to your schedule using other types of project controls, you first need to have a schedule. You may use one of these or all of these\u2014but definitely use at least one! It\u2019s your most basic tool for controlling your projects\u2014and setting them to be controll-able in the first place. Statement of Work Communications plan A communication plan defines who should be connected, as well as when and how, to prevent missed information. Creating a communication plan can define communication goals, clearly, state stakeholder information, indicate communication frequency, and pinpoint what information to share. This document should be a guide to structure the communication across a project. Remember that the communication plan is for your own benefit as the PM just as much as it is for anyone else. It will determine how often you are to communicate with the client and let them know your intentions before the project even starts. You will most likely use different communication techniques, like daily emails for quick questions or weekly conference calls for updates. The Communication Plan will be designed before the project starts. There are several things that you will want to do: Note what your communication goals are Note all stakeholders and their preference/frequency of communication Plan key communication moments, including the who, how, and when Contact Report A contact report is a collection of documents and notes that is a record of communications like email, meeting minutes, phone calls, and even records of in-person conversations. There\u2019s a good chance that your project will use many different communication tools on top of the expected phone calls, emails, and face-to-face meetings. A contact report is a way to make sure that bits of important information, like insights, feedback, or key goals, are extracted from these various sources and circumstances and stored somewhere accessible. A good contact report will be more than a cut-and-paste of different text and screenshot\u2014they should be contextualized and important details should be highlighted in an easily readable way. In particular, any action items need to be collected and called out. The team will need these to know what the next steps should be. The very first thing you add to the Contact Report will probably be the project plan. Then, all items of communication can point back to key tasks and milestones. Note who was a part of the meeting Note the source of the meeting (email, phone, in-person, text, app) Add context, screenshots, and takeaways QA Checklist A Quality Assurance (QA) checklist is a catalogue list of important not-to-be-missed items relating to a project\u2019s process type, testing methodology, and/or product category. A QA checklist starts by breaking your project down into categories of phases, each which may require their own testing by specialists on your team. Define project categories Itemize testing areas in each category Assign testing items to your team according to priority Status report/cost report A Status Report contains all relevant metrics of an ongoing project and ensures all involved parties have a clear understanding of where the project is at. When do I need it? Being consistent with Status Reports is key for transparency and effective management. It\u2019s essential to have an updated Status Report ready in each weekly meeting. To establish a proper reporting cadence, aim for weekly project Status Reports. They don\u2019t need to belong\u201430 minutes might be plenty\u2014but it\u2019s an important aspect of the client relationship and establishes trust and transparency. Make sure your client understands the content of the report\u2014walk them through the information so they can explain it to their colleagues down the line. Change Request/Change Management Register A Change Request (CR) outlines and defines a change in scope that occurred in the project, as compared to the initial Statement of Work or estimate that was provided. When do I need it? A Change Request should always be formalized and acknowledged by both parties. Once identified, map out the description, impacts on budget and timeline, and send it to the client. A big part of project controls has to do with controlling scope and Change Requests are essential to this process. In order to educate everyone on the process, don\u2019t shy away from issuing Change Requests, even for seemingly simple items with minor impacts. Change requests with no budget impact help enforce the process and keep everyone aligned on decisions Change requests typically map out the following: Description of scope change Reason for scope change Implications of scope change (budget, timeline) Official acknowledgment (signature or confirmation of acceptance) The Day-To-Day Process Of Controlling Projects Analysis and communication are your most powerful tools for controlling your projects. Evaluate Keep an eye on the project plan, the anticipated output, and the overall trajectory of the work. You must always know where you stand when it comes to expectations versus reality. Ask questions to ensure you understand the current status. When you evaluate, use project Status Reports and metrics as a basis for decisions. Tags: [[favorite]] Plan Based on the determined status, course corrections are often in order. Ensure they are planned appropriately\u2014try to anticipate where things are headed. Follow up with your team: We can\u2019t assume that our team will remember every request or wise piece of advice that we give them. You will have to dispense a lot of friendly reminders like \u201chey, sorry to be a pain, but did you get to X yet?\u201d or \u201cdon\u2019t forget about Y.\u201d This will give you some peace of mind that people are on track as well as giving a quick pulse check on how things are going overall. It\u2019s often during those brief check-ins that you\u2019ll discover something isn\u2019t quite going to plan.","title":"Highlights"},{"location":"Highlights/Readwise/Articles/9%20Tips%20to%20Get%20More%20Out%20of%20Your%20Calendar%20%5BPMP%20%23177%5D/","text":"9 Tips to Get More Out of Your Calendar [PMP #177] \u00b6 Metadata \u00b6 Author: [[Paul Minors]] Full Title: 9 Tips to Get More Out of Your Calendar [PMP #177] Category: #Type/Highlights/Article URL: https://paulminors.com/blog/9-tips-to-get-more-out-of-your-calendar/ Highlights \u00b6 Use multiple calendar categories It always amazes me when people don't do this. But you can set up multiple \u2018Calendars\u2019 in your calendar (the terminology gets a bit confusing). Think of a calendar as a category. For example, I have calendars for: Appointments \u2013 For client bookings. Work \u2013 For planning my tasks and work. Family (shared with my wife) \u2013 For planning family events. Sport \u2013 For booking classes at our gym. Social \u2013 For social events with friends. Random \u2013 For miscellaneous stuff. Busy \u2013 To block off time that I don\u2019t want to be booked via Calendly. Apps \u2013 For syncing events from Pipedrive to my calendar. Block out time for tasks I have a whole article on time blocking so I won\u2019t spend long on this. But blocking out time for your tasks is a great way of taking the items on your todo list and creating a plan around when you\u2019re going to do everything and how long it should take. If you struggle with procrastination or get distracted easily, try blocking out time for your tasks and see how this helps. You could even start by blocking time for the types of work you do e.g. \u2018client work\u2019 instead of specific tasks. Don't allow overlap Unless there\u2019s a good reason, the appointments on your calendar shouldn\u2019t overlap. How can you do two things at once? When you avoid overlap, it\u2019s much easier to make sense of your calendar to see what\u2019s going on and what you should be doing next. The exception would be if you have access to a colleagues calendar and can see their appointments, naturally, these will overlap with your own. But the nice thing about having multiple calendars (mentioned above) is that you can toggle them on/off to show/hide them.","title":"9 Tips to Get More Out of Your Calendar [PMP #177]"},{"location":"Highlights/Readwise/Articles/9%20Tips%20to%20Get%20More%20Out%20of%20Your%20Calendar%20%5BPMP%20%23177%5D/#9-tips-to-get-more-out-of-your-calendar-pmp-177","text":"","title":"9 Tips to Get More Out of Your Calendar [PMP #177]"},{"location":"Highlights/Readwise/Articles/9%20Tips%20to%20Get%20More%20Out%20of%20Your%20Calendar%20%5BPMP%20%23177%5D/#metadata","text":"Author: [[Paul Minors]] Full Title: 9 Tips to Get More Out of Your Calendar [PMP #177] Category: #Type/Highlights/Article URL: https://paulminors.com/blog/9-tips-to-get-more-out-of-your-calendar/","title":"Metadata"},{"location":"Highlights/Readwise/Articles/9%20Tips%20to%20Get%20More%20Out%20of%20Your%20Calendar%20%5BPMP%20%23177%5D/#highlights","text":"Use multiple calendar categories It always amazes me when people don't do this. But you can set up multiple \u2018Calendars\u2019 in your calendar (the terminology gets a bit confusing). Think of a calendar as a category. For example, I have calendars for: Appointments \u2013 For client bookings. Work \u2013 For planning my tasks and work. Family (shared with my wife) \u2013 For planning family events. Sport \u2013 For booking classes at our gym. Social \u2013 For social events with friends. Random \u2013 For miscellaneous stuff. Busy \u2013 To block off time that I don\u2019t want to be booked via Calendly. Apps \u2013 For syncing events from Pipedrive to my calendar. Block out time for tasks I have a whole article on time blocking so I won\u2019t spend long on this. But blocking out time for your tasks is a great way of taking the items on your todo list and creating a plan around when you\u2019re going to do everything and how long it should take. If you struggle with procrastination or get distracted easily, try blocking out time for your tasks and see how this helps. You could even start by blocking time for the types of work you do e.g. \u2018client work\u2019 instead of specific tasks. Don't allow overlap Unless there\u2019s a good reason, the appointments on your calendar shouldn\u2019t overlap. How can you do two things at once? When you avoid overlap, it\u2019s much easier to make sense of your calendar to see what\u2019s going on and what you should be doing next. The exception would be if you have access to a colleagues calendar and can see their appointments, naturally, these will overlap with your own. But the nice thing about having multiple calendars (mentioned above) is that you can toggle them on/off to show/hide them.","title":"Highlights"},{"location":"Highlights/Readwise/Articles/9%20Tricks%20for%20Boosting%20SQL%20Query%20Performance/","text":"9 Tricks for Boosting SQL Query Performance \u00b6 Metadata \u00b6 Author: [[Anisuzzaman Babla]] Full Title: 9 Tricks for Boosting SQL Query Performance Category: #Type/Highlights/Article URL: https://medium.com/p/2c03ea4873b2 Highlights \u00b6 The best approach here is to define the fields in the SELECT statement to instruct the database to query only the required data to meet the end goals. Performance tuning in SQL can be done by indexing properly, which translates to quicker access to the database during critical times. This It is highly recommended to avoid using temp tables if your code can be written simply Create Joins With INNER JOIN (not WHERE)","title":"9 Tricks for Boosting SQL Query Performance"},{"location":"Highlights/Readwise/Articles/9%20Tricks%20for%20Boosting%20SQL%20Query%20Performance/#9-tricks-for-boosting-sql-query-performance","text":"","title":"9 Tricks for Boosting SQL Query Performance"},{"location":"Highlights/Readwise/Articles/9%20Tricks%20for%20Boosting%20SQL%20Query%20Performance/#metadata","text":"Author: [[Anisuzzaman Babla]] Full Title: 9 Tricks for Boosting SQL Query Performance Category: #Type/Highlights/Article URL: https://medium.com/p/2c03ea4873b2","title":"Metadata"},{"location":"Highlights/Readwise/Articles/9%20Tricks%20for%20Boosting%20SQL%20Query%20Performance/#highlights","text":"The best approach here is to define the fields in the SELECT statement to instruct the database to query only the required data to meet the end goals. Performance tuning in SQL can be done by indexing properly, which translates to quicker access to the database during critical times. This It is highly recommended to avoid using temp tables if your code can be written simply Create Joins With INNER JOIN (not WHERE)","title":"Highlights"},{"location":"Highlights/Readwise/Articles/A%20Better%20Way%20to%20Manage%20Your%20Github%20Personal%20Access%20Tokens/","text":"A Better Way to Manage Your Github Personal Access Tokens \u00b6 Metadata \u00b6 Author: Full Title: A Better Way to Manage Your Github Personal Access Tokens Category: #Type/Highlights/Article URL: https://ropensci.org/technotes/2020/07/07/github-pat/?utm_campaign=Feed%3A+rweekly-live+%28R+Weekly+Live%29&utm_medium=feed&utm_source=feedburner Highlights \u00b6 The credentials package provides a function that will set this environment variable: # Tries to set the GITHUB_PAT environment variable credentials::set_github_pat() ## TRUE The set_github_pat() function returns TRUE when it succeeds in setting the GITHUB_PAT environment variable, and FALSE if not. Packages that call set_github_pat() to let the user authenticate, can check the return value to determine if authentication was successful. Once a working PAT has been stored in the git credential store, it can automatically be loaded in another R session by calling set_github_pat() again. The token is automatically validated, and if it still works, the GITHUB_PAT environment variable is set without the user having to do anything. And here is the best part: because the token is stored under the github.com domain in the credential store, both gert and command line git will automatically attempt to authenticate with this token when fetching/pushing Github HTTPS remotes. Workflow We still need to figure out how this will affect the recommended workflow. Currently many users hardcode the GITHUB_PAT in the ~/.Renviron file, so that it is automatically set in every R session. You could accomplish the same with the credentials package by adding this to your ~/.Rprofile file: # Load the GITHUB_PAT in the R session credentials::set_github_pat() However perhaps it is actually undesired to always have your GITHUB_PAT exposed in R. The nice thing about the credentials package is that it becomes easy to load your access token on demand. Hence, instead of setting the PAT on the start of each R session, a user or 3rd party package could call set_github_pat() whenever it needs access to the Github API.","title":"A Better Way to Manage Your Github Personal Access Tokens"},{"location":"Highlights/Readwise/Articles/A%20Better%20Way%20to%20Manage%20Your%20Github%20Personal%20Access%20Tokens/#a-better-way-to-manage-your-github-personal-access-tokens","text":"","title":"A Better Way to Manage Your Github Personal Access Tokens"},{"location":"Highlights/Readwise/Articles/A%20Better%20Way%20to%20Manage%20Your%20Github%20Personal%20Access%20Tokens/#metadata","text":"Author: Full Title: A Better Way to Manage Your Github Personal Access Tokens Category: #Type/Highlights/Article URL: https://ropensci.org/technotes/2020/07/07/github-pat/?utm_campaign=Feed%3A+rweekly-live+%28R+Weekly+Live%29&utm_medium=feed&utm_source=feedburner","title":"Metadata"},{"location":"Highlights/Readwise/Articles/A%20Better%20Way%20to%20Manage%20Your%20Github%20Personal%20Access%20Tokens/#highlights","text":"The credentials package provides a function that will set this environment variable: # Tries to set the GITHUB_PAT environment variable credentials::set_github_pat() ## TRUE The set_github_pat() function returns TRUE when it succeeds in setting the GITHUB_PAT environment variable, and FALSE if not. Packages that call set_github_pat() to let the user authenticate, can check the return value to determine if authentication was successful. Once a working PAT has been stored in the git credential store, it can automatically be loaded in another R session by calling set_github_pat() again. The token is automatically validated, and if it still works, the GITHUB_PAT environment variable is set without the user having to do anything. And here is the best part: because the token is stored under the github.com domain in the credential store, both gert and command line git will automatically attempt to authenticate with this token when fetching/pushing Github HTTPS remotes. Workflow We still need to figure out how this will affect the recommended workflow. Currently many users hardcode the GITHUB_PAT in the ~/.Renviron file, so that it is automatically set in every R session. You could accomplish the same with the credentials package by adding this to your ~/.Rprofile file: # Load the GITHUB_PAT in the R session credentials::set_github_pat() However perhaps it is actually undesired to always have your GITHUB_PAT exposed in R. The nice thing about the credentials package is that it becomes easy to load your access token on demand. Hence, instead of setting the PAT on the start of each R session, a user or 3rd party package could call set_github_pat() whenever it needs access to the Github API.","title":"Highlights"},{"location":"Highlights/Readwise/Articles/A%20Builder%E2%80%99s%20Guide%20to%20Note-Taking/","text":"A Builder\u2019s Guide to Note-Taking \u00b6 Metadata \u00b6 Author: [[Tim Connors]] Full Title: A Builder\u2019s Guide to Note-Taking Category: #Type/Highlights/Article URL: https://medium.com/p/44e5880ef997 Highlights \u00b6 Knowledge codification is the act of representing and arranging your knowledge in a systemic form, such as adhering to specific formatting (like tags or headers) or creating collections of notes (like folders or indexes). This is done to make the exploitation of knowledge easier Knowledge exploitation is the act of leveraging your knowledge to further your goals. This of course involves knowledge retrieval: When you have a question, how easy is it to find an answer? But it also involves knowledge emergence: How easily can entirely new knowledge be created from within your existing system? The best knowledge management systems will make this easy. If you\u2019re looking for one lesson to take from this essay, let it be this: Your perfect knowledge management system is discovered, not planned. When starting out, prioritize simplicity and flexibility at all costs. Only formalize a system when it\u2019s absolutely necessary. In other words, pavement follows dirt. I like to use tags as metadata. My tags denote either the type of note ( #person #meeting #company ) or the status of a note ( #todo , #pending-contact ). I could use notes to do this, but I appreciate having an entirely separate level of information for these high-level categories. It makes scripting and searching easier. Source notes are for taking notes on primary sources of information, such as books, podcasts, meetings, conferences, videos, etc. My most common type of source note by far is meetings (#meeting). Here\u2019s what\u2019s going to happen: you\u2019re going to get super excited and take a bunch of notes. You\u2019re going to set some basic formatting ground rules to stay organized. And one day you\u2019re going to realize that something\u2019s just not working well. Maybe your note titles are too vague. Maybe your tagging system is too confusing. Maybe your formatting is too cumbersome. You\u2019ll want to make a change to your system.","title":"A Builder\u2019s Guide to Note-Taking"},{"location":"Highlights/Readwise/Articles/A%20Builder%E2%80%99s%20Guide%20to%20Note-Taking/#a-builders-guide-to-note-taking","text":"","title":"A Builder\u2019s Guide to Note-Taking"},{"location":"Highlights/Readwise/Articles/A%20Builder%E2%80%99s%20Guide%20to%20Note-Taking/#metadata","text":"Author: [[Tim Connors]] Full Title: A Builder\u2019s Guide to Note-Taking Category: #Type/Highlights/Article URL: https://medium.com/p/44e5880ef997","title":"Metadata"},{"location":"Highlights/Readwise/Articles/A%20Builder%E2%80%99s%20Guide%20to%20Note-Taking/#highlights","text":"Knowledge codification is the act of representing and arranging your knowledge in a systemic form, such as adhering to specific formatting (like tags or headers) or creating collections of notes (like folders or indexes). This is done to make the exploitation of knowledge easier Knowledge exploitation is the act of leveraging your knowledge to further your goals. This of course involves knowledge retrieval: When you have a question, how easy is it to find an answer? But it also involves knowledge emergence: How easily can entirely new knowledge be created from within your existing system? The best knowledge management systems will make this easy. If you\u2019re looking for one lesson to take from this essay, let it be this: Your perfect knowledge management system is discovered, not planned. When starting out, prioritize simplicity and flexibility at all costs. Only formalize a system when it\u2019s absolutely necessary. In other words, pavement follows dirt. I like to use tags as metadata. My tags denote either the type of note ( #person #meeting #company ) or the status of a note ( #todo , #pending-contact ). I could use notes to do this, but I appreciate having an entirely separate level of information for these high-level categories. It makes scripting and searching easier. Source notes are for taking notes on primary sources of information, such as books, podcasts, meetings, conferences, videos, etc. My most common type of source note by far is meetings (#meeting). Here\u2019s what\u2019s going to happen: you\u2019re going to get super excited and take a bunch of notes. You\u2019re going to set some basic formatting ground rules to stay organized. And one day you\u2019re going to realize that something\u2019s just not working well. Maybe your note titles are too vague. Maybe your tagging system is too confusing. Maybe your formatting is too cumbersome. You\u2019ll want to make a change to your system.","title":"Highlights"},{"location":"Highlights/Readwise/Articles/A%20Hierarchy%20First%20Approach%20to%20Note%20Taking/","text":"A Hierarchy First Approach to Note Taking \u00b6 Metadata \u00b6 Author: [[Kevin Lin]] Full Title: A Hierarchy First Approach to Note Taking Category: #Type/Highlights/Article URL: https://medium.com/p/9d4b176bd5ec Highlights \u00b6 Dendron is my attempt at building a tool that will give humans access to and command over the inherited knowledge of the ages Dendron is my attempt at building a tool that will give humans access to and command over the inherited knowledge of the ages \u201cWe are overwhelmed with information and we don\u2019t have the tools to properly index and filter through it. [The development of these tools, which] will give society access to and command over the inherited knowledge of the ages [should] be the first objective of our scientist\u201d \u2014 Vannevar Bush, 1945 Over 50 years ago, Vannevar Bush, an early visionary in information science, said something about the field that strikes a deep chord with me. I\u2019ve also expanded my schemas and have migrated from free form bullets to a structured YAML syntax. I\u2019ve also expanded my schemas and have migrated from free form bullets to a structured YAML syntax. By associating every note I took to a hierarchy, I found that looking up information no longer felt like an tax on my time, but instead, a path to self augmentation. By associating every note I took to a hierarchy, I found that looking up information no longer felt like an tax on my time, but instead, a path to self augmentation. I would use schemas as a common source of truth when building out a hierarchy and use them to make sure that each hierarchy was internally consistent. As I began to use this system day by day, I realized that I had stumbled upon a radically more effective way of learning. I would use schemas as a common source of truth when building out a hierarchy and use them to make sure that each hierarchy was internally consistent. As I began to use this system day by day, I realized that I had stumbled upon a radically more effective way of learning. As I started building hierarchies across more and more domains, I found that it became useful to document what they were. I called these externalized hierarchies schemas. They were a table of contents for a particular hierarchy. I started adding a special schema file directly underneath the root of each hierarchy. As I started building hierarchies across more and more domains, I found that it became useful to document what they were. I called these externalized hierarchies schemas. They were a table of contents for a particular hierarchy. I started adding a special schema file directly underneath the root of each hierarchy. And whereas folders were traditionally used to organize information, there was no straightforward way to use a folder hierarchy to quickly find information. Having the hierarchy in the filename made it easy to find information using the hierarchy And whereas folders were traditionally used to organize information, there was no straightforward way to use a folder hierarchy to quickly find information. Having the hierarchy in the filename made it easy to find information using the hierarchy But I didn\u2019t want folders. Folders were messy and besides, weren\u2019t supported in notational velocity, my primary note-taking tool at the time. So instead of folders, I decided to create a hierarchy using the . symbol as my delimiter. But I didn\u2019t want folders. Folders were messy and besides, weren\u2019t supported in notational velocity, my primary note-taking tool at the time. So instead of folders, I decided to create a hierarchy using the . symbol as my delimiter. Take python as an example. Python is both a programming language as well as a cli command. Without changing the name of one of the notes or introducing folders, there would be no way to create notes on both. Take python as an example. Python is both a programming language as well as a cli command. Without changing the name of one of the notes or introducing folders, there would be no way to create notes on both. What started as a single markdown file quickly spawned a few hundred more. It was exhilarating \u2014 instead of turning to google every time I ran into a dusty corner of Linux, I could just reference my notes. 95% of the time, there would be a nicely summarized note waiting for me :) What started as a single markdown file quickly spawned a few hundred more. It was exhilarating \u2014 instead of turning to google every time I ran into a dusty corner of Linux, I could just reference my notes. 95% of the time, there would be a nicely summarized note waiting for me :) Note that my tar.md note doesn't have every option or use case involving tar. Instead, it's only the options that I find most useful and use cases that I've had to do. This tends to be my approach to note-taking - I like to capture the bare minimum information I need so that the future me can get value out of the note Note that my tar.md note doesn't have every option or use case involving tar. Instead, it's only the options that I find most useful and use cases that I've had to do. This tends to be my approach to note-taking - I like to capture the bare minimum information I need so that the future me can get value out of the note I created a folder called notes. I created a note called tar.md I created a folder called notes. I created a note called tar.md it\u2019s compatible with existing note-taking methodologies like PARA it\u2019s compatible with existing note-taking methodologies like PARA it can be used on any note-taking tool that supports markdown notes it can be used on any note-taking tool that supports markdown notes it helps me build a comprehensive mental model around a domain through the act of organizing my notes it helps me build a comprehensive mental model around a domain through the act of organizing my notes it lets me find any specific note within seconds even with thousands of existing notes My solution is something I call hierarchal note taking. It\u2019s a system I\u2019ve developed over the past ten years that has allowed me to amass a corpus of +10k notes. If I spent more than 5 minutes figuring something out, those are five minutes I never want to spend again figuring out the same problem My primary use for notes is as a cache. Think Redis, but for humans. I\u2019ve expanded my use cases of note-taking beyond caching to also include journaling, task management, creating writing, keeping track of interactions, and lots more. I\u2019ve expanded my use cases of note-taking beyond caching to also include journaling, task management, creating writing, keeping track of interactions, and lots more.","title":"A Hierarchy First Approach to Note Taking"},{"location":"Highlights/Readwise/Articles/A%20Hierarchy%20First%20Approach%20to%20Note%20Taking/#a-hierarchy-first-approach-to-note-taking","text":"","title":"A Hierarchy First Approach to Note Taking"},{"location":"Highlights/Readwise/Articles/A%20Hierarchy%20First%20Approach%20to%20Note%20Taking/#metadata","text":"Author: [[Kevin Lin]] Full Title: A Hierarchy First Approach to Note Taking Category: #Type/Highlights/Article URL: https://medium.com/p/9d4b176bd5ec","title":"Metadata"},{"location":"Highlights/Readwise/Articles/A%20Hierarchy%20First%20Approach%20to%20Note%20Taking/#highlights","text":"Dendron is my attempt at building a tool that will give humans access to and command over the inherited knowledge of the ages Dendron is my attempt at building a tool that will give humans access to and command over the inherited knowledge of the ages \u201cWe are overwhelmed with information and we don\u2019t have the tools to properly index and filter through it. [The development of these tools, which] will give society access to and command over the inherited knowledge of the ages [should] be the first objective of our scientist\u201d \u2014 Vannevar Bush, 1945 Over 50 years ago, Vannevar Bush, an early visionary in information science, said something about the field that strikes a deep chord with me. I\u2019ve also expanded my schemas and have migrated from free form bullets to a structured YAML syntax. I\u2019ve also expanded my schemas and have migrated from free form bullets to a structured YAML syntax. By associating every note I took to a hierarchy, I found that looking up information no longer felt like an tax on my time, but instead, a path to self augmentation. By associating every note I took to a hierarchy, I found that looking up information no longer felt like an tax on my time, but instead, a path to self augmentation. I would use schemas as a common source of truth when building out a hierarchy and use them to make sure that each hierarchy was internally consistent. As I began to use this system day by day, I realized that I had stumbled upon a radically more effective way of learning. I would use schemas as a common source of truth when building out a hierarchy and use them to make sure that each hierarchy was internally consistent. As I began to use this system day by day, I realized that I had stumbled upon a radically more effective way of learning. As I started building hierarchies across more and more domains, I found that it became useful to document what they were. I called these externalized hierarchies schemas. They were a table of contents for a particular hierarchy. I started adding a special schema file directly underneath the root of each hierarchy. As I started building hierarchies across more and more domains, I found that it became useful to document what they were. I called these externalized hierarchies schemas. They were a table of contents for a particular hierarchy. I started adding a special schema file directly underneath the root of each hierarchy. And whereas folders were traditionally used to organize information, there was no straightforward way to use a folder hierarchy to quickly find information. Having the hierarchy in the filename made it easy to find information using the hierarchy And whereas folders were traditionally used to organize information, there was no straightforward way to use a folder hierarchy to quickly find information. Having the hierarchy in the filename made it easy to find information using the hierarchy But I didn\u2019t want folders. Folders were messy and besides, weren\u2019t supported in notational velocity, my primary note-taking tool at the time. So instead of folders, I decided to create a hierarchy using the . symbol as my delimiter. But I didn\u2019t want folders. Folders were messy and besides, weren\u2019t supported in notational velocity, my primary note-taking tool at the time. So instead of folders, I decided to create a hierarchy using the . symbol as my delimiter. Take python as an example. Python is both a programming language as well as a cli command. Without changing the name of one of the notes or introducing folders, there would be no way to create notes on both. Take python as an example. Python is both a programming language as well as a cli command. Without changing the name of one of the notes or introducing folders, there would be no way to create notes on both. What started as a single markdown file quickly spawned a few hundred more. It was exhilarating \u2014 instead of turning to google every time I ran into a dusty corner of Linux, I could just reference my notes. 95% of the time, there would be a nicely summarized note waiting for me :) What started as a single markdown file quickly spawned a few hundred more. It was exhilarating \u2014 instead of turning to google every time I ran into a dusty corner of Linux, I could just reference my notes. 95% of the time, there would be a nicely summarized note waiting for me :) Note that my tar.md note doesn't have every option or use case involving tar. Instead, it's only the options that I find most useful and use cases that I've had to do. This tends to be my approach to note-taking - I like to capture the bare minimum information I need so that the future me can get value out of the note Note that my tar.md note doesn't have every option or use case involving tar. Instead, it's only the options that I find most useful and use cases that I've had to do. This tends to be my approach to note-taking - I like to capture the bare minimum information I need so that the future me can get value out of the note I created a folder called notes. I created a note called tar.md I created a folder called notes. I created a note called tar.md it\u2019s compatible with existing note-taking methodologies like PARA it\u2019s compatible with existing note-taking methodologies like PARA it can be used on any note-taking tool that supports markdown notes it can be used on any note-taking tool that supports markdown notes it helps me build a comprehensive mental model around a domain through the act of organizing my notes it helps me build a comprehensive mental model around a domain through the act of organizing my notes it lets me find any specific note within seconds even with thousands of existing notes My solution is something I call hierarchal note taking. It\u2019s a system I\u2019ve developed over the past ten years that has allowed me to amass a corpus of +10k notes. If I spent more than 5 minutes figuring something out, those are five minutes I never want to spend again figuring out the same problem My primary use for notes is as a cache. Think Redis, but for humans. I\u2019ve expanded my use cases of note-taking beyond caching to also include journaling, task management, creating writing, keeping track of interactions, and lots more. I\u2019ve expanded my use cases of note-taking beyond caching to also include journaling, task management, creating writing, keeping track of interactions, and lots more.","title":"Highlights"},{"location":"Highlights/Readwise/Articles/A%20New%20Year%20Is%20a%20Beautiful%20Fresh%20Start/","text":"A New Year Is a Beautiful Fresh Start \u00b6 Metadata \u00b6 Author: [[zenhabits]] Full Title: A New Year Is a Beautiful Fresh Start Category: #Type/Highlights/Article URL: https://feedly.com/i/entry//XL293970xQc4/LKdILhU11EYv7L/n1qAwSKIkwfhDI=_176e2659ec3:2cefb3:c3a04210 Highlights \u00b6 Practicing a Fresh Start in Each Day Every morning, you get to ask yourself: What would I like to do with this incredible day?What would make today incredible for me?What am I feeling called to do today? What\u2019s most important? You can wipe the slate clean of whatever happened the day before (no matter what it was), and just start anew. And then you get a couple hours into it, and maybe you find yourself off course. You\u2019ve gotten distracted, or caught up in busywork. Start again. Take a breath, and imagine this next moment is a blank slate. What is most important right now? What would you like to do with this incredible hour in front of you? Start again. And find gratitude that you get to start again, over and over. Practicing with the Blank Slate of the New Year We\u2019re about a week into the new year, and you might have already started to lose the freshness of this year. But we\u2019re just starting out! We\u2019re at the very beginning, and we can do whatever we like with this year. What would make this an amazing year for you? What is possible for you this year? Who would you like to be? Take a notebook and pen, and spend 30 minutes thinking about this fresh space, and writing out some notes. Is this the year you finally write your book, launch something, create something? Grow your business to a new level, launch a new mission, help others in a big way? Tackle something hard and scary and meaningful? Are there new habits you want to create? This is your year, to use however you like. What magic can you create? Putting It Into Action Once you have an idea of what you\u2019d like to do or create \u2026 it\u2019s time to make it actually happen. Write it down and commit to it. Tell others and promise to report to them weekly. Adjust your plan each week, with the blank slate of the new week. Do a review each month, and get yourself back on track with each fresh month. One small step at a time, make it happen. One fresh start at a time. I have two invitations for you: Sea Change Program: My habits program has been redesigned this year to get you good at the fundamentals of creating new habits. We\u2019re starting with the mornings \u2014 the Beautiful Mornings Challenge is designed to help you start out a year of growth in the right way. Join Sea Change today to get started!Fearless Training Program: If you\u2019d like to deepen into the uncertainty of your meaningful work, this is the training program for you. You\u2019ll set ambitious goals, commit to them, and work with whatever obstacles get in the way. Join Fearless today.","title":"A New Year Is a Beautiful Fresh Start"},{"location":"Highlights/Readwise/Articles/A%20New%20Year%20Is%20a%20Beautiful%20Fresh%20Start/#a-new-year-is-a-beautiful-fresh-start","text":"","title":"A New Year Is a Beautiful Fresh Start"},{"location":"Highlights/Readwise/Articles/A%20New%20Year%20Is%20a%20Beautiful%20Fresh%20Start/#metadata","text":"Author: [[zenhabits]] Full Title: A New Year Is a Beautiful Fresh Start Category: #Type/Highlights/Article URL: https://feedly.com/i/entry//XL293970xQc4/LKdILhU11EYv7L/n1qAwSKIkwfhDI=_176e2659ec3:2cefb3:c3a04210","title":"Metadata"},{"location":"Highlights/Readwise/Articles/A%20New%20Year%20Is%20a%20Beautiful%20Fresh%20Start/#highlights","text":"Practicing a Fresh Start in Each Day Every morning, you get to ask yourself: What would I like to do with this incredible day?What would make today incredible for me?What am I feeling called to do today? What\u2019s most important? You can wipe the slate clean of whatever happened the day before (no matter what it was), and just start anew. And then you get a couple hours into it, and maybe you find yourself off course. You\u2019ve gotten distracted, or caught up in busywork. Start again. Take a breath, and imagine this next moment is a blank slate. What is most important right now? What would you like to do with this incredible hour in front of you? Start again. And find gratitude that you get to start again, over and over. Practicing with the Blank Slate of the New Year We\u2019re about a week into the new year, and you might have already started to lose the freshness of this year. But we\u2019re just starting out! We\u2019re at the very beginning, and we can do whatever we like with this year. What would make this an amazing year for you? What is possible for you this year? Who would you like to be? Take a notebook and pen, and spend 30 minutes thinking about this fresh space, and writing out some notes. Is this the year you finally write your book, launch something, create something? Grow your business to a new level, launch a new mission, help others in a big way? Tackle something hard and scary and meaningful? Are there new habits you want to create? This is your year, to use however you like. What magic can you create? Putting It Into Action Once you have an idea of what you\u2019d like to do or create \u2026 it\u2019s time to make it actually happen. Write it down and commit to it. Tell others and promise to report to them weekly. Adjust your plan each week, with the blank slate of the new week. Do a review each month, and get yourself back on track with each fresh month. One small step at a time, make it happen. One fresh start at a time. I have two invitations for you: Sea Change Program: My habits program has been redesigned this year to get you good at the fundamentals of creating new habits. We\u2019re starting with the mornings \u2014 the Beautiful Mornings Challenge is designed to help you start out a year of growth in the right way. Join Sea Change today to get started!Fearless Training Program: If you\u2019d like to deepen into the uncertainty of your meaningful work, this is the training program for you. You\u2019ll set ambitious goals, commit to them, and work with whatever obstacles get in the way. Join Fearless today.","title":"Highlights"},{"location":"Highlights/Readwise/Articles/A%20Preview%20of%20WSL%20in%20the%20Microsoft%20Store%20Is%20Now%20Available%21/","text":"A Preview of WSL in the Microsoft Store Is Now Available! \u00b6 Metadata \u00b6 Author: [[devblogs.microsoft.com]] Full Title: A Preview of WSL in the Microsoft Store Is Now Available! Category: #Type/Highlights/Article URL: https://devblogs.microsoft.com/commandline/a-preview-of-wsl-in-the-microsoft-store-is-now-available/ Highlights \u00b6 We\u2019ve already added in some new features that can be found in this preview such as: WSLg is now bundled as part of the WSL app! New wsl.exe --mount features! Add --mount --vhd to make mounting VHD files easier. Implement filesystem detection for wsl --mount. This change implements filesystem type detection if no --type is specified when using wsl.exe --mount. Add --name feature to wsl --mount. This change adds support for optionally naming a mountpoint when mounting a disk through WSL. Updated Linux kernel to 5.10.60.1 Added progress indicator helper function used to show a Please Wait message with animated dots on the conversion process to show users that WSL is still running. Switched wsl --install to not require the --distribution argument. This change switches wsl --install to not require the --distribution argument but maintains support to avoid breaking existing scripts. Added wsl.exe --version command which displays relevant version information ( View Highlight ) How to install and use WSL in the Microsoft Store First make sure you have these pre-requisites: Are using a Windows 11 build or higher (Windows build number 22000 or higher) Have the Virtual Machine Platform optional component enabled You can do this by running: dism.exe /online /enable-feature /featurename:VirtualMachinePlatform /all in an elevated PowerShell prompt Click on this link to go the WSL store page and click Install to install WSL, and then you can install a Linux distro of your choice to start using it. ( View Highlight ) What are the future plans for WSL in the Windows image? Our goals are to make WSL in the Microsoft Store the best way to install and use WSL, as you\u2019ll be able to get the latest updates fastest through that route, and in the long term we\u2019d like to move WSL users to use the store version. However, in Windows 11 we are still supporting the inbox version of WSL as we keep developing WSL in the store. This means that if you\u2019re using the inbox version you are still supported, and the WSL optional component is still present inside of Windows 11. We are going to be data driven, and will be using your feedback from this preview to help inform us for our future decisions with WSL in the Windows image in upcoming releases. ( View Highlight )","title":"A Preview of WSL in the Microsoft Store Is Now Available!"},{"location":"Highlights/Readwise/Articles/A%20Preview%20of%20WSL%20in%20the%20Microsoft%20Store%20Is%20Now%20Available%21/#a-preview-of-wsl-in-the-microsoft-store-is-now-available","text":"","title":"A Preview of WSL in the Microsoft Store Is Now Available!"},{"location":"Highlights/Readwise/Articles/A%20Preview%20of%20WSL%20in%20the%20Microsoft%20Store%20Is%20Now%20Available%21/#metadata","text":"Author: [[devblogs.microsoft.com]] Full Title: A Preview of WSL in the Microsoft Store Is Now Available! Category: #Type/Highlights/Article URL: https://devblogs.microsoft.com/commandline/a-preview-of-wsl-in-the-microsoft-store-is-now-available/","title":"Metadata"},{"location":"Highlights/Readwise/Articles/A%20Preview%20of%20WSL%20in%20the%20Microsoft%20Store%20Is%20Now%20Available%21/#highlights","text":"We\u2019ve already added in some new features that can be found in this preview such as: WSLg is now bundled as part of the WSL app! New wsl.exe --mount features! Add --mount --vhd to make mounting VHD files easier. Implement filesystem detection for wsl --mount. This change implements filesystem type detection if no --type is specified when using wsl.exe --mount. Add --name feature to wsl --mount. This change adds support for optionally naming a mountpoint when mounting a disk through WSL. Updated Linux kernel to 5.10.60.1 Added progress indicator helper function used to show a Please Wait message with animated dots on the conversion process to show users that WSL is still running. Switched wsl --install to not require the --distribution argument. This change switches wsl --install to not require the --distribution argument but maintains support to avoid breaking existing scripts. Added wsl.exe --version command which displays relevant version information ( View Highlight ) How to install and use WSL in the Microsoft Store First make sure you have these pre-requisites: Are using a Windows 11 build or higher (Windows build number 22000 or higher) Have the Virtual Machine Platform optional component enabled You can do this by running: dism.exe /online /enable-feature /featurename:VirtualMachinePlatform /all in an elevated PowerShell prompt Click on this link to go the WSL store page and click Install to install WSL, and then you can install a Linux distro of your choice to start using it. ( View Highlight ) What are the future plans for WSL in the Windows image? Our goals are to make WSL in the Microsoft Store the best way to install and use WSL, as you\u2019ll be able to get the latest updates fastest through that route, and in the long term we\u2019d like to move WSL users to use the store version. However, in Windows 11 we are still supporting the inbox version of WSL as we keep developing WSL in the store. This means that if you\u2019re using the inbox version you are still supported, and the WSL optional component is still present inside of Windows 11. We are going to be data driven, and will be using your feedback from this preview to help inform us for our future decisions with WSL in the Windows image in upcoming releases. ( View Highlight )","title":"Highlights"},{"location":"Highlights/Readwise/Articles/A%20Re-Introduction%20to%20JavaScript%20%28JS%20Tutorial%29%20-%20JavaScript%20%20MDN/","text":"A Re-Introduction to JavaScript (JS Tutorial) - JavaScript | MDN \u00b6 Metadata \u00b6 Author: [[developer.mozilla.org]] Full Title: A Re-Introduction to JavaScript (JS Tutorial) - JavaScript | MDN Category: #Type/Highlights/Article URL: https://developer.mozilla.org/en-US/docs/Web/JavaScript/A_re-introduction_to_JavaScript Highlights \u00b6 JavaScript was created in 1995 by Brendan Eich while he was an engineer at Netscape. JavaScript was first released with Netscape 2 early in 1996. It was originally going to be called LiveScript, but it was renamed in an ill-fated marketing decision that attempted to capitalize on the popularity of Sun Microsystem's Java language \u2014 despite the two having very little in common. This has been a source of confusion ever since. ( View Highlight ) Several months later, Microsoft released JScript with Internet Explorer 3. It was a mostly-compatible JavaScript work-alike. Several months after that, Netscape submitted JavaScript to Ecma International, a European standards organization, which resulted in the first edition of the ECMAScript standard that year. The standard received a significant update as ECMAScript edition 3 in 1999, and it has stayed pretty much stable ever since. The fourth edition was abandoned, due to political differences concerning language complexity. Many parts of the fourth edition formed the basis for ECMAScript edition 5, published in December of 2009, and for the 6th major edition of the standard, published in June of 2015. ( View Highlight ) Unlike most programming languages, the JavaScript language has no concept of input or output. It is designed to run as a scripting language in a host environment, and it is up to the host environment to provide mechanisms for communicating with the outside world. The most common host environment is the browser, but JavaScript interpreters can also be found in a huge list of other places, including Adobe Acrobat, Adobe Photoshop, SVG images, Yahoo's Widget engine, server-side environments such as Node.js, NoSQL databases like the open source Apache CouchDB, embedded computers, complete desktop environments like GNOME (one of the most popular GUIs for GNU/Linux operating systems), and others. ( View Highlight ) Let's start off by looking at the building blocks of any language: the types. JavaScript programs manipulate values, and those values all belong to a type. JavaScript's types are: Number BigInt String Boolean Function Object Symbol (new in ES2015) ( View Highlight )","title":"A Re-Introduction to JavaScript (JS Tutorial) - JavaScript | MDN"},{"location":"Highlights/Readwise/Articles/A%20Re-Introduction%20to%20JavaScript%20%28JS%20Tutorial%29%20-%20JavaScript%20%20MDN/#a-re-introduction-to-javascript-js-tutorial-javascript-mdn","text":"","title":"A Re-Introduction to JavaScript (JS Tutorial) - JavaScript | MDN"},{"location":"Highlights/Readwise/Articles/A%20Re-Introduction%20to%20JavaScript%20%28JS%20Tutorial%29%20-%20JavaScript%20%20MDN/#metadata","text":"Author: [[developer.mozilla.org]] Full Title: A Re-Introduction to JavaScript (JS Tutorial) - JavaScript | MDN Category: #Type/Highlights/Article URL: https://developer.mozilla.org/en-US/docs/Web/JavaScript/A_re-introduction_to_JavaScript","title":"Metadata"},{"location":"Highlights/Readwise/Articles/A%20Re-Introduction%20to%20JavaScript%20%28JS%20Tutorial%29%20-%20JavaScript%20%20MDN/#highlights","text":"JavaScript was created in 1995 by Brendan Eich while he was an engineer at Netscape. JavaScript was first released with Netscape 2 early in 1996. It was originally going to be called LiveScript, but it was renamed in an ill-fated marketing decision that attempted to capitalize on the popularity of Sun Microsystem's Java language \u2014 despite the two having very little in common. This has been a source of confusion ever since. ( View Highlight ) Several months later, Microsoft released JScript with Internet Explorer 3. It was a mostly-compatible JavaScript work-alike. Several months after that, Netscape submitted JavaScript to Ecma International, a European standards organization, which resulted in the first edition of the ECMAScript standard that year. The standard received a significant update as ECMAScript edition 3 in 1999, and it has stayed pretty much stable ever since. The fourth edition was abandoned, due to political differences concerning language complexity. Many parts of the fourth edition formed the basis for ECMAScript edition 5, published in December of 2009, and for the 6th major edition of the standard, published in June of 2015. ( View Highlight ) Unlike most programming languages, the JavaScript language has no concept of input or output. It is designed to run as a scripting language in a host environment, and it is up to the host environment to provide mechanisms for communicating with the outside world. The most common host environment is the browser, but JavaScript interpreters can also be found in a huge list of other places, including Adobe Acrobat, Adobe Photoshop, SVG images, Yahoo's Widget engine, server-side environments such as Node.js, NoSQL databases like the open source Apache CouchDB, embedded computers, complete desktop environments like GNOME (one of the most popular GUIs for GNU/Linux operating systems), and others. ( View Highlight ) Let's start off by looking at the building blocks of any language: the types. JavaScript programs manipulate values, and those values all belong to a type. JavaScript's types are: Number BigInt String Boolean Function Object Symbol (new in ES2015) ( View Highlight )","title":"Highlights"},{"location":"Highlights/Readwise/Articles/A%20Workflow%20for%20R/","text":"A Workflow for R \u00b6 Metadata \u00b6 Author: [[David Smith]] Full Title: A Workflow for R Category: #Type/Highlights/Article URL: https://blog.revolutionanalytics.com/2010/10/a-workflow-for-r.html Highlights \u00b6 Transparency: A good workflow organizes the elements of the project logically and clearly, to make it easy for an observer (including yourself) to understand how the pieces come together. Maintainability: A good workflow makes it easy to modify and adapt the project. Standardized script names and good commenting practices (in the code, as well as things like README files) are key here. Modularity: A good workflow encapsulates discrete tasks into separate components (e.g. scripts), so that it's always clear where modifications need to be made (and only made in one place), and components are re-usable for other projects. Portability: A good workflow makes it easy to move the project to another system, or hand it over to another person to work on, in such a way that it can still easily be run elsewhere. (By using relative (not absolute) pathnames, and remote access to sharedWorkflow for statistical analysis and report writing data, are two examples.) Tags: [[favorite]] Reproducibility: A good workflow makes it easy for you, or others, to reproduce your results. Efficiency: Here I'm referring to the efficiency of you, the programmer, not computational efficiency. A good workflow saves you time, by making it easier to work on the project, and by automating as much of the process as possible.","title":"A Workflow for R"},{"location":"Highlights/Readwise/Articles/A%20Workflow%20for%20R/#a-workflow-for-r","text":"","title":"A Workflow for R"},{"location":"Highlights/Readwise/Articles/A%20Workflow%20for%20R/#metadata","text":"Author: [[David Smith]] Full Title: A Workflow for R Category: #Type/Highlights/Article URL: https://blog.revolutionanalytics.com/2010/10/a-workflow-for-r.html","title":"Metadata"},{"location":"Highlights/Readwise/Articles/A%20Workflow%20for%20R/#highlights","text":"Transparency: A good workflow organizes the elements of the project logically and clearly, to make it easy for an observer (including yourself) to understand how the pieces come together. Maintainability: A good workflow makes it easy to modify and adapt the project. Standardized script names and good commenting practices (in the code, as well as things like README files) are key here. Modularity: A good workflow encapsulates discrete tasks into separate components (e.g. scripts), so that it's always clear where modifications need to be made (and only made in one place), and components are re-usable for other projects. Portability: A good workflow makes it easy to move the project to another system, or hand it over to another person to work on, in such a way that it can still easily be run elsewhere. (By using relative (not absolute) pathnames, and remote access to sharedWorkflow for statistical analysis and report writing data, are two examples.) Tags: [[favorite]] Reproducibility: A good workflow makes it easy for you, or others, to reproduce your results. Efficiency: Here I'm referring to the efficiency of you, the programmer, not computational efficiency. A good workflow saves you time, by making it easier to work on the project, and by automating as much of the process as possible.","title":"Highlights"},{"location":"Highlights/Readwise/Articles/A%20%E2%80%98Jobs%20to%20Be%20Done%E2%80%99%20Framework%20for%20Startups/","text":"A \u2018Jobs to Be Done\u2019 Framework for Startups \u00b6 Metadata \u00b6 Author: [[firstround.com]] Full Title: A \u2018Jobs to Be Done\u2019 Framework for Startups Category: #Type/Highlights/Article URL: https://firstround.com/review/build-products-that-solve-real-problems-with-this-lightweight-jtbd-framework/ Highlights \u00b6 You\u2019re relying too heavily on your own vision. You\u2019re not really listening to your users and you\u2019re building something you think people want. This is confirmation bias at play \u2014 the human tendency to cherry-pick information that aligns with our pre-existing beliefs while ignoring information that doesn\u2019t. If you haven\u2019t gotten out and deeply understood who you are building for and what problems they experience, you are more likely to run into this problem. Another variation happens when translating research-based practices into consumer experiences (common in health and education products) \u2014 just because something is proven to be healthy or lead to good outcomes doesn\u2019t ensure people will be motivated to try it out. You\u2019re more focused on the excitement of the technical challenge than your users. Often, eng and design teams may get excited about a specific project because it\u2019s a new challenge to create. But just because it\u2019s new and fun to build doesn\u2019t mean people will actually use it. This tends to be one of the more common pitfalls of hardware teams, which have an especially high cost to getting their products wrong. You can\u2019t crisply articulate your value prop, and everyone on the team looks at it a different way. We\u2019ve all been there \u2014 product sees the value as X, marketing sees the value as Y, eng sees the value as Z. This happens when you don\u2019t have a shared sense of empathy around the problems users face. It makes it tough to drive alignment and focus on what features matter the most or how to align product features with go-to-market need WHY YOU CAN\u2019T JUST WING IT: THE CASE FOR USING A FRAMEWORK TO UNDERSTAND YOUR CUSTOMERS ENTER THE JOBS TO BE DONE FRAMEWORK: WHAT IT IS AND HOW IT TAPS INTO WHAT CUSTOMERS WANT BUILDING BETTER PRODUCTS STARTS WITH A GOOD JTBD STATEMENT \u2014 HERE\u2019S YOUR ROADMAP A good, crisp JTBD statement captures underlying motivations, triggers and context for the problems your user faces. This statement can be foundational for your entire product and GTM planning, from focusing your PRD or product spec, to identifying your channels and marketing messages. A good statement will help remove bias, build empathy for users and bring alignment across product, marketing and eng teams. When you have a well-crafted (and well-communicated) jobs to be done statement, the following things start to fall in place: An increased focus across your team on solving the most important problems by using shared language for how you all understand what problems to prioritize A higher likelihood of delivering new value to people by solving real problems, which should translate into positive leading indicators of important product metrics (like higher engagement and stickiness of your product) A stronger understanding of competition for your product, by understanding more about the situational context and full set of alternatives that people \u201chire\u201d to do that job.","title":"A \u2018Jobs to Be Done\u2019 Framework for Startups"},{"location":"Highlights/Readwise/Articles/A%20%E2%80%98Jobs%20to%20Be%20Done%E2%80%99%20Framework%20for%20Startups/#a-jobs-to-be-done-framework-for-startups","text":"","title":"A \u2018Jobs to Be Done\u2019 Framework for Startups"},{"location":"Highlights/Readwise/Articles/A%20%E2%80%98Jobs%20to%20Be%20Done%E2%80%99%20Framework%20for%20Startups/#metadata","text":"Author: [[firstround.com]] Full Title: A \u2018Jobs to Be Done\u2019 Framework for Startups Category: #Type/Highlights/Article URL: https://firstround.com/review/build-products-that-solve-real-problems-with-this-lightweight-jtbd-framework/","title":"Metadata"},{"location":"Highlights/Readwise/Articles/A%20%E2%80%98Jobs%20to%20Be%20Done%E2%80%99%20Framework%20for%20Startups/#highlights","text":"You\u2019re relying too heavily on your own vision. You\u2019re not really listening to your users and you\u2019re building something you think people want. This is confirmation bias at play \u2014 the human tendency to cherry-pick information that aligns with our pre-existing beliefs while ignoring information that doesn\u2019t. If you haven\u2019t gotten out and deeply understood who you are building for and what problems they experience, you are more likely to run into this problem. Another variation happens when translating research-based practices into consumer experiences (common in health and education products) \u2014 just because something is proven to be healthy or lead to good outcomes doesn\u2019t ensure people will be motivated to try it out. You\u2019re more focused on the excitement of the technical challenge than your users. Often, eng and design teams may get excited about a specific project because it\u2019s a new challenge to create. But just because it\u2019s new and fun to build doesn\u2019t mean people will actually use it. This tends to be one of the more common pitfalls of hardware teams, which have an especially high cost to getting their products wrong. You can\u2019t crisply articulate your value prop, and everyone on the team looks at it a different way. We\u2019ve all been there \u2014 product sees the value as X, marketing sees the value as Y, eng sees the value as Z. This happens when you don\u2019t have a shared sense of empathy around the problems users face. It makes it tough to drive alignment and focus on what features matter the most or how to align product features with go-to-market need WHY YOU CAN\u2019T JUST WING IT: THE CASE FOR USING A FRAMEWORK TO UNDERSTAND YOUR CUSTOMERS ENTER THE JOBS TO BE DONE FRAMEWORK: WHAT IT IS AND HOW IT TAPS INTO WHAT CUSTOMERS WANT BUILDING BETTER PRODUCTS STARTS WITH A GOOD JTBD STATEMENT \u2014 HERE\u2019S YOUR ROADMAP A good, crisp JTBD statement captures underlying motivations, triggers and context for the problems your user faces. This statement can be foundational for your entire product and GTM planning, from focusing your PRD or product spec, to identifying your channels and marketing messages. A good statement will help remove bias, build empathy for users and bring alignment across product, marketing and eng teams. When you have a well-crafted (and well-communicated) jobs to be done statement, the following things start to fall in place: An increased focus across your team on solving the most important problems by using shared language for how you all understand what problems to prioritize A higher likelihood of delivering new value to people by solving real problems, which should translate into positive leading indicators of important product metrics (like higher engagement and stickiness of your product) A stronger understanding of competition for your product, by understanding more about the situational context and full set of alternatives that people \u201chire\u201d to do that job.","title":"Highlights"},{"location":"Highlights/Readwise/Articles/Action%20Items%20Template%20for%20Excel/","text":"Action Items Template for Excel \u00b6 Metadata \u00b6 Author: [[techno-pm.com]] Full Title: Action Items Template for Excel Category: #Type/Highlights/Article URL: https://www.techno-pm.com/2017/06/action-item-tracker-excel-template.html Highlights \u00b6 What is an Action Item? Action Item is a task that is assigned to a specific individual generally with an end date. Action items are typically a result of discussions between various parties in a meeting. An action item can also arise from a situation such as incidents or emergencies within the organization. Actions are used effectively in Project Management and Day-to-day operations (BAU).","title":"Action Items Template for Excel"},{"location":"Highlights/Readwise/Articles/Action%20Items%20Template%20for%20Excel/#action-items-template-for-excel","text":"","title":"Action Items Template for Excel"},{"location":"Highlights/Readwise/Articles/Action%20Items%20Template%20for%20Excel/#metadata","text":"Author: [[techno-pm.com]] Full Title: Action Items Template for Excel Category: #Type/Highlights/Article URL: https://www.techno-pm.com/2017/06/action-item-tracker-excel-template.html","title":"Metadata"},{"location":"Highlights/Readwise/Articles/Action%20Items%20Template%20for%20Excel/#highlights","text":"What is an Action Item? Action Item is a task that is assigned to a specific individual generally with an end date. Action items are typically a result of discussions between various parties in a meeting. An action item can also arise from a situation such as incidents or emergencies within the organization. Actions are used effectively in Project Management and Day-to-day operations (BAU).","title":"Highlights"},{"location":"Highlights/Readwise/Articles/An%20Iterative%20Approach%20to%20Notes/","text":"An Iterative Approach to Notes \u00b6 Metadata \u00b6 Author: Full Title: An Iterative Approach to Notes Category: #Type/Highlights/Article URL: https://medium.com/@bytebase/an-iterative-approach-to-notes-f1c2a28c4d29 Highlights \u00b6 Keeping our practices simple and lightweight make it more likely that we actually apply them. This requires embracing imperfection. A simple strategy that\u2019s easy to keep up with is preferable to a heavy-duty strategy that doesn\u2019t stick \u2014 even if the latter promises better outcomes. Bytebase is designed for busy professionals who don\u2019t have time for sophisticated notes methodologies. While we admire the beautiful notes some folks are capable of producing, we want to enable a dependable approach to notes that fits into our lives with minimal overhead. To that end, we\u2019ve found that one of the simplest and most effective strategies is to separate the \u201cDump\u201d phase of notes from the \u201cRefine\u201d phase. Separating the Dump and Refine phases For long-form writing, it\u2019s common wisdom to start with a rough first draft. Then you can go back to refine, re-organize and edit in subsequent passes. Separating these phases is important: if we stop to self-critique as we write, we are likely to slow, if not entirely block, our forward progress. The Dump: embracing messiness Ernest Hemingway is thought to have said, \u201cThe first draft of anything is shit.\u201d When we have something to write down, we should just write it down \u2014 in the simplest, most efficient way possible. We call this the Dump. During the Dump phase, we should withhold judgment and embrace messiness. All that matters is getting it down. We shouldn\u2019t worry about where to organize what we\u2019re writing. We shouldn\u2019t obsess over word choice or strive for eloquence. The requirements are modest: that we can find it later, and that the core of it is roughly intelligible to our future selves. We recommend having a designated Dump location for your notes. This ensures you can find what you\u2019ve written later. It also removes all doubt and friction when choosing where to jot something down. In Bytebase the designated Dump location is called No Man\u2019s Land. The Dump location should be a welcoming, safe space for messiness. This ensures that nothing holds you back from getting things down. Refine: one small step at a time","title":"An Iterative Approach to Notes"},{"location":"Highlights/Readwise/Articles/An%20Iterative%20Approach%20to%20Notes/#an-iterative-approach-to-notes","text":"","title":"An Iterative Approach to Notes"},{"location":"Highlights/Readwise/Articles/An%20Iterative%20Approach%20to%20Notes/#metadata","text":"Author: Full Title: An Iterative Approach to Notes Category: #Type/Highlights/Article URL: https://medium.com/@bytebase/an-iterative-approach-to-notes-f1c2a28c4d29","title":"Metadata"},{"location":"Highlights/Readwise/Articles/An%20Iterative%20Approach%20to%20Notes/#highlights","text":"Keeping our practices simple and lightweight make it more likely that we actually apply them. This requires embracing imperfection. A simple strategy that\u2019s easy to keep up with is preferable to a heavy-duty strategy that doesn\u2019t stick \u2014 even if the latter promises better outcomes. Bytebase is designed for busy professionals who don\u2019t have time for sophisticated notes methodologies. While we admire the beautiful notes some folks are capable of producing, we want to enable a dependable approach to notes that fits into our lives with minimal overhead. To that end, we\u2019ve found that one of the simplest and most effective strategies is to separate the \u201cDump\u201d phase of notes from the \u201cRefine\u201d phase. Separating the Dump and Refine phases For long-form writing, it\u2019s common wisdom to start with a rough first draft. Then you can go back to refine, re-organize and edit in subsequent passes. Separating these phases is important: if we stop to self-critique as we write, we are likely to slow, if not entirely block, our forward progress. The Dump: embracing messiness Ernest Hemingway is thought to have said, \u201cThe first draft of anything is shit.\u201d When we have something to write down, we should just write it down \u2014 in the simplest, most efficient way possible. We call this the Dump. During the Dump phase, we should withhold judgment and embrace messiness. All that matters is getting it down. We shouldn\u2019t worry about where to organize what we\u2019re writing. We shouldn\u2019t obsess over word choice or strive for eloquence. The requirements are modest: that we can find it later, and that the core of it is roughly intelligible to our future selves. We recommend having a designated Dump location for your notes. This ensures you can find what you\u2019ve written later. It also removes all doubt and friction when choosing where to jot something down. In Bytebase the designated Dump location is called No Man\u2019s Land. The Dump location should be a welcoming, safe space for messiness. This ensures that nothing holds you back from getting things down. Refine: one small step at a time","title":"Highlights"},{"location":"Highlights/Readwise/Articles/Architecture%20for%20a%20Startup-2/","text":"Architecture for a Startup \u00b6 Metadata \u00b6 Author: [[Mitesh]] Full Title: Architecture for a Startup Category: #Type/Highlights/Article URL: https://medium.com/p/86651962bc99 Highlights \u00b6 Deployment: We used Jenkins for deployment. I tried using other tools but felt at home with Jenkins. Overall philosophy was to build once, deploy everywhere. We had two jobs for each deployment, one which builds a branch and the other which deploys that build. This way we can have the same build deployed on any environment. This was deployed in admin VPC which was used for common use cases. Monitoring: We used the NewRelic free tier for monitoring the system along with a self-hosted sentry server to catch all server issues. Sentry was very helpful for catching backend bugs that came when the application is live. Sentry was deployed in separate admin VPC as that is the same for all environments Static web app: We had a static website that was deployed on S3 and served using the static web hosting feature provided by S3. I added a CloudFront CDN in front of S3 to serve users faster, as CDN will cache content. All domains were routed through Route53 Metabase is an open-source business analytics server. This was deployed in the app subnet and exposed using ALB with Cognito (google auth) to keep access secure for internal users only. Terraform is used for infrastructure as code and Ansible is used as configuration management.","title":"Architecture for a Startup"},{"location":"Highlights/Readwise/Articles/Architecture%20for%20a%20Startup-2/#architecture-for-a-startup","text":"","title":"Architecture for a Startup"},{"location":"Highlights/Readwise/Articles/Architecture%20for%20a%20Startup-2/#metadata","text":"Author: [[Mitesh]] Full Title: Architecture for a Startup Category: #Type/Highlights/Article URL: https://medium.com/p/86651962bc99","title":"Metadata"},{"location":"Highlights/Readwise/Articles/Architecture%20for%20a%20Startup-2/#highlights","text":"Deployment: We used Jenkins for deployment. I tried using other tools but felt at home with Jenkins. Overall philosophy was to build once, deploy everywhere. We had two jobs for each deployment, one which builds a branch and the other which deploys that build. This way we can have the same build deployed on any environment. This was deployed in admin VPC which was used for common use cases. Monitoring: We used the NewRelic free tier for monitoring the system along with a self-hosted sentry server to catch all server issues. Sentry was very helpful for catching backend bugs that came when the application is live. Sentry was deployed in separate admin VPC as that is the same for all environments Static web app: We had a static website that was deployed on S3 and served using the static web hosting feature provided by S3. I added a CloudFront CDN in front of S3 to serve users faster, as CDN will cache content. All domains were routed through Route53 Metabase is an open-source business analytics server. This was deployed in the app subnet and exposed using ALB with Cognito (google auth) to keep access secure for internal users only. Terraform is used for infrastructure as code and Ansible is used as configuration management.","title":"Highlights"},{"location":"Highlights/Readwise/Articles/Architecture%20for%20a%20Startup/","text":"Architecture for a Startup \u00b6 Metadata \u00b6 Author: [[Mitesh]] Full Title: Architecture for a Startup Category: #Type/Highlights/Article URL: https://medium.com/p/86651962bc99 Highlights \u00b6 Deployment: We used Jenkins for deployment. I tried using other tools but felt at home with Jenkins. Overall philosophy was to build once, deploy everywhere. We had two jobs for each deployment, one which builds a branch and the other which deploys that build. This way we can have the same build deployed on any environment. This was deployed in admin VPC which was used for common use cases. Monitoring: We used the NewRelic free tier for monitoring the system along with a self-hosted sentry server to catch all server issues. Sentry was very helpful for catching backend bugs that came when the application is live. Sentry was deployed in separate admin VPC as that is the same for all environments Static web app: We had a static website that was deployed on S3 and served using the static web hosting feature provided by S3. I added a CloudFront CDN in front of S3 to serve users faster, as CDN will cache content. All domains were routed through Route53 Metabase is an open-source business analytics server. This was deployed in the app subnet and exposed using ALB with Cognito (google auth) to keep access secure for internal users only. Terraform is used for infrastructure as code and Ansible is used as configuration management.","title":"Architecture for a Startup"},{"location":"Highlights/Readwise/Articles/Architecture%20for%20a%20Startup/#architecture-for-a-startup","text":"","title":"Architecture for a Startup"},{"location":"Highlights/Readwise/Articles/Architecture%20for%20a%20Startup/#metadata","text":"Author: [[Mitesh]] Full Title: Architecture for a Startup Category: #Type/Highlights/Article URL: https://medium.com/p/86651962bc99","title":"Metadata"},{"location":"Highlights/Readwise/Articles/Architecture%20for%20a%20Startup/#highlights","text":"Deployment: We used Jenkins for deployment. I tried using other tools but felt at home with Jenkins. Overall philosophy was to build once, deploy everywhere. We had two jobs for each deployment, one which builds a branch and the other which deploys that build. This way we can have the same build deployed on any environment. This was deployed in admin VPC which was used for common use cases. Monitoring: We used the NewRelic free tier for monitoring the system along with a self-hosted sentry server to catch all server issues. Sentry was very helpful for catching backend bugs that came when the application is live. Sentry was deployed in separate admin VPC as that is the same for all environments Static web app: We had a static website that was deployed on S3 and served using the static web hosting feature provided by S3. I added a CloudFront CDN in front of S3 to serve users faster, as CDN will cache content. All domains were routed through Route53 Metabase is an open-source business analytics server. This was deployed in the app subnet and exposed using ALB with Cognito (google auth) to keep access secure for internal users only. Terraform is used for infrastructure as code and Ansible is used as configuration management.","title":"Highlights"},{"location":"Highlights/Readwise/Articles/Archivist%20and%20GitHub%20Integration%20Archivist.github/","text":"Archivist and GitHub Integration: Archivist.github \u00b6 Metadata \u00b6 Author: [[Marcin Kosi\u0144ski]] Full Title: Archivist and GitHub Integration: Archivist.github Category: #Type/Highlights/Article URL: http://r-addict.com/archivist.github/ Highlights \u00b6 The archivist is an R package for data analysis results management, which helps in managing, sharing, storing, linking and searching for R objects. The archivist package automatically retrieves the object\u2019s meta-data and creates a rich structure that allows for easy management of calculated R objects. It also extends the reproducible research paradigm by creating new ways to retrieve and validate previously calculated objects.","title":"Archivist and GitHub Integration: Archivist.github"},{"location":"Highlights/Readwise/Articles/Archivist%20and%20GitHub%20Integration%20Archivist.github/#archivist-and-github-integration-archivistgithub","text":"","title":"Archivist and GitHub Integration: Archivist.github"},{"location":"Highlights/Readwise/Articles/Archivist%20and%20GitHub%20Integration%20Archivist.github/#metadata","text":"Author: [[Marcin Kosi\u0144ski]] Full Title: Archivist and GitHub Integration: Archivist.github Category: #Type/Highlights/Article URL: http://r-addict.com/archivist.github/","title":"Metadata"},{"location":"Highlights/Readwise/Articles/Archivist%20and%20GitHub%20Integration%20Archivist.github/#highlights","text":"The archivist is an R package for data analysis results management, which helps in managing, sharing, storing, linking and searching for R objects. The archivist package automatically retrieves the object\u2019s meta-data and creates a rich structure that allows for easy management of calculated R objects. It also extends the reproducible research paradigm by creating new ways to retrieve and validate previously calculated objects.","title":"Highlights"},{"location":"Highlights/Readwise/Articles/Are%20You%20Making%20This%20GTD%20Mistake%20-%20Asian%20Efficiency/","text":"Are You Making This GTD Mistake? - Asian Efficiency \u00b6 Metadata \u00b6 Author: [[Thanh Pham]] Full Title: Are You Making This GTD Mistake? - Asian Efficiency Category: #Type/Highlights/Article URL: https://www.asianefficiency.com/productivity/common-gtd-mistake/ Highlights \u00b6 1 Mistake New GTD Users Make \u00b6 Many years ago, I met this smart and beautiful woman in Las Vegas. We were both single and flirting with each other. She asked me what I did for a living and I said that I was blogging about productivity. \u201cYou must be a GTD user too,\u201d she said. \u201cYes, I am. I doubt you are.\u201d Playfully she replied, \u201cExcuse me? Are you doubting me that I don\u2019t know what GTD is?\u201d \u201cYes I do. What\u2019s the most important step in Getting Things Done?\u201d Only someone who is a GTD practitioner and follows the methodology on a regular basis would be able to answer this question. A few seconds later, she said: \u201cIt\u2019s the review step. Without it, the whole system falls apart.\u201d (That\u2019s when I fell in love with this woman. We ended up dating for a few years.) She\u2019s right. The review step, which sometimes is referred to as the Reflect step, is the most important step of the whole GTD framework. It\u2019s easy for pieces of information, tasks, and reminders to get scattered all over the place. Organizing that is important (which is why it\u2019s one of the steps in GTD) but reviewing everything is crucial to get yourself focused on the right things coming ahead of you. The biggest mistake I see that new Getting Things Done users make is that they are not consistently doing their reviews. Out of the five steps in the GTD methodology, this is the most neglected step. Without the review step, you might end up focusing your time and energy on the wrong thing. That\u2019s not productive, is it? So why do people struggle with this step so much? Based on my experience, there are a couple of reasons why: It can be very tedious the first few times you do it It can take a long time to do (an hour or two) You have to make it a habit which is already hard to do on top of everything else you have to learn","title":"Are You Making This GTD Mistake? - Asian Efficiency"},{"location":"Highlights/Readwise/Articles/Are%20You%20Making%20This%20GTD%20Mistake%20-%20Asian%20Efficiency/#are-you-making-this-gtd-mistake-asian-efficiency","text":"","title":"Are You Making This GTD Mistake? - Asian Efficiency"},{"location":"Highlights/Readwise/Articles/Are%20You%20Making%20This%20GTD%20Mistake%20-%20Asian%20Efficiency/#metadata","text":"Author: [[Thanh Pham]] Full Title: Are You Making This GTD Mistake? - Asian Efficiency Category: #Type/Highlights/Article URL: https://www.asianefficiency.com/productivity/common-gtd-mistake/","title":"Metadata"},{"location":"Highlights/Readwise/Articles/Are%20You%20Making%20This%20GTD%20Mistake%20-%20Asian%20Efficiency/#highlights","text":"","title":"Highlights"},{"location":"Highlights/Readwise/Articles/Are%20You%20Making%20This%20GTD%20Mistake%20-%20Asian%20Efficiency/#1-mistake-new-gtd-users-make","text":"Many years ago, I met this smart and beautiful woman in Las Vegas. We were both single and flirting with each other. She asked me what I did for a living and I said that I was blogging about productivity. \u201cYou must be a GTD user too,\u201d she said. \u201cYes, I am. I doubt you are.\u201d Playfully she replied, \u201cExcuse me? Are you doubting me that I don\u2019t know what GTD is?\u201d \u201cYes I do. What\u2019s the most important step in Getting Things Done?\u201d Only someone who is a GTD practitioner and follows the methodology on a regular basis would be able to answer this question. A few seconds later, she said: \u201cIt\u2019s the review step. Without it, the whole system falls apart.\u201d (That\u2019s when I fell in love with this woman. We ended up dating for a few years.) She\u2019s right. The review step, which sometimes is referred to as the Reflect step, is the most important step of the whole GTD framework. It\u2019s easy for pieces of information, tasks, and reminders to get scattered all over the place. Organizing that is important (which is why it\u2019s one of the steps in GTD) but reviewing everything is crucial to get yourself focused on the right things coming ahead of you. The biggest mistake I see that new Getting Things Done users make is that they are not consistently doing their reviews. Out of the five steps in the GTD methodology, this is the most neglected step. Without the review step, you might end up focusing your time and energy on the wrong thing. That\u2019s not productive, is it? So why do people struggle with this step so much? Based on my experience, there are a couple of reasons why: It can be very tedious the first few times you do it It can take a long time to do (an hour or two) You have to make it a habit which is already hard to do on top of everything else you have to learn","title":"1 Mistake New GTD Users Make"},{"location":"Highlights/Readwise/Articles/Audiobook%20Review%20David%20Allen%27s%20GTD%20%20Weekly%20Review/","text":"Audiobook Review: David Allen's \"GTD > Weekly Review\" \u00b6 Metadata \u00b6 Author: [[lifehack.org]] Full Title: Audiobook Review: David Allen's \"GTD > Weekly Review\" Category: #Type/Highlights/Article URL: https://www.lifehack.org/articles/featured/audiobook-review-david-allens-gtd-weekly-review.html Highlights \u00b6 Get clear The weekly review is an opportunity to clear your head and really explore where you\u2019re at and where you\u2019re headed. Pay special attention to when you schedule it, because it needs to be a time that works best for you \u2014 when you\u2019re not only uninterrupted but most likely to be \u201cat peace\u201d, without any huge problems hanging over your head demanding immediate attention. A weekly review can still be useful even if you\u2019re hurried and there are urgent matters pressing, but if your weekly review is always under those conditions, you probably need to schedule it to a more appropriate time. ( View Highlight ) e. Be sure you do schedule it, though. For too many of us, the weekly review is a \u201cwhen I get around to it\u201d kind of commitment, which more or less undoes what a weekly review can offer. Make a hard commitment to yourself, in your calendar, to do a weekly review every week. One important point Allen and the others bring up is that a weekly review is not \u201ccatch-up\u201d time \u2014 it\u2019s not a couple of extra slack hours for doing everything you\u2019ve gotten behind in over the course of the week. This especially applies to email. While Allen does recommend keeping your email inbox empty, if you aren\u2019t doing this on a weekly basis, your weekly review is not the time to start! If you have a large email backlog, schedule time to clear it up over the course of the upcoming week. Get current Review your calendar How much of your calendar should you review. Allen\u2019s answer is simple: as far back as you need to, and as far forward as you need to. For Allen, this means many months forward, because he travels frequently and wants to make sure his upgrade requests are sent in a timely fashion. For others, this might only be a week or two in advance. Put a little thought into determining your own \u201cevent horizon\u201d, the distance in the future when events start to require immediate actions. Advertising Keeping your projects on track David Allen calls projects \u201coutcomes\u201d, to distinguish them from actions \u2014 you don\u2019t do projects, you do actions that take you towards a desired outcome. Your project list, then, is a place to think, not do. What is the very next action you need to do to move towards each outcome on your list? Allen reminds us that life has projects, too \u2014 projects aren\u2019t limited to our work and career. Remodeling your house, cleaning your garage, moving \u2014 these are all obvious projects that our non-work life might involve, but there are also things like making time for a family outing or spending more time with your kids. It might seem cold to add these to your project lists next to \u201cCreate proposal for city education grant\u201d or whatever, but if they\u2019re not on your lists, they\u2019re burning up thought cycles that you could be using to figure out how to spend more time with your kids instead of just worrying that you should. Checklists and reference lists This is probably the least utilized part of the weekly review (itself a poorly utilized part of GTD). Allen says that you should consider creating a checklist for any routine task that you find yourself doing more than once or twice. Checklists help us to a) not rely on memory to make sure everything\u2019s done, and b) not have to think up next actions for tasks we\u2019ve already figured out the next actions for. Reference lists are exactly what the name says: lists of reference information you need to refer to often. An example might be books you want to read, logins and passwords, places you want to visit, recipes you want to get, and so on. As you go through your weekly review, make sure you add any relevant information to your reference lists. Advertising Bonus tip: Check out Checkser and Gibb, two online apps for creating and storing checklists. Get creative As I said before, this is where the weekly review shines. Now that you\u2019ve gotten all the mundane stuff off of your mind, you can relax and let your mind fly. Take out your someday/maybe list and see what crazy ideas you had a month ago that might be worth doing. Be liberal with your someday/maybe list \u2014 put ideas there to \u201cincubate\u201d and see if they don\u2019t grow into things you really want to do. This is the time for what Seth Godin calls \u201cedgework\u201d \u2014 see what radical new ways you can push whatever it is you\u2019re doing now. What new risks could you take? What could you be if you could be what you dream? What new things would you like to learn \u2014 or teach? What crazy idea do you have that nobody would ever take seriously? Remember, you don\u2019t have to do everything you come up with in your weekly review; the idea is to give yourself the freedom to think about things without committing yourself to action. Final Assessment of GTD > Weekly Review GTD > Weekly Review does a great job of explaining the role of the weekly review and its relationship to productivity. If you\u2019ve ever heard David Allen speak conversationally, you know that he can be a very inspiring and accessible speaker, and Meg Edwards and Marian Bateman are just as engaging. Their personal experience goes a great way towards deepening the idea of a weekly review, transforming it from an idea in a book into a practical and tested reality. The third disc in the set, while not as interesting to listen to, adds real value as something you can play while you get yourself into the habit of doing the weekly review \u2014 play a little, pause it, do some review, play a little more, pause, do more review, et My only qualm is the price: $99 US for a 3-disc set. Whether the content of GTD > Weekly Review is worth the price will depend a great deal on who you are; if you\u2019re in David Allen Co.\u2019s target audience of corporate executives, mid-level management, and successful entrepreneurs, then this is definitely a set worth having. Compared to the cost of one of David Allen\u2019s seminars, or even a seminar from a DavidCo coach, $99 is a steal but there are plenty of people who could use this kind of push in the right direction for whom both the seminar and the GTD > Weekly Review set are both too far out of reach. If you can get around the price, this is a really valuable extension of the GTD system. I can virtually guarantee that you\u2019ll listen to this more than once \u2014 just like Allen\u2019s books, it\u2019s the kind of material that you\u2019ll refer back to again and again. Lifehack \u00b7 March 7, 2008 ( View Highlight ) Be sure you do schedule it, though. For too many of us, the weekly review is a \u201cwhen I get around to it\u201d kind of commitment, which more or less undoes what a weekly review can offer. Make a hard commitment to yourself, in your calendar, to do a weekly review every week. ( View Highlight ) If you have a large email backlog, schedule time to clear it up over the course of the upcoming week. ( View Highlight ) Review your calendar How much of your calendar should you review. Allen\u2019s answer is simple: as far back as you need to, and as far forward as you need to. For Allen, this means many months forward, because he travels frequently and wants to make sure his upgrade requests are sent in a timely fashion. For others, this might only be a week or two in advance. Put a little thought into determining your own \u201cevent horizon\u201d, the distance in the future when events start to require immediate actions. ( View Highlight ) Keeping your projects on track David Allen calls projects \u201coutcomes\u201d, to distinguish them from actions \u2014 you don\u2019t do projects, you do actions that take you towards a desired outcome. Your project list, then, is a place to think, not do. What is the very next action you need to do to move towards each outcome on your list? Allen reminds us that life has projects, too \u2014 projects aren\u2019t limited to our work and career. Remodeling your house, cleaning your garage, moving \u2014 these are all obvious projects that our non-work life might involve, but there are also things like making time for a family outing or spending more time with your kids. It might seem cold to add these to your project lists next to \u201cCreate proposal for city education grant\u201d or whatever, but if they\u2019re not on your lists, they\u2019re burning up thought cycles that you could be using to figure out how to spend more time with your kids instead of just worrying that you should. ( View Highlight ) Checklists and reference lists This is probably the least utilized part of the weekly review (itself a poorly utilized part of GTD). Allen says that you should consider creating a checklist for any routine task that you find yourself doing more than once or twice. Checklists help us to a) not rely on memory to make sure everything\u2019s done, and b) not have to think up next actions for tasks we\u2019ve already figured out the next actions for. Reference lists are exactly what the name says: lists of reference information you need to refer to often. An example might be books you want to read, logins and passwords, places you want to visit, recipes you want to get, and so on. As you go through your weekly review, make sure you add any relevant information to your reference lists. ( View Highlight )","title":"Audiobook Review: David Allen's \"GTD > Weekly Review\""},{"location":"Highlights/Readwise/Articles/Audiobook%20Review%20David%20Allen%27s%20GTD%20%20Weekly%20Review/#audiobook-review-david-allens-gtd-weekly-review","text":"","title":"Audiobook Review: David Allen's \"GTD &gt; Weekly Review\""},{"location":"Highlights/Readwise/Articles/Audiobook%20Review%20David%20Allen%27s%20GTD%20%20Weekly%20Review/#metadata","text":"Author: [[lifehack.org]] Full Title: Audiobook Review: David Allen's \"GTD > Weekly Review\" Category: #Type/Highlights/Article URL: https://www.lifehack.org/articles/featured/audiobook-review-david-allens-gtd-weekly-review.html","title":"Metadata"},{"location":"Highlights/Readwise/Articles/Audiobook%20Review%20David%20Allen%27s%20GTD%20%20Weekly%20Review/#highlights","text":"Get clear The weekly review is an opportunity to clear your head and really explore where you\u2019re at and where you\u2019re headed. Pay special attention to when you schedule it, because it needs to be a time that works best for you \u2014 when you\u2019re not only uninterrupted but most likely to be \u201cat peace\u201d, without any huge problems hanging over your head demanding immediate attention. A weekly review can still be useful even if you\u2019re hurried and there are urgent matters pressing, but if your weekly review is always under those conditions, you probably need to schedule it to a more appropriate time. ( View Highlight ) e. Be sure you do schedule it, though. For too many of us, the weekly review is a \u201cwhen I get around to it\u201d kind of commitment, which more or less undoes what a weekly review can offer. Make a hard commitment to yourself, in your calendar, to do a weekly review every week. One important point Allen and the others bring up is that a weekly review is not \u201ccatch-up\u201d time \u2014 it\u2019s not a couple of extra slack hours for doing everything you\u2019ve gotten behind in over the course of the week. This especially applies to email. While Allen does recommend keeping your email inbox empty, if you aren\u2019t doing this on a weekly basis, your weekly review is not the time to start! If you have a large email backlog, schedule time to clear it up over the course of the upcoming week. Get current Review your calendar How much of your calendar should you review. Allen\u2019s answer is simple: as far back as you need to, and as far forward as you need to. For Allen, this means many months forward, because he travels frequently and wants to make sure his upgrade requests are sent in a timely fashion. For others, this might only be a week or two in advance. Put a little thought into determining your own \u201cevent horizon\u201d, the distance in the future when events start to require immediate actions. Advertising Keeping your projects on track David Allen calls projects \u201coutcomes\u201d, to distinguish them from actions \u2014 you don\u2019t do projects, you do actions that take you towards a desired outcome. Your project list, then, is a place to think, not do. What is the very next action you need to do to move towards each outcome on your list? Allen reminds us that life has projects, too \u2014 projects aren\u2019t limited to our work and career. Remodeling your house, cleaning your garage, moving \u2014 these are all obvious projects that our non-work life might involve, but there are also things like making time for a family outing or spending more time with your kids. It might seem cold to add these to your project lists next to \u201cCreate proposal for city education grant\u201d or whatever, but if they\u2019re not on your lists, they\u2019re burning up thought cycles that you could be using to figure out how to spend more time with your kids instead of just worrying that you should. Checklists and reference lists This is probably the least utilized part of the weekly review (itself a poorly utilized part of GTD). Allen says that you should consider creating a checklist for any routine task that you find yourself doing more than once or twice. Checklists help us to a) not rely on memory to make sure everything\u2019s done, and b) not have to think up next actions for tasks we\u2019ve already figured out the next actions for. Reference lists are exactly what the name says: lists of reference information you need to refer to often. An example might be books you want to read, logins and passwords, places you want to visit, recipes you want to get, and so on. As you go through your weekly review, make sure you add any relevant information to your reference lists. Advertising Bonus tip: Check out Checkser and Gibb, two online apps for creating and storing checklists. Get creative As I said before, this is where the weekly review shines. Now that you\u2019ve gotten all the mundane stuff off of your mind, you can relax and let your mind fly. Take out your someday/maybe list and see what crazy ideas you had a month ago that might be worth doing. Be liberal with your someday/maybe list \u2014 put ideas there to \u201cincubate\u201d and see if they don\u2019t grow into things you really want to do. This is the time for what Seth Godin calls \u201cedgework\u201d \u2014 see what radical new ways you can push whatever it is you\u2019re doing now. What new risks could you take? What could you be if you could be what you dream? What new things would you like to learn \u2014 or teach? What crazy idea do you have that nobody would ever take seriously? Remember, you don\u2019t have to do everything you come up with in your weekly review; the idea is to give yourself the freedom to think about things without committing yourself to action. Final Assessment of GTD > Weekly Review GTD > Weekly Review does a great job of explaining the role of the weekly review and its relationship to productivity. If you\u2019ve ever heard David Allen speak conversationally, you know that he can be a very inspiring and accessible speaker, and Meg Edwards and Marian Bateman are just as engaging. Their personal experience goes a great way towards deepening the idea of a weekly review, transforming it from an idea in a book into a practical and tested reality. The third disc in the set, while not as interesting to listen to, adds real value as something you can play while you get yourself into the habit of doing the weekly review \u2014 play a little, pause it, do some review, play a little more, pause, do more review, et My only qualm is the price: $99 US for a 3-disc set. Whether the content of GTD > Weekly Review is worth the price will depend a great deal on who you are; if you\u2019re in David Allen Co.\u2019s target audience of corporate executives, mid-level management, and successful entrepreneurs, then this is definitely a set worth having. Compared to the cost of one of David Allen\u2019s seminars, or even a seminar from a DavidCo coach, $99 is a steal but there are plenty of people who could use this kind of push in the right direction for whom both the seminar and the GTD > Weekly Review set are both too far out of reach. If you can get around the price, this is a really valuable extension of the GTD system. I can virtually guarantee that you\u2019ll listen to this more than once \u2014 just like Allen\u2019s books, it\u2019s the kind of material that you\u2019ll refer back to again and again. Lifehack \u00b7 March 7, 2008 ( View Highlight ) Be sure you do schedule it, though. For too many of us, the weekly review is a \u201cwhen I get around to it\u201d kind of commitment, which more or less undoes what a weekly review can offer. Make a hard commitment to yourself, in your calendar, to do a weekly review every week. ( View Highlight ) If you have a large email backlog, schedule time to clear it up over the course of the upcoming week. ( View Highlight ) Review your calendar How much of your calendar should you review. Allen\u2019s answer is simple: as far back as you need to, and as far forward as you need to. For Allen, this means many months forward, because he travels frequently and wants to make sure his upgrade requests are sent in a timely fashion. For others, this might only be a week or two in advance. Put a little thought into determining your own \u201cevent horizon\u201d, the distance in the future when events start to require immediate actions. ( View Highlight ) Keeping your projects on track David Allen calls projects \u201coutcomes\u201d, to distinguish them from actions \u2014 you don\u2019t do projects, you do actions that take you towards a desired outcome. Your project list, then, is a place to think, not do. What is the very next action you need to do to move towards each outcome on your list? Allen reminds us that life has projects, too \u2014 projects aren\u2019t limited to our work and career. Remodeling your house, cleaning your garage, moving \u2014 these are all obvious projects that our non-work life might involve, but there are also things like making time for a family outing or spending more time with your kids. It might seem cold to add these to your project lists next to \u201cCreate proposal for city education grant\u201d or whatever, but if they\u2019re not on your lists, they\u2019re burning up thought cycles that you could be using to figure out how to spend more time with your kids instead of just worrying that you should. ( View Highlight ) Checklists and reference lists This is probably the least utilized part of the weekly review (itself a poorly utilized part of GTD). Allen says that you should consider creating a checklist for any routine task that you find yourself doing more than once or twice. Checklists help us to a) not rely on memory to make sure everything\u2019s done, and b) not have to think up next actions for tasks we\u2019ve already figured out the next actions for. Reference lists are exactly what the name says: lists of reference information you need to refer to often. An example might be books you want to read, logins and passwords, places you want to visit, recipes you want to get, and so on. As you go through your weekly review, make sure you add any relevant information to your reference lists. ( View Highlight )","title":"Highlights"},{"location":"Highlights/Readwise/Articles/Auto%20Documentation%20System%20for%20R%20Shiny%20-%20Stack%20Overflow/","text":"Auto Documentation System for R Shiny - Stack Overflow \u00b6 Metadata \u00b6 Author: Full Title: Auto Documentation System for R Shiny - Stack Overflow Category: #Type/Highlights/Article URL: https://stackoverflow.com/questions/53373290/auto-documentation-system-for-r-shiny Highlights \u00b6 update 1: I have tried ShinyTester which reads through source code and try to predict a network of sub-element interactions. It did not handle sourcing of external files, but with a little debug I manage to get the below diagram. Unfortunately, only 5% of elements and interactions were discovered hereby. Maybe ShinyTester could need some contributions","title":"Auto Documentation System for R Shiny - Stack Overflow"},{"location":"Highlights/Readwise/Articles/Auto%20Documentation%20System%20for%20R%20Shiny%20-%20Stack%20Overflow/#auto-documentation-system-for-r-shiny-stack-overflow","text":"","title":"Auto Documentation System for R Shiny - Stack Overflow"},{"location":"Highlights/Readwise/Articles/Auto%20Documentation%20System%20for%20R%20Shiny%20-%20Stack%20Overflow/#metadata","text":"Author: Full Title: Auto Documentation System for R Shiny - Stack Overflow Category: #Type/Highlights/Article URL: https://stackoverflow.com/questions/53373290/auto-documentation-system-for-r-shiny","title":"Metadata"},{"location":"Highlights/Readwise/Articles/Auto%20Documentation%20System%20for%20R%20Shiny%20-%20Stack%20Overflow/#highlights","text":"update 1: I have tried ShinyTester which reads through source code and try to predict a network of sub-element interactions. It did not handle sourcing of external files, but with a little debug I manage to get the below diagram. Unfortunately, only 5% of elements and interactions were discovered hereby. Maybe ShinyTester could need some contributions","title":"Highlights"},{"location":"Highlights/Readwise/Articles/Back%20to%20Basics%20Your%20Weekly%20Review/","text":"Back to Basics: Your Weekly Review \u00b6 Metadata \u00b6 Author: [[lifehack.org]] Full Title: Back to Basics: Your Weekly Review Category: #Type/Highlights/Article URL: https://www.lifehack.org/articles/featured/back-to-basics-your-weekly-review.html Highlights \u00b6 No matter how organized you are, how together your system is, how careful you are about processing your inbox, making a task list, and working your calendar, if you don\u2019t stop every now and again to look at the \u201cbig picture\u201d, you\u2019re going to get overwhelmed. You end up simply responding to what\u2019s thrown at you, instead of proactively creating the conditions of your life. ( View Highlight ) Although there are lots of variations on the \u201creview\u201d theme. the basic idea is the same no matter what system you\u2019re looking at. A weekly review boils down to three questions: What do I have to do in the upcoming week? What am I doing wrong that needs to be fixed? What new things should I do to take my life in the direction I want it to go? ( View Highlight ) Schedule your weekly review in your calendar. Allow yourself at least an hour, preferably two. Finish all your work before the review starts. Get comfortable. You might want to go somewhere you don\u2019t associate with work. Take 5-10 minutes of quiet time. Meditate, doodle, or just stare at the head \u2013 whatever it takes to put a \u201cbuffer\u201d between you and your everyday stuff. Have something to write in/on. Make sure you won\u2019t be disturbed. This is your time! ( View Highlight ) Collect all your loose papers and put them into your inbox for processing. Process your notes to glean any action items, appointments, new projects, etc. Review your previous calendar data to remind you of any ideas, tasks, etc. that you might not have captured at the time. Review your upcoming calendar to see if there are any new actions you need to add to your lists. Empty your head. Write down anything that\u2019s currently on your mind or capturing your attention. Review your project lists to determine each project\u2019s status and if there are any actions you need to take to move each of them forward. Review your next action lists. Bring them up to date by marking off any actions you\u2019ve already completed. Use completed actions as triggers to remind you of any further steps you need to take not that an action is done. Review waiting for lists. Add appropriate follow-ups to your action lists. Check off anything that you\u2019ve already received. Review any relevant checklists. Review your someday/maybe list and decide if there is anything you\u2019re ready to move onto your active projects list. Review your project support files to make sure you haven\u2019t missed any new actions you need to take. Be creative and courageous. This is the hardest and most poorly described part of the process in Allen\u2019s books, which is too bad, since this is where the magic happens. Having cleared your mind of everything you need to do at the moment, take time to dream up new ideas \u2014 risky ones, creative ones, etc. Essentially a free-form brainstorming session around the topic of \u201cwhat could I be doing?\u201d ( View Highlight ) Get clear: Tie up any loose ends from the week before so you can turn an eye to the future. Get current: Plan out the steps you need to take over the next week to advance whatever projects you\u2019re currently working on. Get creative: Think about and start planning things you could be doing to move your life in a new direction, or to advance you past your current level. ( View Highlight ) I prefer to think of my weekly review as a set of questions to answer, rather than a set of steps to churn through. While I still try to do a review weekly (every two weeks seems to be more practical for me, though), I also do a few \u201cmini-reviews\u201d as time permits in between full reviews. A mini-review consists of just a few questions: Advertising What do I have to work on the next few days? What deadlines do I have coming up? Are there any new projects I have time to start working on? ( View Highlight ) When I sit down to do a full review, I\u2019m more concerned with the way my life is going overall. The full review consists of these questions: What do I have to work on the next few days? What deadlines do I have coming up? Are there any new projects I have time to start working on? What went wrong over the past week? What lessons can I learn from that? What went right over the past week? How can I make sure more of that happens? How well am I keeping up with all my duties and obligations? What is coming up that I need to be prepared for? What kind of help do I need? Is everything I\u2019m doing contributing to my advancement towards my goals? What can I do about the stuff that isn\u2019t? Am I happy with where I\u2019m at? What would I like to change? What are my goals for the next week? Month? 90 days? I like the question/answer format better than Allen\u2019s step-by-step because a) I do most of the practical stuff on a daily basis anyway, and b) I like that the focus of (most of) these questions is me, rather than my stuff. ( View Highlight ) we tend to resist looking too closely at our selves, whether because it feels selfish or narcissistic, or because we\u2019re afraid of what we\u2019ll find if we look too closely. ( View Highlight )","title":"Back to Basics: Your Weekly Review"},{"location":"Highlights/Readwise/Articles/Back%20to%20Basics%20Your%20Weekly%20Review/#back-to-basics-your-weekly-review","text":"","title":"Back to Basics: Your Weekly Review"},{"location":"Highlights/Readwise/Articles/Back%20to%20Basics%20Your%20Weekly%20Review/#metadata","text":"Author: [[lifehack.org]] Full Title: Back to Basics: Your Weekly Review Category: #Type/Highlights/Article URL: https://www.lifehack.org/articles/featured/back-to-basics-your-weekly-review.html","title":"Metadata"},{"location":"Highlights/Readwise/Articles/Back%20to%20Basics%20Your%20Weekly%20Review/#highlights","text":"No matter how organized you are, how together your system is, how careful you are about processing your inbox, making a task list, and working your calendar, if you don\u2019t stop every now and again to look at the \u201cbig picture\u201d, you\u2019re going to get overwhelmed. You end up simply responding to what\u2019s thrown at you, instead of proactively creating the conditions of your life. ( View Highlight ) Although there are lots of variations on the \u201creview\u201d theme. the basic idea is the same no matter what system you\u2019re looking at. A weekly review boils down to three questions: What do I have to do in the upcoming week? What am I doing wrong that needs to be fixed? What new things should I do to take my life in the direction I want it to go? ( View Highlight ) Schedule your weekly review in your calendar. Allow yourself at least an hour, preferably two. Finish all your work before the review starts. Get comfortable. You might want to go somewhere you don\u2019t associate with work. Take 5-10 minutes of quiet time. Meditate, doodle, or just stare at the head \u2013 whatever it takes to put a \u201cbuffer\u201d between you and your everyday stuff. Have something to write in/on. Make sure you won\u2019t be disturbed. This is your time! ( View Highlight ) Collect all your loose papers and put them into your inbox for processing. Process your notes to glean any action items, appointments, new projects, etc. Review your previous calendar data to remind you of any ideas, tasks, etc. that you might not have captured at the time. Review your upcoming calendar to see if there are any new actions you need to add to your lists. Empty your head. Write down anything that\u2019s currently on your mind or capturing your attention. Review your project lists to determine each project\u2019s status and if there are any actions you need to take to move each of them forward. Review your next action lists. Bring them up to date by marking off any actions you\u2019ve already completed. Use completed actions as triggers to remind you of any further steps you need to take not that an action is done. Review waiting for lists. Add appropriate follow-ups to your action lists. Check off anything that you\u2019ve already received. Review any relevant checklists. Review your someday/maybe list and decide if there is anything you\u2019re ready to move onto your active projects list. Review your project support files to make sure you haven\u2019t missed any new actions you need to take. Be creative and courageous. This is the hardest and most poorly described part of the process in Allen\u2019s books, which is too bad, since this is where the magic happens. Having cleared your mind of everything you need to do at the moment, take time to dream up new ideas \u2014 risky ones, creative ones, etc. Essentially a free-form brainstorming session around the topic of \u201cwhat could I be doing?\u201d ( View Highlight ) Get clear: Tie up any loose ends from the week before so you can turn an eye to the future. Get current: Plan out the steps you need to take over the next week to advance whatever projects you\u2019re currently working on. Get creative: Think about and start planning things you could be doing to move your life in a new direction, or to advance you past your current level. ( View Highlight ) I prefer to think of my weekly review as a set of questions to answer, rather than a set of steps to churn through. While I still try to do a review weekly (every two weeks seems to be more practical for me, though), I also do a few \u201cmini-reviews\u201d as time permits in between full reviews. A mini-review consists of just a few questions: Advertising What do I have to work on the next few days? What deadlines do I have coming up? Are there any new projects I have time to start working on? ( View Highlight ) When I sit down to do a full review, I\u2019m more concerned with the way my life is going overall. The full review consists of these questions: What do I have to work on the next few days? What deadlines do I have coming up? Are there any new projects I have time to start working on? What went wrong over the past week? What lessons can I learn from that? What went right over the past week? How can I make sure more of that happens? How well am I keeping up with all my duties and obligations? What is coming up that I need to be prepared for? What kind of help do I need? Is everything I\u2019m doing contributing to my advancement towards my goals? What can I do about the stuff that isn\u2019t? Am I happy with where I\u2019m at? What would I like to change? What are my goals for the next week? Month? 90 days? I like the question/answer format better than Allen\u2019s step-by-step because a) I do most of the practical stuff on a daily basis anyway, and b) I like that the focus of (most of) these questions is me, rather than my stuff. ( View Highlight ) we tend to resist looking too closely at our selves, whether because it feels selfish or narcissistic, or because we\u2019re afraid of what we\u2019ll find if we look too closely. ( View Highlight )","title":"Highlights"},{"location":"Highlights/Readwise/Articles/Backup%20101%20Windows%20Files%20and%20Folders%20You%20Should%20Always%20Back%20Up/","text":"Backup 101: Windows Files and Folders You Should Always Back Up \u00b6 Metadata \u00b6 Author: Full Title: Backup 101: Windows Files and Folders You Should Always Back Up Category: #Type/Highlights/Article URL: https://www.makeuseof.com/tag/backup-windows-files-folders/ Highlights \u00b6 The Documents folder is a place for you to store personal files and documents. Because it likely contains your Word documents, receipt PDFs, and other related data, it\u2019s an important candidate for backup. Unfortunately, many software developers ignore the folder\u2019s intended use and use it to store app-related data. For example, Overwatch stores log data, settings, and saved video clips here. Because of this, you may want to take a look through your Documents folder and exclude app-related folders if you don\u2019t care about them. In general, though, everything in Documents is important to have backed up. Projects and Other Important Records If you do creative work (such as programming, photography, video editing, or writing), then you should absolutely back up these files\u2014especially any works-in-progress! Only you know where you keep all of your creative projects. Make sure you remember to back up all of them. To keep track of them, it\u2019s a good idea to keep these in common locations (like Documents or Pictures) instead of creating folders in random places that you\u2019re more likely to forget about. If you have any personal files that aren\u2019t stored in the above folders, don\u2019t forget to back those up too. These might include tax records and documents, rental and lease information, business invoices, bank and credit card statements, certificates, resumes, various spreadsheets, and similar. AppData Location: C:\\Users[Username]\\AppData The AppData folder in Windows stores user-specific settings for installed programs. Within this folder are three subfolders: Roaming, Local, and LocalLow. The Roaming folder usually contains data that can move across computers in a Windows domain. For example, Firefox stores its user profiles here. In contrast, Local is meant for data that only stay on one machine, such as cache files. LocalLow is similar but runs at a lower level of integrity for apps with strict security settings. However, developers don\u2019t always adhere to this. Chrome stores user data in the Local folder and some apps store data in an entirely different directory. ProgramData Location: C:\\ProgramData ProgramData is similar to AppData. Instead of storing user-specific files, though, it holds app settings and data for all users on the system. For example, it might include definitions for your antivirus software. A lot of what\u2019s here is cache files, which you don\u2019t need to back up. Since this folder also takes up several gigabytes, you shouldn\u2019t back it all up. You can take a look and copy any folders for apps you want to preserve all data for, but the contents of AppData\\Roaming are most likely more important than this. Note that AppData and ProgramData settings and data may only be compatible with certain versions of the app. Backing these files up can be good for posterity and reference, but you could run into issues if you restore these folders straight from a backup. Outlook stores your emails (plus calendars, contacts, tasks, and notes) as a single PST file, which can reside in one of a few locations: C:\\Users[Username]\\AppData\\Local\\Microsoft\\Outlook C:\\Users[Username]\\AppData\\Roaming\\Microsoft\\Outlook C:\\Users[Username]\\Documents\\Outlook\\Files","title":"Backup 101: Windows Files and Folders You Should Always Back Up"},{"location":"Highlights/Readwise/Articles/Backup%20101%20Windows%20Files%20and%20Folders%20You%20Should%20Always%20Back%20Up/#backup-101-windows-files-and-folders-you-should-always-back-up","text":"","title":"Backup 101: Windows Files and Folders You Should Always Back Up"},{"location":"Highlights/Readwise/Articles/Backup%20101%20Windows%20Files%20and%20Folders%20You%20Should%20Always%20Back%20Up/#metadata","text":"Author: Full Title: Backup 101: Windows Files and Folders You Should Always Back Up Category: #Type/Highlights/Article URL: https://www.makeuseof.com/tag/backup-windows-files-folders/","title":"Metadata"},{"location":"Highlights/Readwise/Articles/Backup%20101%20Windows%20Files%20and%20Folders%20You%20Should%20Always%20Back%20Up/#highlights","text":"The Documents folder is a place for you to store personal files and documents. Because it likely contains your Word documents, receipt PDFs, and other related data, it\u2019s an important candidate for backup. Unfortunately, many software developers ignore the folder\u2019s intended use and use it to store app-related data. For example, Overwatch stores log data, settings, and saved video clips here. Because of this, you may want to take a look through your Documents folder and exclude app-related folders if you don\u2019t care about them. In general, though, everything in Documents is important to have backed up. Projects and Other Important Records If you do creative work (such as programming, photography, video editing, or writing), then you should absolutely back up these files\u2014especially any works-in-progress! Only you know where you keep all of your creative projects. Make sure you remember to back up all of them. To keep track of them, it\u2019s a good idea to keep these in common locations (like Documents or Pictures) instead of creating folders in random places that you\u2019re more likely to forget about. If you have any personal files that aren\u2019t stored in the above folders, don\u2019t forget to back those up too. These might include tax records and documents, rental and lease information, business invoices, bank and credit card statements, certificates, resumes, various spreadsheets, and similar. AppData Location: C:\\Users[Username]\\AppData The AppData folder in Windows stores user-specific settings for installed programs. Within this folder are three subfolders: Roaming, Local, and LocalLow. The Roaming folder usually contains data that can move across computers in a Windows domain. For example, Firefox stores its user profiles here. In contrast, Local is meant for data that only stay on one machine, such as cache files. LocalLow is similar but runs at a lower level of integrity for apps with strict security settings. However, developers don\u2019t always adhere to this. Chrome stores user data in the Local folder and some apps store data in an entirely different directory. ProgramData Location: C:\\ProgramData ProgramData is similar to AppData. Instead of storing user-specific files, though, it holds app settings and data for all users on the system. For example, it might include definitions for your antivirus software. A lot of what\u2019s here is cache files, which you don\u2019t need to back up. Since this folder also takes up several gigabytes, you shouldn\u2019t back it all up. You can take a look and copy any folders for apps you want to preserve all data for, but the contents of AppData\\Roaming are most likely more important than this. Note that AppData and ProgramData settings and data may only be compatible with certain versions of the app. Backing these files up can be good for posterity and reference, but you could run into issues if you restore these folders straight from a backup. Outlook stores your emails (plus calendars, contacts, tasks, and notes) as a single PST file, which can reside in one of a few locations: C:\\Users[Username]\\AppData\\Local\\Microsoft\\Outlook C:\\Users[Username]\\AppData\\Roaming\\Microsoft\\Outlook C:\\Users[Username]\\Documents\\Outlook\\Files","title":"Highlights"},{"location":"Highlights/Readwise/Articles/Basics%20of%20the%20Unix%20Philosophy/","text":"Basics of the Unix Philosophy \u00b6 Metadata \u00b6 Author: Full Title: Basics of the Unix Philosophy Category: #Type/Highlights/Article URL: https://homepage.cs.uri.edu/~thenry/resources/unix_art/ch01s06.html Highlights \u00b6 (i) Make each program do one thing well. To do a new job, build afresh rather than complicate old programs by adding new features. Tags: [[favorite]] (ii) Expect the output of every program to become the input to another, as yet unknown, program. Don't clutter output with extraneous information. Avoid stringently columnar or binary input formats. Don't insist on interactive input. (iii) Design and build software, even operating systems, to be tried early, ideally within weeks. Don't hesitate to throw away the clumsy parts and rebuild them. (iv) Use tools in preference to unskilled help to lighten a programming task, even if you have to detour to build the tools and expect to throw some of them out after you've finished using them. Tags: [[favorite]] This is the Unix philosophy: Write programs that do one thing and do it well. Write programs to work together. Write programs to handle text streams, because that is a universal interface. don't try to second guess and put in a speed hack until you've proven that's where the bottleneck is. Debugging dominates development time, and getting a working system out the door is usually less a result of brilliant design than it is of managing not to trip over your own feet too many times. The only way to write complex software that won't fall on its face is to hold its global complexity down to build it out of simple parts connected by well-defined interfaces, so that most problems are local and you can have some hope of upgrading a part without breaking the whole. Tags: [[favorite]] Never struggle to decipher subtle code three times. Once might be a one-shot fluke, but if you find yourself having to figure it out a second time \u2014 because the first was too long ago and you've forgotten details \u2014 it is time to comment the code so that the third time will be relatively painless.","title":"Basics of the Unix Philosophy"},{"location":"Highlights/Readwise/Articles/Basics%20of%20the%20Unix%20Philosophy/#basics-of-the-unix-philosophy","text":"","title":"Basics of the Unix Philosophy"},{"location":"Highlights/Readwise/Articles/Basics%20of%20the%20Unix%20Philosophy/#metadata","text":"Author: Full Title: Basics of the Unix Philosophy Category: #Type/Highlights/Article URL: https://homepage.cs.uri.edu/~thenry/resources/unix_art/ch01s06.html","title":"Metadata"},{"location":"Highlights/Readwise/Articles/Basics%20of%20the%20Unix%20Philosophy/#highlights","text":"(i) Make each program do one thing well. To do a new job, build afresh rather than complicate old programs by adding new features. Tags: [[favorite]] (ii) Expect the output of every program to become the input to another, as yet unknown, program. Don't clutter output with extraneous information. Avoid stringently columnar or binary input formats. Don't insist on interactive input. (iii) Design and build software, even operating systems, to be tried early, ideally within weeks. Don't hesitate to throw away the clumsy parts and rebuild them. (iv) Use tools in preference to unskilled help to lighten a programming task, even if you have to detour to build the tools and expect to throw some of them out after you've finished using them. Tags: [[favorite]] This is the Unix philosophy: Write programs that do one thing and do it well. Write programs to work together. Write programs to handle text streams, because that is a universal interface. don't try to second guess and put in a speed hack until you've proven that's where the bottleneck is. Debugging dominates development time, and getting a working system out the door is usually less a result of brilliant design than it is of managing not to trip over your own feet too many times. The only way to write complex software that won't fall on its face is to hold its global complexity down to build it out of simple parts connected by well-defined interfaces, so that most problems are local and you can have some hope of upgrading a part without breaking the whole. Tags: [[favorite]] Never struggle to decipher subtle code three times. Once might be a one-shot fluke, but if you find yourself having to figure it out a second time \u2014 because the first was too long ago and you've forgotten details \u2014 it is time to comment the code so that the third time will be relatively painless.","title":"Highlights"},{"location":"Highlights/Readwise/Articles/Become%20a%20Better%20Developer%20Through%20Blogging%20-%20Steve%20Gordon%20-%20Code%20With%20Steve/","text":"Become a Better Developer Through Blogging - Steve Gordon - Code With Steve \u00b6 Metadata \u00b6 Author: [[stevejgordon.co.uk]] Full Title: Become a Better Developer Through Blogging - Steve Gordon - Code With Steve Category: #Type/Highlights/Article URL: https://www.stevejgordon.co.uk/become-a-better-developer-through-blogging-part-1 Highlights \u00b6 Learning From Blogging I want to cover this point first, as honestly, it\u2019s one of the most significant benefits I believe you can achieve from blogging. It may seem counter-intuitive to suggest that you\u2019ll learn from writing a blog post. Surely you have to already know about the topic before you can write about it? 100% not true in my experience. ( View Highlight ) 1 \u2013 I have just solved a particular problem at work or perhaps in a personal project which I want to document and share by posting about it. ( View Highlight ) This first category covers many cases where I\u2019ve already done a lot of learning to solve the problem in the first place. I\u2019ve found through personal experience that by immediately blogging about the issue and my solution I push at the edges of what I learned. Sure I\u2019ve solved the problem, but do I really understand why my solution worked? Often as deeply as I may presume. The act of writing about a subject and explaining it to others encourages me to go a little deeper. This is an excellent motivator for my own continuous learning. I try to think about the questions I\u2019d ask if I were reading the blog post. What is fuzzy or unexplained entirely? At this point, I\u2019m often seeking and reading more information to answer that question. Deciding how deep you should go can be tough. You could write infinitely if you tried to explain everything. While researching content I often learn more than I end up including in the post. I still benefit from the additional knowledge I gain. Filtering content down to the most crucial things that I believe people want and need to know also helps me to retain the essential knowledge. The second benefit of blogging, for our own learning, is retention. When we solve a new problem or learn about a topic, it\u2019s easy to forget that information quite soon after. Writing it down helps store the information into your long-term memory. Explaining it embeds it even further. I struggle with a quite lousy memory, and I find writing blog posts helps me with my retention. ( View Highlight ) These tend to and up as deep-dive technical posts which I quite enjoy writing because I learn so much in the process. They often take longer to produce. I my end up reading through the ASP.NET or .NET Core source code, documentation and from as many other sources of information as possible. These types of post motivate me and give me an extra reason to dedicate some time to the necessary research. Without the blog post as a carrot (me being the donkey), I\u2019d likely put off a lot of the study until I think I need it. This encourages continuous learning and exposes me to more topics, many of which will be more useful to me than I immediately realise. ( View Highlight ) Improving Your Developer Skills ( View Highlight ) In our day-to-day work, we are often bombarded with tasks and things we need to get done. Some of you may already feel overloaded and be struggling to keep up. Making time for personal growth and learning can be really tough. ( View Highlight ) For me personally, the craft of writing software and working with technology is a passion. I also enjoy the process of learning and understanding things. Writing posts encourages me to carve out some personal time during lunch, or during my commute to write posts. Whenever I get an idea for something, I note the title and a brief description of the concept. Many of these fail to see the light of day, but a lucky few do make it. ( View Highlight ) The process of blogging helps me to articulate the things which I\u2019ve learned. Explaining a subject to others is a skill you can translate to your work too. Perhaps you need to explain why something is wrong during a code review. Maybe you need to present a technical topic during a meeting or you are updating the company wiki. In all cases, that requires communication skills which you can develop (under less pressure than at work) by blogging. ( View Highlight ) The ability to research is also an important skill you will develop as you write blog posts. Finding resources, verifying their accuracy, comparing them to your own knowledge and preconceptions are abilities that you can also apply to your work. ( View Highlight ) Lift Your Career and Expand Your Horizons ( View Highlight ) From a career perspective, a blog can really help you stand out from the crowd. Employers can see that you have a body of work and experience. It shows dedication and a passion for your craft. It helps highlight you as someone who will move a project forward with an eye for making things better. It demonstrates your experience and knowledge far better than any CV (r\u00e9sum\u00e9). ( View Highlight ) The short summary of everything above is \u2013 start a blog. That\u2019s it! Don\u2019t overthink it. Try it for a few months and see how you get on. Learn and adapt as you go. It\u2019s been one of the best things I\u2019ve done to help my career and to become one small part of the fantastic .NET community. Let me know if you get started with a blog after reading this! ( View Highlight )","title":"Become a Better Developer Through Blogging - Steve Gordon - Code With Steve"},{"location":"Highlights/Readwise/Articles/Become%20a%20Better%20Developer%20Through%20Blogging%20-%20Steve%20Gordon%20-%20Code%20With%20Steve/#become-a-better-developer-through-blogging-steve-gordon-code-with-steve","text":"","title":"Become a Better Developer Through Blogging - Steve Gordon - Code With Steve"},{"location":"Highlights/Readwise/Articles/Become%20a%20Better%20Developer%20Through%20Blogging%20-%20Steve%20Gordon%20-%20Code%20With%20Steve/#metadata","text":"Author: [[stevejgordon.co.uk]] Full Title: Become a Better Developer Through Blogging - Steve Gordon - Code With Steve Category: #Type/Highlights/Article URL: https://www.stevejgordon.co.uk/become-a-better-developer-through-blogging-part-1","title":"Metadata"},{"location":"Highlights/Readwise/Articles/Become%20a%20Better%20Developer%20Through%20Blogging%20-%20Steve%20Gordon%20-%20Code%20With%20Steve/#highlights","text":"Learning From Blogging I want to cover this point first, as honestly, it\u2019s one of the most significant benefits I believe you can achieve from blogging. It may seem counter-intuitive to suggest that you\u2019ll learn from writing a blog post. Surely you have to already know about the topic before you can write about it? 100% not true in my experience. ( View Highlight ) 1 \u2013 I have just solved a particular problem at work or perhaps in a personal project which I want to document and share by posting about it. ( View Highlight ) This first category covers many cases where I\u2019ve already done a lot of learning to solve the problem in the first place. I\u2019ve found through personal experience that by immediately blogging about the issue and my solution I push at the edges of what I learned. Sure I\u2019ve solved the problem, but do I really understand why my solution worked? Often as deeply as I may presume. The act of writing about a subject and explaining it to others encourages me to go a little deeper. This is an excellent motivator for my own continuous learning. I try to think about the questions I\u2019d ask if I were reading the blog post. What is fuzzy or unexplained entirely? At this point, I\u2019m often seeking and reading more information to answer that question. Deciding how deep you should go can be tough. You could write infinitely if you tried to explain everything. While researching content I often learn more than I end up including in the post. I still benefit from the additional knowledge I gain. Filtering content down to the most crucial things that I believe people want and need to know also helps me to retain the essential knowledge. The second benefit of blogging, for our own learning, is retention. When we solve a new problem or learn about a topic, it\u2019s easy to forget that information quite soon after. Writing it down helps store the information into your long-term memory. Explaining it embeds it even further. I struggle with a quite lousy memory, and I find writing blog posts helps me with my retention. ( View Highlight ) These tend to and up as deep-dive technical posts which I quite enjoy writing because I learn so much in the process. They often take longer to produce. I my end up reading through the ASP.NET or .NET Core source code, documentation and from as many other sources of information as possible. These types of post motivate me and give me an extra reason to dedicate some time to the necessary research. Without the blog post as a carrot (me being the donkey), I\u2019d likely put off a lot of the study until I think I need it. This encourages continuous learning and exposes me to more topics, many of which will be more useful to me than I immediately realise. ( View Highlight ) Improving Your Developer Skills ( View Highlight ) In our day-to-day work, we are often bombarded with tasks and things we need to get done. Some of you may already feel overloaded and be struggling to keep up. Making time for personal growth and learning can be really tough. ( View Highlight ) For me personally, the craft of writing software and working with technology is a passion. I also enjoy the process of learning and understanding things. Writing posts encourages me to carve out some personal time during lunch, or during my commute to write posts. Whenever I get an idea for something, I note the title and a brief description of the concept. Many of these fail to see the light of day, but a lucky few do make it. ( View Highlight ) The process of blogging helps me to articulate the things which I\u2019ve learned. Explaining a subject to others is a skill you can translate to your work too. Perhaps you need to explain why something is wrong during a code review. Maybe you need to present a technical topic during a meeting or you are updating the company wiki. In all cases, that requires communication skills which you can develop (under less pressure than at work) by blogging. ( View Highlight ) The ability to research is also an important skill you will develop as you write blog posts. Finding resources, verifying their accuracy, comparing them to your own knowledge and preconceptions are abilities that you can also apply to your work. ( View Highlight ) Lift Your Career and Expand Your Horizons ( View Highlight ) From a career perspective, a blog can really help you stand out from the crowd. Employers can see that you have a body of work and experience. It shows dedication and a passion for your craft. It helps highlight you as someone who will move a project forward with an eye for making things better. It demonstrates your experience and knowledge far better than any CV (r\u00e9sum\u00e9). ( View Highlight ) The short summary of everything above is \u2013 start a blog. That\u2019s it! Don\u2019t overthink it. Try it for a few months and see how you get on. Learn and adapt as you go. It\u2019s been one of the best things I\u2019ve done to help my career and to become one small part of the fantastic .NET community. Let me know if you get started with a blog after reading this! ( View Highlight )","title":"Highlights"},{"location":"Highlights/Readwise/Articles/Beginner%27s%20Tip%20Organize%20Your%20Coding%20Projects%20-%20Dan%20Fletcher%20Blog/","text":"Beginner's Tip: Organize Your Coding Projects - Dan Fletcher Blog \u00b6 Metadata \u00b6 Author: [[danfletcherblog.ca]] Full Title: Beginner's Tip: Organize Your Coding Projects - Dan Fletcher Blog Category: #Type/Highlights/Article URL: http://www.danfletcherblog.ca/2017/01/beginners-tip-organize-coding-projects/ Highlights \u00b6 Especially in the early days of coding, we all tend to create many, many small projects that we usually like to keep around for sake of reference. I for one, accumulated more than a hundred tiny micro-projects and code snippets within just a couple of months. This was mostly due to the speed at which I was following tutorials, but I also spent a lot of time spinning up projects for the sake of quick experiments. Experimenting was, and still is, the number one way I learn to code. What not to do Nesting This is by far the biggest mistake I made when I first learned to code. I tried to organize tiny little projects (many of them were just code snippets) into a deeply nested hierarchy of directories. This nipped me in the butt for two reasons: 1) I eventually couldn\u2019t keep track of what belonged where, and 2) when I graduated to using a command line, it become way too much typing to find projects. The main problem for me was that I was in a highly experimental stage of my career. I didn\u2019t know exactly what my first programming job would be, and I didn\u2019t know for sure which language or stack of technologies to focus on. In the early days, my decisions were largely guided by which tutorials suited my learning style best. If I found a source of information (YouTube videos, articles, books and other resources) that played well to my learning style, I would adopt that stack for that reason alone. Copy GitHub Locally \u2013 Use A Flat Folder Structure Once I spent some time working with GitHub, I realized how easy it was to work with a flat folder structure. So I decided to reflect that organization on my own machine. This is how I organize now (on Windows in this example): -- C:\\Users\\Dan\\batcave -- -- project-1 -- -- project-2 -- -- project-3 -- -- project-etc Use A Cloud IDE For Small Projects It\u2019s unfortunate to see how far behind the times software development is. Office administrators have had cloud applications for making documents, slide shows, spreadsheets and all the other typical office applications in a collaborative, accessible way that keeps your local machine nice and tidy for years. It\u2019s only recently that software developers have had access to cloud IDE\u2019s, and they are for the most part only realistic for web developers. However, they can still help tidy up your local machine, by moving some of your smaller projects onto the cloud. So what is a cloud IDE? It\u2019s an IDE that runs in your web browser. Usually, you will get a virtial box running a Linux OS such as Ubuntu, and a bit of memory and storage for each project you host on the service. My current cloud IDE of choice is c9.io. The free version gives you unlimited public workspaces. Think of a workspace on c9 as it\u2019s own machine running Ubuntu, with enough storage and processing power for most small to medium sized projects. Okay, so to recap: Leave IDE defaults alone. Use a cloud IDE when you can (most have decent free services). Learn Git. (This should probably be ranked number 1). Use GitHub, Bitbucket, or GitLab for hosting your projects. Keep your local repositories flat. No nested folders of folders! Spinal case your project names. accumulated more than a hundred tiny micro-projects ( View Highlight ) I also spent a lot of time spinning up projects for the sake of quick experiments. Experimenting was, and still is, the number one way I learn to code. ( View Highlight ) At all stages of your career (especially the early stages) you\u2019ll come across problems that you\u2019ve solved before. It\u2019s pretty handy to reach into a \u201ctool bag\u201d and find a piece of code or a pattern that you\u2019ve implemented and documented before. ( View Highlight ) Don\u2019t organize by language ( View Highlight ) One thing I highly recommend for new developers is picking a base language as early as possible. The sooner the better. ( View Highlight ) What you should do ( View Highlight ) Use GitHub ( View Highlight ) By using GitHub or another similar host, you\u2019re creating backups of all your work ( View Highlight ) It\u2019s probably not a good idea to rely solely on GitHub for anything proprietary, but for small projects, it\u2019s better than no backups. ( View Highlight )","title":"Beginner's Tip: Organize Your Coding Projects - Dan Fletcher Blog"},{"location":"Highlights/Readwise/Articles/Beginner%27s%20Tip%20Organize%20Your%20Coding%20Projects%20-%20Dan%20Fletcher%20Blog/#beginners-tip-organize-your-coding-projects-dan-fletcher-blog","text":"","title":"Beginner's Tip: Organize Your Coding Projects - Dan Fletcher Blog"},{"location":"Highlights/Readwise/Articles/Beginner%27s%20Tip%20Organize%20Your%20Coding%20Projects%20-%20Dan%20Fletcher%20Blog/#metadata","text":"Author: [[danfletcherblog.ca]] Full Title: Beginner's Tip: Organize Your Coding Projects - Dan Fletcher Blog Category: #Type/Highlights/Article URL: http://www.danfletcherblog.ca/2017/01/beginners-tip-organize-coding-projects/","title":"Metadata"},{"location":"Highlights/Readwise/Articles/Beginner%27s%20Tip%20Organize%20Your%20Coding%20Projects%20-%20Dan%20Fletcher%20Blog/#highlights","text":"Especially in the early days of coding, we all tend to create many, many small projects that we usually like to keep around for sake of reference. I for one, accumulated more than a hundred tiny micro-projects and code snippets within just a couple of months. This was mostly due to the speed at which I was following tutorials, but I also spent a lot of time spinning up projects for the sake of quick experiments. Experimenting was, and still is, the number one way I learn to code. What not to do Nesting This is by far the biggest mistake I made when I first learned to code. I tried to organize tiny little projects (many of them were just code snippets) into a deeply nested hierarchy of directories. This nipped me in the butt for two reasons: 1) I eventually couldn\u2019t keep track of what belonged where, and 2) when I graduated to using a command line, it become way too much typing to find projects. The main problem for me was that I was in a highly experimental stage of my career. I didn\u2019t know exactly what my first programming job would be, and I didn\u2019t know for sure which language or stack of technologies to focus on. In the early days, my decisions were largely guided by which tutorials suited my learning style best. If I found a source of information (YouTube videos, articles, books and other resources) that played well to my learning style, I would adopt that stack for that reason alone. Copy GitHub Locally \u2013 Use A Flat Folder Structure Once I spent some time working with GitHub, I realized how easy it was to work with a flat folder structure. So I decided to reflect that organization on my own machine. This is how I organize now (on Windows in this example): -- C:\\Users\\Dan\\batcave -- -- project-1 -- -- project-2 -- -- project-3 -- -- project-etc Use A Cloud IDE For Small Projects It\u2019s unfortunate to see how far behind the times software development is. Office administrators have had cloud applications for making documents, slide shows, spreadsheets and all the other typical office applications in a collaborative, accessible way that keeps your local machine nice and tidy for years. It\u2019s only recently that software developers have had access to cloud IDE\u2019s, and they are for the most part only realistic for web developers. However, they can still help tidy up your local machine, by moving some of your smaller projects onto the cloud. So what is a cloud IDE? It\u2019s an IDE that runs in your web browser. Usually, you will get a virtial box running a Linux OS such as Ubuntu, and a bit of memory and storage for each project you host on the service. My current cloud IDE of choice is c9.io. The free version gives you unlimited public workspaces. Think of a workspace on c9 as it\u2019s own machine running Ubuntu, with enough storage and processing power for most small to medium sized projects. Okay, so to recap: Leave IDE defaults alone. Use a cloud IDE when you can (most have decent free services). Learn Git. (This should probably be ranked number 1). Use GitHub, Bitbucket, or GitLab for hosting your projects. Keep your local repositories flat. No nested folders of folders! Spinal case your project names. accumulated more than a hundred tiny micro-projects ( View Highlight ) I also spent a lot of time spinning up projects for the sake of quick experiments. Experimenting was, and still is, the number one way I learn to code. ( View Highlight ) At all stages of your career (especially the early stages) you\u2019ll come across problems that you\u2019ve solved before. It\u2019s pretty handy to reach into a \u201ctool bag\u201d and find a piece of code or a pattern that you\u2019ve implemented and documented before. ( View Highlight ) Don\u2019t organize by language ( View Highlight ) One thing I highly recommend for new developers is picking a base language as early as possible. The sooner the better. ( View Highlight ) What you should do ( View Highlight ) Use GitHub ( View Highlight ) By using GitHub or another similar host, you\u2019re creating backups of all your work ( View Highlight ) It\u2019s probably not a good idea to rely solely on GitHub for anything proprietary, but for small projects, it\u2019s better than no backups. ( View Highlight )","title":"Highlights"},{"location":"Highlights/Readwise/Articles/Best%20Free%2C%20Public%20DNS%20Servers%20in%202021%20Boost%20Your%20Internet%20Speed%20With%20These%20Services/","text":"Best Free, Public DNS Servers in 2021: Boost Your Internet Speed With These Services \u00b6 Metadata \u00b6 Author: [[Mike Williams]] Full Title: Best Free, Public DNS Servers in 2021: Boost Your Internet Speed With These Services Category: #Type/Highlights/Article URL: https://www.techradar.com/news/best-dns-server Highlights \u00b6 Free and public DNS servers offer an alternative way to connect safely online with the added bonus of potentially accelerating your internet speed. DNS (Domain Name System) is a system (or protocol) which translates the domain names you enter in a browser to the IP addresses required to access those sites. ( View Highlight ) Your ISP will assign you DNS servers whenever you connect to the internet, but these may not always be the best DNS server choice around. Slow DNS servers can cause a lag before websites start to load, and if your server sometimes goes down, you may not be able to access any sites at all. Switching to a free public DNS server can make a real difference, with more responsive browsing and lengthy 100% uptime records meaning there's much less chance of technical problems. ( View Highlight ) What is DNS? The Domain Name System (DNS) is a phonebook for the internet, a framework which translates domain names, like facebook.com or twitter.com, into the IP addresses necessary for devices to load those internet resources (e.g. 126.125.4.4). In geek terms, that's called Resolution. ( View Highlight ) The mechanics of DNS can be quite complicated, as information isn't held in a single database, but rather distributed in a worldwide directory including a vast number of DNS servers. ( View Highlight ) DNS speed depends on many factors, including your location, the distance to your nearest server, and that server having enough power and bandwidth to handle all the queries it receives. ( View Highlight ) DNS Jumper is a portable freeware tool which tests multiple public DNS services to find out which delivers the best performance for you. The program has a lot of options, but isn't difficult to use. Launch it, click Fastest DNS > Start DNS Test, and within a few seconds you'll be looking at a list of DNS services sorted by speed. DNS Jumper can be useful, in particular because it's checking how servers perform from your location, but it doesn't run enough tests over a long enough period to give you a definitive answer. ( View Highlight )","title":"Best Free, Public DNS Servers in 2021: Boost Your Internet Speed With These Services"},{"location":"Highlights/Readwise/Articles/Best%20Free%2C%20Public%20DNS%20Servers%20in%202021%20Boost%20Your%20Internet%20Speed%20With%20These%20Services/#best-free-public-dns-servers-in-2021-boost-your-internet-speed-with-these-services","text":"","title":"Best Free, Public DNS Servers in 2021: Boost Your Internet Speed With These Services"},{"location":"Highlights/Readwise/Articles/Best%20Free%2C%20Public%20DNS%20Servers%20in%202021%20Boost%20Your%20Internet%20Speed%20With%20These%20Services/#metadata","text":"Author: [[Mike Williams]] Full Title: Best Free, Public DNS Servers in 2021: Boost Your Internet Speed With These Services Category: #Type/Highlights/Article URL: https://www.techradar.com/news/best-dns-server","title":"Metadata"},{"location":"Highlights/Readwise/Articles/Best%20Free%2C%20Public%20DNS%20Servers%20in%202021%20Boost%20Your%20Internet%20Speed%20With%20These%20Services/#highlights","text":"Free and public DNS servers offer an alternative way to connect safely online with the added bonus of potentially accelerating your internet speed. DNS (Domain Name System) is a system (or protocol) which translates the domain names you enter in a browser to the IP addresses required to access those sites. ( View Highlight ) Your ISP will assign you DNS servers whenever you connect to the internet, but these may not always be the best DNS server choice around. Slow DNS servers can cause a lag before websites start to load, and if your server sometimes goes down, you may not be able to access any sites at all. Switching to a free public DNS server can make a real difference, with more responsive browsing and lengthy 100% uptime records meaning there's much less chance of technical problems. ( View Highlight ) What is DNS? The Domain Name System (DNS) is a phonebook for the internet, a framework which translates domain names, like facebook.com or twitter.com, into the IP addresses necessary for devices to load those internet resources (e.g. 126.125.4.4). In geek terms, that's called Resolution. ( View Highlight ) The mechanics of DNS can be quite complicated, as information isn't held in a single database, but rather distributed in a worldwide directory including a vast number of DNS servers. ( View Highlight ) DNS speed depends on many factors, including your location, the distance to your nearest server, and that server having enough power and bandwidth to handle all the queries it receives. ( View Highlight ) DNS Jumper is a portable freeware tool which tests multiple public DNS services to find out which delivers the best performance for you. The program has a lot of options, but isn't difficult to use. Launch it, click Fastest DNS > Start DNS Test, and within a few seconds you'll be looking at a list of DNS services sorted by speed. DNS Jumper can be useful, in particular because it's checking how servers perform from your location, but it doesn't run enough tests over a long enough period to give you a definitive answer. ( View Highlight )","title":"Highlights"},{"location":"Highlights/Readwise/Articles/Best%20GTD%20Tools%20and%20Productivity%20Software%20Tips.%20Life%20Improvement%20With%20GTD%20%28Getting%20Things%20Done%29./","text":"Best GTD Tools and Productivity Software Tips. Life Improvement With GTD (Getting Things Done). \u00b6 Metadata \u00b6 Author: Full Title: Best GTD Tools and Productivity Software Tips. Life Improvement With GTD (Getting Things Done). Category: #Type/Highlights/Article URL: http://gtd-tools.com/ Highlights \u00b6 Usefull links Post about Getting Things Written - an adaptation of GTD for writers.","title":"Best GTD Tools and Productivity Software Tips. Life Improvement With GTD (Getting Things Done)."},{"location":"Highlights/Readwise/Articles/Best%20GTD%20Tools%20and%20Productivity%20Software%20Tips.%20Life%20Improvement%20With%20GTD%20%28Getting%20Things%20Done%29./#best-gtd-tools-and-productivity-software-tips-life-improvement-with-gtd-getting-things-done","text":"","title":"Best GTD Tools and Productivity Software Tips. Life Improvement With GTD (Getting Things Done)."},{"location":"Highlights/Readwise/Articles/Best%20GTD%20Tools%20and%20Productivity%20Software%20Tips.%20Life%20Improvement%20With%20GTD%20%28Getting%20Things%20Done%29./#metadata","text":"Author: Full Title: Best GTD Tools and Productivity Software Tips. Life Improvement With GTD (Getting Things Done). Category: #Type/Highlights/Article URL: http://gtd-tools.com/","title":"Metadata"},{"location":"Highlights/Readwise/Articles/Best%20GTD%20Tools%20and%20Productivity%20Software%20Tips.%20Life%20Improvement%20With%20GTD%20%28Getting%20Things%20Done%29./#highlights","text":"Usefull links Post about Getting Things Written - an adaptation of GTD for writers.","title":"Highlights"},{"location":"Highlights/Readwise/Articles/Best%20Practices%20With%20Packer%20and%20Windows/","text":"Best Practices With Packer and Windows \u00b6 Metadata \u00b6 Author: [[Matthew Hodgkins]] Full Title: Best Practices With Packer and Windows Category: #Type/Highlights/Article URL: https://hodgkins.io/best-practices-with-packer-and-windows Highlights \u00b6 Why you should be using Packer ( View Highlight ) When you develop automation, for example, PowerShell Desired State configuration resources, where do you test them? If the answer is locally on your machine or a remote Virtual Machine platform, you are missing out on some opportunities of speed and reduction in your development and test cycle time. ( View Highlight ) This is where Packer by HashiCorp can help. Packer is a tool for creating machine images from a single configuration source. You store the entire image creation process as code, so images are always built the same way, this way, instead of having to ship entire VM templates over the internet, you can just keep your Packer configuration in source control and anyone in your team can build their own templates. ( View Highlight )","title":"Best Practices With Packer and Windows"},{"location":"Highlights/Readwise/Articles/Best%20Practices%20With%20Packer%20and%20Windows/#best-practices-with-packer-and-windows","text":"","title":"Best Practices With Packer and Windows"},{"location":"Highlights/Readwise/Articles/Best%20Practices%20With%20Packer%20and%20Windows/#metadata","text":"Author: [[Matthew Hodgkins]] Full Title: Best Practices With Packer and Windows Category: #Type/Highlights/Article URL: https://hodgkins.io/best-practices-with-packer-and-windows","title":"Metadata"},{"location":"Highlights/Readwise/Articles/Best%20Practices%20With%20Packer%20and%20Windows/#highlights","text":"Why you should be using Packer ( View Highlight ) When you develop automation, for example, PowerShell Desired State configuration resources, where do you test them? If the answer is locally on your machine or a remote Virtual Machine platform, you are missing out on some opportunities of speed and reduction in your development and test cycle time. ( View Highlight ) This is where Packer by HashiCorp can help. Packer is a tool for creating machine images from a single configuration source. You store the entire image creation process as code, so images are always built the same way, this way, instead of having to ship entire VM templates over the internet, you can just keep your Packer configuration in source control and anyone in your team can build their own templates. ( View Highlight )","title":"Highlights"},{"location":"Highlights/Readwise/Articles/Best%20Practices%20for%20Outlook/","text":"Best Practices for Outlook \u00b6 Metadata \u00b6 Author: Full Title: Best Practices for Outlook Category: #Type/Highlights/Article URL: https://support.microsoft.com/en-us/office/best-practices-for-outlook-f90e5f69-8832-4d89-95b3-bfdf76c82ef8 Highlights \u00b6 Reduce the number of places where you read messages. If you're using a new version of Microsoft 365, you can use Focused Inbox for Outlook to automatically separate the types of messages you're most likely to read right away from other messages. Let some messages pass by. Use rules to send the messages that you don't need to read right away into their own folders. Such as folders for projects or Contact Group folders. You don\u2019t need to \u2014 and in high volume situations probably can\u2019t \u2014 read every message sent to you. Reduce the number of places where you manually file messages. Reduce the mental tax of filing by relying on search to locate messages. Process your messages by using the Four Ds. When reading your messages, decide whether to: Delete it. Do it (respond or file for reference). Delegate it (forward). Defer it (using categories and flags) for a second review in your task list. Reduce your to-do list to one list. Use a single to-do list and a single calendar to manage what you need to do. Tags: [[favorite]] Work in batches. Use categories to help you group similar tasks together. Use good judgment when sending messages. Follow the do\u2019s and don\u2019ts of writing great messages. Review your calendar and tasks regularly. It\u2019s considered best practice to have: The Navigation Pane open on the left. Your messages in Conversations view, with messages sent directly to you automatically formatted in blue. The Reading Pane on the right. The To-Do Bar open on the far right. If your screen resolution is less than 1024 by 768 pixels, the To-Do Bar can be minimized. Cached Exchange Mode turned on. It\u2019s considered best practice to have: An Inbox for messages that you need to process (deal with). Your Inbox is for messages sent directly to you or that could be important for you to read. Use automatic formatting rules to make all messages sent only to you blue. A single reference folder, under the Inbox, for all reference material that you might want to refer back to later. Nothing is automatically filed (that is, with a rule) into this folder. Name this folder 1-Reference. (Adding the 1- will cause it to be the first item under the Inbox.) This folder is created under the Inbox so that you can collapse the Inbox and remove it from view. Set this folder to auto archive annually. A folder for career-related, private, and personal messages. Having a separate folder for personal and career-related information gives you the freedom to search for a message while someone is standing over your shoulder without worrying that a personally sensitive message will appear. Name this folder 2-Personal. Managers might have a single folder for feedback on their employees called 3-Management. A set of folders for Contact Group messages. All messages sent to Contact Groups (also known as list servers, or mailing lists, or distribution lists) don\u2019t necessarily need to be read. This set of folders is the repository for all of the Contact Group messages that aren\u2019t automatically delivered to your Inbox. Create a single, top-level folder under your Inbox called Contact Groups, and then create a subfolder for each topic of Contact Groups. Usually, one folder per Contact Group is enough, but if you are on several related Contact Groups, consider having all of the messages delivered to the same folder.","title":"Best Practices for Outlook"},{"location":"Highlights/Readwise/Articles/Best%20Practices%20for%20Outlook/#best-practices-for-outlook","text":"","title":"Best Practices for Outlook"},{"location":"Highlights/Readwise/Articles/Best%20Practices%20for%20Outlook/#metadata","text":"Author: Full Title: Best Practices for Outlook Category: #Type/Highlights/Article URL: https://support.microsoft.com/en-us/office/best-practices-for-outlook-f90e5f69-8832-4d89-95b3-bfdf76c82ef8","title":"Metadata"},{"location":"Highlights/Readwise/Articles/Best%20Practices%20for%20Outlook/#highlights","text":"Reduce the number of places where you read messages. If you're using a new version of Microsoft 365, you can use Focused Inbox for Outlook to automatically separate the types of messages you're most likely to read right away from other messages. Let some messages pass by. Use rules to send the messages that you don't need to read right away into their own folders. Such as folders for projects or Contact Group folders. You don\u2019t need to \u2014 and in high volume situations probably can\u2019t \u2014 read every message sent to you. Reduce the number of places where you manually file messages. Reduce the mental tax of filing by relying on search to locate messages. Process your messages by using the Four Ds. When reading your messages, decide whether to: Delete it. Do it (respond or file for reference). Delegate it (forward). Defer it (using categories and flags) for a second review in your task list. Reduce your to-do list to one list. Use a single to-do list and a single calendar to manage what you need to do. Tags: [[favorite]] Work in batches. Use categories to help you group similar tasks together. Use good judgment when sending messages. Follow the do\u2019s and don\u2019ts of writing great messages. Review your calendar and tasks regularly. It\u2019s considered best practice to have: The Navigation Pane open on the left. Your messages in Conversations view, with messages sent directly to you automatically formatted in blue. The Reading Pane on the right. The To-Do Bar open on the far right. If your screen resolution is less than 1024 by 768 pixels, the To-Do Bar can be minimized. Cached Exchange Mode turned on. It\u2019s considered best practice to have: An Inbox for messages that you need to process (deal with). Your Inbox is for messages sent directly to you or that could be important for you to read. Use automatic formatting rules to make all messages sent only to you blue. A single reference folder, under the Inbox, for all reference material that you might want to refer back to later. Nothing is automatically filed (that is, with a rule) into this folder. Name this folder 1-Reference. (Adding the 1- will cause it to be the first item under the Inbox.) This folder is created under the Inbox so that you can collapse the Inbox and remove it from view. Set this folder to auto archive annually. A folder for career-related, private, and personal messages. Having a separate folder for personal and career-related information gives you the freedom to search for a message while someone is standing over your shoulder without worrying that a personally sensitive message will appear. Name this folder 2-Personal. Managers might have a single folder for feedback on their employees called 3-Management. A set of folders for Contact Group messages. All messages sent to Contact Groups (also known as list servers, or mailing lists, or distribution lists) don\u2019t necessarily need to be read. This set of folders is the repository for all of the Contact Group messages that aren\u2019t automatically delivered to your Inbox. Create a single, top-level folder under your Inbox called Contact Groups, and then create a subfolder for each topic of Contact Groups. Usually, one folder per Contact Group is enough, but if you are on several related Contact Groups, consider having all of the messages delivered to the same folder.","title":"Highlights"},{"location":"Highlights/Readwise/Articles/Bioconductor%20-%20Package%20Guidelines/","text":"Bioconductor - Package Guidelines \u00b6 Metadata \u00b6 Author: Full Title: Bioconductor - Package Guidelines Category: #Type/Highlights/Article URL: https://bioconductor.org/developers/package-guidelines/ Highlights \u00b6 promotes high-quality, well documented, and interoperable software Note: interoperable ==> vocab list Do not use filenames that differ only in case, as not all file systems are case sensitive package should require less than 10 minutes to run R CMD check --no-build-vignettes. Using the --no-build-vignettes option ensures that the vignette is built only once. The raw package directory should not contain unnecessary files, system files, or hidden files such as .DS_Store, .project, .git, cache file, log files, .Rproj, .so, etc.. These files may be present in your local directory but should not be commited to git (see ). set through environment variable R_CHECK_ENVIRON with a command similar to export R_CHECK_ENVIRON = Tags: [[r]] [[favorite]] use an x.y.z version scheme x is usually 0 for packages that have not yet been released y is even for packages in release, and odd for packages in devel. z is incremented whenever committing changes to a package \u201cAuthors@R or Author/Maintainer:\u201d fields: Use either Authors@R field or Author: and Maintainer: fields, not both. A maintainer designation (cre for Authors@R ) is required with an actively maintained email. \u201cLazyData:\u201d field: For packages that include data, we recommend not including LazyData: TRUE. This rarely proves to be a good thing. In our experience it only slows down the loading of packages with large data. Tags: [[favorite]] Note: interesting - wonder why tidyverse does this then? Imports: is for packages that provide functions, methods, or classes that are used inside your package name space. Most packages are listed here. Depends: is for packages that provide essential functionality for users of your package Suggests: is for packages used in vignettes, examples, and in conditional code. external package availability can be checked via if (!requireNamespace('extraPKG')) stop(...). Enhances: is for packages such as Rmpi or parallel that enhance the performance of your package, but are not strictly needed for its functionality. \u201cSystemRequirements:\u201d field: This field is for listing any external software which is required, but not automatically installed by the normal package installation process. If the installation process is non-trivial, a top-level README file should be included to document the process. \u201cbiocViews:\u201d field: REQUIRED! Specify at least two biocViews categories. Multiple terms are encouraged but terms must come from the same package type (Software, AnnotationData, ExperimentData, Workflow). Note: is there a cranviews? \u201cVideo:\u201d field: This field displays links to instructional videos. Note: Cool \u201cCollates:\u201d field: This may be necessary to order class and method definitions appropriately during package installation. Tags: [[favorite]] Exported functions should use camel case or underscoring and not include \u201c.\u201d indicate S3 dispatch. Generally importFrom() is encouraged over importing an entire package, however if there are many functions from a single package, import() is okay. Exporting all functions with exportPattern(\"^[[:alpha:]]+\") is strongly discouraged. A NEWS file should be included to keep track of changes to the code from one version to the next. It can be a top level file or in the inst/ directory. Only one NEWS file should exist. The following are acceptable formats and locations: ./inst/NEWS.Rd latex 2. ./inst/NEWS formatted text see ?news 3. ./inst/NEWS.md mardown 4. ./NEWS.md markdown 5. ./NEWS formatted text see ?news It must include list elements and cannot be a plain text file. An example format: Changes in version 0.99.0 (2018-05-15) Submitted to Bioconductor Changes in version 1.1.1 (2018-06-15) Fixed bug. Begin indexing from 1 instead of 2 Made the following significant changes o added a subsetting method o added a new field to database After you install your package, the following can be run to see if the NEWS is properly formatted: utils::news(package=\" \") Appropriate citations must be included in help pages (e.g., in the see also section) and vignettes; this aspect of documentation is no different from any scientific endeavor. The file inst/CITATION can be used to specify how a package is to be cited. If this option is utilized, a maintainer can check proper formatting of the CITATION file by running readCitationFile(\"inst/CITATION\"); This must run without ERROR for the CITATION to be accurately displayed on the package landing pages. If existing data is not available or applicable, or a new smaller dataset is needed for examples in the package, data can be included either as a separate data package (for larger amounts of data) or within the package (for smaller datasets). Experimental data packages contain data specific to a particular analysis or experiment. They often accompany a software package for use in the examples and vignettes and in general are not updated regularly. Adding Data to Existing Package Bioconductor strongly encourages the use of existing datasets but if not available data can be included directly in the package for use in the examples found in man pages, vignettes, and tests of your package. This is a good reference by Hadley Wickham concerning data. As mentioned Bioconductor, however does not encourage using LazyData: True despite its recommendataion in this article. Some key points are summarized below. Exported Data and the data/ Directory Data in data/ is exported to the user and readily available. It is made available in an R session through the use of data(). It will require documentation concerning its creatation and source information. It is most often a .RData file created with save() but other types are acceptible as well, see ?data(). Please remember to compress the data. Tags: [[favorite]] Raw Data and the inst/extdata/ Directory It is often desirable to show a workflow which involves parsing or loading of raw files. Bioconductor recommends finding existing raw data already provided in another package or the hubs, however if this is not applicable, raw data files should be included in the inst/extdata. Files of these type are often accessed utilizing system.file(). Bioconductor requires documentation on these files in an inst/script/ directory. Internal Data Rarely, a package may require parsed data that is used internal but should not be exported to the user. An R/sysdata.rda is often the best place to include this type of data. requires a vignette with executable code that demonstrates how to use the package to accomplish a task, man pages for all exported functions with runnable examples, well documented data structures especially if not a pre-exiting class, and well documented datasets for data in data and in inst/extdata. References to the methods used as well as to other simlar or related project/packages is also expected. If data structures differ from similar packages, Bioconductor reviewers will expect some justification as to why. Keep in mind it is always possible to extend existing classes. A vignette demonstrates how to accomplish non-trivial tasks embodying the core functionality of your package. There are two common types of vignettes. A Sweave vignette is an .Rnw file that contains LaTeX and chunks of R code. The R code chunk starts with a line \u00ab\u00bb=, and ends with @. Each chunk is evaluated during R CMD build, prior to LaTeX compilation to a PDF document. An R markdown vignette is similar to a Sweave vignette, but uses markdown instead of LaTeX for structuring text sections and resulting in HTML output. The knitr package can process most Sweave and all R markdown vignettes, producing pleasing output. Refer to Writing package vignettes for technical details. See the BiocStyle package for a convenient way to use common macros and a standard style. A vignette provides reproducibility: the vignette produces the same results as copying the corresponding commands into an R session. It is therefore essential that the vignette embed executed R code. short-cuts (e.g., using a LaTeX verbatim environment, or using the Sweave eval=FALSE flag, or equivalent tricks in markdown) undermine the benefit of vignettes and are generally not allowed; exceptions can be made with proper justification and are at the Bioconductor Reviewers discretion. All packages are required to have at least one vignette. Vignettes go in the vignettes directory of the package. Vignettes are often used as stand-alone documents, so best practices are to include an informative title, the primary author of the vignette, the last modified date of the vignette, and a link to the package landing page. We encourage the use of BiocSytle for formatting Add an \u201cIntroduction\u201d section that serves as an abstract to introduce the objective, models, unique functions, key points, etc that distinguish the package from other packages of similar type. Add an \u201cInstallation\u201d section that show to users how to download and load the package from Bioconductor. If appropriate, we strongly encourage a table of contents Non-trival executable code is a must!!! Static vignettes are not acceptable. Include a section with the SessionInfo() Only the vignette file (.Rnw or .Rmd) and any necessary static images should be in the vignette directory. No intermediate files should be present. Remember to include any relavent references to methods. encourages having a package man page with an overview of the package and links to the main functions. Data man pages must include source information and data structure information. Man pages describing new classes must be very detailed on the structure and what type of information is stored. All man pages should have an runnable examples. donttest and dontrun are discouraged and generally not allowed; The scripts in this directory can vary. Most importantly if data was included in the inst/extdata/, a related script must be present in this directory documenting very clearly how the data was generated. It should include source urls and any important information regarding filtering or processing. It can be executible code, sudo code, or a text description. A user should be able to download and be able to roughly reproduce the file or object that is present as data. Unit tests are highly recommended. We find them indispensable for both package development and maintenance. Two of the main frameworks for testing are RUnit and testthat. Examples and explanations are provided here. There is also the opportunity to create a full testing suite more in depth than traditional testing guidelines but this will require the use of long tests. If a package developer is considering the use of long tests we highly recommend reaching out on the bioc-devel mailing list to ensure proper use and justification. Only contain code that can be distributed under the license specified. Use vapply() instead of sapply() and use the various apply functions instead of for loops. Use seq_len() or seq_along() instead of 1:... Use TRUE/FALSE instead of T/F Avoid class()== and class()!= instead use is() Use system2() instead of system Do not use set.seed in any internal R code. No browser() calls should be in code Avoid the use of <<-. Avoid use of direct slot access with @ or slot(). Accessor methods should be created and utilized Use <- instead of = for assignment Function names should be camel case or utilize the underscore _ and not have a dot . which indicates S3 dispatch. Use dev.new() to start a graphics drive if necessary. Avoid using x11() or X11() for it can only be called on machines that have access to an X server. Avoid large chunks of repeated code. If code is being repeated this is generally a good indication a helper function could be implemented. Excessively long functions should also be avoided. Write small functions. It\u2019s best if each function has only one job that needs to do. And it\u2019s also best if it does that job in as few lines of code as possible. If you find yourself writing great big functions that wrap on for more than a screen then you should probably take a moment to split it up into smaller helper functions. Smaller functions are easier to read, debug and to reuse. Argument names to functions should be descriptive and well documented. Arguments should generally have default values. Check arguments against a validity check. Tags: [[pkgdevt]] [[r]] [[favorite]] Vectorize! Many R operations are performed on the whole object, not just the elements of the object (e.g., sum(x), not x[1] + x[2] + x[2] + ...). In particular, relatively few situations require an explicit for loop. See the Vectorize section of Robust and Efficient Code for additional detail. The following are files that are checked by Bioconductor and flagged as unacceptable: hidden_file_ext = ( \".renviron\", \".rprofile\", \".rproj\", \".rproj.user\", \".rhistory\", \".rapp.history\", \".o\", \".sl\", \".so\", \".dylib\", \".a\", \".dll\", \".def\", \".ds_store\", \"unsrturl.bst\", \".log\", \".aux\", \".backups\", \".cproject\", \".directory\", \".dropbox\", \".exrc\", \".gdb.history\", \".gitattributes\", \".gitmodules\", \".hgtags\", \".project\", \".seed\", \".settings\", \".tm_properties\" )","title":"Bioconductor - Package Guidelines"},{"location":"Highlights/Readwise/Articles/Bioconductor%20-%20Package%20Guidelines/#bioconductor-package-guidelines","text":"","title":"Bioconductor - Package Guidelines"},{"location":"Highlights/Readwise/Articles/Bioconductor%20-%20Package%20Guidelines/#metadata","text":"Author: Full Title: Bioconductor - Package Guidelines Category: #Type/Highlights/Article URL: https://bioconductor.org/developers/package-guidelines/","title":"Metadata"},{"location":"Highlights/Readwise/Articles/Bioconductor%20-%20Package%20Guidelines/#highlights","text":"promotes high-quality, well documented, and interoperable software Note: interoperable ==> vocab list Do not use filenames that differ only in case, as not all file systems are case sensitive package should require less than 10 minutes to run R CMD check --no-build-vignettes. Using the --no-build-vignettes option ensures that the vignette is built only once. The raw package directory should not contain unnecessary files, system files, or hidden files such as .DS_Store, .project, .git, cache file, log files, .Rproj, .so, etc.. These files may be present in your local directory but should not be commited to git (see ). set through environment variable R_CHECK_ENVIRON with a command similar to export R_CHECK_ENVIRON = Tags: [[r]] [[favorite]] use an x.y.z version scheme x is usually 0 for packages that have not yet been released y is even for packages in release, and odd for packages in devel. z is incremented whenever committing changes to a package \u201cAuthors@R or Author/Maintainer:\u201d fields: Use either Authors@R field or Author: and Maintainer: fields, not both. A maintainer designation (cre for Authors@R ) is required with an actively maintained email. \u201cLazyData:\u201d field: For packages that include data, we recommend not including LazyData: TRUE. This rarely proves to be a good thing. In our experience it only slows down the loading of packages with large data. Tags: [[favorite]] Note: interesting - wonder why tidyverse does this then? Imports: is for packages that provide functions, methods, or classes that are used inside your package name space. Most packages are listed here. Depends: is for packages that provide essential functionality for users of your package Suggests: is for packages used in vignettes, examples, and in conditional code. external package availability can be checked via if (!requireNamespace('extraPKG')) stop(...). Enhances: is for packages such as Rmpi or parallel that enhance the performance of your package, but are not strictly needed for its functionality. \u201cSystemRequirements:\u201d field: This field is for listing any external software which is required, but not automatically installed by the normal package installation process. If the installation process is non-trivial, a top-level README file should be included to document the process. \u201cbiocViews:\u201d field: REQUIRED! Specify at least two biocViews categories. Multiple terms are encouraged but terms must come from the same package type (Software, AnnotationData, ExperimentData, Workflow). Note: is there a cranviews? \u201cVideo:\u201d field: This field displays links to instructional videos. Note: Cool \u201cCollates:\u201d field: This may be necessary to order class and method definitions appropriately during package installation. Tags: [[favorite]] Exported functions should use camel case or underscoring and not include \u201c.\u201d indicate S3 dispatch. Generally importFrom() is encouraged over importing an entire package, however if there are many functions from a single package, import() is okay. Exporting all functions with exportPattern(\"^[[:alpha:]]+\") is strongly discouraged. A NEWS file should be included to keep track of changes to the code from one version to the next. It can be a top level file or in the inst/ directory. Only one NEWS file should exist. The following are acceptable formats and locations: ./inst/NEWS.Rd latex 2. ./inst/NEWS formatted text see ?news 3. ./inst/NEWS.md mardown 4. ./NEWS.md markdown 5. ./NEWS formatted text see ?news It must include list elements and cannot be a plain text file. An example format: Changes in version 0.99.0 (2018-05-15) Submitted to Bioconductor Changes in version 1.1.1 (2018-06-15) Fixed bug. Begin indexing from 1 instead of 2 Made the following significant changes o added a subsetting method o added a new field to database After you install your package, the following can be run to see if the NEWS is properly formatted: utils::news(package=\" \") Appropriate citations must be included in help pages (e.g., in the see also section) and vignettes; this aspect of documentation is no different from any scientific endeavor. The file inst/CITATION can be used to specify how a package is to be cited. If this option is utilized, a maintainer can check proper formatting of the CITATION file by running readCitationFile(\"inst/CITATION\"); This must run without ERROR for the CITATION to be accurately displayed on the package landing pages. If existing data is not available or applicable, or a new smaller dataset is needed for examples in the package, data can be included either as a separate data package (for larger amounts of data) or within the package (for smaller datasets). Experimental data packages contain data specific to a particular analysis or experiment. They often accompany a software package for use in the examples and vignettes and in general are not updated regularly. Adding Data to Existing Package Bioconductor strongly encourages the use of existing datasets but if not available data can be included directly in the package for use in the examples found in man pages, vignettes, and tests of your package. This is a good reference by Hadley Wickham concerning data. As mentioned Bioconductor, however does not encourage using LazyData: True despite its recommendataion in this article. Some key points are summarized below. Exported Data and the data/ Directory Data in data/ is exported to the user and readily available. It is made available in an R session through the use of data(). It will require documentation concerning its creatation and source information. It is most often a .RData file created with save() but other types are acceptible as well, see ?data(). Please remember to compress the data. Tags: [[favorite]] Raw Data and the inst/extdata/ Directory It is often desirable to show a workflow which involves parsing or loading of raw files. Bioconductor recommends finding existing raw data already provided in another package or the hubs, however if this is not applicable, raw data files should be included in the inst/extdata. Files of these type are often accessed utilizing system.file(). Bioconductor requires documentation on these files in an inst/script/ directory. Internal Data Rarely, a package may require parsed data that is used internal but should not be exported to the user. An R/sysdata.rda is often the best place to include this type of data. requires a vignette with executable code that demonstrates how to use the package to accomplish a task, man pages for all exported functions with runnable examples, well documented data structures especially if not a pre-exiting class, and well documented datasets for data in data and in inst/extdata. References to the methods used as well as to other simlar or related project/packages is also expected. If data structures differ from similar packages, Bioconductor reviewers will expect some justification as to why. Keep in mind it is always possible to extend existing classes. A vignette demonstrates how to accomplish non-trivial tasks embodying the core functionality of your package. There are two common types of vignettes. A Sweave vignette is an .Rnw file that contains LaTeX and chunks of R code. The R code chunk starts with a line \u00ab\u00bb=, and ends with @. Each chunk is evaluated during R CMD build, prior to LaTeX compilation to a PDF document. An R markdown vignette is similar to a Sweave vignette, but uses markdown instead of LaTeX for structuring text sections and resulting in HTML output. The knitr package can process most Sweave and all R markdown vignettes, producing pleasing output. Refer to Writing package vignettes for technical details. See the BiocStyle package for a convenient way to use common macros and a standard style. A vignette provides reproducibility: the vignette produces the same results as copying the corresponding commands into an R session. It is therefore essential that the vignette embed executed R code. short-cuts (e.g., using a LaTeX verbatim environment, or using the Sweave eval=FALSE flag, or equivalent tricks in markdown) undermine the benefit of vignettes and are generally not allowed; exceptions can be made with proper justification and are at the Bioconductor Reviewers discretion. All packages are required to have at least one vignette. Vignettes go in the vignettes directory of the package. Vignettes are often used as stand-alone documents, so best practices are to include an informative title, the primary author of the vignette, the last modified date of the vignette, and a link to the package landing page. We encourage the use of BiocSytle for formatting Add an \u201cIntroduction\u201d section that serves as an abstract to introduce the objective, models, unique functions, key points, etc that distinguish the package from other packages of similar type. Add an \u201cInstallation\u201d section that show to users how to download and load the package from Bioconductor. If appropriate, we strongly encourage a table of contents Non-trival executable code is a must!!! Static vignettes are not acceptable. Include a section with the SessionInfo() Only the vignette file (.Rnw or .Rmd) and any necessary static images should be in the vignette directory. No intermediate files should be present. Remember to include any relavent references to methods. encourages having a package man page with an overview of the package and links to the main functions. Data man pages must include source information and data structure information. Man pages describing new classes must be very detailed on the structure and what type of information is stored. All man pages should have an runnable examples. donttest and dontrun are discouraged and generally not allowed; The scripts in this directory can vary. Most importantly if data was included in the inst/extdata/, a related script must be present in this directory documenting very clearly how the data was generated. It should include source urls and any important information regarding filtering or processing. It can be executible code, sudo code, or a text description. A user should be able to download and be able to roughly reproduce the file or object that is present as data. Unit tests are highly recommended. We find them indispensable for both package development and maintenance. Two of the main frameworks for testing are RUnit and testthat. Examples and explanations are provided here. There is also the opportunity to create a full testing suite more in depth than traditional testing guidelines but this will require the use of long tests. If a package developer is considering the use of long tests we highly recommend reaching out on the bioc-devel mailing list to ensure proper use and justification. Only contain code that can be distributed under the license specified. Use vapply() instead of sapply() and use the various apply functions instead of for loops. Use seq_len() or seq_along() instead of 1:... Use TRUE/FALSE instead of T/F Avoid class()== and class()!= instead use is() Use system2() instead of system Do not use set.seed in any internal R code. No browser() calls should be in code Avoid the use of <<-. Avoid use of direct slot access with @ or slot(). Accessor methods should be created and utilized Use <- instead of = for assignment Function names should be camel case or utilize the underscore _ and not have a dot . which indicates S3 dispatch. Use dev.new() to start a graphics drive if necessary. Avoid using x11() or X11() for it can only be called on machines that have access to an X server. Avoid large chunks of repeated code. If code is being repeated this is generally a good indication a helper function could be implemented. Excessively long functions should also be avoided. Write small functions. It\u2019s best if each function has only one job that needs to do. And it\u2019s also best if it does that job in as few lines of code as possible. If you find yourself writing great big functions that wrap on for more than a screen then you should probably take a moment to split it up into smaller helper functions. Smaller functions are easier to read, debug and to reuse. Argument names to functions should be descriptive and well documented. Arguments should generally have default values. Check arguments against a validity check. Tags: [[pkgdevt]] [[r]] [[favorite]] Vectorize! Many R operations are performed on the whole object, not just the elements of the object (e.g., sum(x), not x[1] + x[2] + x[2] + ...). In particular, relatively few situations require an explicit for loop. See the Vectorize section of Robust and Efficient Code for additional detail. The following are files that are checked by Bioconductor and flagged as unacceptable: hidden_file_ext = ( \".renviron\", \".rprofile\", \".rproj\", \".rproj.user\", \".rhistory\", \".rapp.history\", \".o\", \".sl\", \".so\", \".dylib\", \".a\", \".dll\", \".def\", \".ds_store\", \"unsrturl.bst\", \".log\", \".aux\", \".backups\", \".cproject\", \".directory\", \".dropbox\", \".exrc\", \".gdb.history\", \".gitattributes\", \".gitmodules\", \".hgtags\", \".project\", \".seed\", \".settings\", \".tm_properties\" )","title":"Highlights"},{"location":"Highlights/Readwise/Articles/Blog%20%20Filterize/","text":"Blog | Filterize \u00b6 Metadata \u00b6 Author: Full Title: Blog | Filterize Category: #Type/Highlights/Article URL: https://filterize.net/blog/ Highlights \u00b6 Your mind is for having ideas, not holding them (David Allen) The Top Five Benefits from using Getting Things Done 1.) The most important task of the GTD method is to collect all your ideas, material, and todos into one inbox. As soon as you trust your inbox and your system, your brain stops to remind your every few seconds on random things. Instead, it will relieve you of the mental workload of reminding everything. This helps you to get a clear mind and focus on your progress. 2.) If you write down all your thought, nothing get lost anymore. Everything is in the system and you can be sure to have access to it in the right moment. Whenever you need it. 3.) During the weekly and monthly review, you go through all your open tasks, project and ideas. This allows you to plan what are the next actions to do. Due to nature of breaking all bigger tasks down to small actionable pieces it is much easier to really do them. This is an import step to overcome procrastination. 4.) Most systems require the usage of priorities. This is a really hard task. For example, if you have five priorities P1, P2, \u2026 P5 you have to decide for every single task if it is a P3 or maybe a P2. With Getting Things Done you don\u2019t have to invest this thought. Instead you can organize your tasks into contexts like home, work, or town. With this contexts you will only see actions you can do right now. 5.) Getting Things Done combines perfectly with the Inbox Zero. With Inbox Zero you have the goal to reduce all items in your inbox to zero. With the GTD system you have the perfect way to achieve this. If you use Evernote for your Getting Things Done implementation you can easily transform actionable items into reference material, whenever you finish a task. You can use your email application to forward emails as reference material or actionable items directly into Evernote. You can use the webclipper to collect interesting web pages or you can setup your scanner to send scanned documents directly into your Evernote inbox. Automated Dashboard Notes With Filterize you can create dashboards for your contexts, projects or your delegated list. Dashboards are notes with dynamic tables of contents. With our predefined Getting Things Done Workflow you can have notes that organize your tasks by urgency like now, next or later with respect to the tasks context. Delegate Tasks to Users without Evernote You can define a rule in Filterize that sends an email to your colleague whenever a note has a certain tag. If you use tag to identify the person you want to delegate the task to you can use this rule to inform him/her about the delegated task. Support for your Weekly and Monthly Review One of the most important tasks in Getting Things Done is to do your weekly and monthly review to keep your GTD system working. The easiest way to do this is to create a checklist for both of them. You can apply a reminder to the review notes, so Evernote reminds you whenever the review is due. If you prepare the next review, you have to uncheck all checkboxes of your checklist and reschedule the reminder to the next week or month. Filterize can automate this completely. Just setup a filter that unchecks your checkboxes and create a new reminder in a month or week. You can trigger this automation with the last open checkbox in your review checklist.","title":"Blog | Filterize"},{"location":"Highlights/Readwise/Articles/Blog%20%20Filterize/#blog-filterize","text":"","title":"Blog | Filterize"},{"location":"Highlights/Readwise/Articles/Blog%20%20Filterize/#metadata","text":"Author: Full Title: Blog | Filterize Category: #Type/Highlights/Article URL: https://filterize.net/blog/","title":"Metadata"},{"location":"Highlights/Readwise/Articles/Blog%20%20Filterize/#highlights","text":"Your mind is for having ideas, not holding them (David Allen) The Top Five Benefits from using Getting Things Done 1.) The most important task of the GTD method is to collect all your ideas, material, and todos into one inbox. As soon as you trust your inbox and your system, your brain stops to remind your every few seconds on random things. Instead, it will relieve you of the mental workload of reminding everything. This helps you to get a clear mind and focus on your progress. 2.) If you write down all your thought, nothing get lost anymore. Everything is in the system and you can be sure to have access to it in the right moment. Whenever you need it. 3.) During the weekly and monthly review, you go through all your open tasks, project and ideas. This allows you to plan what are the next actions to do. Due to nature of breaking all bigger tasks down to small actionable pieces it is much easier to really do them. This is an import step to overcome procrastination. 4.) Most systems require the usage of priorities. This is a really hard task. For example, if you have five priorities P1, P2, \u2026 P5 you have to decide for every single task if it is a P3 or maybe a P2. With Getting Things Done you don\u2019t have to invest this thought. Instead you can organize your tasks into contexts like home, work, or town. With this contexts you will only see actions you can do right now. 5.) Getting Things Done combines perfectly with the Inbox Zero. With Inbox Zero you have the goal to reduce all items in your inbox to zero. With the GTD system you have the perfect way to achieve this. If you use Evernote for your Getting Things Done implementation you can easily transform actionable items into reference material, whenever you finish a task. You can use your email application to forward emails as reference material or actionable items directly into Evernote. You can use the webclipper to collect interesting web pages or you can setup your scanner to send scanned documents directly into your Evernote inbox. Automated Dashboard Notes With Filterize you can create dashboards for your contexts, projects or your delegated list. Dashboards are notes with dynamic tables of contents. With our predefined Getting Things Done Workflow you can have notes that organize your tasks by urgency like now, next or later with respect to the tasks context. Delegate Tasks to Users without Evernote You can define a rule in Filterize that sends an email to your colleague whenever a note has a certain tag. If you use tag to identify the person you want to delegate the task to you can use this rule to inform him/her about the delegated task. Support for your Weekly and Monthly Review One of the most important tasks in Getting Things Done is to do your weekly and monthly review to keep your GTD system working. The easiest way to do this is to create a checklist for both of them. You can apply a reminder to the review notes, so Evernote reminds you whenever the review is due. If you prepare the next review, you have to uncheck all checkboxes of your checklist and reschedule the reminder to the next week or month. Filterize can automate this completely. Just setup a filter that unchecks your checkboxes and create a new reminder in a month or week. You can trigger this automation with the last open checkbox in your review checklist.","title":"Highlights"},{"location":"Highlights/Readwise/Articles/Building%20Better%20Documentation%20%20Atlassian/","text":"Building Better Documentation | Atlassian \u00b6 Metadata \u00b6 Author: Full Title: Building Better Documentation | Atlassian Category: #Type/Highlights/Article URL: https://www.atlassian.com/software/confluence/documentation Highlights \u00b6 Exert less mental energy Get work done without thinking too hard and exerting the least amount of effort possible. Create consistency Ensure that the same information, processes, and plans are being consumed by your readers in a consistent way. Minimize workload Onboard teammates quickly and efficiently so they can start getting work done right away. Improve company branding Make a statement about how you treat your external customers and internal employees by being supportive and helpful. All documentation should aim to accomplish 2 main things: Inform users Enable users to successfully accomplish something When starting any documentation, begin by defining the topic of interest, objective, or goal to help your audience understand what they are reading about right off the bat. Internal documentation Team documentation Team documentation helps illuminate the work that's being done so teams can, well, work as a team. These docs come in the form of project plans, team schedules, status reports, meeting notes, and anything else a team may need to work functionally and efficiently. This type of documentation is detailed, ensuring everyone stays on the same page. Reference documentation Reference documentation educates the company on important topics, processes, and policies. These may be policies created by the HR department, legal processes for hiring external vendors, or how-to articles on setting up your company benefits. Remember that reference documentation is written by a small pool of people for a large and varied audience, so digestible content is important. Project documentation Project documentation is, naturally, project specific, and gives much-needed structure to product development. It includes proposals, product requirements documents, design guidelines or sketches, roadmaps, and other relevant information needed for development, with contributions coming from project managers, engineers, designers and more. EXTERNAL DOCUMENTATION System documentation System documentation details code, APIs, and other processes that tell developers and programmers what kinds of methods and functions can be used in developing specific software, as well as limitations and requirements. Code snippets, like example API calls and responses, are central to this type of documentation. End user documentation User documentation is often the most visible type of documentation. It should be easy to read and understand, and updated with each new version of the software. It takes form in \"Read Me\" docs, installation guides, admin guides, product knowledge bases, and tutorials (the most helpful of the lot). And, like reference documentation, it's produced by a small pool of creators, for a large pool of consumers, so digestible content is important. Including examples in your documentation offers a huge value to your audience. They serve as a bridge to help understand concepts and ideas, and ensure the reader that you do in fact know what you are talking about. Creating documentation The ultimate goal is to ensure your documentation is useful for the reader. We've provided you with tutorial-formatted documentation for your documentation (how meta) below to help make that task just a bit easier. Research What do users need to know about your product, project, or API? Use your analytics tool to see what's being searched, browse online community forums and discussion groups, and conduct user research and usability testing. Make sure you also know your product and how to easily explain user questions, new features, and workflows. Just start Clearly state what's going to be covered in your documentation and why it should be valuable to the reader to kick it off. Capture the deets Create an outline and draft up your content. Write with an appropriate voice and tone (be human!) for your audience and be consistent and concise with your language. Communicate important details clearly. Format Organize your page so it's easy to follow from beginning to end. Cut out fluff and break up long content with visuals like diagrams, screenshots, and images. Review Get feedback on your their vs. there and to vs. too's. Ensure reviewers understand the goal of your documentation. This will help uncover confusing language or point out missing steps. Publish After revisions and edits, you're ready to go live! Publish your work and keep your ear to the ground for any feedback and comments. Documentation isn't something to set and forget! Keep it brief Your documentation should have just the right amount of information to get the job done without raising a help ticket. Provide key points and the option for readers to go into further detail. Visuals are key Visuals are key to comprehension. Product design, code samples, in-product demos, screenshots, and video tutorials play a large role in helping a reader to fully understand the concept, the how-to, or the to-do. Also keep in mind the layout, legibility, and easily digestible chunks. Know your audience Take a walk in the user's shoes. Know your reader, take a stroll through their user journey of your product and your documentation. This should always guide how and what you write. Hit the ground running The best documentation is clear, concise, informative, and most importantly, adds value for its audience. Explore team collaboration software like Confluence for your documentation, and spend less time hunting things down, and more time making things happen","title":"Building Better Documentation | Atlassian"},{"location":"Highlights/Readwise/Articles/Building%20Better%20Documentation%20%20Atlassian/#building-better-documentation-atlassian","text":"","title":"Building Better Documentation | Atlassian"},{"location":"Highlights/Readwise/Articles/Building%20Better%20Documentation%20%20Atlassian/#metadata","text":"Author: Full Title: Building Better Documentation | Atlassian Category: #Type/Highlights/Article URL: https://www.atlassian.com/software/confluence/documentation","title":"Metadata"},{"location":"Highlights/Readwise/Articles/Building%20Better%20Documentation%20%20Atlassian/#highlights","text":"Exert less mental energy Get work done without thinking too hard and exerting the least amount of effort possible. Create consistency Ensure that the same information, processes, and plans are being consumed by your readers in a consistent way. Minimize workload Onboard teammates quickly and efficiently so they can start getting work done right away. Improve company branding Make a statement about how you treat your external customers and internal employees by being supportive and helpful. All documentation should aim to accomplish 2 main things: Inform users Enable users to successfully accomplish something When starting any documentation, begin by defining the topic of interest, objective, or goal to help your audience understand what they are reading about right off the bat. Internal documentation Team documentation Team documentation helps illuminate the work that's being done so teams can, well, work as a team. These docs come in the form of project plans, team schedules, status reports, meeting notes, and anything else a team may need to work functionally and efficiently. This type of documentation is detailed, ensuring everyone stays on the same page. Reference documentation Reference documentation educates the company on important topics, processes, and policies. These may be policies created by the HR department, legal processes for hiring external vendors, or how-to articles on setting up your company benefits. Remember that reference documentation is written by a small pool of people for a large and varied audience, so digestible content is important. Project documentation Project documentation is, naturally, project specific, and gives much-needed structure to product development. It includes proposals, product requirements documents, design guidelines or sketches, roadmaps, and other relevant information needed for development, with contributions coming from project managers, engineers, designers and more. EXTERNAL DOCUMENTATION System documentation System documentation details code, APIs, and other processes that tell developers and programmers what kinds of methods and functions can be used in developing specific software, as well as limitations and requirements. Code snippets, like example API calls and responses, are central to this type of documentation. End user documentation User documentation is often the most visible type of documentation. It should be easy to read and understand, and updated with each new version of the software. It takes form in \"Read Me\" docs, installation guides, admin guides, product knowledge bases, and tutorials (the most helpful of the lot). And, like reference documentation, it's produced by a small pool of creators, for a large pool of consumers, so digestible content is important. Including examples in your documentation offers a huge value to your audience. They serve as a bridge to help understand concepts and ideas, and ensure the reader that you do in fact know what you are talking about. Creating documentation The ultimate goal is to ensure your documentation is useful for the reader. We've provided you with tutorial-formatted documentation for your documentation (how meta) below to help make that task just a bit easier. Research What do users need to know about your product, project, or API? Use your analytics tool to see what's being searched, browse online community forums and discussion groups, and conduct user research and usability testing. Make sure you also know your product and how to easily explain user questions, new features, and workflows. Just start Clearly state what's going to be covered in your documentation and why it should be valuable to the reader to kick it off. Capture the deets Create an outline and draft up your content. Write with an appropriate voice and tone (be human!) for your audience and be consistent and concise with your language. Communicate important details clearly. Format Organize your page so it's easy to follow from beginning to end. Cut out fluff and break up long content with visuals like diagrams, screenshots, and images. Review Get feedback on your their vs. there and to vs. too's. Ensure reviewers understand the goal of your documentation. This will help uncover confusing language or point out missing steps. Publish After revisions and edits, you're ready to go live! Publish your work and keep your ear to the ground for any feedback and comments. Documentation isn't something to set and forget! Keep it brief Your documentation should have just the right amount of information to get the job done without raising a help ticket. Provide key points and the option for readers to go into further detail. Visuals are key Visuals are key to comprehension. Product design, code samples, in-product demos, screenshots, and video tutorials play a large role in helping a reader to fully understand the concept, the how-to, or the to-do. Also keep in mind the layout, legibility, and easily digestible chunks. Know your audience Take a walk in the user's shoes. Know your reader, take a stroll through their user journey of your product and your documentation. This should always guide how and what you write. Hit the ground running The best documentation is clear, concise, informative, and most importantly, adds value for its audience. Explore team collaboration software like Confluence for your documentation, and spend less time hunting things down, and more time making things happen","title":"Highlights"},{"location":"Highlights/Readwise/Articles/Building%20Documentation%20Mindshare%20in%20a%20Company%20%E2%80%94%20Write%20the%20Docs/","text":"Building Documentation Mindshare in a Company \u2014 Write the Docs \u00b6 Metadata \u00b6 Author: [[writethedocs.org]] Full Title: Building Documentation Mindshare in a Company \u2014 Write the Docs Category: #Type/Highlights/Article URL: https://www.writethedocs.org/guide/writing/mindshare/#build-a-taxonomy Highlights \u00b6 Start in engineering Starting in the engineering organization I think is the simplest way to affect change on documentation culture. There are lots of other parts of an organization, but it\u2019s easier to get permission to work on just the internal stuff to engineering. Think things like: Project documentation Operations documentation Playbooks Monitoring Information Best Practices Style Guides ( View Highlight ) Gather Input You will want members from all of the teams in your organization to be invited to the planning meetings. They don\u2019t need to come, but you need to make sure it\u2019s an open and public discussion. This validates the outcome of the planning, and makes sure that you are taking into account all of the use cases of your team. ( View Highlight ) Build a taxonomy A big problem with a lot of documentation systems is that they have been organized organically, AKA have no organization. If you build out a structure for people to start, and keep it consistent across projects, it will make everyones lives easier. ( View Highlight ) Note You need to have an answer to the \u201cWhere do I put it?\u201d question. ( View Highlight ) Make it easy Getting started should be as easy and straight-forward as possible. Most people don\u2019t like change, and introducing new tooling and things will already rouse a negative response in some. This is why you need to make it as simple as possible to get started. ( View Highlight ) Build templates It should take about 5 seconds to get a basic outline of the documentation for a project started. Also have a standard hierarchy for the docs, so that people know where to look for things in any project. ( View Highlight )","title":"Building Documentation Mindshare in a Company \u2014 Write the Docs"},{"location":"Highlights/Readwise/Articles/Building%20Documentation%20Mindshare%20in%20a%20Company%20%E2%80%94%20Write%20the%20Docs/#building-documentation-mindshare-in-a-company-write-the-docs","text":"","title":"Building Documentation Mindshare in a Company \u2014 Write the Docs"},{"location":"Highlights/Readwise/Articles/Building%20Documentation%20Mindshare%20in%20a%20Company%20%E2%80%94%20Write%20the%20Docs/#metadata","text":"Author: [[writethedocs.org]] Full Title: Building Documentation Mindshare in a Company \u2014 Write the Docs Category: #Type/Highlights/Article URL: https://www.writethedocs.org/guide/writing/mindshare/#build-a-taxonomy","title":"Metadata"},{"location":"Highlights/Readwise/Articles/Building%20Documentation%20Mindshare%20in%20a%20Company%20%E2%80%94%20Write%20the%20Docs/#highlights","text":"Start in engineering Starting in the engineering organization I think is the simplest way to affect change on documentation culture. There are lots of other parts of an organization, but it\u2019s easier to get permission to work on just the internal stuff to engineering. Think things like: Project documentation Operations documentation Playbooks Monitoring Information Best Practices Style Guides ( View Highlight ) Gather Input You will want members from all of the teams in your organization to be invited to the planning meetings. They don\u2019t need to come, but you need to make sure it\u2019s an open and public discussion. This validates the outcome of the planning, and makes sure that you are taking into account all of the use cases of your team. ( View Highlight ) Build a taxonomy A big problem with a lot of documentation systems is that they have been organized organically, AKA have no organization. If you build out a structure for people to start, and keep it consistent across projects, it will make everyones lives easier. ( View Highlight ) Note You need to have an answer to the \u201cWhere do I put it?\u201d question. ( View Highlight ) Make it easy Getting started should be as easy and straight-forward as possible. Most people don\u2019t like change, and introducing new tooling and things will already rouse a negative response in some. This is why you need to make it as simple as possible to get started. ( View Highlight ) Build templates It should take about 5 seconds to get a basic outline of the documentation for a project started. Also have a standard hierarchy for the docs, so that people know where to look for things in any project. ( View Highlight )","title":"Highlights"},{"location":"Highlights/Readwise/Articles/Building%20a%20Data%20Pipeline%20From%20Scratch%20-%20The%20Data%20Experience%20-%20Medium/","text":"Building a Data Pipeline From Scratch - The Data Experience - Medium \u00b6 Metadata \u00b6 Author: [[Alan Marazzi]] Full Title: Building a Data Pipeline From Scratch - The Data Experience - Medium Category: #Type/Highlights/Article URL: https://medium.com/the-data-experience/building-a-data-pipeline-from-scratch-32b712cfb1db Highlights \u00b6 Fun fact: working with big data is relatively easy (once it\u2019s all setup), the very difficult thing is working with small data. Or worse with non-existing data. Process \u2014 Project Every Tiny Detail The process is the most important step. You will define what, where and how data are collected, transformed and loaded. Though we hear hearing everyday of AI and its endless possibilities there is still at least one thing they cannot do yet: decide the pipeline process. This means that you\u2019ll need to manually pick every field, table, data source, transformation, join, etc. The good news is that if you do it right you\u2019ll have to do it just once. Afterwards everything will be automated.","title":"Building a Data Pipeline From Scratch - The Data Experience - Medium"},{"location":"Highlights/Readwise/Articles/Building%20a%20Data%20Pipeline%20From%20Scratch%20-%20The%20Data%20Experience%20-%20Medium/#building-a-data-pipeline-from-scratch-the-data-experience-medium","text":"","title":"Building a Data Pipeline From Scratch - The Data Experience - Medium"},{"location":"Highlights/Readwise/Articles/Building%20a%20Data%20Pipeline%20From%20Scratch%20-%20The%20Data%20Experience%20-%20Medium/#metadata","text":"Author: [[Alan Marazzi]] Full Title: Building a Data Pipeline From Scratch - The Data Experience - Medium Category: #Type/Highlights/Article URL: https://medium.com/the-data-experience/building-a-data-pipeline-from-scratch-32b712cfb1db","title":"Metadata"},{"location":"Highlights/Readwise/Articles/Building%20a%20Data%20Pipeline%20From%20Scratch%20-%20The%20Data%20Experience%20-%20Medium/#highlights","text":"Fun fact: working with big data is relatively easy (once it\u2019s all setup), the very difficult thing is working with small data. Or worse with non-existing data. Process \u2014 Project Every Tiny Detail The process is the most important step. You will define what, where and how data are collected, transformed and loaded. Though we hear hearing everyday of AI and its endless possibilities there is still at least one thing they cannot do yet: decide the pipeline process. This means that you\u2019ll need to manually pick every field, table, data source, transformation, join, etc. The good news is that if you do it right you\u2019ll have to do it just once. Afterwards everything will be automated.","title":"Highlights"},{"location":"Highlights/Readwise/Articles/Building%20a%20Digital%20Garden/","text":"Building a Digital Garden \u00b6 Metadata \u00b6 Author: [[tomcritchlow.com]] Full Title: Building a Digital Garden Category: #Type/Highlights/Article URL: http://tomcritchlow.com/2019/02/17/building-digital-garden/ Highlights \u00b6 Streams - For me this is twitter and is more than enough stream for now. Campfires - For me this is the blog here (and more broadly the blogosphere that I read and engage with). Room to grow here but generally I\u2019m satisfied here. Gardens - This is where there\u2019s a gap for me personally. No place to store and evolve deeper longer-term thinking. Many of my friends have gravitated to Are.na but I just can\u2019t get it to work for me. Flow is the feed. It\u2019s the posts and the tweets. It\u2019s the stream of daily and sub-daily updates that reminds people you exist. Stock is the durable stuff. It\u2019s the content you produce that\u2019s as interesting in two months (or two years) as it is today. It\u2019s what people discover via search. It\u2019s what spreads slowly but surely, building fans over time. A space for collecting the dots This one might be the most important. Creative research is all about collecting the dots. It\u2019s more common to think of \u201cconnecting the dots\u201d but the truth is that you can\u2019t connect the dots you can\u2019t see. And we can only hold a tiny number of things in our brains at once. So a space for collecting (and organizing) the dots is a crucial foundation for thinking, creativity and more: But ideas aren\u2019t summoned from nowhere: they come from raw material, other ideas or observations about the world. Hence a two-step creative process: collect raw material, then think about it. From this process comes pattern recognition and eventually the insights that form the basis of novel ideas. Firstly - apparently, folders and files is the \u201cbest in class\u201d tool (better than tags and search) for personal information management This gem came via the Ink and Switch article linked above. : Bergman and Whittaker report that many of us use hierarchical folders for our personal digital organizing. Critics of this method point out that information is hidden from sight in folders that are often within other folders so that we have to remember the exact location of information to access it. Because of this, information scientists suggest other methods: search, more flexible than navigating folders; tags, which allow multiple categorizations; and group information management. Yet Bergman and Whittaker have found in their pioneering personal information management research that these other methods that work best for public information management don\u2019t work as well for personal information management. Secondly - I write this blog on Github pages using Jekyll - aka using folders and files! So what if I could build the digital garden I want right here using Jekyll using nothing more than folders and text files? There are a few benefits: Files and folders feels like it has a long shelf-life. If I\u2019m building this for the long-term (and I think I am) then I want a format I can back-up, archive and re-publish in the future independent of platform. Using files and folders allows me to drag and drop files into my wiki with zero authoring - CSV, pdf, png and txt files all are hosted and contained gracefully It\u2019s robust since I can back up this wiki folder to any service, dropbox, Google Drive, Github, etc. The wiki folder is made of a series of folders - each one containing any kind of files. Markdown files are treated as pages Image files are displayed as thumbnails with a link to the image, with the filename displayed to store any kind of title you want PDf, CSV, txt files and anything else are displayed with a link to the file. The \u201cmagic\u201d comes from each wiki folder having an index.html file which handles all of the display by using a custom layout wikiindex The root wiki page loops through all the files to create a master index automatically. Code here. Of course, the meat of the wiki is contained in note files which are just markdown files so easily portable. I intentionally designed the wiki to not rely on a ton of front-matter for portability and simplicity. To do this I added a default layout to wiki files in the config file. It\u2019s not all about layout though - it\u2019s about presentation too. I added a single flag to the wikiindex frontmatter for \u201cexpand\u201d to be true or false that displays the notes either fully expanded or as simple links. My parenting wiki is an example of the notes expanded, while my drafts folder is just a list of links because it\u2019s long. Finally, where I have a long list of links I added the ability for individual notes to be \u201cpinned\u201d to the top of the page to ensure more important or frequently-used links are easy to find.","title":"Building a Digital Garden"},{"location":"Highlights/Readwise/Articles/Building%20a%20Digital%20Garden/#building-a-digital-garden","text":"","title":"Building a Digital Garden"},{"location":"Highlights/Readwise/Articles/Building%20a%20Digital%20Garden/#metadata","text":"Author: [[tomcritchlow.com]] Full Title: Building a Digital Garden Category: #Type/Highlights/Article URL: http://tomcritchlow.com/2019/02/17/building-digital-garden/","title":"Metadata"},{"location":"Highlights/Readwise/Articles/Building%20a%20Digital%20Garden/#highlights","text":"Streams - For me this is twitter and is more than enough stream for now. Campfires - For me this is the blog here (and more broadly the blogosphere that I read and engage with). Room to grow here but generally I\u2019m satisfied here. Gardens - This is where there\u2019s a gap for me personally. No place to store and evolve deeper longer-term thinking. Many of my friends have gravitated to Are.na but I just can\u2019t get it to work for me. Flow is the feed. It\u2019s the posts and the tweets. It\u2019s the stream of daily and sub-daily updates that reminds people you exist. Stock is the durable stuff. It\u2019s the content you produce that\u2019s as interesting in two months (or two years) as it is today. It\u2019s what people discover via search. It\u2019s what spreads slowly but surely, building fans over time. A space for collecting the dots This one might be the most important. Creative research is all about collecting the dots. It\u2019s more common to think of \u201cconnecting the dots\u201d but the truth is that you can\u2019t connect the dots you can\u2019t see. And we can only hold a tiny number of things in our brains at once. So a space for collecting (and organizing) the dots is a crucial foundation for thinking, creativity and more: But ideas aren\u2019t summoned from nowhere: they come from raw material, other ideas or observations about the world. Hence a two-step creative process: collect raw material, then think about it. From this process comes pattern recognition and eventually the insights that form the basis of novel ideas. Firstly - apparently, folders and files is the \u201cbest in class\u201d tool (better than tags and search) for personal information management This gem came via the Ink and Switch article linked above. : Bergman and Whittaker report that many of us use hierarchical folders for our personal digital organizing. Critics of this method point out that information is hidden from sight in folders that are often within other folders so that we have to remember the exact location of information to access it. Because of this, information scientists suggest other methods: search, more flexible than navigating folders; tags, which allow multiple categorizations; and group information management. Yet Bergman and Whittaker have found in their pioneering personal information management research that these other methods that work best for public information management don\u2019t work as well for personal information management. Secondly - I write this blog on Github pages using Jekyll - aka using folders and files! So what if I could build the digital garden I want right here using Jekyll using nothing more than folders and text files? There are a few benefits: Files and folders feels like it has a long shelf-life. If I\u2019m building this for the long-term (and I think I am) then I want a format I can back-up, archive and re-publish in the future independent of platform. Using files and folders allows me to drag and drop files into my wiki with zero authoring - CSV, pdf, png and txt files all are hosted and contained gracefully It\u2019s robust since I can back up this wiki folder to any service, dropbox, Google Drive, Github, etc. The wiki folder is made of a series of folders - each one containing any kind of files. Markdown files are treated as pages Image files are displayed as thumbnails with a link to the image, with the filename displayed to store any kind of title you want PDf, CSV, txt files and anything else are displayed with a link to the file. The \u201cmagic\u201d comes from each wiki folder having an index.html file which handles all of the display by using a custom layout wikiindex The root wiki page loops through all the files to create a master index automatically. Code here. Of course, the meat of the wiki is contained in note files which are just markdown files so easily portable. I intentionally designed the wiki to not rely on a ton of front-matter for portability and simplicity. To do this I added a default layout to wiki files in the config file. It\u2019s not all about layout though - it\u2019s about presentation too. I added a single flag to the wikiindex frontmatter for \u201cexpand\u201d to be true or false that displays the notes either fully expanded or as simple links. My parenting wiki is an example of the notes expanded, while my drafts folder is just a list of links because it\u2019s long. Finally, where I have a long list of links I added the ability for individual notes to be \u201cpinned\u201d to the top of the page to ensure more important or frequently-used links are easy to find.","title":"Highlights"},{"location":"Highlights/Readwise/Articles/Building%20a%20Second%20Brain%20An%20Overview%20-%20Forte%20Labs/","text":"Building a Second Brain: An Overview - Forte Labs \u00b6 Metadata \u00b6 Author: [[fortelabs.co]] Full Title: Building a Second Brain: An Overview - Forte Labs Category: #Type/Highlights/Article URL: https://fortelabs.co/blog/basboverview/ Highlights \u00b6 methodology for saving and systematically reminding us of the ideas, inspirations, insights, and connections we\u2019ve gained through our experience. It expands our memory and our intellect using the modern tools of technology and networks. Note: Building a Second Brain is a: This methodology is not only for preserving those ideas, but turning them into reality. It provides a clear, actionable path to creating a \u201csecond brain\u201d \u2013 an external, centralized, digital repository for the things you learn and the resources from which they come. Being effective in the world today requires managing many different kinds of information \u2013 emails, text messages, messaging apps, online articles, books, podcasts, webinars, memos, and many others. All of these kinds of content have value, but trying to remember all of it is overwhelming and impractical. By consolidating ideas from these sources, you\u2019ll develop a valuable body of work to advance your projects and goals. You\u2019ll have an ongoing record of personal discoveries, lessons learned, and actionable insights for any situation. Tags: [[favorite]] We are already doing most of the work required to consume this content. We spend a significant portion of our careers creating snippets of text, outlines, photos, videos, sketches, diagrams, webpages, notes, or documents. Yet without a little extra care to preserve these valuable resources, our precious knowledge remains siloed and scattered across dozens of different locations. We fail to build a collection of knowledge that both appreciates in value and can be reused again and again. The Building a Second Brain methodology will teach you how to: Consistently move your projects and goals to completion by organizing and accessing your knowledge in a results-oriented way Transform your personal knowledge into income, taking advantage of a rapidly growing knowledge economy Uncover unexpected patterns and connections between ideas Reduce stress and \u201cinformation overload\u201d by expertly curating and managing your personal information stream Develop valuable expertise, specialized knowledge, and the skills to deploy it in a new job, career, or business Cultivate a collection of valuable knowledge and insights over time without having to follow rigid, time-consuming rules Unlock the full value of the wealth of learning resources all around you, such as online courses, webinars, books, articles, forums, and podcasts The first step in building a second brain is \u201ccapturing\u201d the ideas and insights you think are worth saving. Ask yourself: What are the recurring themes and questions that I always seem to return to in my work and life? What insightful, high-value, impactful information do I already have access to that could be valuable? Which knowledge do I want to interconnect, mix and match, and periodically resurface to stimulate future thinking on these subjects? Most of the time we tend to capture information haphazardly \u2013 we email ourselves a quick note, brainstorm some ideas in a Word document, or take notes on books we read \u2013 but then don\u2019t do anything with it. We are already consuming or producing this information, we just need to keep it in a single, centralized place, such as a digital note-taking app like Evernote These apps facilitate capturing small \u201csnippets\u201d of text, and can also store hyperlinks, images, webpages, screenshots, PDFs, and other attachments, all of which are saved permanently and synced across all your devices. This also gives us one place to look when we need creative raw material, supporting research, or a shot of inspiration. Think like a curator It is tempting to turn on our mobile device or computer and immediately become immersed in the flow of juicy information we are presented with. Much of this information is useful and interesting \u2013 articles written by experts that could make us more productive, tips on exercise or nutrition, or fascinating stories from around the world. But unless we make conscious, strategic decisions about what we consume, we\u2019ll always be at the mercy of what others want us to see. Instead, adopt the mindset of a curator \u2013 objective, opinionated, and reflective. As you come across social media updates, online articles, and podcasts throughout your day, instead of diving in immediately, save them for future consideration. As you begin to collect content, you\u2019ll be able to choose which sources to consume in a deliberate way. Organize your content by project How should you organize the content once you\u2019ve captured it? Instead of organizing your files primarily by topic (for example, web design or psychology), which is time-consuming and mentally taxing, organize them according to the projects you are actively working on. This ensures that you are consuming information with a purpose \u2013 to advance your projects and goals \u2013 and only at a time and place where you\u2019ll be able to put it to use. Tags: [[favorite]] The PARA organizational system takes this principle \u2013 organizing information by when you would like to see it next \u2013 and applies it to your entire digital life. Instead of organizing each one of the information management tools you use in a completely different way, use your projects as universal categories across all of them. This helps reduce the fragmentation of your project files, without requiring you to only use one tool for everything. Keep only what resonates The word \u201corganization\u201d often brings to mind an analytical way of thinking. But analysis is time-consuming and tiring. In deciding which passages, images, theories, or quotes to keep, don\u2019t make it a highly intellectual, analytical decision. Instead, your rule of thumb should be to save anything that \u201cresonates\u201d with you on an intuitive level. This is often because it connects to something you care about, wonder about, or find inherently intriguing. By training ourselves to notice when something resonates with us at a deeper level, we improve not only our ability to see opportunities, but also our understanding of ourselves and how we work.","title":"Building a Second Brain: An Overview - Forte Labs"},{"location":"Highlights/Readwise/Articles/Building%20a%20Second%20Brain%20An%20Overview%20-%20Forte%20Labs/#building-a-second-brain-an-overview-forte-labs","text":"","title":"Building a Second Brain: An Overview - Forte Labs"},{"location":"Highlights/Readwise/Articles/Building%20a%20Second%20Brain%20An%20Overview%20-%20Forte%20Labs/#metadata","text":"Author: [[fortelabs.co]] Full Title: Building a Second Brain: An Overview - Forte Labs Category: #Type/Highlights/Article URL: https://fortelabs.co/blog/basboverview/","title":"Metadata"},{"location":"Highlights/Readwise/Articles/Building%20a%20Second%20Brain%20An%20Overview%20-%20Forte%20Labs/#highlights","text":"methodology for saving and systematically reminding us of the ideas, inspirations, insights, and connections we\u2019ve gained through our experience. It expands our memory and our intellect using the modern tools of technology and networks. Note: Building a Second Brain is a: This methodology is not only for preserving those ideas, but turning them into reality. It provides a clear, actionable path to creating a \u201csecond brain\u201d \u2013 an external, centralized, digital repository for the things you learn and the resources from which they come. Being effective in the world today requires managing many different kinds of information \u2013 emails, text messages, messaging apps, online articles, books, podcasts, webinars, memos, and many others. All of these kinds of content have value, but trying to remember all of it is overwhelming and impractical. By consolidating ideas from these sources, you\u2019ll develop a valuable body of work to advance your projects and goals. You\u2019ll have an ongoing record of personal discoveries, lessons learned, and actionable insights for any situation. Tags: [[favorite]] We are already doing most of the work required to consume this content. We spend a significant portion of our careers creating snippets of text, outlines, photos, videos, sketches, diagrams, webpages, notes, or documents. Yet without a little extra care to preserve these valuable resources, our precious knowledge remains siloed and scattered across dozens of different locations. We fail to build a collection of knowledge that both appreciates in value and can be reused again and again. The Building a Second Brain methodology will teach you how to: Consistently move your projects and goals to completion by organizing and accessing your knowledge in a results-oriented way Transform your personal knowledge into income, taking advantage of a rapidly growing knowledge economy Uncover unexpected patterns and connections between ideas Reduce stress and \u201cinformation overload\u201d by expertly curating and managing your personal information stream Develop valuable expertise, specialized knowledge, and the skills to deploy it in a new job, career, or business Cultivate a collection of valuable knowledge and insights over time without having to follow rigid, time-consuming rules Unlock the full value of the wealth of learning resources all around you, such as online courses, webinars, books, articles, forums, and podcasts The first step in building a second brain is \u201ccapturing\u201d the ideas and insights you think are worth saving. Ask yourself: What are the recurring themes and questions that I always seem to return to in my work and life? What insightful, high-value, impactful information do I already have access to that could be valuable? Which knowledge do I want to interconnect, mix and match, and periodically resurface to stimulate future thinking on these subjects? Most of the time we tend to capture information haphazardly \u2013 we email ourselves a quick note, brainstorm some ideas in a Word document, or take notes on books we read \u2013 but then don\u2019t do anything with it. We are already consuming or producing this information, we just need to keep it in a single, centralized place, such as a digital note-taking app like Evernote These apps facilitate capturing small \u201csnippets\u201d of text, and can also store hyperlinks, images, webpages, screenshots, PDFs, and other attachments, all of which are saved permanently and synced across all your devices. This also gives us one place to look when we need creative raw material, supporting research, or a shot of inspiration. Think like a curator It is tempting to turn on our mobile device or computer and immediately become immersed in the flow of juicy information we are presented with. Much of this information is useful and interesting \u2013 articles written by experts that could make us more productive, tips on exercise or nutrition, or fascinating stories from around the world. But unless we make conscious, strategic decisions about what we consume, we\u2019ll always be at the mercy of what others want us to see. Instead, adopt the mindset of a curator \u2013 objective, opinionated, and reflective. As you come across social media updates, online articles, and podcasts throughout your day, instead of diving in immediately, save them for future consideration. As you begin to collect content, you\u2019ll be able to choose which sources to consume in a deliberate way. Organize your content by project How should you organize the content once you\u2019ve captured it? Instead of organizing your files primarily by topic (for example, web design or psychology), which is time-consuming and mentally taxing, organize them according to the projects you are actively working on. This ensures that you are consuming information with a purpose \u2013 to advance your projects and goals \u2013 and only at a time and place where you\u2019ll be able to put it to use. Tags: [[favorite]] The PARA organizational system takes this principle \u2013 organizing information by when you would like to see it next \u2013 and applies it to your entire digital life. Instead of organizing each one of the information management tools you use in a completely different way, use your projects as universal categories across all of them. This helps reduce the fragmentation of your project files, without requiring you to only use one tool for everything. Keep only what resonates The word \u201corganization\u201d often brings to mind an analytical way of thinking. But analysis is time-consuming and tiring. In deciding which passages, images, theories, or quotes to keep, don\u2019t make it a highly intellectual, analytical decision. Instead, your rule of thumb should be to save anything that \u201cresonates\u201d with you on an intuitive level. This is often because it connects to something you care about, wonder about, or find inherently intriguing. By training ourselves to notice when something resonates with us at a deeper level, we improve not only our ability to see opportunities, but also our understanding of ourselves and how we work.","title":"Highlights"},{"location":"Highlights/Readwise/Articles/Building%20a%20Second%20Brain%20in%20Emacs%20and%20Org-Mode%20-%20Forte%20Labs/","text":"Building a Second Brain in Emacs and Org-Mode - Forte Labs \u00b6 Metadata \u00b6 Author: Full Title: Building a Second Brain in Emacs and Org-Mode - Forte Labs Category: #Type/Highlights/Article URL: https://fortelabs.co/blog/building-a-second-brain-in-emacs-and-org-mode/ Highlights \u00b6 Much of what I\u2019ve learned from using Emacs is related to programming. Simply by using Emacs over time, you will be exposed to its internal programming language, Emacs Lisp. If you choose to, you can take that as an opportunity to learn to program for fun and for profit. Here are some of the concepts and tools that I\u2019ve learned through using Emacs: Literate programming: Blocks of code alternate with blocks of explanatory text, similar to Jupyter notebooks, Mathematica, and others Pandoc: Pandoc converts documents between different formats, including Emacs Org-Mode files Post-fix calculators: Emacs has a powerful built-in calculator, Emacs Calc. It is a \u201cpost-fix calculator,\u201d which means you express equations like \u201c2 + 2 =\u201d as \u201c2 2 +\u201d and get 4. Accountants use post-fix calculators for efficient calculations Regular expressions: a mini-programming language for querying and manipulating text. Most programming languages and software development tools support them. You can actually use them in Google Docs! Version control: Version control keeps track of the history of changes to files over time. The most popular form of version control at the moment is Git. Emacs has an excellent Git interface, Magit. Magit users often report that it makes Git easier to use, and that they also learn its more advanced features by exploring the interface Those are just some of the tools I\u2019ve learned through Emacs. What principles have I learned? Keyboard first: As with many other programs, Emacs rewards you for doing everything at the keyboard, with keyboard shortcuts. This is definitely a very efficient way of doing things with computers Outlining: Org-Mode takes the view that everything is (or is related to) an outline item. Org-Mode is the best outliner I\u2019ve come across. If you\u2019ve used Workflowy, and loved it, well, that\u2019s just a fraction of the goodness that\u2019s available in Org-Mode Self-documenting code: Emacs makes it very easy to get documentation. You kind of have to use this to believe it, but it\u2019s easily the best documentation of any software project I\u2019ve ever used, simply because it\u2019s so discoverable and dynamic Environment and configurability: If you don\u2019t like it, you can change it. If you want some functionality that\u2019s not already there, you can roll your own. This is partly because Emacs is free software, and partly because of its use of Lisp. As a downside, this spoils you for software where this isn\u2019t taken for granted Software is memetic: Emacs configurations typically have snippets copied and adapted from others. Will Mengarini and others have compared this to evolution and horizontal transfer Our tools shape us: In his post \u201cYou are your tools,\u201d Daniel Lemire discusses how learning new tools manifests a particular aspect of the growth mindset, and that learning and using new tools makes us smarter. Emacs is a wonderful place to explore this. It can support most programming languages; packages are made for using many tools, paradigms, and workflows; and more are available all the time Use the best tool for the job: In Sacha Chua\u2019s interview with Carsten Dominik, Org-mode\u2019s creator, he talks about using a derivative version of Emacs, microEmacs, and how that experience \u201c\u2026taught me\u2026 something really basic\u2026. I made the decision that I would never start using an inferior tool. It doesn\u2019t really make sense. For example, I didn\u2019t use Awk, I used Perl, because I knew that if you try to program something with Awk, you will just hit your head against the wall at some point. Perl is just so open-ended that whatever you want to do, you will be able to do in this language\u2026 I think it\u2019s the same is true for Emacs. Basically, [it\u2019s] just completely unlimited. Whatever you want to do is there.\u201d Emacs isn\u2019t the best tool for every job, but you should identify what the best tool is for each job, and use that. Software is contingent There\u2019s one final thing I\u2019ve learned from using Emacs and Org-mode. I used to primarily use other people\u2019s software. I\u2019d use the available operating system\u200a\u2014\u200aWindows or MacOS. I\u2019d use the available programs\u200a\u2014\u200aMicrosoft Office, Internet Explorer, Safari, etc. Those were the options. These situations limited my perspective. I could try a new program if it came along, such as Firefox, or LibreOffice, but I only had so many options. If I didn\u2019t like something, or I found a bug, that was it. Software is just the way it is, and you can\u2019t change it. But when I started using software that I had to configure, software that I could extend, I saw that there was a far broader range of possibilities. Real people make software, and those people have preferences and priorities, whims, opinions, and needs. If you learn how to make software, or use software that is easy to explore or change, you can align the software with your preferences and priorities. Or not. You are free to choose. Not only do our tools shape us; we shape our tools.","title":"Building a Second Brain in Emacs and Org-Mode - Forte Labs"},{"location":"Highlights/Readwise/Articles/Building%20a%20Second%20Brain%20in%20Emacs%20and%20Org-Mode%20-%20Forte%20Labs/#building-a-second-brain-in-emacs-and-org-mode-forte-labs","text":"","title":"Building a Second Brain in Emacs and Org-Mode - Forte Labs"},{"location":"Highlights/Readwise/Articles/Building%20a%20Second%20Brain%20in%20Emacs%20and%20Org-Mode%20-%20Forte%20Labs/#metadata","text":"Author: Full Title: Building a Second Brain in Emacs and Org-Mode - Forte Labs Category: #Type/Highlights/Article URL: https://fortelabs.co/blog/building-a-second-brain-in-emacs-and-org-mode/","title":"Metadata"},{"location":"Highlights/Readwise/Articles/Building%20a%20Second%20Brain%20in%20Emacs%20and%20Org-Mode%20-%20Forte%20Labs/#highlights","text":"Much of what I\u2019ve learned from using Emacs is related to programming. Simply by using Emacs over time, you will be exposed to its internal programming language, Emacs Lisp. If you choose to, you can take that as an opportunity to learn to program for fun and for profit. Here are some of the concepts and tools that I\u2019ve learned through using Emacs: Literate programming: Blocks of code alternate with blocks of explanatory text, similar to Jupyter notebooks, Mathematica, and others Pandoc: Pandoc converts documents between different formats, including Emacs Org-Mode files Post-fix calculators: Emacs has a powerful built-in calculator, Emacs Calc. It is a \u201cpost-fix calculator,\u201d which means you express equations like \u201c2 + 2 =\u201d as \u201c2 2 +\u201d and get 4. Accountants use post-fix calculators for efficient calculations Regular expressions: a mini-programming language for querying and manipulating text. Most programming languages and software development tools support them. You can actually use them in Google Docs! Version control: Version control keeps track of the history of changes to files over time. The most popular form of version control at the moment is Git. Emacs has an excellent Git interface, Magit. Magit users often report that it makes Git easier to use, and that they also learn its more advanced features by exploring the interface Those are just some of the tools I\u2019ve learned through Emacs. What principles have I learned? Keyboard first: As with many other programs, Emacs rewards you for doing everything at the keyboard, with keyboard shortcuts. This is definitely a very efficient way of doing things with computers Outlining: Org-Mode takes the view that everything is (or is related to) an outline item. Org-Mode is the best outliner I\u2019ve come across. If you\u2019ve used Workflowy, and loved it, well, that\u2019s just a fraction of the goodness that\u2019s available in Org-Mode Self-documenting code: Emacs makes it very easy to get documentation. You kind of have to use this to believe it, but it\u2019s easily the best documentation of any software project I\u2019ve ever used, simply because it\u2019s so discoverable and dynamic Environment and configurability: If you don\u2019t like it, you can change it. If you want some functionality that\u2019s not already there, you can roll your own. This is partly because Emacs is free software, and partly because of its use of Lisp. As a downside, this spoils you for software where this isn\u2019t taken for granted Software is memetic: Emacs configurations typically have snippets copied and adapted from others. Will Mengarini and others have compared this to evolution and horizontal transfer Our tools shape us: In his post \u201cYou are your tools,\u201d Daniel Lemire discusses how learning new tools manifests a particular aspect of the growth mindset, and that learning and using new tools makes us smarter. Emacs is a wonderful place to explore this. It can support most programming languages; packages are made for using many tools, paradigms, and workflows; and more are available all the time Use the best tool for the job: In Sacha Chua\u2019s interview with Carsten Dominik, Org-mode\u2019s creator, he talks about using a derivative version of Emacs, microEmacs, and how that experience \u201c\u2026taught me\u2026 something really basic\u2026. I made the decision that I would never start using an inferior tool. It doesn\u2019t really make sense. For example, I didn\u2019t use Awk, I used Perl, because I knew that if you try to program something with Awk, you will just hit your head against the wall at some point. Perl is just so open-ended that whatever you want to do, you will be able to do in this language\u2026 I think it\u2019s the same is true for Emacs. Basically, [it\u2019s] just completely unlimited. Whatever you want to do is there.\u201d Emacs isn\u2019t the best tool for every job, but you should identify what the best tool is for each job, and use that. Software is contingent There\u2019s one final thing I\u2019ve learned from using Emacs and Org-mode. I used to primarily use other people\u2019s software. I\u2019d use the available operating system\u200a\u2014\u200aWindows or MacOS. I\u2019d use the available programs\u200a\u2014\u200aMicrosoft Office, Internet Explorer, Safari, etc. Those were the options. These situations limited my perspective. I could try a new program if it came along, such as Firefox, or LibreOffice, but I only had so many options. If I didn\u2019t like something, or I found a bug, that was it. Software is just the way it is, and you can\u2019t change it. But when I started using software that I had to configure, software that I could extend, I saw that there was a far broader range of possibilities. Real people make software, and those people have preferences and priorities, whims, opinions, and needs. If you learn how to make software, or use software that is easy to explore or change, you can align the software with your preferences and priorities. Or not. You are free to choose. Not only do our tools shape us; we shape our tools.","title":"Highlights"},{"location":"Highlights/Readwise/Articles/Building%20an%20Open%20Source%20Personal%20Knowledge%20Base%20%20Hacker%20Noon/","text":"Building an Open Source Personal Knowledge Base | Hacker Noon \u00b6 Metadata \u00b6 Author: [[Originally Published]] Full Title: Building an Open Source Personal Knowledge Base | Hacker Noon Category: #Type/Highlights/Article URL: https://hackernoon.com/building-a-open-source-personal-knowledge-base-45c25f5a4324 Highlights \u00b6 I propose that every useful PKB system should have the following characteristics: A powerful organization scheme Linking information should be central Minimal effort for input Semi-automation of organization Provide powerful visualizations Support all media types Easily navigable Sharing Data export Open source Cross-platform","title":"Building an Open Source Personal Knowledge Base | Hacker Noon"},{"location":"Highlights/Readwise/Articles/Building%20an%20Open%20Source%20Personal%20Knowledge%20Base%20%20Hacker%20Noon/#building-an-open-source-personal-knowledge-base-hacker-noon","text":"","title":"Building an Open Source Personal Knowledge Base | Hacker Noon"},{"location":"Highlights/Readwise/Articles/Building%20an%20Open%20Source%20Personal%20Knowledge%20Base%20%20Hacker%20Noon/#metadata","text":"Author: [[Originally Published]] Full Title: Building an Open Source Personal Knowledge Base | Hacker Noon Category: #Type/Highlights/Article URL: https://hackernoon.com/building-a-open-source-personal-knowledge-base-45c25f5a4324","title":"Metadata"},{"location":"Highlights/Readwise/Articles/Building%20an%20Open%20Source%20Personal%20Knowledge%20Base%20%20Hacker%20Noon/#highlights","text":"I propose that every useful PKB system should have the following characteristics: A powerful organization scheme Linking information should be central Minimal effort for input Semi-automation of organization Provide powerful visualizations Support all media types Easily navigable Sharing Data export Open source Cross-platform","title":"Highlights"},{"location":"Highlights/Readwise/Articles/Business%20Engineering%20%E2%80%94%20An%20Alternative%20Approach%20to%20Architecting%20and%20Executing%20Complex%20Businesses%E2%80%A6/","text":"Business Engineering \u2014 An Alternative Approach to Architecting and Executing Complex Businesses\u2026 \u00b6 Metadata \u00b6 Author: [[Tony Munton]] Full Title: Business Engineering \u2014 An Alternative Approach to Architecting and Executing Complex Businesses\u2026 Category: #Type/Highlights/Article URL: https://medium.com/p/26bbee5b674 Highlights \u00b6 BE is founded upon a value-, integration- and information-driven strategy \u2014 one that is applicable to any industry, or any business model. The foundation is a configured representation of the managed environment, across all its \u201cparticipants\u201d, contributory and otherwise. This is a combination of what most organisations undertake plus their individual \u201cuniqueness\u201d \u2014 both now and in the future. This provides a contextual base for collating all business-related fact; linking strategy to operations; and integrating the traditional transactional environments \u2014 as the basis of more objective decision-making and contextually \u201ccorrect\u201d operations. Business strategy, business principles and the logic which supports/enhances operations Integrated strategic and operational planning; the marshalling and management of its activities and the wide range of capabilities they employ; plus, all relationships with the \u201ccollective of participants\u201d involved and the outside world Continuous measurement and appraisal of what occurs, and the value-to-the-business/customer/society generated or expended \u2014 as the basis of more objective planning, operations and change, based upon up-to-date, provenanced and managed contextual fact, tailored to your interpretation of your business and its environment","title":"Business Engineering \u2014 An Alternative Approach to Architecting and Executing Complex Businesses\u2026"},{"location":"Highlights/Readwise/Articles/Business%20Engineering%20%E2%80%94%20An%20Alternative%20Approach%20to%20Architecting%20and%20Executing%20Complex%20Businesses%E2%80%A6/#business-engineering-an-alternative-approach-to-architecting-and-executing-complex-businesses","text":"","title":"Business Engineering \u2014 An Alternative Approach to Architecting and Executing Complex Businesses\u2026"},{"location":"Highlights/Readwise/Articles/Business%20Engineering%20%E2%80%94%20An%20Alternative%20Approach%20to%20Architecting%20and%20Executing%20Complex%20Businesses%E2%80%A6/#metadata","text":"Author: [[Tony Munton]] Full Title: Business Engineering \u2014 An Alternative Approach to Architecting and Executing Complex Businesses\u2026 Category: #Type/Highlights/Article URL: https://medium.com/p/26bbee5b674","title":"Metadata"},{"location":"Highlights/Readwise/Articles/Business%20Engineering%20%E2%80%94%20An%20Alternative%20Approach%20to%20Architecting%20and%20Executing%20Complex%20Businesses%E2%80%A6/#highlights","text":"BE is founded upon a value-, integration- and information-driven strategy \u2014 one that is applicable to any industry, or any business model. The foundation is a configured representation of the managed environment, across all its \u201cparticipants\u201d, contributory and otherwise. This is a combination of what most organisations undertake plus their individual \u201cuniqueness\u201d \u2014 both now and in the future. This provides a contextual base for collating all business-related fact; linking strategy to operations; and integrating the traditional transactional environments \u2014 as the basis of more objective decision-making and contextually \u201ccorrect\u201d operations. Business strategy, business principles and the logic which supports/enhances operations Integrated strategic and operational planning; the marshalling and management of its activities and the wide range of capabilities they employ; plus, all relationships with the \u201ccollective of participants\u201d involved and the outside world Continuous measurement and appraisal of what occurs, and the value-to-the-business/customer/society generated or expended \u2014 as the basis of more objective planning, operations and change, based upon up-to-date, provenanced and managed contextual fact, tailored to your interpretation of your business and its environment","title":"Highlights"},{"location":"Highlights/Readwise/Articles/Clean%20Up%20Your%20Productivity%20System%20to%20Be%20More%20Productive/","text":"Clean Up Your Productivity System to Be More Productive \u00b6 Metadata \u00b6 Author: [[Darryl Brooks]] Full Title: Clean Up Your Productivity System to Be More Productive Category: #Type/Highlights/Article URL: https://medium.com/p/fdae68e0dbc Highlights \u00b6 Instead of just scanning your to-do list and checking off the weekly review, schedule some time for it. Once a week, whenever it makes the most sense, schedule a full hour for your weekly review. This may seem crazy if you\u2019ve been doing it in five minutes, but you may as well not do one at all if you aren\u2019t going to do it right. So schedule it for an hour and commit to spending the full hour on it. Spend half an hour looking at everything you did the previous week. Was each thing really completed? Did you need to do them all? Do you need to do them more or less often? Spend more or less time on each one. Ahh, now that you are doing it right, half an hour may not seem like enough. Now, take what you learned from last week and apply it to next week. Do you need to move things around, delete some tasks and add others? Use more or less time on some of them. If you do it this way, you will actually be accomplishing something. And, as you develop this habit, you can probably get the review down to just thirty minutes. But not five. Next, I want you to add a daily review and a monthly review. The daily review will be done at the very end or very beginning of each day, whichever you prefer. It will be a mini-version of the weekly review and will be done the same way, except you are only looking at one day back and one day forward. It is much easier to evaluate the tasks when they are more immediate. It\u2019s easier to understand the impact of something you did yesterday than a week ago. And as you get used to doing these tasks in tandem, they will each make the other more effective. Bad habits are hard to break. But so are good habits","title":"Clean Up Your Productivity System to Be More Productive"},{"location":"Highlights/Readwise/Articles/Clean%20Up%20Your%20Productivity%20System%20to%20Be%20More%20Productive/#clean-up-your-productivity-system-to-be-more-productive","text":"","title":"Clean Up Your Productivity System to Be More Productive"},{"location":"Highlights/Readwise/Articles/Clean%20Up%20Your%20Productivity%20System%20to%20Be%20More%20Productive/#metadata","text":"Author: [[Darryl Brooks]] Full Title: Clean Up Your Productivity System to Be More Productive Category: #Type/Highlights/Article URL: https://medium.com/p/fdae68e0dbc","title":"Metadata"},{"location":"Highlights/Readwise/Articles/Clean%20Up%20Your%20Productivity%20System%20to%20Be%20More%20Productive/#highlights","text":"Instead of just scanning your to-do list and checking off the weekly review, schedule some time for it. Once a week, whenever it makes the most sense, schedule a full hour for your weekly review. This may seem crazy if you\u2019ve been doing it in five minutes, but you may as well not do one at all if you aren\u2019t going to do it right. So schedule it for an hour and commit to spending the full hour on it. Spend half an hour looking at everything you did the previous week. Was each thing really completed? Did you need to do them all? Do you need to do them more or less often? Spend more or less time on each one. Ahh, now that you are doing it right, half an hour may not seem like enough. Now, take what you learned from last week and apply it to next week. Do you need to move things around, delete some tasks and add others? Use more or less time on some of them. If you do it this way, you will actually be accomplishing something. And, as you develop this habit, you can probably get the review down to just thirty minutes. But not five. Next, I want you to add a daily review and a monthly review. The daily review will be done at the very end or very beginning of each day, whichever you prefer. It will be a mini-version of the weekly review and will be done the same way, except you are only looking at one day back and one day forward. It is much easier to evaluate the tasks when they are more immediate. It\u2019s easier to understand the impact of something you did yesterday than a week ago. And as you get used to doing these tasks in tandem, they will each make the other more effective. Bad habits are hard to break. But so are good habits","title":"Highlights"},{"location":"Highlights/Readwise/Articles/Cloud%20Based%20Computing%20Business%20Ideas%20for%202021%20%5BTop%2050%20Picks%5D/","text":"Cloud Based Computing Business Ideas for 2021 [Top 50 Picks] \u00b6 Metadata \u00b6 Author: [[profitableventure.com]] Full Title: Cloud Based Computing Business Ideas for 2021 [Top 50 Picks] Category: #Type/Highlights/Article URL: https://www.profitableventure.com/cloud-computing-based-business-ideas/ Highlights \u00b6 There are three main types of cloud computing and they are; Infrastructure as a Service (IaaS), here, a third party hosts elements of infrastructure such as hardware, software, servers, and storage, also providing backup, security, and maintenance Software as a Service (SaaS), this is an aspect of cloud computing where using the cloud, software such as an internet browser or application is able to become a usable tool Platform as a Service (PaaS), this is a branch of cloud computing that allows users to develop, run, and manage applications, without having to get caught up in code, storage, infrastructure and so on. They are yet others too, and many other branches are still emerging. ( View Highlight ) The cloud has garnered quite some rapid popularity because it has opened a whole new vista in the world of internet. Cloud computing has significantly transformed the way businesses operate, and the growth of cloud computing over the past few years has seen a rapid increase in the number of startup companies in the sector who are making a lot of profits. ( View Highlight )","title":"Cloud Based Computing Business Ideas for 2021 [Top 50 Picks]"},{"location":"Highlights/Readwise/Articles/Cloud%20Based%20Computing%20Business%20Ideas%20for%202021%20%5BTop%2050%20Picks%5D/#cloud-based-computing-business-ideas-for-2021-top-50-picks","text":"","title":"Cloud Based Computing Business Ideas for 2021 [Top 50 Picks]"},{"location":"Highlights/Readwise/Articles/Cloud%20Based%20Computing%20Business%20Ideas%20for%202021%20%5BTop%2050%20Picks%5D/#metadata","text":"Author: [[profitableventure.com]] Full Title: Cloud Based Computing Business Ideas for 2021 [Top 50 Picks] Category: #Type/Highlights/Article URL: https://www.profitableventure.com/cloud-computing-based-business-ideas/","title":"Metadata"},{"location":"Highlights/Readwise/Articles/Cloud%20Based%20Computing%20Business%20Ideas%20for%202021%20%5BTop%2050%20Picks%5D/#highlights","text":"There are three main types of cloud computing and they are; Infrastructure as a Service (IaaS), here, a third party hosts elements of infrastructure such as hardware, software, servers, and storage, also providing backup, security, and maintenance Software as a Service (SaaS), this is an aspect of cloud computing where using the cloud, software such as an internet browser or application is able to become a usable tool Platform as a Service (PaaS), this is a branch of cloud computing that allows users to develop, run, and manage applications, without having to get caught up in code, storage, infrastructure and so on. They are yet others too, and many other branches are still emerging. ( View Highlight ) The cloud has garnered quite some rapid popularity because it has opened a whole new vista in the world of internet. Cloud computing has significantly transformed the way businesses operate, and the growth of cloud computing over the past few years has seen a rapid increase in the number of startup companies in the sector who are making a lot of profits. ( View Highlight )","title":"Highlights"},{"location":"Highlights/Readwise/Articles/Cloud%20Computing%208%20Benefits%20for%20Your%20Software%20Developers%20-%20Dice%20Insights/","text":"Cloud Computing: 8 Benefits for Your Software Developers - Dice Insights \u00b6 Metadata \u00b6 Author: [[Dice Guest]] Full Title: Cloud Computing: 8 Benefits for Your Software Developers - Dice Insights Category: #Type/Highlights/Article URL: https://insights.dice.com/employer-resource-center/cloud-computing-benefits-developers/ Highlights \u00b6 Cloud computing is the use of a network of remote servers that are hosted on the internet. These remote servers are used to store, manage and process data without the need for a local server or a personal computer. There are several advantages of cloud computing that enable companies and individuals to more efficiently use computer hardware and software. ( View Highlight ) The use of serverless computer networks has proven to help many companies provide more on-demand computer system resources. These resources on a serverless network include data storage and power for many computers in a network. The development of serverless computing has enabled many businesses to save money as well as have better access to certain data. Serverless computing has also allowed companies and individuals to use computers that run better with the enhanced power provided. ( View Highlight ) 8 benefits of the cloud for software developers ( View Highlight ) Scalability One of the main benefits of cloud computing is scalability. With traditional server hosting, users need to determine the exact hardware that each node of the system would run a particular web application or server. With cloud systems, users can now scale any part of an application more quickly and easily. ( View Highlight ) Cost Another benefit of cloud computing systems is that the cost is much less. Companies and users will be able to save money on computing costs as they will not need any upfront investment and will be able to pay as they go to get the resources they need. ( View Highlight ) Quick Provisioning of Resources Developers are now able to quickly create new environments for websites as well as databases and virtual machines. They are also able to get additional services that are always being expanded. ( View Highlight ) Multiple Service Models Cloud provides developers and companies with different options to set up their environment which will then meet the unique needs of users. These service models include Platform as a Service and Infrastructure as a Service. This has been made possible thanks to Itsm management software. ( View Highlight ) Geographic Reach Rather than rely on a single location to host software, cloud allows users to host applications in data centers all over the world. ( View Highlight ) Ease of Deployment A cloud system enables users to configure automated builds that can deploy certain code, databases, automated testing for applications and automatic provisioning of a particular server. ( View Highlight ) Advanced Services Cloud can allow developers and companies to use the most advanced services available These services include simplifying microservices and scaling service containers. This results in focusing on building the logic of a business instead of managing systems that are distributed. ( View Highlight ) Monitoring Developer Operations Developers can benefit from the cloud by being able to more easily monitor all of the operations and applications that they use. They can see application performance metrics, logs and monitoring tools to identify problems with a server or system before a user reports them. ( View Highlight )","title":"Cloud Computing: 8 Benefits for Your Software Developers - Dice Insights"},{"location":"Highlights/Readwise/Articles/Cloud%20Computing%208%20Benefits%20for%20Your%20Software%20Developers%20-%20Dice%20Insights/#cloud-computing-8-benefits-for-your-software-developers-dice-insights","text":"","title":"Cloud Computing: 8 Benefits for Your Software Developers - Dice Insights"},{"location":"Highlights/Readwise/Articles/Cloud%20Computing%208%20Benefits%20for%20Your%20Software%20Developers%20-%20Dice%20Insights/#metadata","text":"Author: [[Dice Guest]] Full Title: Cloud Computing: 8 Benefits for Your Software Developers - Dice Insights Category: #Type/Highlights/Article URL: https://insights.dice.com/employer-resource-center/cloud-computing-benefits-developers/","title":"Metadata"},{"location":"Highlights/Readwise/Articles/Cloud%20Computing%208%20Benefits%20for%20Your%20Software%20Developers%20-%20Dice%20Insights/#highlights","text":"Cloud computing is the use of a network of remote servers that are hosted on the internet. These remote servers are used to store, manage and process data without the need for a local server or a personal computer. There are several advantages of cloud computing that enable companies and individuals to more efficiently use computer hardware and software. ( View Highlight ) The use of serverless computer networks has proven to help many companies provide more on-demand computer system resources. These resources on a serverless network include data storage and power for many computers in a network. The development of serverless computing has enabled many businesses to save money as well as have better access to certain data. Serverless computing has also allowed companies and individuals to use computers that run better with the enhanced power provided. ( View Highlight ) 8 benefits of the cloud for software developers ( View Highlight ) Scalability One of the main benefits of cloud computing is scalability. With traditional server hosting, users need to determine the exact hardware that each node of the system would run a particular web application or server. With cloud systems, users can now scale any part of an application more quickly and easily. ( View Highlight ) Cost Another benefit of cloud computing systems is that the cost is much less. Companies and users will be able to save money on computing costs as they will not need any upfront investment and will be able to pay as they go to get the resources they need. ( View Highlight ) Quick Provisioning of Resources Developers are now able to quickly create new environments for websites as well as databases and virtual machines. They are also able to get additional services that are always being expanded. ( View Highlight ) Multiple Service Models Cloud provides developers and companies with different options to set up their environment which will then meet the unique needs of users. These service models include Platform as a Service and Infrastructure as a Service. This has been made possible thanks to Itsm management software. ( View Highlight ) Geographic Reach Rather than rely on a single location to host software, cloud allows users to host applications in data centers all over the world. ( View Highlight ) Ease of Deployment A cloud system enables users to configure automated builds that can deploy certain code, databases, automated testing for applications and automatic provisioning of a particular server. ( View Highlight ) Advanced Services Cloud can allow developers and companies to use the most advanced services available These services include simplifying microservices and scaling service containers. This results in focusing on building the logic of a business instead of managing systems that are distributed. ( View Highlight ) Monitoring Developer Operations Developers can benefit from the cloud by being able to more easily monitor all of the operations and applications that they use. They can see application performance metrics, logs and monitoring tools to identify problems with a server or system before a user reports them. ( View Highlight )","title":"Highlights"},{"location":"Highlights/Readwise/Articles/CloudRun%20With%20Serverless%20VPC%20Access%20%2B%20CloudSQL%20With%20Private%20Service%20Connect./","text":"CloudRun With Serverless VPC Access + CloudSQL With Private Service Connect. \u00b6 Metadata \u00b6 Author: [[Johanes Glenn]] Full Title: CloudRun With Serverless VPC Access + CloudSQL With Private Service Connect. Category: #Type/Highlights/Article URL: https://medium.com/p/9432a749ff7b Highlights \u00b6 With the new adoption of containers, not everyone are actually well equiped for k8s implementation (even though cloud provider now help people by creating a managed k8s, eg. GKE). At this point we can (think for) utilize CloudRun for first step to utilize containers without any hassle on managing the underlying server (or we could say as serverless).","title":"CloudRun With Serverless VPC Access + CloudSQL With Private Service Connect."},{"location":"Highlights/Readwise/Articles/CloudRun%20With%20Serverless%20VPC%20Access%20%2B%20CloudSQL%20With%20Private%20Service%20Connect./#cloudrun-with-serverless-vpc-access-cloudsql-with-private-service-connect","text":"","title":"CloudRun With Serverless VPC Access + CloudSQL With Private Service Connect."},{"location":"Highlights/Readwise/Articles/CloudRun%20With%20Serverless%20VPC%20Access%20%2B%20CloudSQL%20With%20Private%20Service%20Connect./#metadata","text":"Author: [[Johanes Glenn]] Full Title: CloudRun With Serverless VPC Access + CloudSQL With Private Service Connect. Category: #Type/Highlights/Article URL: https://medium.com/p/9432a749ff7b","title":"Metadata"},{"location":"Highlights/Readwise/Articles/CloudRun%20With%20Serverless%20VPC%20Access%20%2B%20CloudSQL%20With%20Private%20Service%20Connect./#highlights","text":"With the new adoption of containers, not everyone are actually well equiped for k8s implementation (even though cloud provider now help people by creating a managed k8s, eg. GKE). At this point we can (think for) utilize CloudRun for first step to utilize containers without any hassle on managing the underlying server (or we could say as serverless).","title":"Highlights"},{"location":"Highlights/Readwise/Articles/Cloudwards.net%27s%20Backup%20and%20Storage%20Strategy%202017/","text":"Cloudwards.net's Backup and Storage Strategy 2017 \u00b6 Metadata \u00b6 Author: [[Mauricio Prinzlau]] Full Title: Cloudwards.net's Backup and Storage Strategy 2017 Category: #Type/Highlights/Article URL: https://www.cloudwards.net/backup-storage-strategy-2017/ Highlights \u00b6 Hardware The HDD replacement I\u2019ve chose are seven 8TB Seagate Archive hard drives, for a total of 56TB of storage. Now, since I\u2019ll have a RAID and a NAS set up as part of my backup strategy I\u2019m not going to use all of that, in fact I will even lose some of it because of the RAID, but it should keep me going for the foreseeable future NAS are great for two reasons: on the one hand, since they\u2019re connected to the Internet, you can use one instead of a backup provider and cut out at least one monthly bill. On the other, they serve as a great backup for your backup, so you can rest easy knowing that all the redundancies you\u2019ve set up will keep your data safe whatever may come. still need to take care of is that all these different devices and add-ons talk to each other, so I can switch devices yet still work away on the same file like I never moved. Sync.com is my regular service for this kind of thing and I see no reason to change since I feel it offers a great price, lightning-fast syncs as well as zero-knowledge security which means that no one will be able to get to my data unless I allow them to. In tandem with Sync.com I\u2019ll also be using pCloud, mainly because it has a great mobile app which I need if I\u2019m traveling and I can\u2019t use my laptop.","title":"Cloudwards.net's Backup and Storage Strategy 2017"},{"location":"Highlights/Readwise/Articles/Cloudwards.net%27s%20Backup%20and%20Storage%20Strategy%202017/#cloudwardsnets-backup-and-storage-strategy-2017","text":"","title":"Cloudwards.net's Backup and Storage Strategy 2017"},{"location":"Highlights/Readwise/Articles/Cloudwards.net%27s%20Backup%20and%20Storage%20Strategy%202017/#metadata","text":"Author: [[Mauricio Prinzlau]] Full Title: Cloudwards.net's Backup and Storage Strategy 2017 Category: #Type/Highlights/Article URL: https://www.cloudwards.net/backup-storage-strategy-2017/","title":"Metadata"},{"location":"Highlights/Readwise/Articles/Cloudwards.net%27s%20Backup%20and%20Storage%20Strategy%202017/#highlights","text":"Hardware The HDD replacement I\u2019ve chose are seven 8TB Seagate Archive hard drives, for a total of 56TB of storage. Now, since I\u2019ll have a RAID and a NAS set up as part of my backup strategy I\u2019m not going to use all of that, in fact I will even lose some of it because of the RAID, but it should keep me going for the foreseeable future NAS are great for two reasons: on the one hand, since they\u2019re connected to the Internet, you can use one instead of a backup provider and cut out at least one monthly bill. On the other, they serve as a great backup for your backup, so you can rest easy knowing that all the redundancies you\u2019ve set up will keep your data safe whatever may come. still need to take care of is that all these different devices and add-ons talk to each other, so I can switch devices yet still work away on the same file like I never moved. Sync.com is my regular service for this kind of thing and I see no reason to change since I feel it offers a great price, lightning-fast syncs as well as zero-knowledge security which means that no one will be able to get to my data unless I allow them to. In tandem with Sync.com I\u2019ll also be using pCloud, mainly because it has a great mobile app which I need if I\u2019m traveling and I can\u2019t use my laptop.","title":"Highlights"},{"location":"Highlights/Readwise/Articles/Collecting%20and%20Organising%20Data%20for%20Maximum%20Productivity.%20%E2%80%94%20Carl%20Pullein/","text":"Collecting and Organising Data for Maximum Productivity. \u2014 Carl Pullein \u00b6 Metadata \u00b6 Author: [[Carl Pullein]] Full Title: Collecting and Organising Data for Maximum Productivity. \u2014 Carl Pullein Category: #Type/Highlights/Article URL: https://www.carlpullein.com/blog/collecting-and-organising-data-for-maximum-productivity/8/7/2020 Highlights \u00b6 Data organization for personal or businesses use can benefit from agility; you want to have the confidence to move quickly and efficiently. The fastest ways to access and manage your data include the following: Knowing exactly where your data is kept, to save time on searching for it. Syncing data between all devices, to minimize the time spent accessing your information. Securing your data to avoid the consequences of data theft or loss. Scheduling automatic backups of your device information, in case the device is lost, stolen, or damaged. You could improve the speed of any of the ways mentioned to increase productivity by implementing an experimental framework. An experimental framework is generally used for software development but could be adapted for productivity. It essentially lets you innovate and test your ideas by identifying the issues that reduce your productivity in order to find alternatives for a more agile experience. There are five stages to experimenting through a framework:","title":"Collecting and Organising Data for Maximum Productivity. \u2014 Carl Pullein"},{"location":"Highlights/Readwise/Articles/Collecting%20and%20Organising%20Data%20for%20Maximum%20Productivity.%20%E2%80%94%20Carl%20Pullein/#collecting-and-organising-data-for-maximum-productivity-carl-pullein","text":"","title":"Collecting and Organising Data for Maximum Productivity. \u2014 Carl Pullein"},{"location":"Highlights/Readwise/Articles/Collecting%20and%20Organising%20Data%20for%20Maximum%20Productivity.%20%E2%80%94%20Carl%20Pullein/#metadata","text":"Author: [[Carl Pullein]] Full Title: Collecting and Organising Data for Maximum Productivity. \u2014 Carl Pullein Category: #Type/Highlights/Article URL: https://www.carlpullein.com/blog/collecting-and-organising-data-for-maximum-productivity/8/7/2020","title":"Metadata"},{"location":"Highlights/Readwise/Articles/Collecting%20and%20Organising%20Data%20for%20Maximum%20Productivity.%20%E2%80%94%20Carl%20Pullein/#highlights","text":"Data organization for personal or businesses use can benefit from agility; you want to have the confidence to move quickly and efficiently. The fastest ways to access and manage your data include the following: Knowing exactly where your data is kept, to save time on searching for it. Syncing data between all devices, to minimize the time spent accessing your information. Securing your data to avoid the consequences of data theft or loss. Scheduling automatic backups of your device information, in case the device is lost, stolen, or damaged. You could improve the speed of any of the ways mentioned to increase productivity by implementing an experimental framework. An experimental framework is generally used for software development but could be adapted for productivity. It essentially lets you innovate and test your ideas by identifying the issues that reduce your productivity in order to find alternatives for a more agile experience. There are five stages to experimenting through a framework:","title":"Highlights"},{"location":"Highlights/Readwise/Articles/Completing%20Tasks%20%E2%80%94%2010%20Steps%20to%20Finishing%20What%20You%20Start/","text":"Completing Tasks \u2014 10 Steps to Finishing What You Start \u00b6 Metadata \u00b6 Author: [[Eleanor McKenna]] Full Title: Completing Tasks \u2014 10 Steps to Finishing What You Start Category: #Type/Highlights/Article URL: https://medium.com/p/393ccba958b9 Highlights \u00b6 It\u2019s easy to start a project. For a lot of us, finishing projects is the difficult bit. Here\u2019s my guide to completing tasks. \u201cDecide on your most important task. Begin immediately and work on that task with self-discipline until it is 100% complete. In life, all success comes from completing tasks. It\u2019s not from working at tasks, it\u2019s from completing tasks. It is only when you complete tasks that you become successful.\u201d \u2013 Brian Tracy","title":"Completing Tasks \u2014 10 Steps to Finishing What You Start"},{"location":"Highlights/Readwise/Articles/Completing%20Tasks%20%E2%80%94%2010%20Steps%20to%20Finishing%20What%20You%20Start/#completing-tasks-10-steps-to-finishing-what-you-start","text":"","title":"Completing Tasks \u2014 10 Steps to Finishing What You Start"},{"location":"Highlights/Readwise/Articles/Completing%20Tasks%20%E2%80%94%2010%20Steps%20to%20Finishing%20What%20You%20Start/#metadata","text":"Author: [[Eleanor McKenna]] Full Title: Completing Tasks \u2014 10 Steps to Finishing What You Start Category: #Type/Highlights/Article URL: https://medium.com/p/393ccba958b9","title":"Metadata"},{"location":"Highlights/Readwise/Articles/Completing%20Tasks%20%E2%80%94%2010%20Steps%20to%20Finishing%20What%20You%20Start/#highlights","text":"It\u2019s easy to start a project. For a lot of us, finishing projects is the difficult bit. Here\u2019s my guide to completing tasks. \u201cDecide on your most important task. Begin immediately and work on that task with self-discipline until it is 100% complete. In life, all success comes from completing tasks. It\u2019s not from working at tasks, it\u2019s from completing tasks. It is only when you complete tasks that you become successful.\u201d \u2013 Brian Tracy","title":"Highlights"},{"location":"Highlights/Readwise/Articles/Complexity%20Has%20to%20Live%20Somewhere/","text":"Complexity Has to Live Somewhere \u00b6 Metadata \u00b6 Author: [[ferd.ca]] Full Title: Complexity Has to Live Somewhere Category: #Type/Highlights/Article URL: https://ferd.ca/complexity-has-to-live-somewhere.html Highlights \u00b6 only complexity can handle complexity ( View Highlight ) This cannot be avoided. Complexity has to live somewhere. It's always a part of people solving problems, whether you realize it or not. ( View Highlight ) Complexity doesn't lay dormant. It is part of everyone's learning experience, and they adapt to it. ( View Highlight ) \"Knowledge in the head\" and \"knowledge in the world\" ( View Highlight ) Knowledge in the head are things you know, that you have learned, that are in your memory. Knowledge in the world is everything else: information written down, cues in design (you know the power button by looking at its symbol, and you know it can be pressed because it looks like a button). One tricky thing is that interpretation of knowledge in the world is both cultural and contextual, and relies on knowledge in the head (you know the power button can be pressed because you know what a button is in the first place). ( View Highlight ) The trap is insidious in software architecture. When we adopt something like microservices, we try to make it so that each service is individually simple. But unless this simplicity is so constraining that your actual application inherits it and is forced into simplicity, it still has to go somewhere. If it's not in the individual microservices, then where is it? ( View Highlight ) Complexity has to live somewhere. If you are lucky, it lives in well-defined places. In code where you decided a bit of complexity should go, in documentation that supports the code, in training sessions for your engineers. You give it a place without trying to hide all of it. You create ways to manage it. You know where to go to meet it when you need it. If you're unlucky and you just tried to pretend complexity could be avoided altogether, it has no place to go in this world. But it still doesn't stop existing. ( View Highlight )","title":"Complexity Has to Live Somewhere"},{"location":"Highlights/Readwise/Articles/Complexity%20Has%20to%20Live%20Somewhere/#complexity-has-to-live-somewhere","text":"","title":"Complexity Has to Live Somewhere"},{"location":"Highlights/Readwise/Articles/Complexity%20Has%20to%20Live%20Somewhere/#metadata","text":"Author: [[ferd.ca]] Full Title: Complexity Has to Live Somewhere Category: #Type/Highlights/Article URL: https://ferd.ca/complexity-has-to-live-somewhere.html","title":"Metadata"},{"location":"Highlights/Readwise/Articles/Complexity%20Has%20to%20Live%20Somewhere/#highlights","text":"only complexity can handle complexity ( View Highlight ) This cannot be avoided. Complexity has to live somewhere. It's always a part of people solving problems, whether you realize it or not. ( View Highlight ) Complexity doesn't lay dormant. It is part of everyone's learning experience, and they adapt to it. ( View Highlight ) \"Knowledge in the head\" and \"knowledge in the world\" ( View Highlight ) Knowledge in the head are things you know, that you have learned, that are in your memory. Knowledge in the world is everything else: information written down, cues in design (you know the power button by looking at its symbol, and you know it can be pressed because it looks like a button). One tricky thing is that interpretation of knowledge in the world is both cultural and contextual, and relies on knowledge in the head (you know the power button can be pressed because you know what a button is in the first place). ( View Highlight ) The trap is insidious in software architecture. When we adopt something like microservices, we try to make it so that each service is individually simple. But unless this simplicity is so constraining that your actual application inherits it and is forced into simplicity, it still has to go somewhere. If it's not in the individual microservices, then where is it? ( View Highlight ) Complexity has to live somewhere. If you are lucky, it lives in well-defined places. In code where you decided a bit of complexity should go, in documentation that supports the code, in training sessions for your engineers. You give it a place without trying to hide all of it. You create ways to manage it. You know where to go to meet it when you need it. If you're unlucky and you just tried to pretend complexity could be avoided altogether, it has no place to go in this world. But it still doesn't stop existing. ( View Highlight )","title":"Highlights"},{"location":"Highlights/Readwise/Articles/Consolidate%20and%20Unify%20-%20Tandem%20Vault%20%20Digital%20Asset%20Management/","text":"Consolidate and Unify - Tandem Vault | Digital Asset Management \u00b6 Metadata \u00b6 Author: Full Title: Consolidate and Unify - Tandem Vault | Digital Asset Management Category: #Type/Highlights/Article URL: https://tandemvault.com/consolidate-and-unify/ Highlights \u00b6 Any project to implement good asset management will begin with consolidating the material as much as possible. This means you\u2019ll want to create central storage, and bring as much of the relevant material together as possible. Consolidating the files will also help you to tag the files in a universal manner. Tagging from within a single environment, such as one catalog, allows you to be consistent in the keywords and other metadata you use. Consolidating all your media begins with a discovery process to understand how much space all your stuff takes up. Once you have a good idea of that, you\u2019ll need to get enough unified storage so that you can bring it all together. This is typically true, even if you expect to use a cloud-based tool for your primary user access. In most cases it\u2019s faster, easier, cheaper and better to do this locally before uploading to the cloud. addition to bringing everything together in one place, it\u2019s also advantageous to unify your DAM practices as much as possible. This includes consistent use of metadata, standardizing media formats, having a consistent naming convention, and normalization of rights information. All of these unifications will pay off in the medium and long term, and some will give dividends in the short term as well. Unifying your existing collection will also help you build practices for the future. It\u2019s hard to get your policies exactly right until you have road tested them. And there\u2019s no better road test than one you actually have to drive on (in the car you\u2019ll be driving). At the opening stage of consolidation, it\u2019s best to make sure you are gathering at least one of everything, and not to worry too much about duplication. If there is duplication that is easy to identify, you can fix it as you go along, but you\u2019ll also have the opportunity to fix it later, once your collection has been consolidated and cataloged. you consolidate, it\u2019s good to keep the 80-20 rule in mind. In most cases, there is a large percentage of media that can be gathered easily (80% perhaps) and a smaller percentage that will be hard to find (20% perhaps). Don\u2019t let \u201cperfect be the enemy of good\u201d by delaying until 100% of media has been consolidated. Make a good faith effort to gather as much as you can, and get to work.","title":"Consolidate and Unify - Tandem Vault | Digital Asset Management"},{"location":"Highlights/Readwise/Articles/Consolidate%20and%20Unify%20-%20Tandem%20Vault%20%20Digital%20Asset%20Management/#consolidate-and-unify-tandem-vault-digital-asset-management","text":"","title":"Consolidate and Unify - Tandem Vault | Digital Asset Management"},{"location":"Highlights/Readwise/Articles/Consolidate%20and%20Unify%20-%20Tandem%20Vault%20%20Digital%20Asset%20Management/#metadata","text":"Author: Full Title: Consolidate and Unify - Tandem Vault | Digital Asset Management Category: #Type/Highlights/Article URL: https://tandemvault.com/consolidate-and-unify/","title":"Metadata"},{"location":"Highlights/Readwise/Articles/Consolidate%20and%20Unify%20-%20Tandem%20Vault%20%20Digital%20Asset%20Management/#highlights","text":"Any project to implement good asset management will begin with consolidating the material as much as possible. This means you\u2019ll want to create central storage, and bring as much of the relevant material together as possible. Consolidating the files will also help you to tag the files in a universal manner. Tagging from within a single environment, such as one catalog, allows you to be consistent in the keywords and other metadata you use. Consolidating all your media begins with a discovery process to understand how much space all your stuff takes up. Once you have a good idea of that, you\u2019ll need to get enough unified storage so that you can bring it all together. This is typically true, even if you expect to use a cloud-based tool for your primary user access. In most cases it\u2019s faster, easier, cheaper and better to do this locally before uploading to the cloud. addition to bringing everything together in one place, it\u2019s also advantageous to unify your DAM practices as much as possible. This includes consistent use of metadata, standardizing media formats, having a consistent naming convention, and normalization of rights information. All of these unifications will pay off in the medium and long term, and some will give dividends in the short term as well. Unifying your existing collection will also help you build practices for the future. It\u2019s hard to get your policies exactly right until you have road tested them. And there\u2019s no better road test than one you actually have to drive on (in the car you\u2019ll be driving). At the opening stage of consolidation, it\u2019s best to make sure you are gathering at least one of everything, and not to worry too much about duplication. If there is duplication that is easy to identify, you can fix it as you go along, but you\u2019ll also have the opportunity to fix it later, once your collection has been consolidated and cataloged. you consolidate, it\u2019s good to keep the 80-20 rule in mind. In most cases, there is a large percentage of media that can be gathered easily (80% perhaps) and a smaller percentage that will be hard to find (20% perhaps). Don\u2019t let \u201cperfect be the enemy of good\u201d by delaying until 100% of media has been consolidated. Make a good faith effort to gather as much as you can, and get to work.","title":"Highlights"},{"location":"Highlights/Readwise/Articles/Craig%20Sturgis%20Dot%20Com/","text":"Craig Sturgis Dot Com \u00b6 Metadata \u00b6 Author: [[craigsturgis.com]] Full Title: Craig Sturgis Dot Com Category: #Type/Highlights/Article URL: https://craigsturgis.com/ Highlights \u00b6 Day to day, the system is my \u201cexternal brain\u201d helping me with however much mental energy I have remaining at the moment and while I\u2019m in different stages of auto pilot. ( View Highlight ) I make time for a series of regular check ins to review both the contents and the structure of the system and then adjust based on what\u2019s working, what\u2019s not, and what\u2019s changed. I use my system everywhere. I try to set it up so that I have all of the tools needed available on my phone and on whatever devices I\u2019m using. But, I also try to maintain the core of it in a way that can be followed with pen and paper if I choose to be more disconnected. ( View Highlight ) I maintain all of this because I want to live my life in the most intentional way I can. For better and worse, I want to do more than I will ever be able to do. It\u2019s how I\u2019m built. And, like many people I\u2019m a way more ambitious planner than a \u201cdoer\u201d even though I get a lot done. I don\u2019t want to let myself down or make commitments I won\u2019t be able to live up to. ( View Highlight ) I want to live a life full of great days\u2014 have a fulfilling family life and career, plus get to explore as many of the interests and joys of learning, exploration, community, and service as I can. In order to be more effective at that I need to be thoughtful in a way that powers the intentionality I try to practice. ( View Highlight ) The challenge I do sometimes struggle with the magnitude of information I\u2019m trying to keep and organize. There\u2019s always a danger of making this type of system unmanageable or that the work of managing it starts to crowd out the work it's meant to support. I have to be mindful to not let things get too out of balance and that I\u2019m spending more time making progress on the things I care about vs. tinkering with organizing the system itself. ( View Highlight ) The upside It\u2019s a humbling but very empowering thing to have a written down record of what I want to do, what I\u2019m doing, what I\u2019ve done, and a habit that forces contending with what I can realistically focus on. I genuinely believe I\u2019ve made more progress on the things that matter to me in every phase of my life, and have spent less time obsessing about the things I\u2019m not getting done since I started making a serious effort at this. ( View Highlight ) Morning track sleep in \u201crise and shine\u201d tracker + time sleeping in past 6am Deep working time in the mornings (personal work early morning, then pivot to the day job) Mindfulness block between personal and job deep working time Tread-desk working for about an hour Try to get a high intensity exercise or cross training in during lunch time block Audiobooks / high learning podcasts on commute in to the office Meetings / collaboration in the afternoons Shallow work / email in between meetings and collaboration Lower energy / fun podcasts or music on the commute home Medium energy tasks around the house or exercise / stretching if missed earlier GTD style processing task inbox and \u201ctwo minute rule\u201d tasks (Experimenting) \u201cDone with work\u201d ritual (Experimenting) Journaling - short what happened that day, gratitude Dinner with the family Chores and cleanup Low energy tasks + relaxation until bedtime Daily questions Leisure reading Sleep (hopefully early enough to get 7+ hours) ( View Highlight ) Note: 1. Morning track sleep in sleep Cycle tracker + time sleeping in past 6am Deep working time in the mornings (personal work early morning, then pivot to the day job) Mindfulness block between personal and job deep working time Tread-desk working for about an hour Try to get a high intensity exercise or cross training in during lunch time block Audiobooks / high learning podcasts on commute in to the office Meetings / collaboration in the afternoons Shallow work / email in between meetings and collaboration Lower energy / fun podcasts or music on the commute home Medium energy tasks around the house or exercise / stretching if missed earlier GTD style processing task inbox and \u201ctwo minute rule\u201d tasks (Experimenting) \u201cDone with work\u201d ritual (Experimenting) Journaling - short what happened that day, gratitude Dinner with the family Chores and cleanup Low energy tasks + relaxation until bedtime Daily questions Leisure reading Sleep (hopefully early enough to get 7+ hours) Capture \u201cinbox\u201d items - thoughts, ideas, todos, and reminders as they come up ( View Highlight ) Alexa to do list synced with Omnifocus via IFTTT Routine \u2018checklist\u2019 tasks with recurring due dates ( View Highlight ) Less critical reminders with soft due dates ( View Highlight ) Store detailed tasks for projects Tags to filter specific tasks for certain times / places ( View Highlight ) Work calendar Personal event calendar Family shared calendar \u201cPlanned time\u201d calendar for time blocking ( View Highlight ) Important reminders: Due (iOS) \u201cNag\u201d repeating reminders for things that need to get done Routine nudging reminders for when I get jogged out of \u201cauto pilot\u201d ( View Highlight ) Email: Gmail + G suite Apple mail app for non work email (iOS) Gmail app to keep work email separate on off hours Gmail web app for all email on Mac ( View Highlight ) Project and Focus area list (paired with Omnifocus) Active projects Ongoing - Focus area \u201cIncubating\u201d projects Ongoing - Longer term Someday / Maybe Meal Tracker Exercise Tracker Book Tracker ( View Highlight ) Budgeting: YNAB ( View Highlight ) GTD \u201cMindsweep\u201d checklist: Bear (iOS, Mac) (Planned) move to Omnifocus project template ( View Highlight )","title":"Craig Sturgis Dot Com"},{"location":"Highlights/Readwise/Articles/Craig%20Sturgis%20Dot%20Com/#craig-sturgis-dot-com","text":"","title":"Craig Sturgis Dot Com"},{"location":"Highlights/Readwise/Articles/Craig%20Sturgis%20Dot%20Com/#metadata","text":"Author: [[craigsturgis.com]] Full Title: Craig Sturgis Dot Com Category: #Type/Highlights/Article URL: https://craigsturgis.com/","title":"Metadata"},{"location":"Highlights/Readwise/Articles/Craig%20Sturgis%20Dot%20Com/#highlights","text":"Day to day, the system is my \u201cexternal brain\u201d helping me with however much mental energy I have remaining at the moment and while I\u2019m in different stages of auto pilot. ( View Highlight ) I make time for a series of regular check ins to review both the contents and the structure of the system and then adjust based on what\u2019s working, what\u2019s not, and what\u2019s changed. I use my system everywhere. I try to set it up so that I have all of the tools needed available on my phone and on whatever devices I\u2019m using. But, I also try to maintain the core of it in a way that can be followed with pen and paper if I choose to be more disconnected. ( View Highlight ) I maintain all of this because I want to live my life in the most intentional way I can. For better and worse, I want to do more than I will ever be able to do. It\u2019s how I\u2019m built. And, like many people I\u2019m a way more ambitious planner than a \u201cdoer\u201d even though I get a lot done. I don\u2019t want to let myself down or make commitments I won\u2019t be able to live up to. ( View Highlight ) I want to live a life full of great days\u2014 have a fulfilling family life and career, plus get to explore as many of the interests and joys of learning, exploration, community, and service as I can. In order to be more effective at that I need to be thoughtful in a way that powers the intentionality I try to practice. ( View Highlight ) The challenge I do sometimes struggle with the magnitude of information I\u2019m trying to keep and organize. There\u2019s always a danger of making this type of system unmanageable or that the work of managing it starts to crowd out the work it's meant to support. I have to be mindful to not let things get too out of balance and that I\u2019m spending more time making progress on the things I care about vs. tinkering with organizing the system itself. ( View Highlight ) The upside It\u2019s a humbling but very empowering thing to have a written down record of what I want to do, what I\u2019m doing, what I\u2019ve done, and a habit that forces contending with what I can realistically focus on. I genuinely believe I\u2019ve made more progress on the things that matter to me in every phase of my life, and have spent less time obsessing about the things I\u2019m not getting done since I started making a serious effort at this. ( View Highlight ) Morning track sleep in \u201crise and shine\u201d tracker + time sleeping in past 6am Deep working time in the mornings (personal work early morning, then pivot to the day job) Mindfulness block between personal and job deep working time Tread-desk working for about an hour Try to get a high intensity exercise or cross training in during lunch time block Audiobooks / high learning podcasts on commute in to the office Meetings / collaboration in the afternoons Shallow work / email in between meetings and collaboration Lower energy / fun podcasts or music on the commute home Medium energy tasks around the house or exercise / stretching if missed earlier GTD style processing task inbox and \u201ctwo minute rule\u201d tasks (Experimenting) \u201cDone with work\u201d ritual (Experimenting) Journaling - short what happened that day, gratitude Dinner with the family Chores and cleanup Low energy tasks + relaxation until bedtime Daily questions Leisure reading Sleep (hopefully early enough to get 7+ hours) ( View Highlight ) Note: 1. Morning track sleep in sleep Cycle tracker + time sleeping in past 6am Deep working time in the mornings (personal work early morning, then pivot to the day job) Mindfulness block between personal and job deep working time Tread-desk working for about an hour Try to get a high intensity exercise or cross training in during lunch time block Audiobooks / high learning podcasts on commute in to the office Meetings / collaboration in the afternoons Shallow work / email in between meetings and collaboration Lower energy / fun podcasts or music on the commute home Medium energy tasks around the house or exercise / stretching if missed earlier GTD style processing task inbox and \u201ctwo minute rule\u201d tasks (Experimenting) \u201cDone with work\u201d ritual (Experimenting) Journaling - short what happened that day, gratitude Dinner with the family Chores and cleanup Low energy tasks + relaxation until bedtime Daily questions Leisure reading Sleep (hopefully early enough to get 7+ hours) Capture \u201cinbox\u201d items - thoughts, ideas, todos, and reminders as they come up ( View Highlight ) Alexa to do list synced with Omnifocus via IFTTT Routine \u2018checklist\u2019 tasks with recurring due dates ( View Highlight ) Less critical reminders with soft due dates ( View Highlight ) Store detailed tasks for projects Tags to filter specific tasks for certain times / places ( View Highlight ) Work calendar Personal event calendar Family shared calendar \u201cPlanned time\u201d calendar for time blocking ( View Highlight ) Important reminders: Due (iOS) \u201cNag\u201d repeating reminders for things that need to get done Routine nudging reminders for when I get jogged out of \u201cauto pilot\u201d ( View Highlight ) Email: Gmail + G suite Apple mail app for non work email (iOS) Gmail app to keep work email separate on off hours Gmail web app for all email on Mac ( View Highlight ) Project and Focus area list (paired with Omnifocus) Active projects Ongoing - Focus area \u201cIncubating\u201d projects Ongoing - Longer term Someday / Maybe Meal Tracker Exercise Tracker Book Tracker ( View Highlight ) Budgeting: YNAB ( View Highlight ) GTD \u201cMindsweep\u201d checklist: Bear (iOS, Mac) (Planned) move to Omnifocus project template ( View Highlight )","title":"Highlights"},{"location":"Highlights/Readwise/Articles/Create%20a%20Productivity%20Workflow%20That%20Works%20for%20You/","text":"Create a Productivity Workflow That Works for You \u00b6 Metadata \u00b6 Author: [[hbr.org]] Full Title: Create a Productivity Workflow That Works for You Category: #Type/Highlights/Article URL: https://hbr.org/2020/01/create-a-productivity-workflow-that-works-for-you Highlights \u00b6 One reason behind this dissatisfaction is that people simply like to organize their digital work in many different ways, just as you may choose to write your weekly tasks on post-its while your office-mate likes to write them on a whiteboard. And even if you choose your own software, the productivity setup that serves you well in one project or role may be utterly unsuited for the next. But now, a new category of software is making it possible for anyone to create their own custom productivity dashboards, no coding skills needed. These tools, such as Airtable, Notion, and Coda, each work a little differently, but they all add powerful functionality to basic spreadsheets or text documents to give you the benefits of programming without the hassle of writing your own code. For the past six months, I\u2019ve spent most of my workday inside one of these tools \u2014 Coda \u2014 and I\u2019m amazed at how much more I can get done by using a productivity dashboard I\u2019ve built myself. Know the problem(s) you\u2019re trying to solve. Your frustrations with the tools you\u2019re using now are your best indicators of what you need to build into your own custom dashboard, so start by jotting them down. Then evaluate the different DIY productivity platforms based on how easy they will make it for you to solve those particular problems. In my case, I was trying to address a couple of limitations in the Google Sheet I\u2019d long used to track all my story ideas and pitches: I wanted a bigger edit window, and a way to work more easily with a spreadsheet with many, many columns. Coda solved those problems.","title":"Create a Productivity Workflow That Works for You"},{"location":"Highlights/Readwise/Articles/Create%20a%20Productivity%20Workflow%20That%20Works%20for%20You/#create-a-productivity-workflow-that-works-for-you","text":"","title":"Create a Productivity Workflow That Works for You"},{"location":"Highlights/Readwise/Articles/Create%20a%20Productivity%20Workflow%20That%20Works%20for%20You/#metadata","text":"Author: [[hbr.org]] Full Title: Create a Productivity Workflow That Works for You Category: #Type/Highlights/Article URL: https://hbr.org/2020/01/create-a-productivity-workflow-that-works-for-you","title":"Metadata"},{"location":"Highlights/Readwise/Articles/Create%20a%20Productivity%20Workflow%20That%20Works%20for%20You/#highlights","text":"One reason behind this dissatisfaction is that people simply like to organize their digital work in many different ways, just as you may choose to write your weekly tasks on post-its while your office-mate likes to write them on a whiteboard. And even if you choose your own software, the productivity setup that serves you well in one project or role may be utterly unsuited for the next. But now, a new category of software is making it possible for anyone to create their own custom productivity dashboards, no coding skills needed. These tools, such as Airtable, Notion, and Coda, each work a little differently, but they all add powerful functionality to basic spreadsheets or text documents to give you the benefits of programming without the hassle of writing your own code. For the past six months, I\u2019ve spent most of my workday inside one of these tools \u2014 Coda \u2014 and I\u2019m amazed at how much more I can get done by using a productivity dashboard I\u2019ve built myself. Know the problem(s) you\u2019re trying to solve. Your frustrations with the tools you\u2019re using now are your best indicators of what you need to build into your own custom dashboard, so start by jotting them down. Then evaluate the different DIY productivity platforms based on how easy they will make it for you to solve those particular problems. In my case, I was trying to address a couple of limitations in the Google Sheet I\u2019d long used to track all my story ideas and pitches: I wanted a bigger edit window, and a way to work more easily with a spreadsheet with many, many columns. Coda solved those problems.","title":"Highlights"},{"location":"Highlights/Readwise/Articles/Creating%20Windows%20Base%20Images%20Using%20Packer%20and%20Boxstarter%20%E2%80%94%20Hurry%20Up%20and%20Wait%21/","text":"Creating Windows Base Images Using Packer and Boxstarter \u2014 Hurry Up and Wait! \u00b6 Metadata \u00b6 Author: [[Matt Wrock]] Full Title: Creating Windows Base Images Using Packer and Boxstarter \u2014 Hurry Up and Wait! Category: #Type/Highlights/Article Document Tags: [[Liked]] URL: http://www.hurryupandwait.io/blog/creating-windows-base-images-for-virtualbox-and-hyper-v-using-packer-boxstarter-and-vagrant Highlights \u00b6 High level tool chain overview ( View Highlight ) Here is a synopsis of what this post will walk through: Downloading free evaluation ISOs (180 day) of Windows Using a Packer template To load the ISO in a VirtualBox VM and customize using a Windows Autounattend.xml file. Optimize the image with Boxstarter, installing all windows updates, and shrinking as much as possible. Output a vagrant .box file for creating new VirtualBox VMs with this image. Sharing the box with others using Atlas.Hashicorp.com ( View Highlight )","title":"Creating Windows Base Images Using Packer and Boxstarter \u2014 Hurry Up and Wait!"},{"location":"Highlights/Readwise/Articles/Creating%20Windows%20Base%20Images%20Using%20Packer%20and%20Boxstarter%20%E2%80%94%20Hurry%20Up%20and%20Wait%21/#creating-windows-base-images-using-packer-and-boxstarter-hurry-up-and-wait","text":"","title":"Creating Windows Base Images Using Packer and Boxstarter \u2014 Hurry Up and Wait!"},{"location":"Highlights/Readwise/Articles/Creating%20Windows%20Base%20Images%20Using%20Packer%20and%20Boxstarter%20%E2%80%94%20Hurry%20Up%20and%20Wait%21/#metadata","text":"Author: [[Matt Wrock]] Full Title: Creating Windows Base Images Using Packer and Boxstarter \u2014 Hurry Up and Wait! Category: #Type/Highlights/Article Document Tags: [[Liked]] URL: http://www.hurryupandwait.io/blog/creating-windows-base-images-for-virtualbox-and-hyper-v-using-packer-boxstarter-and-vagrant","title":"Metadata"},{"location":"Highlights/Readwise/Articles/Creating%20Windows%20Base%20Images%20Using%20Packer%20and%20Boxstarter%20%E2%80%94%20Hurry%20Up%20and%20Wait%21/#highlights","text":"High level tool chain overview ( View Highlight ) Here is a synopsis of what this post will walk through: Downloading free evaluation ISOs (180 day) of Windows Using a Packer template To load the ISO in a VirtualBox VM and customize using a Windows Autounattend.xml file. Optimize the image with Boxstarter, installing all windows updates, and shrinking as much as possible. Output a vagrant .box file for creating new VirtualBox VMs with this image. Sharing the box with others using Atlas.Hashicorp.com ( View Highlight )","title":"Highlights"},{"location":"Highlights/Readwise/Articles/Data%20Ecosystem/","text":"Data Ecosystem \u00b6 Metadata \u00b6 Author: [[Gerrishon Sirere]] Full Title: Data Ecosystem Category: #Type/Highlights/Article URL: https://medium.com/p/111b818c3d1b Highlights \u00b6 Data can be categorized as structured semi-structured, or unstructured. Structured data can be organized into rows and columns an example of structured data is spreadsheets. Semi-structured data is a mix of data that has consistent characteristics and data that doesn\u2019t conform to a rigid structure. For example, emails. An email has a mix of structured data, such as the name of the sender and recipient, but also has the contents of the email, which is unstructured data. Unstructured data: Data that is complex, and mostly qualitative information that is impossible to reduce to rows and columns. For example, photos, videos, text files, PDFs, and social media content.","title":"Data Ecosystem"},{"location":"Highlights/Readwise/Articles/Data%20Ecosystem/#data-ecosystem","text":"","title":"Data Ecosystem"},{"location":"Highlights/Readwise/Articles/Data%20Ecosystem/#metadata","text":"Author: [[Gerrishon Sirere]] Full Title: Data Ecosystem Category: #Type/Highlights/Article URL: https://medium.com/p/111b818c3d1b","title":"Metadata"},{"location":"Highlights/Readwise/Articles/Data%20Ecosystem/#highlights","text":"Data can be categorized as structured semi-structured, or unstructured. Structured data can be organized into rows and columns an example of structured data is spreadsheets. Semi-structured data is a mix of data that has consistent characteristics and data that doesn\u2019t conform to a rigid structure. For example, emails. An email has a mix of structured data, such as the name of the sender and recipient, but also has the contents of the email, which is unstructured data. Unstructured data: Data that is complex, and mostly qualitative information that is impossible to reduce to rows and columns. For example, photos, videos, text files, PDFs, and social media content.","title":"Highlights"},{"location":"Highlights/Readwise/Articles/Decent-Code/","text":"Decent-Code \u00b6 Metadata \u00b6 Author: Full Title: Decent-Code Category: #Type/Highlights/Article URL: https://robatwilliams.github.io/decent-code/ Highlights \u00b6 Code review Code review is more than a checklist process, but many of the things we look for are simple and there are too many of them to remember. Checklists help us remember, and inform contributors upfront of expectations. This helps reviewers\u2019 time to be better spent on the bigger and less simple things, and reduce contributors\u2019 time spent on revisions. Those items that can be automated should be (using tools like ESLint and its plugins, or Checkstyle). Manual detection and correction isn\u2019t reliable, doesn\u2019t scale well, and consumes focus better spent elsewhere. Naming things One name for each thing, and each name used for only one thing Use well-known names from the world, business and technical domains. Doing so maintains a common vocabulary which makes communication more efficient. Avoid overloading such names with different meanings. Use names which convey meaning. Meaning is key to being able to understand code. Generic names such as \u201cdata\u201d or \u201cvalue\u201d are less informative Avoid letting poor/inconsistent names from other contexts creep in to the code. Such contexts include legacy code, libraries, and other applications we interact with. Establish a boundary within which these naming guidelines are adhered to, and defend it from outside pollution. It\u2019s ok for user-facing names to be different. Names shown on the UI/output are often requirements, and appear in their own context. When such names are poor or not appropriate from a code perspective, use a different one where possible. Use acronyms and abbreviations sparingly. Code is generally clearer and easier to read without them. Universally accepted ones like id are an exception to this rule, including ones from the business domain. Avoid unnecessarily long names. Aim not to be any longer than required to convey meaning. Long names increase the need for statements and method calls to span multiple lines, which makes code less readable. This rule implies avoiding use of a type\u2019s full name as a variable/parameter name where not necessary. Avoid over qualifying names. When context for a name has already been established, for example by being within a class or method, it\u2019s not necessary to re-state that context. A task, for example, doesn\u2019t need a taskCompleted. Avoid overusing \u201cget\u201d as a method name prefix. Getters return values. Prefer more informative alternatives such as \u201crequest\u201d, \u201cfetch\u201d, \u201cfind\u201d, \u201cquery\u201d, \u201cbuild\u201d, or \u201ccreate\u201d where appropriate. Strive for distinctive names within the same context. Similar names are easy to mix up, and make code difficult to read. Consider qualifying every name when it becomes necessary to qualify one. This often yields greater clarity/distinctiveness than only qualifying one to distinguish it, and makes it more likely that the correct one will be chosen for use in the appropriate places. Example: previousFoo & nextFoo, instead of previousFoo & foo. Avoid camelCasing compound words. They are single words in their own right, so don\u2019t require it. Examples: callback, password. Avoid doing significant work in constructors. This often limits flexibility around constructing and initialising the class, usually resulting in it being difficult to test. Beware of excessive similar conditionals. They can be a sign of a missing or ill-fitting abstraction, or a general a need to improve the design. Handle edge cases. Beware only considering the most common scenario. Examples include no data, invalid data, boundary conditions, errors, and null values (where appropriate). Avoid running unnecessary code. If the work is done and the return value is ready, then return. Running additional code wastes time, and obscures the intent for those reading it. Methods should stand alone, generally. Avoid methods which always require a \u201ccompanion method\u201d to be called first/afterwards, for example to check preconditions or retrieve a result/error. Defaults Avoid inappropriate defaulting. Opportunities for using defaults include local/member variables, method arguments, and configuration values. Before creating a default, consider whether it\u2019s helpful, and weigh it against its potential to hide mistakes or be used accidentally and unknowingly. Avoid defaulting collections to be empty while data is loading. Doing so removes/hides the distinction between loading states and no-data states, often leading to inappropriate/missing handling. Checks Avoid unnecessary null checks. There are some things in the technical and business logic domains that we can fairly confidently rely on not to ever be null. Adding explicit checks for them can hide problems, and they bloat the code. Avoid inappropriate null/state checks (or those in inappropriate locations) that patch over underlying issues. These are usually checks that skip/branch logic in invalid or edge-case scenarios, done in one place to avoid/conceal a problem that has originated elsewhere. Instead, prefer to address/fix the root cause issue. Also be aware of checks in callers that should be in callees, and vice versa. Handling unhappy path situations Fail early and loud, rather than later/quietly. Detect problems at the earliest opportunity, and make them visible, for example by throwing an error. Avoid detecting and then hiding problems silently by skipping some code or using a default value. Examples include initialisation checks, validity checks, method preconditions, and API response status checks. See > fail fast. Defensive code vs. strict expectations. Writing defensive code to be accommodating of surrounding problems is an approach that can be used to make applications more robust - working around problems instead of allowing them to cause a failure. A major downside however, is that it makes those problems less visible - in turn making them less likely to be noticed and addressed. It also complicates the code with possibly unnecessary \u201cjust in case\u201d handling. For a given area of your application, weigh up the costs and benefits to help decide whether a defensive or strict approach is most appropriate. At a system boundary where an application is interacting with something external outside its control for example, the case for being defensive is more likely to be compelling. Tags: [[favorite]] Code structure General readability and maintainability Split up long/big things. This includes files, folders, methods, and templates. Having many lines/files/parts is an indication that something is doing too many things, which makes it difficult to understand, maintain, and adapt. Look for abstractions and responsibilities where a split could be made. Avoid drive-by code addition. Think about where new code should go. It can sometimes appear convenient to accomplish a task by adding a few lines/methods here and there to existing methods/classes. Perhaps add a few \u201cflag\u201d parameters to skip some parts of some methods. However, just because somewhere is a convenient place to put something doesn\u2019t mean it should go there - consider if new methods/classes should be created. Further reading: Detecting Refactoring Diligence, by Michael Feathers Separation and encapsulation of responsibilities Avoid mixing different types of responsibilities in the same class/method. Each one should generally be involved in one kind of responsibility. Avoid mixing data structure manipulation with business logic, or UI behaviour logic with the DOM operations that carry it out, for example. Encapsulate application-wide conventions. Repeating even seemingly trivial conventions makes them difficult to identify, apply consistently, and modify. Conventions could be functionality-related (e.g. display of numbers/dates), or code-related (e.g. our pattern for implementing X). Some techniques can be applied in a single place (e.g. serializer configuration), while others are defined in a single place but need to be used/applied by the programmer wherever relevant (e.g. components, utility functions). Tags: [[favorite]] Ordering Think about the order of things, generally. Ordering things (e.g. methods, config files) in a well-thought-out way makes it quicker and easier to find what you\u2019re looking for. This includes determining if it exists at all. It also helps you notice related things you weren\u2019t looking for but should probably be aware of. The best order for most things isn\u2019t by the time in which they were added. Some things need individual judgement, while others are partially/completely well-defined (e.g. alphabetical, lifecycle methods). Put important code at the top, and less important code at the bottom. This is known as \u201cnewspaper code structure\u201d; start with the important (headline), then read on for further detail in descending order of significance (summary paragraph, full article text). It allows the reader to quickly understand the key things about the file without needing to scan over all of it. Applying this as an example, constructors would go near the top, and helper methods and getters/setters would go at the bottom. General programming Writing, reading, and working with code Code should be easy to follow. After writing a piece of code (and tests for it, if appropriate), consider if it could be refactored to make it clearer. Clear code consumes less mental energy to understand, leaving more spare for better uses. Code should be easy to use right, and hard to use wrong. It should guide people down the right path naturally. It should get in the way and make things difficult when someone tries to use it wrongly. Code should be easy to change right, and hard to change wrong. It should help people decide what to change, and where to do it. It should resist when someone tries to change it wrongly (break it), and cause test failures. Minimise the odd, the unusual, and cleverness. Prefer simplicity and clarity. Write boring code, and write it to help others (and your future self) rather than attempt to impress them. Prefer a functional approach to an imperative one. Less mutable state and side-effects make code less error-prone, and easier to reason about. Minimise held state. State of any form (e.g. variables, caches) tends to be a source of complexity and problems, so it\u2019s best to keep as little of it around as necessary. Prefer to derive information when needed, to storing it, if constraints allow. Help compilers/transpilers and static analysis tools to help you. These tools can detect problems in code before it\u2019s even run, giving a shorter feedback loop. Be aware of the problems your tools can detect, and write code to help them. For example, use annotations such as @Override, use constant variables, avoid unnecessarily initialising variables, avoid subverting the type safety system, and avoid suppressing warnings. Data and values Create and use data types that model the domain. Avoid using strings for everything just because it\u2019s possible and appears to be convenient. Domain-based data types are key to object oriented programming, provide natural homes for many methods, and provide the compiler with information it can use to detect erroneous usage. Include units of measurement/magnitude in domain data types. This empowers the domain model together with the compiler to guard against invalid calculations. This is akin to the use of dimensional analysis of a derived physics equation\u2019s input and output units in order to verify that it was derived correctly. It also removes the need for including the unit (e.g. MWh) in property/variable names. Extract constants for magic numbers, generally. There are however some cases where doing so adds noise, such as for zero. Methods (general programming) Order parameters intuitively. Put the more important parameters nearer the first. Put related ones next to each other. One trick to help with choosing an intuitive order is to construct a sentence describing a call to the method; the parameters often fall naturally into an order within the sentence. Order parameters consistently. Where there are overloads, or many methods taking similar parameters, all the methods should take the common parameters first. Avoid Boolean parameters. When reading calling code, Boolean parameters make it difficult to know the intent of calls. Consider a two-element enum, a parameters object, or a separate method for each case. Further reading: The Pitfalls of Boolean Trap, by Ariya Hidayat Logic Base logic on identifiers, not names. Names are not generally guaranteed to be unique, and are prone to change. Identify things using their identifiers to drive logic. Functional The feature works in the \u201cprod mode\u201d build (if applicable). Development modes, which are often used to improve the developer experience (productivity), make the running application less like what the production version will be. Testing while using such modes can result in undetected problems, and also typically reduces performance. Fail fast, and fail proactively. Detect problems at the earliest opportunity, and make them immediately and clearly visible (e.g. log, UI message, application abortion). Avoid allowing the application to continue into undefined states - hoping for the best. The \u201cfast and proactive\u201d strategy makes problems from many facets (e.g. code, configuration, infrastructure) easier to find and diagnose, findable sooner, and helps avoid collateral damage. For example, an application would fail at startup if a database/API connection cannot be established - rather than doing so the first time its API is called. Another example: an application would fail at startup if the configuration (or permutation of user permissions) is invalid - rather than doing so if/when a particular feature is used, falling back to a default value, or continuing execution anyway. Error handling Either log exceptions, or throw them - not both, generally. Thrown exceptions will be caught at some level; if the lower level thrower can\u2019t handle the exception then it\u2019s likely not best placed to decide that it should be logged, and to do so informatively with context. Widespread log-and-throw also leads to duplicate logging as an exception bubbles up the call hierarchy. An exception to the rule is when that higher level is outside our control (e.g. a framework) - and doesn\u2019t log, logs at an undesirable level, or doesn\u2019t include sufficient detail. Control flow Information management and capture Include relevant and contextual information in exception/log messages. Such information aids diagnosis of problems. Examples include problematic values, state, and identifiers. For custom exceptions, some of this information can be made mandatory in the constructor as opposed to the common practice of accepting a single string message. Consider catch-wrap-rethrow to add a more helpful message and/or contextual information. The original thrower may not have had much context or data to construct a particularly useful message. Callers of such throwers can catch such exceptions and wrap them in more informative exceptions before throwing those further. Log caught exceptions in full, generally. Logging only a generic message, or only the caught exception\u2019s message, discards potentially useful information - the messages of wrapped cause-exceptions, and the stack trace. At a system boundary (e.g. when exposing an API), it\u2019s usually desirable to omit (or log at a lower level) the detail of client errors (e.g. re User interface Show appropriate and helpful information to the user. The main body should communicate in non-technical terms what the problem is, the current state of what the user was doing, and a path to rectifying the problem. Technical detail may be included in a revealable area for inclusion on bug reports. Logging General (logging) Bear in mind the purpose of logging. The main ones are: determining if the application is running smoothly, and diagnosing what the problem is if it isn\u2019t running smoothly. Having these in mind helps when deciding if we should log, and if so, what information should be included. There should be some \u201ctickover\u201d INFO logging while the application is in use, to indicate that everything\u2019s fine. When things aren\u2019t fine, there should be WARN and ERROR logging to call attention to that, and detail what the problem is. Read logging output to ensure \u201cflow\u201d. It should read coherently, as a story of what\u2019s happening. Try reading it while exercising specific application tasks, and while a load test is underway. Content (logging) Write clear, concise, and unambiguous messages. Messages which follow these principles are quicker and easier to understand, and help avoid misinterpretation or confusion. Include relevant and contextual information. Such information aids diagnosis of problems. Examples include key values, state, and identifiers. For ease of searching and to allow parsing by log viewing tools, consider using a pattern such as key=value | other=value. Distinguish values from message text using delimiters. Some types of data can be hard to distinguish from the log message template itself, when they are embedded within the message. Use delimiters such as quotes, braces, or angle brackets to clarify the boundaries where necessary. Use mapped diagnostic context (MDC) to distinguish logging from multiple threads. It\u2019s almost impossible to gain an understanding of what\u2019s going on when logging output from multiple concurrent thread is interleaved. Including context information such as user/request IDs in individual log statements is tedious and repetitive. Instead, configure your logger\u2019s pattern to include such information on every line as it does with the timestamp. Tests Tests are code, too. The items from the other topics in this guide apply. They require code review, and are subject to the same automated and manual quality checks and rules as the main code. Poor test code is less reliable, and can make it difficult to change or refactor the main code. Keep test code close to the code they\u2019re testing. Single focus and purpose per test. Tests with wide scope are less clear, and make it harder to identify the cause of failures. Aim for failures only related to the case described in the test name, and make assertions as required. What to test Balance value against cost. Tests require effort to write and maintain. Consider for a given piece of code (however small) if the confidence you gain in its correctness and avoidance of future breakages is worth it against how time consuming and difficult it is to test. This item is not an excuse for antipatterns that make code difficult to test. Include tests for edge cases and unhappy paths. We need to be confident that our code works in all cases, not just the \u201cnormal\u201d ones which may occur the vast majority of the time. Examples include errors, timeouts, invalid data, no data, and boundary values. Tags: [[favorite]] Abstract common setup logic into utility functions. This avoids pretty much all the issues that arise from using hooks. Extract shared setup logic into utility functions, and use them directly and as-needed from individual tests. The functions return objects ready for use in the test, and often accept parameters (data, or options) to allow tailoring the setup for individual tests. The latter makes it easy to see the difference in setup between each test. Assertions Use strict assertions. These strengthen the test and make it more likely to detect future regressions. Examples include strict equality, and errors/exceptions of specific types with specific messages. Files Named well and as per conventions. Refer to . Follow project conventions (e.g. suffixes) and casing style. In an appropriate folder. Considerations include purpose and functional area. Organised by functional separation, rather than by file type. This means by application functional area / module, or component - not by file type (e.g. controllers, styles, DAOs). Structuring this way keeps related code together, which aids discoverability and navigation. End files with a line break. This avoids the existing final line being considered as modified in a diff when you add a new line after it later. Tags: [[favorite]] Use single blank lines judiciously to separate constructs and groups of statements. Blank lines create visual separation between logical parts, making code easier to read. Dense code is harder to read. Examples include after a group of variable declarations, around an if-else statement, around logical parts of a method, and before a return statement. Dependencies Consider if there\u2019s a real need to use a library/tool. If the task at hand can be done with a few lines of straightforward code, it may not be worth adding a new dependency. Be familiar with the latest platform/SDK and already-present libraries - what you need may already be available. Tags: [[favorite]] Choose libraries/tools carefully. Consider factors including quality, popularity, documentation, \u201caliveness\u201d, deprecation, and strength of community. Review alternatives. Depending on the nature of a library, its use may be localised in an area of a project - or widespread and intertwined with application code. The latter ones require particular care. Use the latest non-beta versions, generally. These should be stable, include the latest features and bug fixes, likely to receive bug fixes, and have readily-accessible documentation. Newly-released major versions of dependencies that interact closely with others, or have a plugin ecosystem, may be worth deferring until the surrounding landscape catches up and settles down. Follow established patterns and idioms for a given dependency. Major libraries, frameworks and tools most often have an established way of using them effectively. This may be a combination of official and community-driven. Familiarising yourself with it will help you get the most out of them and avoid antipatterns. Read more than just the getting-started page. Avoid reimplementing library/framework features due to ignorance. Try to be familiar with the \u201cheadline features\u201d of what\u2019s already available. It\u2019s impossible to know everything and keep up to date, so you may find the following rules of thumb to quickly consider if something\u2019s likely to already be available: 1) Am I likely to be the first ever person using library-X that needed this feature? 2) If I was writing my own library-X, would I include this feature? General (CSS) CSS is code, too. The items from the other topics in this guide apply. It requires code review, and is subject to automated and manual quality checks and rules - just like any other application code. Poor CSS is difficult to modify and extend, and can make it difficult to change or refactor the application. Keep CSS close to the component code that it styles. Rules Use semantic class names. Describe the purpose of the rule (e.g. product), not the content of the rule (e.g. redBackground). There are however a small number of exceptions where presentational/utility classes can be useful. Features and techniques Avoid using text-align to align elements. This is an inherited property, so children of an element that is aligned using it, must counteract the unwanted text alignment by setting their own text-align. Use flexbox to align elements instead. Avoid using !important. Adding this to a declaration to force-win a selector specificity contest should be avoided. It breaks out of the normal rules of specificity (being at the declaration level), and cannot be overridden without using yet another !important - tending to result in proliferation of its use. Isolation Commits Document relationships between distant and disconnected parts of the code. It\u2019s quite rare that these can\u2019t be made explicit through code. They are often things that are a certain way because something else far away (could even be in a downstream system) is a certain way - such as dependencies, or matching behaviours. Changing one could break the other in a surprising way, or introduce inconsistency in the user experience. Explain the choice of particular \u201cmagic values\u201d. These include framework/server settings, timeouts, limits, batch/pool sizes, priorities, cache configuration, and orderings. We\u2019re familiar with extracting such values from our code into constants or configuration, but the reasons behind choosing the actual value is often left out. In some cases, this is after spending significant effort on activities such as load testing in order to choose appropriate values. Documenting these allows future changes to be made with greater confidence. Consider whether the code could be improved such that the comment would no longer be necessary. Comments which explain what the code is doing, and sometimes why, can often be rendered unnecessary through improving naming, refactoring (e.g. extracting a function), or introducing explanatory variables. Draw attention to the surprising and \u201cgotchas\u201d. If something is unintuitive or caught you out, it may be worth noting to help others. Examples include seemingly illogical business \u201clogic\u201d, and surprising library code behaviour. Highlight bug workarounds, linking to an issue report. This allows them to be easily identified and removed at a later date when the underlying bug (e.g. in a library) has been fixed. Write clearly, concisely, and unambiguously. Comments which follow these principles are quicker and easier to understand, and help avoid misinterpretation or confusion. The process of writing can often trigger ideas or solutions to problems, in much the same way as merely explaining a problem to someone can help you come up with a solution. Refactoring isn\u2019t only for code; after writing a comment, read it and consider if it could be improved. Ensure that comments are in sync and correct with respect to the current version of the code. Outdated or no longer applicable comments can cause confusion. Follow the project\u2019s strategy for managing TODO comments. Buildup of such comments in the code often indicates buildup of technical debt and necessary work. These tasks remain invisible to project feature/bug work tracking, leaving them in danger of being overlooked and forgotten - with various consequences. One such strategy is to require all TODOs to reference an issue tracker ticket before a pull request can be merged. One logical piece of work per commit. Separate each feature, bug and refactoring from other ones. This makes for a more useful history, and also encourages an organised approach to carrying out work. If you need to fix a bug while working on a feature, consider temporarily putting away your feature changes using a source control feature such as Git\u2019s stash. Prefer smaller, more regular commits. Overly large commits are harder to understand and review effectively. Commit larger pieces of work incrementally as you reach small milestones. Separate out refactoring where possible. Refactoring tends to be harder (and so less effective) to review, often including many moves and edits of existing code. Mixing it up with feature/bug work in a commit makes it harder still. When a task starts with some up-front non-trivial refactoring, consider making a separate, earlier pull request to get the changes to the main branch earlier. This helps avoid conflicts with other contributors\u2019 ongoing work. Remove existing code rendered unused by your changes. The code immediately being removed may have been the only user of other parts of the code. The now-unused code could be in the same file, elsewhere in the codebase, or all the way down the stack from the UI to the database. Address or remove relevant existing and new TODO comments. Existing ones may refer to the now-completed work. New ones may be temporary and require removal, or refer to issue tracker tickets for later work. Avoid including unrelated and unexplained changes. An extension of the first item. Such changes are often issues, or mistakes made while resolving merge/rebase conflicts. Avoid including left-over unused code. Such code is often from experimentation, trying different approaches, or trial-and-error. It may not be having an effect, or even running at all. CSS in particular tends to be quite susceptible to this. Avoid accidentally including unwanted files such as personal configuration and log files. Use your source control tool\u2019s ignore-file feature to prevent accidentally including such files. Check in the ignore file. Configuration that needs to be consistent across the team should however be checked in. Tags: [[favorite]] Strive for small pull requests. Large pull requests are harder to review, resulting in poorer feedback, unnoticed problems, \u201cspeed reviewing\u201d, and slow progress towards approval. If you\u2019re unable to split up work items for large features (due to process or politics), consider an incremental technique involving a series of smaller (e.g. 200-400 line) pull requests into a \u201ccollector branch\u201d culminating in a single big pull request from that branch to the master/trunk. Strive for short-lived pull requests. Any in-progress or in-review work on a branch is not yet part of the master/trunk that others are basing their work on. That can lead to conflicts which are time-consuming and error-prone to resolve. Being open for a long time increases the likelihood that a pull request will be open for an even longer time - as it requires updates after other pull requests are merged ahead of it (possibly involving conflict resolution). Consider setting some general and \u201cSLA-type\u201d ground rules to promote short-lived PRs, for example: review within n hours of being submitted, and review PRs or address feedback before starting new work. Making small pull requests helps keep them short-lived. Automate the tedious things. Configure the build to require passing code style and static analysis checks. Such issues are quicker, cheaper, and more consistently detected by tooling than people. Set expectations up-front. Make it easy for contributors to submit pull requests that will be approved first time, or at least without requiring major changes. Things that help with this include clear requirements, common understanding of application architecture and programming patterns/practices, and sharing design ideas before implementation starts. Complete the pre-submit checklist. Checklists help everyone remember things that need to be done. What needs to be on the pre-submission checklist depends on the team and project, and should evolve over time - for example, what things are always coming up as feedback. To avoid diluting its importance, it shouldn\u2019t be too long or include trivial things. If the repository supports templates for pull request descriptions, create one containing the checklist - otherwise, a bookmarklet to quickly populate the pull request description field can help. Think ahead to future work. We want to keep things simple and avoid building things we\u2019ll never need. We can however avoid making life hard for our future selves by being aware of upcoming and medium-term requirements, and bearing them in mind today. Tags: [[favorite]] UI text These items apply to all text regardless of who wrote it; text provided by UX or business stakeholders should be reviewed and any issues resolved with the author. Be accurate and unambiguous. Avoid contradicting other text or actual application behaviour. Existing text in other areas of the application may need to be updated. Use correct spelling and grammar. Use consistent capitalisation of terms. Use consistent style and tone. Use correct tense (current/past). This also applies to log messages. Use consistent terminology when referring for example to application features and business concepts. Avoid relying on enum member order for UI display order. Logical or alphabetical display order is often different from order of members in code. The order of members is also liable to change, without expectation of any side-effects. Use realistic and professional mock data. Realistic data helps detect issues that could occur later using real data. Unprofessional or joke data can cause offence, or give a poor impression of the team - you never know who\u2019s going to see it and what frame of mind they\u2019re going to be in. Bug fixes Find the cause before attempting a fix. Any fix based on first-glance analysis without knowing or understanding the cause is unlikely to be a good/correct one. Are there other occurrences of this bug or similar ones that need fixing? They could be in similar functionality, or in code using similar techniques/patterns that could be prone to similar programming errors. Fix the root cause. Fixing symptoms alone, or intermediate causes, is a workaround rather than a complete fix. They often involve adding code to work against something other code is doing. Understand why the fix works. A fix which appears to work, but cannot be explained why, may be unreliable or incomplete. Add test(s) which don\u2019t pass without the fix. Tests will help prevent regression - the bug being reintroduced through later changes. Choose unit and/or integration tests as appropriate. Validate the test by checking that it fails against the unfixed code.","title":"Decent-Code"},{"location":"Highlights/Readwise/Articles/Decent-Code/#decent-code","text":"","title":"Decent-Code"},{"location":"Highlights/Readwise/Articles/Decent-Code/#metadata","text":"Author: Full Title: Decent-Code Category: #Type/Highlights/Article URL: https://robatwilliams.github.io/decent-code/","title":"Metadata"},{"location":"Highlights/Readwise/Articles/Decent-Code/#highlights","text":"Code review Code review is more than a checklist process, but many of the things we look for are simple and there are too many of them to remember. Checklists help us remember, and inform contributors upfront of expectations. This helps reviewers\u2019 time to be better spent on the bigger and less simple things, and reduce contributors\u2019 time spent on revisions. Those items that can be automated should be (using tools like ESLint and its plugins, or Checkstyle). Manual detection and correction isn\u2019t reliable, doesn\u2019t scale well, and consumes focus better spent elsewhere. Naming things One name for each thing, and each name used for only one thing Use well-known names from the world, business and technical domains. Doing so maintains a common vocabulary which makes communication more efficient. Avoid overloading such names with different meanings. Use names which convey meaning. Meaning is key to being able to understand code. Generic names such as \u201cdata\u201d or \u201cvalue\u201d are less informative Avoid letting poor/inconsistent names from other contexts creep in to the code. Such contexts include legacy code, libraries, and other applications we interact with. Establish a boundary within which these naming guidelines are adhered to, and defend it from outside pollution. It\u2019s ok for user-facing names to be different. Names shown on the UI/output are often requirements, and appear in their own context. When such names are poor or not appropriate from a code perspective, use a different one where possible. Use acronyms and abbreviations sparingly. Code is generally clearer and easier to read without them. Universally accepted ones like id are an exception to this rule, including ones from the business domain. Avoid unnecessarily long names. Aim not to be any longer than required to convey meaning. Long names increase the need for statements and method calls to span multiple lines, which makes code less readable. This rule implies avoiding use of a type\u2019s full name as a variable/parameter name where not necessary. Avoid over qualifying names. When context for a name has already been established, for example by being within a class or method, it\u2019s not necessary to re-state that context. A task, for example, doesn\u2019t need a taskCompleted. Avoid overusing \u201cget\u201d as a method name prefix. Getters return values. Prefer more informative alternatives such as \u201crequest\u201d, \u201cfetch\u201d, \u201cfind\u201d, \u201cquery\u201d, \u201cbuild\u201d, or \u201ccreate\u201d where appropriate. Strive for distinctive names within the same context. Similar names are easy to mix up, and make code difficult to read. Consider qualifying every name when it becomes necessary to qualify one. This often yields greater clarity/distinctiveness than only qualifying one to distinguish it, and makes it more likely that the correct one will be chosen for use in the appropriate places. Example: previousFoo & nextFoo, instead of previousFoo & foo. Avoid camelCasing compound words. They are single words in their own right, so don\u2019t require it. Examples: callback, password. Avoid doing significant work in constructors. This often limits flexibility around constructing and initialising the class, usually resulting in it being difficult to test. Beware of excessive similar conditionals. They can be a sign of a missing or ill-fitting abstraction, or a general a need to improve the design. Handle edge cases. Beware only considering the most common scenario. Examples include no data, invalid data, boundary conditions, errors, and null values (where appropriate). Avoid running unnecessary code. If the work is done and the return value is ready, then return. Running additional code wastes time, and obscures the intent for those reading it. Methods should stand alone, generally. Avoid methods which always require a \u201ccompanion method\u201d to be called first/afterwards, for example to check preconditions or retrieve a result/error. Defaults Avoid inappropriate defaulting. Opportunities for using defaults include local/member variables, method arguments, and configuration values. Before creating a default, consider whether it\u2019s helpful, and weigh it against its potential to hide mistakes or be used accidentally and unknowingly. Avoid defaulting collections to be empty while data is loading. Doing so removes/hides the distinction between loading states and no-data states, often leading to inappropriate/missing handling. Checks Avoid unnecessary null checks. There are some things in the technical and business logic domains that we can fairly confidently rely on not to ever be null. Adding explicit checks for them can hide problems, and they bloat the code. Avoid inappropriate null/state checks (or those in inappropriate locations) that patch over underlying issues. These are usually checks that skip/branch logic in invalid or edge-case scenarios, done in one place to avoid/conceal a problem that has originated elsewhere. Instead, prefer to address/fix the root cause issue. Also be aware of checks in callers that should be in callees, and vice versa. Handling unhappy path situations Fail early and loud, rather than later/quietly. Detect problems at the earliest opportunity, and make them visible, for example by throwing an error. Avoid detecting and then hiding problems silently by skipping some code or using a default value. Examples include initialisation checks, validity checks, method preconditions, and API response status checks. See > fail fast. Defensive code vs. strict expectations. Writing defensive code to be accommodating of surrounding problems is an approach that can be used to make applications more robust - working around problems instead of allowing them to cause a failure. A major downside however, is that it makes those problems less visible - in turn making them less likely to be noticed and addressed. It also complicates the code with possibly unnecessary \u201cjust in case\u201d handling. For a given area of your application, weigh up the costs and benefits to help decide whether a defensive or strict approach is most appropriate. At a system boundary where an application is interacting with something external outside its control for example, the case for being defensive is more likely to be compelling. Tags: [[favorite]] Code structure General readability and maintainability Split up long/big things. This includes files, folders, methods, and templates. Having many lines/files/parts is an indication that something is doing too many things, which makes it difficult to understand, maintain, and adapt. Look for abstractions and responsibilities where a split could be made. Avoid drive-by code addition. Think about where new code should go. It can sometimes appear convenient to accomplish a task by adding a few lines/methods here and there to existing methods/classes. Perhaps add a few \u201cflag\u201d parameters to skip some parts of some methods. However, just because somewhere is a convenient place to put something doesn\u2019t mean it should go there - consider if new methods/classes should be created. Further reading: Detecting Refactoring Diligence, by Michael Feathers Separation and encapsulation of responsibilities Avoid mixing different types of responsibilities in the same class/method. Each one should generally be involved in one kind of responsibility. Avoid mixing data structure manipulation with business logic, or UI behaviour logic with the DOM operations that carry it out, for example. Encapsulate application-wide conventions. Repeating even seemingly trivial conventions makes them difficult to identify, apply consistently, and modify. Conventions could be functionality-related (e.g. display of numbers/dates), or code-related (e.g. our pattern for implementing X). Some techniques can be applied in a single place (e.g. serializer configuration), while others are defined in a single place but need to be used/applied by the programmer wherever relevant (e.g. components, utility functions). Tags: [[favorite]] Ordering Think about the order of things, generally. Ordering things (e.g. methods, config files) in a well-thought-out way makes it quicker and easier to find what you\u2019re looking for. This includes determining if it exists at all. It also helps you notice related things you weren\u2019t looking for but should probably be aware of. The best order for most things isn\u2019t by the time in which they were added. Some things need individual judgement, while others are partially/completely well-defined (e.g. alphabetical, lifecycle methods). Put important code at the top, and less important code at the bottom. This is known as \u201cnewspaper code structure\u201d; start with the important (headline), then read on for further detail in descending order of significance (summary paragraph, full article text). It allows the reader to quickly understand the key things about the file without needing to scan over all of it. Applying this as an example, constructors would go near the top, and helper methods and getters/setters would go at the bottom. General programming Writing, reading, and working with code Code should be easy to follow. After writing a piece of code (and tests for it, if appropriate), consider if it could be refactored to make it clearer. Clear code consumes less mental energy to understand, leaving more spare for better uses. Code should be easy to use right, and hard to use wrong. It should guide people down the right path naturally. It should get in the way and make things difficult when someone tries to use it wrongly. Code should be easy to change right, and hard to change wrong. It should help people decide what to change, and where to do it. It should resist when someone tries to change it wrongly (break it), and cause test failures. Minimise the odd, the unusual, and cleverness. Prefer simplicity and clarity. Write boring code, and write it to help others (and your future self) rather than attempt to impress them. Prefer a functional approach to an imperative one. Less mutable state and side-effects make code less error-prone, and easier to reason about. Minimise held state. State of any form (e.g. variables, caches) tends to be a source of complexity and problems, so it\u2019s best to keep as little of it around as necessary. Prefer to derive information when needed, to storing it, if constraints allow. Help compilers/transpilers and static analysis tools to help you. These tools can detect problems in code before it\u2019s even run, giving a shorter feedback loop. Be aware of the problems your tools can detect, and write code to help them. For example, use annotations such as @Override, use constant variables, avoid unnecessarily initialising variables, avoid subverting the type safety system, and avoid suppressing warnings. Data and values Create and use data types that model the domain. Avoid using strings for everything just because it\u2019s possible and appears to be convenient. Domain-based data types are key to object oriented programming, provide natural homes for many methods, and provide the compiler with information it can use to detect erroneous usage. Include units of measurement/magnitude in domain data types. This empowers the domain model together with the compiler to guard against invalid calculations. This is akin to the use of dimensional analysis of a derived physics equation\u2019s input and output units in order to verify that it was derived correctly. It also removes the need for including the unit (e.g. MWh) in property/variable names. Extract constants for magic numbers, generally. There are however some cases where doing so adds noise, such as for zero. Methods (general programming) Order parameters intuitively. Put the more important parameters nearer the first. Put related ones next to each other. One trick to help with choosing an intuitive order is to construct a sentence describing a call to the method; the parameters often fall naturally into an order within the sentence. Order parameters consistently. Where there are overloads, or many methods taking similar parameters, all the methods should take the common parameters first. Avoid Boolean parameters. When reading calling code, Boolean parameters make it difficult to know the intent of calls. Consider a two-element enum, a parameters object, or a separate method for each case. Further reading: The Pitfalls of Boolean Trap, by Ariya Hidayat Logic Base logic on identifiers, not names. Names are not generally guaranteed to be unique, and are prone to change. Identify things using their identifiers to drive logic. Functional The feature works in the \u201cprod mode\u201d build (if applicable). Development modes, which are often used to improve the developer experience (productivity), make the running application less like what the production version will be. Testing while using such modes can result in undetected problems, and also typically reduces performance. Fail fast, and fail proactively. Detect problems at the earliest opportunity, and make them immediately and clearly visible (e.g. log, UI message, application abortion). Avoid allowing the application to continue into undefined states - hoping for the best. The \u201cfast and proactive\u201d strategy makes problems from many facets (e.g. code, configuration, infrastructure) easier to find and diagnose, findable sooner, and helps avoid collateral damage. For example, an application would fail at startup if a database/API connection cannot be established - rather than doing so the first time its API is called. Another example: an application would fail at startup if the configuration (or permutation of user permissions) is invalid - rather than doing so if/when a particular feature is used, falling back to a default value, or continuing execution anyway. Error handling Either log exceptions, or throw them - not both, generally. Thrown exceptions will be caught at some level; if the lower level thrower can\u2019t handle the exception then it\u2019s likely not best placed to decide that it should be logged, and to do so informatively with context. Widespread log-and-throw also leads to duplicate logging as an exception bubbles up the call hierarchy. An exception to the rule is when that higher level is outside our control (e.g. a framework) - and doesn\u2019t log, logs at an undesirable level, or doesn\u2019t include sufficient detail. Control flow Information management and capture Include relevant and contextual information in exception/log messages. Such information aids diagnosis of problems. Examples include problematic values, state, and identifiers. For custom exceptions, some of this information can be made mandatory in the constructor as opposed to the common practice of accepting a single string message. Consider catch-wrap-rethrow to add a more helpful message and/or contextual information. The original thrower may not have had much context or data to construct a particularly useful message. Callers of such throwers can catch such exceptions and wrap them in more informative exceptions before throwing those further. Log caught exceptions in full, generally. Logging only a generic message, or only the caught exception\u2019s message, discards potentially useful information - the messages of wrapped cause-exceptions, and the stack trace. At a system boundary (e.g. when exposing an API), it\u2019s usually desirable to omit (or log at a lower level) the detail of client errors (e.g. re User interface Show appropriate and helpful information to the user. The main body should communicate in non-technical terms what the problem is, the current state of what the user was doing, and a path to rectifying the problem. Technical detail may be included in a revealable area for inclusion on bug reports. Logging General (logging) Bear in mind the purpose of logging. The main ones are: determining if the application is running smoothly, and diagnosing what the problem is if it isn\u2019t running smoothly. Having these in mind helps when deciding if we should log, and if so, what information should be included. There should be some \u201ctickover\u201d INFO logging while the application is in use, to indicate that everything\u2019s fine. When things aren\u2019t fine, there should be WARN and ERROR logging to call attention to that, and detail what the problem is. Read logging output to ensure \u201cflow\u201d. It should read coherently, as a story of what\u2019s happening. Try reading it while exercising specific application tasks, and while a load test is underway. Content (logging) Write clear, concise, and unambiguous messages. Messages which follow these principles are quicker and easier to understand, and help avoid misinterpretation or confusion. Include relevant and contextual information. Such information aids diagnosis of problems. Examples include key values, state, and identifiers. For ease of searching and to allow parsing by log viewing tools, consider using a pattern such as key=value | other=value. Distinguish values from message text using delimiters. Some types of data can be hard to distinguish from the log message template itself, when they are embedded within the message. Use delimiters such as quotes, braces, or angle brackets to clarify the boundaries where necessary. Use mapped diagnostic context (MDC) to distinguish logging from multiple threads. It\u2019s almost impossible to gain an understanding of what\u2019s going on when logging output from multiple concurrent thread is interleaved. Including context information such as user/request IDs in individual log statements is tedious and repetitive. Instead, configure your logger\u2019s pattern to include such information on every line as it does with the timestamp. Tests Tests are code, too. The items from the other topics in this guide apply. They require code review, and are subject to the same automated and manual quality checks and rules as the main code. Poor test code is less reliable, and can make it difficult to change or refactor the main code. Keep test code close to the code they\u2019re testing. Single focus and purpose per test. Tests with wide scope are less clear, and make it harder to identify the cause of failures. Aim for failures only related to the case described in the test name, and make assertions as required. What to test Balance value against cost. Tests require effort to write and maintain. Consider for a given piece of code (however small) if the confidence you gain in its correctness and avoidance of future breakages is worth it against how time consuming and difficult it is to test. This item is not an excuse for antipatterns that make code difficult to test. Include tests for edge cases and unhappy paths. We need to be confident that our code works in all cases, not just the \u201cnormal\u201d ones which may occur the vast majority of the time. Examples include errors, timeouts, invalid data, no data, and boundary values. Tags: [[favorite]] Abstract common setup logic into utility functions. This avoids pretty much all the issues that arise from using hooks. Extract shared setup logic into utility functions, and use them directly and as-needed from individual tests. The functions return objects ready for use in the test, and often accept parameters (data, or options) to allow tailoring the setup for individual tests. The latter makes it easy to see the difference in setup between each test. Assertions Use strict assertions. These strengthen the test and make it more likely to detect future regressions. Examples include strict equality, and errors/exceptions of specific types with specific messages. Files Named well and as per conventions. Refer to . Follow project conventions (e.g. suffixes) and casing style. In an appropriate folder. Considerations include purpose and functional area. Organised by functional separation, rather than by file type. This means by application functional area / module, or component - not by file type (e.g. controllers, styles, DAOs). Structuring this way keeps related code together, which aids discoverability and navigation. End files with a line break. This avoids the existing final line being considered as modified in a diff when you add a new line after it later. Tags: [[favorite]] Use single blank lines judiciously to separate constructs and groups of statements. Blank lines create visual separation between logical parts, making code easier to read. Dense code is harder to read. Examples include after a group of variable declarations, around an if-else statement, around logical parts of a method, and before a return statement. Dependencies Consider if there\u2019s a real need to use a library/tool. If the task at hand can be done with a few lines of straightforward code, it may not be worth adding a new dependency. Be familiar with the latest platform/SDK and already-present libraries - what you need may already be available. Tags: [[favorite]] Choose libraries/tools carefully. Consider factors including quality, popularity, documentation, \u201caliveness\u201d, deprecation, and strength of community. Review alternatives. Depending on the nature of a library, its use may be localised in an area of a project - or widespread and intertwined with application code. The latter ones require particular care. Use the latest non-beta versions, generally. These should be stable, include the latest features and bug fixes, likely to receive bug fixes, and have readily-accessible documentation. Newly-released major versions of dependencies that interact closely with others, or have a plugin ecosystem, may be worth deferring until the surrounding landscape catches up and settles down. Follow established patterns and idioms for a given dependency. Major libraries, frameworks and tools most often have an established way of using them effectively. This may be a combination of official and community-driven. Familiarising yourself with it will help you get the most out of them and avoid antipatterns. Read more than just the getting-started page. Avoid reimplementing library/framework features due to ignorance. Try to be familiar with the \u201cheadline features\u201d of what\u2019s already available. It\u2019s impossible to know everything and keep up to date, so you may find the following rules of thumb to quickly consider if something\u2019s likely to already be available: 1) Am I likely to be the first ever person using library-X that needed this feature? 2) If I was writing my own library-X, would I include this feature? General (CSS) CSS is code, too. The items from the other topics in this guide apply. It requires code review, and is subject to automated and manual quality checks and rules - just like any other application code. Poor CSS is difficult to modify and extend, and can make it difficult to change or refactor the application. Keep CSS close to the component code that it styles. Rules Use semantic class names. Describe the purpose of the rule (e.g. product), not the content of the rule (e.g. redBackground). There are however a small number of exceptions where presentational/utility classes can be useful. Features and techniques Avoid using text-align to align elements. This is an inherited property, so children of an element that is aligned using it, must counteract the unwanted text alignment by setting their own text-align. Use flexbox to align elements instead. Avoid using !important. Adding this to a declaration to force-win a selector specificity contest should be avoided. It breaks out of the normal rules of specificity (being at the declaration level), and cannot be overridden without using yet another !important - tending to result in proliferation of its use. Isolation Commits Document relationships between distant and disconnected parts of the code. It\u2019s quite rare that these can\u2019t be made explicit through code. They are often things that are a certain way because something else far away (could even be in a downstream system) is a certain way - such as dependencies, or matching behaviours. Changing one could break the other in a surprising way, or introduce inconsistency in the user experience. Explain the choice of particular \u201cmagic values\u201d. These include framework/server settings, timeouts, limits, batch/pool sizes, priorities, cache configuration, and orderings. We\u2019re familiar with extracting such values from our code into constants or configuration, but the reasons behind choosing the actual value is often left out. In some cases, this is after spending significant effort on activities such as load testing in order to choose appropriate values. Documenting these allows future changes to be made with greater confidence. Consider whether the code could be improved such that the comment would no longer be necessary. Comments which explain what the code is doing, and sometimes why, can often be rendered unnecessary through improving naming, refactoring (e.g. extracting a function), or introducing explanatory variables. Draw attention to the surprising and \u201cgotchas\u201d. If something is unintuitive or caught you out, it may be worth noting to help others. Examples include seemingly illogical business \u201clogic\u201d, and surprising library code behaviour. Highlight bug workarounds, linking to an issue report. This allows them to be easily identified and removed at a later date when the underlying bug (e.g. in a library) has been fixed. Write clearly, concisely, and unambiguously. Comments which follow these principles are quicker and easier to understand, and help avoid misinterpretation or confusion. The process of writing can often trigger ideas or solutions to problems, in much the same way as merely explaining a problem to someone can help you come up with a solution. Refactoring isn\u2019t only for code; after writing a comment, read it and consider if it could be improved. Ensure that comments are in sync and correct with respect to the current version of the code. Outdated or no longer applicable comments can cause confusion. Follow the project\u2019s strategy for managing TODO comments. Buildup of such comments in the code often indicates buildup of technical debt and necessary work. These tasks remain invisible to project feature/bug work tracking, leaving them in danger of being overlooked and forgotten - with various consequences. One such strategy is to require all TODOs to reference an issue tracker ticket before a pull request can be merged. One logical piece of work per commit. Separate each feature, bug and refactoring from other ones. This makes for a more useful history, and also encourages an organised approach to carrying out work. If you need to fix a bug while working on a feature, consider temporarily putting away your feature changes using a source control feature such as Git\u2019s stash. Prefer smaller, more regular commits. Overly large commits are harder to understand and review effectively. Commit larger pieces of work incrementally as you reach small milestones. Separate out refactoring where possible. Refactoring tends to be harder (and so less effective) to review, often including many moves and edits of existing code. Mixing it up with feature/bug work in a commit makes it harder still. When a task starts with some up-front non-trivial refactoring, consider making a separate, earlier pull request to get the changes to the main branch earlier. This helps avoid conflicts with other contributors\u2019 ongoing work. Remove existing code rendered unused by your changes. The code immediately being removed may have been the only user of other parts of the code. The now-unused code could be in the same file, elsewhere in the codebase, or all the way down the stack from the UI to the database. Address or remove relevant existing and new TODO comments. Existing ones may refer to the now-completed work. New ones may be temporary and require removal, or refer to issue tracker tickets for later work. Avoid including unrelated and unexplained changes. An extension of the first item. Such changes are often issues, or mistakes made while resolving merge/rebase conflicts. Avoid including left-over unused code. Such code is often from experimentation, trying different approaches, or trial-and-error. It may not be having an effect, or even running at all. CSS in particular tends to be quite susceptible to this. Avoid accidentally including unwanted files such as personal configuration and log files. Use your source control tool\u2019s ignore-file feature to prevent accidentally including such files. Check in the ignore file. Configuration that needs to be consistent across the team should however be checked in. Tags: [[favorite]] Strive for small pull requests. Large pull requests are harder to review, resulting in poorer feedback, unnoticed problems, \u201cspeed reviewing\u201d, and slow progress towards approval. If you\u2019re unable to split up work items for large features (due to process or politics), consider an incremental technique involving a series of smaller (e.g. 200-400 line) pull requests into a \u201ccollector branch\u201d culminating in a single big pull request from that branch to the master/trunk. Strive for short-lived pull requests. Any in-progress or in-review work on a branch is not yet part of the master/trunk that others are basing their work on. That can lead to conflicts which are time-consuming and error-prone to resolve. Being open for a long time increases the likelihood that a pull request will be open for an even longer time - as it requires updates after other pull requests are merged ahead of it (possibly involving conflict resolution). Consider setting some general and \u201cSLA-type\u201d ground rules to promote short-lived PRs, for example: review within n hours of being submitted, and review PRs or address feedback before starting new work. Making small pull requests helps keep them short-lived. Automate the tedious things. Configure the build to require passing code style and static analysis checks. Such issues are quicker, cheaper, and more consistently detected by tooling than people. Set expectations up-front. Make it easy for contributors to submit pull requests that will be approved first time, or at least without requiring major changes. Things that help with this include clear requirements, common understanding of application architecture and programming patterns/practices, and sharing design ideas before implementation starts. Complete the pre-submit checklist. Checklists help everyone remember things that need to be done. What needs to be on the pre-submission checklist depends on the team and project, and should evolve over time - for example, what things are always coming up as feedback. To avoid diluting its importance, it shouldn\u2019t be too long or include trivial things. If the repository supports templates for pull request descriptions, create one containing the checklist - otherwise, a bookmarklet to quickly populate the pull request description field can help. Think ahead to future work. We want to keep things simple and avoid building things we\u2019ll never need. We can however avoid making life hard for our future selves by being aware of upcoming and medium-term requirements, and bearing them in mind today. Tags: [[favorite]] UI text These items apply to all text regardless of who wrote it; text provided by UX or business stakeholders should be reviewed and any issues resolved with the author. Be accurate and unambiguous. Avoid contradicting other text or actual application behaviour. Existing text in other areas of the application may need to be updated. Use correct spelling and grammar. Use consistent capitalisation of terms. Use consistent style and tone. Use correct tense (current/past). This also applies to log messages. Use consistent terminology when referring for example to application features and business concepts. Avoid relying on enum member order for UI display order. Logical or alphabetical display order is often different from order of members in code. The order of members is also liable to change, without expectation of any side-effects. Use realistic and professional mock data. Realistic data helps detect issues that could occur later using real data. Unprofessional or joke data can cause offence, or give a poor impression of the team - you never know who\u2019s going to see it and what frame of mind they\u2019re going to be in. Bug fixes Find the cause before attempting a fix. Any fix based on first-glance analysis without knowing or understanding the cause is unlikely to be a good/correct one. Are there other occurrences of this bug or similar ones that need fixing? They could be in similar functionality, or in code using similar techniques/patterns that could be prone to similar programming errors. Fix the root cause. Fixing symptoms alone, or intermediate causes, is a workaround rather than a complete fix. They often involve adding code to work against something other code is doing. Understand why the fix works. A fix which appears to work, but cannot be explained why, may be unreliable or incomplete. Add test(s) which don\u2019t pass without the fix. Tests will help prevent regression - the bug being reintroduced through later changes. Choose unit and/or integration tests as appropriate. Validate the test by checking that it fails against the unfixed code.","title":"Highlights"},{"location":"Highlights/Readwise/Articles/Deep%20Habits%20WorkingMemory.txt%20%28The%20Most%20Important%20Productivity%20Tool%20You%27ve%20Never%20Heard%20Of%29%20-%20Study%20Hacks%20-%20Cal%20Newport/","text":"Deep Habits: WorkingMemory.txt (The Most Important Productivity Tool You've Never Heard Of) - Study Hacks - Cal Newport \u00b6 Metadata \u00b6 Author: [[calnewport.com]] Full Title: Deep Habits: WorkingMemory.txt (The Most Important Productivity Tool You've Never Heard Of) - Study Hacks - Cal Newport Category: #Type/Highlights/Article URL: https://www.calnewport.com/blog/2015/10/27/deep-habits-workingmemory-txt-the-most-important-productivity-tool-youve-never-heard-of/ Highlights \u00b6 The solution to such scenarios, I will argue, is to augment your limited neuronal capacity with some digital help\u2026 The WorkingMemory.txt File A few years ago, I stumbled onto the strategy of using a simple plain text file to augment my working memory during attacks on my mounting obligations. For obvious reasons, I named the file WorkingMemory.txt. Whenever I enter an administrative block, I open this file and place it next to my browser (see the screenshot above) so I can access it easily as I check my e-mail, review my calendar, or browse my task lists. To understand the power of a simple text file in this scenario, let me walk you through a typical Monday morning administrative block from a few months ago\u2026 The Initial Dump The first thing I did in the block is simply dump in the WorkingMemory.txt file all the things I already knew I wanted to get done: Capturing New Obligations I then began reading and responding to e-mails \u2014 the first item on the list. As I dived deeper into my inbox, many new obligations were generated at a fast rate. I didn\u2019t have time to accomplish each new obligation as I encountered it, and (this is the important part) I didn\u2019t have nearly enough working memory in my brain to remember them all, so I jotted them all down in my trusty text file: You might counter that I should have carefully processed each of these new obligations into a clear next action and then listed them under the appropriate contexts in my well-maintained tasks lists (as recommended by David Allen). But I wasn\u2019t ready to put in that amount of effort yet. At this point, I\u2019m capturing things in a stream of conscious style as they pop up. I can figure out what they mean later: for now, I just want them captured in my digital memory so I can get through all the e-mails in my inbox quickly without worrying about forgetting things. There are several things to notice here. The first is that I extracted a clear task list for the remainder of the morning dash, dividing the tasks between \u201clarge things\u201d (more than 5 minutes) and \u201csmall things\u201d (less than 5 minutes). I also went through and organized the rest of the information dumped into the file. You can see, for example, that under \u201cto capture in system\u201d I have the full list of things that I need to transfer to my task lists for later treatment. Notice, also, that under \u201cto include in weekly plan\u201d I have identified a subset of those items that I want to include in the weekly plan I\u2019m going to construct as part of this morning dash (see the \u201clarge things\u201d list). At this point in my morning, my inbox is empty and my mind is 100% clear. Everything I need to do or know is captured and clarified in my WorkingMemory.txt file \u2014 allowing me to devote my full energy to executing. use a simple text file to capture, organize, and ultimately clarify all relevant information during administrative blocks \u2014 leaving your brain free to execute.","title":"Deep Habits: WorkingMemory.txt (The Most Important Productivity Tool You've Never Heard Of) - Study Hacks - Cal Newport"},{"location":"Highlights/Readwise/Articles/Deep%20Habits%20WorkingMemory.txt%20%28The%20Most%20Important%20Productivity%20Tool%20You%27ve%20Never%20Heard%20Of%29%20-%20Study%20Hacks%20-%20Cal%20Newport/#deep-habits-workingmemorytxt-the-most-important-productivity-tool-youve-never-heard-of-study-hacks-cal-newport","text":"","title":"Deep Habits: WorkingMemory.txt (The Most Important Productivity Tool You've Never Heard Of) - Study Hacks - Cal Newport"},{"location":"Highlights/Readwise/Articles/Deep%20Habits%20WorkingMemory.txt%20%28The%20Most%20Important%20Productivity%20Tool%20You%27ve%20Never%20Heard%20Of%29%20-%20Study%20Hacks%20-%20Cal%20Newport/#metadata","text":"Author: [[calnewport.com]] Full Title: Deep Habits: WorkingMemory.txt (The Most Important Productivity Tool You've Never Heard Of) - Study Hacks - Cal Newport Category: #Type/Highlights/Article URL: https://www.calnewport.com/blog/2015/10/27/deep-habits-workingmemory-txt-the-most-important-productivity-tool-youve-never-heard-of/","title":"Metadata"},{"location":"Highlights/Readwise/Articles/Deep%20Habits%20WorkingMemory.txt%20%28The%20Most%20Important%20Productivity%20Tool%20You%27ve%20Never%20Heard%20Of%29%20-%20Study%20Hacks%20-%20Cal%20Newport/#highlights","text":"The solution to such scenarios, I will argue, is to augment your limited neuronal capacity with some digital help\u2026 The WorkingMemory.txt File A few years ago, I stumbled onto the strategy of using a simple plain text file to augment my working memory during attacks on my mounting obligations. For obvious reasons, I named the file WorkingMemory.txt. Whenever I enter an administrative block, I open this file and place it next to my browser (see the screenshot above) so I can access it easily as I check my e-mail, review my calendar, or browse my task lists. To understand the power of a simple text file in this scenario, let me walk you through a typical Monday morning administrative block from a few months ago\u2026 The Initial Dump The first thing I did in the block is simply dump in the WorkingMemory.txt file all the things I already knew I wanted to get done: Capturing New Obligations I then began reading and responding to e-mails \u2014 the first item on the list. As I dived deeper into my inbox, many new obligations were generated at a fast rate. I didn\u2019t have time to accomplish each new obligation as I encountered it, and (this is the important part) I didn\u2019t have nearly enough working memory in my brain to remember them all, so I jotted them all down in my trusty text file: You might counter that I should have carefully processed each of these new obligations into a clear next action and then listed them under the appropriate contexts in my well-maintained tasks lists (as recommended by David Allen). But I wasn\u2019t ready to put in that amount of effort yet. At this point, I\u2019m capturing things in a stream of conscious style as they pop up. I can figure out what they mean later: for now, I just want them captured in my digital memory so I can get through all the e-mails in my inbox quickly without worrying about forgetting things. There are several things to notice here. The first is that I extracted a clear task list for the remainder of the morning dash, dividing the tasks between \u201clarge things\u201d (more than 5 minutes) and \u201csmall things\u201d (less than 5 minutes). I also went through and organized the rest of the information dumped into the file. You can see, for example, that under \u201cto capture in system\u201d I have the full list of things that I need to transfer to my task lists for later treatment. Notice, also, that under \u201cto include in weekly plan\u201d I have identified a subset of those items that I want to include in the weekly plan I\u2019m going to construct as part of this morning dash (see the \u201clarge things\u201d list). At this point in my morning, my inbox is empty and my mind is 100% clear. Everything I need to do or know is captured and clarified in my WorkingMemory.txt file \u2014 allowing me to devote my full energy to executing. use a simple text file to capture, organize, and ultimately clarify all relevant information during administrative blocks \u2014 leaving your brain free to execute.","title":"Highlights"},{"location":"Highlights/Readwise/Articles/Delete%20These%20Windows%20Files%20and%20Folders%20to%20Free%20Up%20Disk%20Space/","text":"Delete These Windows Files and Folders to Free Up Disk Space \u00b6 Metadata \u00b6 Author: Full Title: Delete These Windows Files and Folders to Free Up Disk Space Category: #Type/Highlights/Article URL: https://www.makeuseof.com/tag/delete-windows-files-folders/ Highlights \u00b6 The Best Way to Clean Windows Folders: Disk Cleanup choose Clean up system files to gain administrator permissions What to Delete From Disk Cleanup This isn\u2019t a full guide to the Disk Cleanup tool, so we\u2019re not going to look at every option it offers. However, the following several options are low-hanging fruit (make sure to select Clean up system files to see them all): Windows Update Cleanup: This erases old copies of Windows Update files. These are safe to delete in most cases, but you should keep them for troubleshooting if you run into update-related issues. Windows upgrade log files: Similarly, these are data files that Windows Update keeps to help you dig into problems around it. You can erase these if you haven\u2019t had errors related to Windows update. Language resource files: If you\u2019ve previously downloaded another language or keyboard layout that you don\u2019t use, this will let you easily erase it. Recycle Bin: While you can empty the Recycle Bin through its window, you can also do it easily here. Temporary files: As their name suggests, temporary files aren\u2019t used for anything in the long-term, so you can erase them without worry. Location: C:\\hiberfil.sys Location: C:\\Windows\\Temp Aside from cleaning via Disk Cleanup. you can visit this folder and delete its contents by pressing Ctrl + A to select everything and then hit Delete. Windows might give you an error about a couple of items when you do this\u2014just ignore those and clear everything else. Recycle Bin Location: shell:RecycleBinFolder Technically, the Recycle Bin isn\u2019t really a folder. And while it might be obvious to some, we\u2019re including this in case some readers aren\u2019t aware. Whenever you delete a file on your system, Windows sends it to the Recycle Bin. This is a special place where deleted files are kept until you permanently delete or restore them. If you don\u2019t remember to empty the bin regularly, there could be several gigabytes of old data still in there. You can access the Recycle Bin through the shortcut on your desktop. If you don\u2019t have one, type shell:RecycleBinFolder into the File Explorer\u2019s navigation bar. Once here, you\u2019ll see everything you\u2019ve deleted recently. You can right-click on individual items and choose Delete to permanently erase them or Restore to send the file back to its original location. On the Ribbon above, you\u2019ll see buttons to Empty Recycle Bin and Restore all items. Windows.old Folder Location: C:\\Windows.old Whenever you upgrade your version of Windows, the system keeps a copy of your old files called Windows.old. This folder essentially holds everything that made up your old installation, kept around in case something didn\u2019t transfer correctly. Downloaded Program Files Location: C:\\Windows\\Downloaded Program Files This folder\u2019s name is a bit confusing. It actually holds files used by Internet Explorer\u2019s ActiveX controls and Java applets, so that if you use the same feature on a website you don\u2019t have to download it twice. In effect, this folder is useless. ActiveX is an extremely outdated technology that\u2019s full of security holes, and Java is rarely used in today\u2019s web. ActiveX is exclusive to Internet Explorer and you\u2019ll probably only encounter it on ancient corporate websites now. Most home users don\u2019t use IE anymore, let alone ActiveX. Your Downloaded Program Files folder might already be empty, but feel free to clean out its contents if it\u2019s not. LiveKernelReports Location: C:\\Windows\\LiveKernelReports The LiveKernelReports folder is another directory which likely comes up when you\u2019re scanning for large files on your computer. This folder is home to dump files, which are ongoing information logs that Windows keeps. If your computer runs into an issue, you can analyze the contents of these files to start troubleshooting your problem. Any huge files ending with the DMP file extension in this folder are safe to delete. Like the above locations, we recommend using Disk Cleanup instead of deleting the file yourself. When Windows crashes or you have other major computer problems, don\u2019t delete these dump files right away. You can use a program like WhoCrashed to get more info from them.","title":"Delete These Windows Files and Folders to Free Up Disk Space"},{"location":"Highlights/Readwise/Articles/Delete%20These%20Windows%20Files%20and%20Folders%20to%20Free%20Up%20Disk%20Space/#delete-these-windows-files-and-folders-to-free-up-disk-space","text":"","title":"Delete These Windows Files and Folders to Free Up Disk Space"},{"location":"Highlights/Readwise/Articles/Delete%20These%20Windows%20Files%20and%20Folders%20to%20Free%20Up%20Disk%20Space/#metadata","text":"Author: Full Title: Delete These Windows Files and Folders to Free Up Disk Space Category: #Type/Highlights/Article URL: https://www.makeuseof.com/tag/delete-windows-files-folders/","title":"Metadata"},{"location":"Highlights/Readwise/Articles/Delete%20These%20Windows%20Files%20and%20Folders%20to%20Free%20Up%20Disk%20Space/#highlights","text":"The Best Way to Clean Windows Folders: Disk Cleanup choose Clean up system files to gain administrator permissions What to Delete From Disk Cleanup This isn\u2019t a full guide to the Disk Cleanup tool, so we\u2019re not going to look at every option it offers. However, the following several options are low-hanging fruit (make sure to select Clean up system files to see them all): Windows Update Cleanup: This erases old copies of Windows Update files. These are safe to delete in most cases, but you should keep them for troubleshooting if you run into update-related issues. Windows upgrade log files: Similarly, these are data files that Windows Update keeps to help you dig into problems around it. You can erase these if you haven\u2019t had errors related to Windows update. Language resource files: If you\u2019ve previously downloaded another language or keyboard layout that you don\u2019t use, this will let you easily erase it. Recycle Bin: While you can empty the Recycle Bin through its window, you can also do it easily here. Temporary files: As their name suggests, temporary files aren\u2019t used for anything in the long-term, so you can erase them without worry. Location: C:\\hiberfil.sys Location: C:\\Windows\\Temp Aside from cleaning via Disk Cleanup. you can visit this folder and delete its contents by pressing Ctrl + A to select everything and then hit Delete. Windows might give you an error about a couple of items when you do this\u2014just ignore those and clear everything else. Recycle Bin Location: shell:RecycleBinFolder Technically, the Recycle Bin isn\u2019t really a folder. And while it might be obvious to some, we\u2019re including this in case some readers aren\u2019t aware. Whenever you delete a file on your system, Windows sends it to the Recycle Bin. This is a special place where deleted files are kept until you permanently delete or restore them. If you don\u2019t remember to empty the bin regularly, there could be several gigabytes of old data still in there. You can access the Recycle Bin through the shortcut on your desktop. If you don\u2019t have one, type shell:RecycleBinFolder into the File Explorer\u2019s navigation bar. Once here, you\u2019ll see everything you\u2019ve deleted recently. You can right-click on individual items and choose Delete to permanently erase them or Restore to send the file back to its original location. On the Ribbon above, you\u2019ll see buttons to Empty Recycle Bin and Restore all items. Windows.old Folder Location: C:\\Windows.old Whenever you upgrade your version of Windows, the system keeps a copy of your old files called Windows.old. This folder essentially holds everything that made up your old installation, kept around in case something didn\u2019t transfer correctly. Downloaded Program Files Location: C:\\Windows\\Downloaded Program Files This folder\u2019s name is a bit confusing. It actually holds files used by Internet Explorer\u2019s ActiveX controls and Java applets, so that if you use the same feature on a website you don\u2019t have to download it twice. In effect, this folder is useless. ActiveX is an extremely outdated technology that\u2019s full of security holes, and Java is rarely used in today\u2019s web. ActiveX is exclusive to Internet Explorer and you\u2019ll probably only encounter it on ancient corporate websites now. Most home users don\u2019t use IE anymore, let alone ActiveX. Your Downloaded Program Files folder might already be empty, but feel free to clean out its contents if it\u2019s not. LiveKernelReports Location: C:\\Windows\\LiveKernelReports The LiveKernelReports folder is another directory which likely comes up when you\u2019re scanning for large files on your computer. This folder is home to dump files, which are ongoing information logs that Windows keeps. If your computer runs into an issue, you can analyze the contents of these files to start troubleshooting your problem. Any huge files ending with the DMP file extension in this folder are safe to delete. Like the above locations, we recommend using Disk Cleanup instead of deleting the file yourself. When Windows crashes or you have other major computer problems, don\u2019t delete these dump files right away. You can use a program like WhoCrashed to get more info from them.","title":"Highlights"},{"location":"Highlights/Readwise/Articles/Dev%20Environments%20as%20Code%20With%20Containers%20and%20Visual%20Studio%20Code/","text":"Dev Environments as Code With Containers and Visual Studio Code \u00b6 Metadata \u00b6 Author: [[Ari]] Full Title: Dev Environments as Code With Containers and Visual Studio Code Category: #Type/Highlights/Article URL: https://medium.com/p/690897a2be59 Highlights \u00b6 Developing code in a single environment is like cooking using a dirty pan and oven. It will work the first few times, but eventually, ingredients (dependencies) will carry over from the previous recipe into the next, leading to unexpected and unpredictable results. Open a new or existing project in Visual Studio Code. In the root of the project create an empty folder and call it .devcontainer. The name is important as it\u2019s used by Visual Studio Code to know where to find your configuration files. Within .devcontainer create a JSON file named devcontainer.json, again the name is important and is detected by Visual Studio Code. The JSON file is used to define the settings, extensions, and behavior of Visual Studio Code once it launches from within the container. Copy and paste the following JSON into devcontainer.json and save.","title":"Dev Environments as Code With Containers and Visual Studio Code"},{"location":"Highlights/Readwise/Articles/Dev%20Environments%20as%20Code%20With%20Containers%20and%20Visual%20Studio%20Code/#dev-environments-as-code-with-containers-and-visual-studio-code","text":"","title":"Dev Environments as Code With Containers and Visual Studio Code"},{"location":"Highlights/Readwise/Articles/Dev%20Environments%20as%20Code%20With%20Containers%20and%20Visual%20Studio%20Code/#metadata","text":"Author: [[Ari]] Full Title: Dev Environments as Code With Containers and Visual Studio Code Category: #Type/Highlights/Article URL: https://medium.com/p/690897a2be59","title":"Metadata"},{"location":"Highlights/Readwise/Articles/Dev%20Environments%20as%20Code%20With%20Containers%20and%20Visual%20Studio%20Code/#highlights","text":"Developing code in a single environment is like cooking using a dirty pan and oven. It will work the first few times, but eventually, ingredients (dependencies) will carry over from the previous recipe into the next, leading to unexpected and unpredictable results. Open a new or existing project in Visual Studio Code. In the root of the project create an empty folder and call it .devcontainer. The name is important as it\u2019s used by Visual Studio Code to know where to find your configuration files. Within .devcontainer create a JSON file named devcontainer.json, again the name is important and is detected by Visual Studio Code. The JSON file is used to define the settings, extensions, and behavior of Visual Studio Code once it launches from within the container. Copy and paste the following JSON into devcontainer.json and save.","title":"Highlights"},{"location":"Highlights/Readwise/Articles/Developer%20GTD/","text":"Developer GTD \u00b6 Metadata \u00b6 Author: [[Dror Helper]] Full Title: Developer GTD Category: #Type/Highlights/Article URL: https://helpercode.com/2009/06/21/developer-gtd/ Highlights \u00b6 I have customized this format to my needs, I have the following lists: Personal Work Someday / Maybe List per big project I have (either personal or work related) On top of these lists I have several tags according to where I\u2019m suppose to do them: @Office @Call @Errands (i.e. by groceries) @Internet @Email @Home @Blog Each task can have additional tag na (Next Actions) \u2013 the task is not dependant on other task to complete. wait (Waiting For) \u2013 other task need to be completed before I can finish this task","title":"Developer GTD"},{"location":"Highlights/Readwise/Articles/Developer%20GTD/#developer-gtd","text":"","title":"Developer GTD"},{"location":"Highlights/Readwise/Articles/Developer%20GTD/#metadata","text":"Author: [[Dror Helper]] Full Title: Developer GTD Category: #Type/Highlights/Article URL: https://helpercode.com/2009/06/21/developer-gtd/","title":"Metadata"},{"location":"Highlights/Readwise/Articles/Developer%20GTD/#highlights","text":"I have customized this format to my needs, I have the following lists: Personal Work Someday / Maybe List per big project I have (either personal or work related) On top of these lists I have several tags according to where I\u2019m suppose to do them: @Office @Call @Errands (i.e. by groceries) @Internet @Email @Home @Blog Each task can have additional tag na (Next Actions) \u2013 the task is not dependant on other task to complete. wait (Waiting For) \u2013 other task need to be completed before I can finish this task","title":"Highlights"},{"location":"Highlights/Readwise/Articles/Digital%20De-Cluttering%20How%20to%20Streamline%20Your%20Online%20Life/","text":"Digital De-Cluttering: How to Streamline Your Online Life \u00b6 Metadata \u00b6 Author: [[themuse.com]] Full Title: Digital De-Cluttering: How to Streamline Your Online Life Category: #Type/Highlights/Article URL: https://www.themuse.com/advice/digital-decluttering-how-to-streamline-your-online-life Highlights \u00b6 Clean Your Digital Desktop ( View Highlight ) For starters, take advantage of a service like Dropbox, a file storage service that lets you save files in the cloud and have access across various devices, versus on your desktop. Cloud applications like Dropbox or Google Docs also allow you to take advantage of version control, which means that only the most up-to-date version of the document is saved, and you can go back and see earlier versions if you need to access or restore them. And for all those photos, Stickies, and randomly saved text files cluttering up your screen? Use a note-taking program like Evernote (for Mac) or ResophNotes (for Windows), which allows you to take, save, and organize your notes in one place, then access them on any one of your devices. ( View Highlight ) Sweep Away Old Emails ( View Highlight ) Tidy Up Your Browser When left to my own devices, I will open a dozen windows and hundreds of tabs on Firefox, browsing away until I've crashed the program. My new saving grace is a plugin that limits the number of tabs I can have open on my browser at any given time. Now, there\u2019s a lot less my brain has to process at one time\u2014and closing out 10 tabs instead of 40 makes for a much less frustrating end of my day. It's also much easier to use fewer tabs if you install a cloud bookmarking system. You can save anything you want by clicking a button on your browser, then read it later on another computer or your phone or tablet. My favorite service is Pocket, but there are plenty of others, like Instapaper and Readability. The key to living without digital clutter is figuring out how to effectively process the digital information you're confronted with on a daily basis, and these are all great first steps. But there\u2019s something even more important: knowing when to turn it all off. The light waves emitted by your screens can block melatonin secretion from your brain, resulting in less (or less deep) sleep. \"Poor sleep contributes largely to ongoing high levels of stress and anxiety,\u201d says Dr. Biali. \u201cSo my top tip would be to unplug completely from anything digital in the evening.\" ( View Highlight )","title":"Digital De-Cluttering: How to Streamline Your Online Life"},{"location":"Highlights/Readwise/Articles/Digital%20De-Cluttering%20How%20to%20Streamline%20Your%20Online%20Life/#digital-de-cluttering-how-to-streamline-your-online-life","text":"","title":"Digital De-Cluttering: How to Streamline Your Online Life"},{"location":"Highlights/Readwise/Articles/Digital%20De-Cluttering%20How%20to%20Streamline%20Your%20Online%20Life/#metadata","text":"Author: [[themuse.com]] Full Title: Digital De-Cluttering: How to Streamline Your Online Life Category: #Type/Highlights/Article URL: https://www.themuse.com/advice/digital-decluttering-how-to-streamline-your-online-life","title":"Metadata"},{"location":"Highlights/Readwise/Articles/Digital%20De-Cluttering%20How%20to%20Streamline%20Your%20Online%20Life/#highlights","text":"Clean Your Digital Desktop ( View Highlight ) For starters, take advantage of a service like Dropbox, a file storage service that lets you save files in the cloud and have access across various devices, versus on your desktop. Cloud applications like Dropbox or Google Docs also allow you to take advantage of version control, which means that only the most up-to-date version of the document is saved, and you can go back and see earlier versions if you need to access or restore them. And for all those photos, Stickies, and randomly saved text files cluttering up your screen? Use a note-taking program like Evernote (for Mac) or ResophNotes (for Windows), which allows you to take, save, and organize your notes in one place, then access them on any one of your devices. ( View Highlight ) Sweep Away Old Emails ( View Highlight ) Tidy Up Your Browser When left to my own devices, I will open a dozen windows and hundreds of tabs on Firefox, browsing away until I've crashed the program. My new saving grace is a plugin that limits the number of tabs I can have open on my browser at any given time. Now, there\u2019s a lot less my brain has to process at one time\u2014and closing out 10 tabs instead of 40 makes for a much less frustrating end of my day. It's also much easier to use fewer tabs if you install a cloud bookmarking system. You can save anything you want by clicking a button on your browser, then read it later on another computer or your phone or tablet. My favorite service is Pocket, but there are plenty of others, like Instapaper and Readability. The key to living without digital clutter is figuring out how to effectively process the digital information you're confronted with on a daily basis, and these are all great first steps. But there\u2019s something even more important: knowing when to turn it all off. The light waves emitted by your screens can block melatonin secretion from your brain, resulting in less (or less deep) sleep. \"Poor sleep contributes largely to ongoing high levels of stress and anxiety,\u201d says Dr. Biali. \u201cSo my top tip would be to unplug completely from anything digital in the evening.\" ( View Highlight )","title":"Highlights"},{"location":"Highlights/Readwise/Articles/Digital%20Declutter%20This%20Is%20How%20to%20Reset%20Your%20Digital%20Life%20-%20Prime%20Your%20Pump/","text":"Digital Declutter: This Is How to Reset Your Digital Life - Prime Your Pump \u00b6 Metadata \u00b6 Author: [[Rick Melnyck]] Full Title: Digital Declutter: This Is How to Reset Your Digital Life - Prime Your Pump Category: #Type/Highlights/Article URL: https://primeyourpump.com/2019/05/16/digital-declutter/ Highlights \u00b6 According to Newport: \u201cOne of the first things that became clear during this exploration is that our culture\u2019s relationship with these tools is complicated by the fact that they mix harm with benefits. Smartphones, ubiquitous wireless internet, digital platforms that connect billions of people\u2014these are triumphant innovations! Few serious commentators think we\u2019d be better off retreating to an earlier technological age. But at the same time, people are tired of feeling like they\u2019ve become a slave to their devices. This reality creates a jumbled emotional landscape where you can simultaneously cherish your ability to discover inspiring photos on Instagram while fretting about this app\u2019s ability to invade the evening hours you used to spend talking with friends or reading.\u201d 1 Use it or Lose It The 3 steps to a digital declutter are: (1) Define your technology rules. (2) Take a 30-day break. (3) Reintroduce optional technologies","title":"Digital Declutter: This Is How to Reset Your Digital Life - Prime Your Pump"},{"location":"Highlights/Readwise/Articles/Digital%20Declutter%20This%20Is%20How%20to%20Reset%20Your%20Digital%20Life%20-%20Prime%20Your%20Pump/#digital-declutter-this-is-how-to-reset-your-digital-life-prime-your-pump","text":"","title":"Digital Declutter: This Is How to Reset Your Digital Life - Prime Your Pump"},{"location":"Highlights/Readwise/Articles/Digital%20Declutter%20This%20Is%20How%20to%20Reset%20Your%20Digital%20Life%20-%20Prime%20Your%20Pump/#metadata","text":"Author: [[Rick Melnyck]] Full Title: Digital Declutter: This Is How to Reset Your Digital Life - Prime Your Pump Category: #Type/Highlights/Article URL: https://primeyourpump.com/2019/05/16/digital-declutter/","title":"Metadata"},{"location":"Highlights/Readwise/Articles/Digital%20Declutter%20This%20Is%20How%20to%20Reset%20Your%20Digital%20Life%20-%20Prime%20Your%20Pump/#highlights","text":"According to Newport: \u201cOne of the first things that became clear during this exploration is that our culture\u2019s relationship with these tools is complicated by the fact that they mix harm with benefits. Smartphones, ubiquitous wireless internet, digital platforms that connect billions of people\u2014these are triumphant innovations! Few serious commentators think we\u2019d be better off retreating to an earlier technological age. But at the same time, people are tired of feeling like they\u2019ve become a slave to their devices. This reality creates a jumbled emotional landscape where you can simultaneously cherish your ability to discover inspiring photos on Instagram while fretting about this app\u2019s ability to invade the evening hours you used to spend talking with friends or reading.\u201d 1 Use it or Lose It The 3 steps to a digital declutter are: (1) Define your technology rules. (2) Take a 30-day break. (3) Reintroduce optional technologies","title":"Highlights"},{"location":"Highlights/Readwise/Articles/Digital%20Decluttering%20Cleaning%20Up%20Computer%20Files%20%26%20Social%20Media%20Profiles/","text":"Digital Decluttering: Cleaning Up Computer Files & Social Media Profiles \u00b6 Metadata \u00b6 Author: [[howtogyst.com]] Full Title: Digital Decluttering: Cleaning Up Computer Files & Social Media Profiles Category: #Type/Highlights/Article URL: https://howtogyst.com/digital-decluttering/ Highlights \u00b6 Digital Decluttering: Files & folders I went into Documents and moved all the files out of their folders. This took some time but I needed to have everything in one big pile. I looked through each one in turn and decided whether or not it sparked joy. If it didn\u2019t, it was deleted. (Remember that utility, convenience and necessity are forms of joy.) Once that was done, I arranged them into groups, like with like. If there was already a folder there that covered the topic, I transferred them all into that. If not, I created a new folder. If sub-folders were necessary (eg. taxes divided by year) I did that, but only if I had enough files (3 minimum) to warrant another folder. Afterwards, empty folders were deleted. Top tip: Open each file briefly to ensure the contents match up with the file name. Re-name anything ambiguous or confusing into something more easily recognisable. Digital Decluttering: Bookmarks Same process here \u2014 I eliminated everything I knew was no longer of interest to me, including a lot of wedding inspiration sites (I\u2019m married 4 years now) or products I no longer wish to purchase (hurray KonMari Method). Thereafter, I went through each one individually. If it was just a blog post, individual product page, or similar, I left it open. If it was a site that I genuinely visit on any sort of regular basis, I left it where it was, re-naming it if necessary. Of the ones that were left open, I sat down and went through all of them. I was able to eliminate a lot straight off the bat. If there was an article that was particularly interesting but I\u2019d probably only reference once or twice more, I saved it to Pocket, which is like an online folder for websites. (You could also use Evernote, Instapaper, etc.) If I thought I\u2019d come back to it more regularly, I left it as a bookmark. Top tip: Visit all the sites, even if you think you know exactly what they are. I had a few that turned out to be no longer available or that re-directed to an unrelated page.","title":"Digital Decluttering: Cleaning Up Computer Files & Social Media Profiles"},{"location":"Highlights/Readwise/Articles/Digital%20Decluttering%20Cleaning%20Up%20Computer%20Files%20%26%20Social%20Media%20Profiles/#digital-decluttering-cleaning-up-computer-files-social-media-profiles","text":"","title":"Digital Decluttering: Cleaning Up Computer Files &amp; Social Media Profiles"},{"location":"Highlights/Readwise/Articles/Digital%20Decluttering%20Cleaning%20Up%20Computer%20Files%20%26%20Social%20Media%20Profiles/#metadata","text":"Author: [[howtogyst.com]] Full Title: Digital Decluttering: Cleaning Up Computer Files & Social Media Profiles Category: #Type/Highlights/Article URL: https://howtogyst.com/digital-decluttering/","title":"Metadata"},{"location":"Highlights/Readwise/Articles/Digital%20Decluttering%20Cleaning%20Up%20Computer%20Files%20%26%20Social%20Media%20Profiles/#highlights","text":"Digital Decluttering: Files & folders I went into Documents and moved all the files out of their folders. This took some time but I needed to have everything in one big pile. I looked through each one in turn and decided whether or not it sparked joy. If it didn\u2019t, it was deleted. (Remember that utility, convenience and necessity are forms of joy.) Once that was done, I arranged them into groups, like with like. If there was already a folder there that covered the topic, I transferred them all into that. If not, I created a new folder. If sub-folders were necessary (eg. taxes divided by year) I did that, but only if I had enough files (3 minimum) to warrant another folder. Afterwards, empty folders were deleted. Top tip: Open each file briefly to ensure the contents match up with the file name. Re-name anything ambiguous or confusing into something more easily recognisable. Digital Decluttering: Bookmarks Same process here \u2014 I eliminated everything I knew was no longer of interest to me, including a lot of wedding inspiration sites (I\u2019m married 4 years now) or products I no longer wish to purchase (hurray KonMari Method). Thereafter, I went through each one individually. If it was just a blog post, individual product page, or similar, I left it open. If it was a site that I genuinely visit on any sort of regular basis, I left it where it was, re-naming it if necessary. Of the ones that were left open, I sat down and went through all of them. I was able to eliminate a lot straight off the bat. If there was an article that was particularly interesting but I\u2019d probably only reference once or twice more, I saved it to Pocket, which is like an online folder for websites. (You could also use Evernote, Instapaper, etc.) If I thought I\u2019d come back to it more regularly, I left it as a bookmark. Top tip: Visit all the sites, even if you think you know exactly what they are. I had a few that turned out to be no longer available or that re-directed to an unrelated page.","title":"Highlights"},{"location":"Highlights/Readwise/Articles/Digital%20Life%20in%20Disarray%20Use%20These%206%20Steps%20to%20Get%20Organized./","text":"Digital Life in Disarray? Use These 6 Steps to Get Organized. \u00b6 Metadata \u00b6 Author: [[Deb Lee]] Full Title: Digital Life in Disarray? Use These 6 Steps to Get Organized. Category: #Type/Highlights/Article URL: https://dallisonlee.com/organize-your-digital-life/ Highlights \u00b6 Save digital articles in one location You may have collected several business articles on your Internet travels especially if you\u2019re in the \u201calways be learning\u201d mindset. If you\u2019re like most entrepreneurs, when you don\u2019t have time to read them straight away, you probably save them to read later. Stop taxing your brain and save time searching by storing all your interesting finds in one location. For me, that\u2019s Evernote Delete files that you no longer use or need This is a tip you\u2019ve probably heard before and logically, it might also sit well with your brain. Except for when it doesn\u2019t. Those are the times when you think, \u201cBut what if someday I\u2019ll need XYZ file that I haven\u2019t opened since the last blue moon?\u201d When this happens, you should remind yourself that: You are committed to keeping your digital life organized. The likelihood of needing the file is slim to none especially if the last time you opened it was many moons ago. You can check your industry guidelines for how long you need to retain certain documentation. When you delete unnecessary files, you\u2019ll free up much-needed space on your device. You can store important files in your preferred cloud storage app which means you can access them anywhere at any time (so you won\u2019t need to keep them on your local device). Tags: [[favorite]] Decide on a naming convention for your digital files Digital organizing isn\u2019t just about letting go of things that are no longer serving you. It\u2019s also about putting order or structure to things you\u2019re keeping so that you can quickly find them. Once you\u2019ve figured out which digital files you must hold on to, be sure that you have a simple naming convention. Basically, that\u2019s the file naming system you use to quickly identify the content of your files without you having to open them. For example, if you were creating a folder for your work with a specific client, you could use \u201clast name\u201d as your naming convention. What happens if you have multiple clients with the same last name? Then, your file naming system could be \u201clast name_first initial\u201d or \u201clast name_first3\u201d. Using myself as the client in this example, that would be: Lee (last name) Lee_D (last name_first initial) Lee_Deb (last name_first3) Keep in mind that the longer the naming structure, the more you have to remember. The key is to keep it simple so that anyone can follow the naming structure you put in place. Unclutter your apps Getting your digital life organized usually involves apps. Lots of them. Speaking of apps, do you know how many you have on your phone or tablet (or laptop)? Probably more than you can easily remember without looking at your devices. Too many apps can be distracting so consider scheduling a weekly or monthly purge. Go ahead and add that to your calendar now before you forget. Here\u2019s something else you can do. Whenever you\u2019re updating your apps, delete the ones that you simply don\u2019t use or haven\u2019t used in 2-3 months. Why update them if you never use them, right? Unsubscribe from unwanted content Digital newsletters are like a stack of magazines that you haven\u2019t gotten around to reading yet. They pile up in your inbox. Maybe you used to want them. At the time, they offered quality business advice that you craved. But if they no longer interest you or are no longer relevant, it\u2019s time to cut them off. Instead of simply deleting them whenever you get them, make use of the unsubscribe button. When you unsubscribe, you stop them from arriving in the first place. This means you\u2019ll save a bit of time because you won\u2019t have to regularly remove them from your inbox. If you haven\u2019t read a newsletter (especially one that\u2019s delivered weekly) in two or three months, you should unsubscribe. You can opt to follow the publisher on social instead to grab tidbits you want. Your inbox and your future self will thank you. Keep track of your passwords Other things you can do to organize your digital life include backing up your content, being mindful of how many browser tabs you have open (OneTab for Firefox or Chrome can help!), and turning off distracting notifications.","title":"Digital Life in Disarray? Use These 6 Steps to Get Organized."},{"location":"Highlights/Readwise/Articles/Digital%20Life%20in%20Disarray%20Use%20These%206%20Steps%20to%20Get%20Organized./#digital-life-in-disarray-use-these-6-steps-to-get-organized","text":"","title":"Digital Life in Disarray? Use These 6 Steps to Get Organized."},{"location":"Highlights/Readwise/Articles/Digital%20Life%20in%20Disarray%20Use%20These%206%20Steps%20to%20Get%20Organized./#metadata","text":"Author: [[Deb Lee]] Full Title: Digital Life in Disarray? Use These 6 Steps to Get Organized. Category: #Type/Highlights/Article URL: https://dallisonlee.com/organize-your-digital-life/","title":"Metadata"},{"location":"Highlights/Readwise/Articles/Digital%20Life%20in%20Disarray%20Use%20These%206%20Steps%20to%20Get%20Organized./#highlights","text":"Save digital articles in one location You may have collected several business articles on your Internet travels especially if you\u2019re in the \u201calways be learning\u201d mindset. If you\u2019re like most entrepreneurs, when you don\u2019t have time to read them straight away, you probably save them to read later. Stop taxing your brain and save time searching by storing all your interesting finds in one location. For me, that\u2019s Evernote Delete files that you no longer use or need This is a tip you\u2019ve probably heard before and logically, it might also sit well with your brain. Except for when it doesn\u2019t. Those are the times when you think, \u201cBut what if someday I\u2019ll need XYZ file that I haven\u2019t opened since the last blue moon?\u201d When this happens, you should remind yourself that: You are committed to keeping your digital life organized. The likelihood of needing the file is slim to none especially if the last time you opened it was many moons ago. You can check your industry guidelines for how long you need to retain certain documentation. When you delete unnecessary files, you\u2019ll free up much-needed space on your device. You can store important files in your preferred cloud storage app which means you can access them anywhere at any time (so you won\u2019t need to keep them on your local device). Tags: [[favorite]] Decide on a naming convention for your digital files Digital organizing isn\u2019t just about letting go of things that are no longer serving you. It\u2019s also about putting order or structure to things you\u2019re keeping so that you can quickly find them. Once you\u2019ve figured out which digital files you must hold on to, be sure that you have a simple naming convention. Basically, that\u2019s the file naming system you use to quickly identify the content of your files without you having to open them. For example, if you were creating a folder for your work with a specific client, you could use \u201clast name\u201d as your naming convention. What happens if you have multiple clients with the same last name? Then, your file naming system could be \u201clast name_first initial\u201d or \u201clast name_first3\u201d. Using myself as the client in this example, that would be: Lee (last name) Lee_D (last name_first initial) Lee_Deb (last name_first3) Keep in mind that the longer the naming structure, the more you have to remember. The key is to keep it simple so that anyone can follow the naming structure you put in place. Unclutter your apps Getting your digital life organized usually involves apps. Lots of them. Speaking of apps, do you know how many you have on your phone or tablet (or laptop)? Probably more than you can easily remember without looking at your devices. Too many apps can be distracting so consider scheduling a weekly or monthly purge. Go ahead and add that to your calendar now before you forget. Here\u2019s something else you can do. Whenever you\u2019re updating your apps, delete the ones that you simply don\u2019t use or haven\u2019t used in 2-3 months. Why update them if you never use them, right? Unsubscribe from unwanted content Digital newsletters are like a stack of magazines that you haven\u2019t gotten around to reading yet. They pile up in your inbox. Maybe you used to want them. At the time, they offered quality business advice that you craved. But if they no longer interest you or are no longer relevant, it\u2019s time to cut them off. Instead of simply deleting them whenever you get them, make use of the unsubscribe button. When you unsubscribe, you stop them from arriving in the first place. This means you\u2019ll save a bit of time because you won\u2019t have to regularly remove them from your inbox. If you haven\u2019t read a newsletter (especially one that\u2019s delivered weekly) in two or three months, you should unsubscribe. You can opt to follow the publisher on social instead to grab tidbits you want. Your inbox and your future self will thank you. Keep track of your passwords Other things you can do to organize your digital life include backing up your content, being mindful of how many browser tabs you have open (OneTab for Firefox or Chrome can help!), and turning off distracting notifications.","title":"Highlights"},{"location":"Highlights/Readwise/Articles/Digital%20Tools%20I%20Wish%20Existed/","text":"Digital Tools I Wish Existed \u00b6 Metadata \u00b6 Author: [[jon.bo]] Full Title: Digital Tools I Wish Existed Category: #Type/Highlights/Article URL: https://jon.bo/posts/digital-tools/ Highlights \u00b6 Where to begin? Probably the most common problem I see myself and other people dealing with is processing the incoming deluge of articles to read and videos to watch. This isn\u2019t all personal recommendations - it encompasses any and all content I think my future self would appreciate me consuming. A list of issues, roughly by order of appearance: Content is published in a variety of formats including but not limited to images, sound files, videos, Google Drive docs, diagrams, long-from paywalled articles, PDFs, powerpoint presentations, and base 64 encoded blobs. I would like to batch process content in different \u201cstreams\u201d regardless of where they are stored. For example: I have two hours, let me work through interesting text content my friends sent me last week. Or: show me all the interesting/relevant videos I\u2019ve queued over the past month. A universal book log, recommendation & sharing system # Part of the problem here is metadata is hard. Someone has to sit there and fill out the author, title, subtitle, summary, page count - and they\u2019re probably not going to do it for free. Amazon is a good at it but is hostile to publishers. Goodreads has much potential but seems to have stagnated. Linking to the book\u2019s Wikipedia entry would be my preference but very few books have an entry. Intelligent PDF viewers, eBook readers, audiobook & podcast players # A centralized search interface for my digital brain (memex)","title":"Digital Tools I Wish Existed"},{"location":"Highlights/Readwise/Articles/Digital%20Tools%20I%20Wish%20Existed/#digital-tools-i-wish-existed","text":"","title":"Digital Tools I Wish Existed"},{"location":"Highlights/Readwise/Articles/Digital%20Tools%20I%20Wish%20Existed/#metadata","text":"Author: [[jon.bo]] Full Title: Digital Tools I Wish Existed Category: #Type/Highlights/Article URL: https://jon.bo/posts/digital-tools/","title":"Metadata"},{"location":"Highlights/Readwise/Articles/Digital%20Tools%20I%20Wish%20Existed/#highlights","text":"Where to begin? Probably the most common problem I see myself and other people dealing with is processing the incoming deluge of articles to read and videos to watch. This isn\u2019t all personal recommendations - it encompasses any and all content I think my future self would appreciate me consuming. A list of issues, roughly by order of appearance: Content is published in a variety of formats including but not limited to images, sound files, videos, Google Drive docs, diagrams, long-from paywalled articles, PDFs, powerpoint presentations, and base 64 encoded blobs. I would like to batch process content in different \u201cstreams\u201d regardless of where they are stored. For example: I have two hours, let me work through interesting text content my friends sent me last week. Or: show me all the interesting/relevant videos I\u2019ve queued over the past month. A universal book log, recommendation & sharing system # Part of the problem here is metadata is hard. Someone has to sit there and fill out the author, title, subtitle, summary, page count - and they\u2019re probably not going to do it for free. Amazon is a good at it but is hostile to publishers. Goodreads has much potential but seems to have stagnated. Linking to the book\u2019s Wikipedia entry would be my preference but very few books have an entry. Intelligent PDF viewers, eBook readers, audiobook & podcast players # A centralized search interface for my digital brain (memex)","title":"Highlights"},{"location":"Highlights/Readwise/Articles/Enable%20Code%20Folding%20in%20Bookdown%20and%20Blogdown%20%C2%B7%20StatnMap/","text":"Enable Code Folding in Bookdown and Blogdown \u00b7 StatnMap \u00b6 Metadata \u00b6 Author: [[S\u00e9bastien Rochette]] Full Title: Enable Code Folding in Bookdown and Blogdown \u00b7 StatnMap Category: #Type/Highlights/Article URL: https://statnmap.com/2017-11-13-enable-code-folding-in-bookdown-and-blogdown/ Highlights \u00b6 Option code_folding: true, like in classical rmarkdown documents, is not working in bookdown or blogdown but it is possible to enable it with some tricks. All files presented here, the javascript and Rmd files necessary for bookdown and the html files necessary for blogdown, to enable code folding are available on my github blog tips repository. As in the present blog post, these codes allow for: a button on each code chunk to show/hide it a global button with a dropdown menu to show/hide all codes on your page Some javascript codes The main javascript function that will be called codefolding.js needs to find .sourceCode class divisions to work with bookdown. This also requires complementary javascript functions of bootstrap, but not all. Here are the steps: Create a js folder in the same directory than your Rmd file Download javascript functions transition.js, collapse.js and dropdown.js here for instance: https://github.com/twbs/bootstrap/tree/v3.3.7/js and store them in your js folder Create a new file in the js folder called codefolding.js with the following code. This is the same as for rmarkdown code_folding option but with pre.sourceCode added to find R-code chunks. You can had any other code language with pre.lang in this file. Tags: [[favorite]] title: \"Toggle R code\" author: \"StatnMap\" date: '06 mai, 2020' output: bookdown::html_document2: includes: in_header: header.html bookdown::gitbook: includes: in_header: header.html Modify your hugo templates In your theme config file, you can add the following parameters to enable or disable totally codefolding in the website and to define if it is shown or not by default. Note that this can also be defined in each blog article (see below). # Set to true to disable code folding disable_codefolding = false # Set to \"hide\" or \"show\" all codes by default codefolding_show = \"hide\" In the main footer (or header) of your website, you need to load the javascript libraries. You can use the following code (footer_js.html).","title":"Enable Code Folding in Bookdown and Blogdown \u00b7 StatnMap"},{"location":"Highlights/Readwise/Articles/Enable%20Code%20Folding%20in%20Bookdown%20and%20Blogdown%20%C2%B7%20StatnMap/#enable-code-folding-in-bookdown-and-blogdown-statnmap","text":"","title":"Enable Code Folding in Bookdown and Blogdown \u00b7 StatnMap"},{"location":"Highlights/Readwise/Articles/Enable%20Code%20Folding%20in%20Bookdown%20and%20Blogdown%20%C2%B7%20StatnMap/#metadata","text":"Author: [[S\u00e9bastien Rochette]] Full Title: Enable Code Folding in Bookdown and Blogdown \u00b7 StatnMap Category: #Type/Highlights/Article URL: https://statnmap.com/2017-11-13-enable-code-folding-in-bookdown-and-blogdown/","title":"Metadata"},{"location":"Highlights/Readwise/Articles/Enable%20Code%20Folding%20in%20Bookdown%20and%20Blogdown%20%C2%B7%20StatnMap/#highlights","text":"Option code_folding: true, like in classical rmarkdown documents, is not working in bookdown or blogdown but it is possible to enable it with some tricks. All files presented here, the javascript and Rmd files necessary for bookdown and the html files necessary for blogdown, to enable code folding are available on my github blog tips repository. As in the present blog post, these codes allow for: a button on each code chunk to show/hide it a global button with a dropdown menu to show/hide all codes on your page Some javascript codes The main javascript function that will be called codefolding.js needs to find .sourceCode class divisions to work with bookdown. This also requires complementary javascript functions of bootstrap, but not all. Here are the steps: Create a js folder in the same directory than your Rmd file Download javascript functions transition.js, collapse.js and dropdown.js here for instance: https://github.com/twbs/bootstrap/tree/v3.3.7/js and store them in your js folder Create a new file in the js folder called codefolding.js with the following code. This is the same as for rmarkdown code_folding option but with pre.sourceCode added to find R-code chunks. You can had any other code language with pre.lang in this file. Tags: [[favorite]] title: \"Toggle R code\" author: \"StatnMap\" date: '06 mai, 2020' output: bookdown::html_document2: includes: in_header: header.html bookdown::gitbook: includes: in_header: header.html Modify your hugo templates In your theme config file, you can add the following parameters to enable or disable totally codefolding in the website and to define if it is shown or not by default. Note that this can also be defined in each blog article (see below). # Set to true to disable code folding disable_codefolding = false # Set to \"hide\" or \"show\" all codes by default codefolding_show = \"hide\" In the main footer (or header) of your website, you need to load the javascript libraries. You can use the following code (footer_js.html).","title":"Highlights"},{"location":"Highlights/Readwise/Articles/Event-Driven%20APIs%E2%80%8A%E2%80%94%E2%80%8AUnderstanding%20the%20Principles/","text":"Event-Driven APIs\u200a\u2014\u200aUnderstanding the Principles \u00b6 Metadata \u00b6 Author: [[Dunith Dhanushka]] Full Title: Event-Driven APIs\u200a\u2014\u200aUnderstanding the Principles Category: #Type/Highlights/Article URL: https://medium.com/p/c3208308d4b2 Highlights \u00b6 A Webhook is a publicly accessible HTTP POST endpoint managed by an event consumer. An event producer, such as an API server, can send event notifications to a webhook when something interesting happens.","title":"Event-Driven APIs\u200a\u2014\u200aUnderstanding the Principles"},{"location":"Highlights/Readwise/Articles/Event-Driven%20APIs%E2%80%8A%E2%80%94%E2%80%8AUnderstanding%20the%20Principles/#event-driven-apis-understanding-the-principles","text":"","title":"Event-Driven APIs\u200a\u2014\u200aUnderstanding the Principles"},{"location":"Highlights/Readwise/Articles/Event-Driven%20APIs%E2%80%8A%E2%80%94%E2%80%8AUnderstanding%20the%20Principles/#metadata","text":"Author: [[Dunith Dhanushka]] Full Title: Event-Driven APIs\u200a\u2014\u200aUnderstanding the Principles Category: #Type/Highlights/Article URL: https://medium.com/p/c3208308d4b2","title":"Metadata"},{"location":"Highlights/Readwise/Articles/Event-Driven%20APIs%E2%80%8A%E2%80%94%E2%80%8AUnderstanding%20the%20Principles/#highlights","text":"A Webhook is a publicly accessible HTTP POST endpoint managed by an event consumer. An event producer, such as an API server, can send event notifications to a webhook when something interesting happens.","title":"Highlights"},{"location":"Highlights/Readwise/Articles/Evernote%20and%20Todoist%20REALLY%20Getting%20Things%20Done/","text":"Evernote and Todoist: REALLY Getting Things Done \u00b6 Metadata \u00b6 Author: Full Title: Evernote and Todoist: REALLY Getting Things Done Category: #Type/Highlights/Article URL: https://nebulous.wordpress.com/2014/12/04/gtd_evernote_todoist/ Highlights \u00b6 One of the other things that I do, and recommend to everyone, is to maintain a journal to complement your productivity workflow. The reflective brain dump is a useful process as part of getting things done and I use my journal as a mechanism to reflect on the day and to identify things that I need to get done \u2013 and things I have achieved. This leads to clarity of mind, and a capture of actions that would otherwise slip through the cracks. I use Day One Classic (on my iOS devices) and Life Journal (on my Windows PC) to help me with this. for the GTD process to work for me, a few things are essential: The tool I use is ALWAYS available (online, offline, web, mobile) It should allow me to create items for follow up from email (UPDATE: this is now a premium feature \u2013 which saddens me as this was a critical feature that was downgraded) It should let me set up projects and break those down into tasks It should have the ability to establish due dates and reminders If necessary, it should let me collaborate with others An ability to help me file and tag things and also prioritize tasks Have a safe and reliable sync system across everywhere I used the tool","title":"Evernote and Todoist: REALLY Getting Things Done"},{"location":"Highlights/Readwise/Articles/Evernote%20and%20Todoist%20REALLY%20Getting%20Things%20Done/#evernote-and-todoist-really-getting-things-done","text":"","title":"Evernote and Todoist: REALLY Getting Things Done"},{"location":"Highlights/Readwise/Articles/Evernote%20and%20Todoist%20REALLY%20Getting%20Things%20Done/#metadata","text":"Author: Full Title: Evernote and Todoist: REALLY Getting Things Done Category: #Type/Highlights/Article URL: https://nebulous.wordpress.com/2014/12/04/gtd_evernote_todoist/","title":"Metadata"},{"location":"Highlights/Readwise/Articles/Evernote%20and%20Todoist%20REALLY%20Getting%20Things%20Done/#highlights","text":"One of the other things that I do, and recommend to everyone, is to maintain a journal to complement your productivity workflow. The reflective brain dump is a useful process as part of getting things done and I use my journal as a mechanism to reflect on the day and to identify things that I need to get done \u2013 and things I have achieved. This leads to clarity of mind, and a capture of actions that would otherwise slip through the cracks. I use Day One Classic (on my iOS devices) and Life Journal (on my Windows PC) to help me with this. for the GTD process to work for me, a few things are essential: The tool I use is ALWAYS available (online, offline, web, mobile) It should allow me to create items for follow up from email (UPDATE: this is now a premium feature \u2013 which saddens me as this was a critical feature that was downgraded) It should let me set up projects and break those down into tasks It should have the ability to establish due dates and reminders If necessary, it should let me collaborate with others An ability to help me file and tag things and also prioritize tasks Have a safe and reliable sync system across everywhere I used the tool","title":"Highlights"},{"location":"Highlights/Readwise/Articles/Everything%20About%20Software%20Architecture/","text":"Everything About Software Architecture \u00b6 Metadata \u00b6 Author: [[Mohit Malhotra]] Full Title: Everything About Software Architecture Category: #Type/Highlights/Article URL: https://medium.com/p/dfd2b9351ef4 Highlights \u00b6 Sinkhole Problem","title":"Everything About Software Architecture"},{"location":"Highlights/Readwise/Articles/Everything%20About%20Software%20Architecture/#everything-about-software-architecture","text":"","title":"Everything About Software Architecture"},{"location":"Highlights/Readwise/Articles/Everything%20About%20Software%20Architecture/#metadata","text":"Author: [[Mohit Malhotra]] Full Title: Everything About Software Architecture Category: #Type/Highlights/Article URL: https://medium.com/p/dfd2b9351ef4","title":"Metadata"},{"location":"Highlights/Readwise/Articles/Everything%20About%20Software%20Architecture/#highlights","text":"Sinkhole Problem","title":"Highlights"},{"location":"Highlights/Readwise/Articles/FW%20Managing%20Outcomes%20in%20a%20Remote%20Environment/","text":"FW: Managing Outcomes in a Remote Environment \u00b6 Metadata \u00b6 Author: Full Title: FW: Managing Outcomes in a Remote Environment Category: #Type/Highlights/Article Highlights \u00b6 Manage Outcomes, Not Activities You may be tempted to up the accountability by asking for daily activity reports or installing employee monitoring software. Here\u2019s a better solution: manage outcomes. Set clear expectations, then give team members the freedom to meet them on their own. Their performance will speak for itself.","title":"FW: Managing Outcomes in a Remote Environment"},{"location":"Highlights/Readwise/Articles/FW%20Managing%20Outcomes%20in%20a%20Remote%20Environment/#fw-managing-outcomes-in-a-remote-environment","text":"","title":"FW: Managing Outcomes in a Remote Environment"},{"location":"Highlights/Readwise/Articles/FW%20Managing%20Outcomes%20in%20a%20Remote%20Environment/#metadata","text":"Author: Full Title: FW: Managing Outcomes in a Remote Environment Category: #Type/Highlights/Article","title":"Metadata"},{"location":"Highlights/Readwise/Articles/FW%20Managing%20Outcomes%20in%20a%20Remote%20Environment/#highlights","text":"Manage Outcomes, Not Activities You may be tempted to up the accountability by asking for daily activity reports or installing employee monitoring software. Here\u2019s a better solution: manage outcomes. Set clear expectations, then give team members the freedom to meet them on their own. Their performance will speak for itself.","title":"Highlights"},{"location":"Highlights/Readwise/Articles/Feeling%20Overwhelmed%2033%20Productivity%20Tips%20to%20Get%20You%20Unstuck/","text":"Feeling Overwhelmed? 33 Productivity Tips to Get You Unstuck \u00b6 Metadata \u00b6 Author: [[quickbooost.com]] Full Title: Feeling Overwhelmed? 33 Productivity Tips to Get You Unstuck Category: #Type/Highlights/Article URL: https://quickbooost.com/productivity-tips/ Highlights \u00b6 Gratitude One of my favorite productivity tips for countering overwhelm is to flip it on its head. Instead of thinking why you are so annoyed and frustrated for your responsibilities, instead consider why you are grateful to have them. For example, instead of being annoyed that I had to sign contract after contract after contract, I kept reminding myself how appreciative and thankful I was to even be in this position to buy a home in the first place. That thought process transformed my anger to gratitude and helped me power through my tasks more calmly and effectively. Productivity tips: Next step Another great productivity tip that I utilized was to take one step at a time. Because when you\u2019re busy it\u2019s really easy to zoom out, look at the big picture, and panic because you have so much more to go. But instead of doing that, just take one step forward. Then another. Then another. When feeling overwhelmed, don\u2019t worry about looking up. Simply ask yourself: what is the next step that I can take right now? It will pass Time moves quickly. It may not feel that way at times, but it does move fast. So when feeling overwhelmed, use the fact that time will pass to calm yourself down, recollect, re-center, and focus on the task that needs to be worked on. And when you\u2019re working, just do the best you can. If you can\u2019t get everything done today, that\u2019s fine. There\u2019s always tomorrow. Productivity tips: Write everything down This is one of those simple productivity tips that is also incredibly powerful. Write down everything that you need to do. Because the simple act of writing will get the chaos out of your head and onto the paper where you can organize and see things clearly. Pare down Remove tasks from your list that aren\u2019t a priority. If you have too much to do but not enough time for all of them, remove items from your agenda that are low importance. Productivity tips: Single-task You\u2019re going to feel like your head is everywhere. You\u2019ll be thinking about one thing while working on another thing while talking to someone about something else. The problem with that is you won\u2019t be making progress on anything when you\u2019re working on everything. Fight the urge to multitask and focus on single tasking instead. Learn to focus on what matters and start to see real results. Utilize time management When it comes to being productive while overwhelmed, time management is your friend. Be sure to utilize it so that you are making time for what matters. Productivity tips: Create a plan for your time One of the best ways to be productive when chaos surrounds you is to have a plan for your time. A plan that prioritizes the important things and helps you make daily progress. For that, I recommend you check this out. Early riser When you have a lot to do, consider waking up a little earlier. Suspend your regular morning routine for one that allows you to get up and get to it. Here are some tips for creating a better morning routine. Productivity tips: Rest It\u2019s a bit counterintuitive, but when you\u2019re feeling overwhelmed, one productivity tip that you should consider is taking breaks as often as you can. You have a lot to do and it would make sense to keep pushing through the exhaustion, but that will only lead you to feeling more overwhelmed. Instead of going that route then, make sure to rest. Get enough sleep, step away from the computer every so often, take a nap. Resting will give you the energy you need to stay motivated and productive. Health check Similar to resting, you need to keep your overall health in check during this time too. Why? Because you are likely to feel stressed, tired, and frustrated. And if you opt for junk food and no sleep as opposed to vegetables and an eight hour slumber, you\u2019re only setting yourself up for more exhaustion the next day. Treat your body well and you will be able to sustain your productivity even while overwhelmed. Productivity tips: Problem solver Here is one of the more unique productivity tips I recommend \u2013 be a problem solver. See your overwhelm as a problem that has a solution waiting to be uncovered. If your boss puts more on your plate daily and you never feel like you can catch up, see that as a problem to be solved. Maybe that means asking for help from others or sitting down with your boss and discussing your actual responsibilities. Treat your overwhelm like a case to be solved and you will find creative solutions for it. Seriously, plan your day I touched on this earlier, but if you\u2019re feeling overwhelmed, I seriously recommend planning out your day. To help, here\u2019s my post on daily planning and my bonus post on productive planning as well. Something else you\u2019ll want to keep in mind is Parkinson\u2019s law (a real game changer) which you can learn about here. Productivity tips: Ask for help This is one of the biggest productivity tips you can utilize and is often the hardest to do\u2026 ask for help. It may not always feel like it, but people love you. People care about you. And most of all, people don\u2019t want you to struggle or suffer. In fact, they want you to thrive and succeed. So if you\u2019re feeling overwhelmed, like you\u2019re drowning in to-do\u2019s, swallow your pride and ask for help. It may feel uncomfortable at first, but if you are genuine in your request, you will find that others are more than happy to support your cause. Focus time When it comes to productivity tips at work, this one is a must. When you have a lot to do, a great way to be productive in this scenario is to let your coworkers (or roommates) know that you need uninterrupted time to focus. Explain how you\u2019re feeling and how much time you need. Then, close the door or put in your headphones, and get to work. Productivity tips: Rapid fire There are so many productivity tips to choose from. All very helpful! That said, a lot of them are pretty self explanatory. To close out the list of productivity tips then, here is a rapid fire list of tips that need no (or very little) explanation. Work: Stop thinking so much. You know what you need to do, start working. That\u2019s it. Clutter: Remove clutter from your desk to help you feel organized and less overwhelmed. Apps: Download productivity apps to streamline your workflow. Here are my favorites. Downtime: When planning your schedule, build downtime and rest into your timeline. Music: Listen to music to help you focus and stay productive. I recommend this kind. Get ready: Prepare your clothes, lunch, and plan the night before. Get ready for tomorrow so that you can wake up and get to it. Tools: Similar to apps, utilize productivity tools to help you get more done. See my post here. Meetings: When in a meeting, keep everyone on task so that time doesn\u2019t go over. Hardest task: Start your day with your hardest task first. Use your energy where it\u2019s most needed. Exercise: Similar to keeping your health in check, make sure to exercise. Doing so will reduce stress, help you sleep better, and keep you sharp and in shape. What matters: Work on what matters most. Check in on your daily goals and make sure you are working in the right direction. Learn more about daily goal setting here. System: Create a system for yourself that you can rely on again and again. For help, see my goal setting course here. Time track: Feel like you aren\u2019t getting anything done? Write down where you are spending your time so that you can actually see if you\u2019re using it wisely. Bonus: Know that everything will get done. You got this.","title":"Feeling Overwhelmed? 33 Productivity Tips to Get You Unstuck"},{"location":"Highlights/Readwise/Articles/Feeling%20Overwhelmed%2033%20Productivity%20Tips%20to%20Get%20You%20Unstuck/#feeling-overwhelmed-33-productivity-tips-to-get-you-unstuck","text":"","title":"Feeling Overwhelmed? 33 Productivity Tips to Get You Unstuck"},{"location":"Highlights/Readwise/Articles/Feeling%20Overwhelmed%2033%20Productivity%20Tips%20to%20Get%20You%20Unstuck/#metadata","text":"Author: [[quickbooost.com]] Full Title: Feeling Overwhelmed? 33 Productivity Tips to Get You Unstuck Category: #Type/Highlights/Article URL: https://quickbooost.com/productivity-tips/","title":"Metadata"},{"location":"Highlights/Readwise/Articles/Feeling%20Overwhelmed%2033%20Productivity%20Tips%20to%20Get%20You%20Unstuck/#highlights","text":"Gratitude One of my favorite productivity tips for countering overwhelm is to flip it on its head. Instead of thinking why you are so annoyed and frustrated for your responsibilities, instead consider why you are grateful to have them. For example, instead of being annoyed that I had to sign contract after contract after contract, I kept reminding myself how appreciative and thankful I was to even be in this position to buy a home in the first place. That thought process transformed my anger to gratitude and helped me power through my tasks more calmly and effectively. Productivity tips: Next step Another great productivity tip that I utilized was to take one step at a time. Because when you\u2019re busy it\u2019s really easy to zoom out, look at the big picture, and panic because you have so much more to go. But instead of doing that, just take one step forward. Then another. Then another. When feeling overwhelmed, don\u2019t worry about looking up. Simply ask yourself: what is the next step that I can take right now? It will pass Time moves quickly. It may not feel that way at times, but it does move fast. So when feeling overwhelmed, use the fact that time will pass to calm yourself down, recollect, re-center, and focus on the task that needs to be worked on. And when you\u2019re working, just do the best you can. If you can\u2019t get everything done today, that\u2019s fine. There\u2019s always tomorrow. Productivity tips: Write everything down This is one of those simple productivity tips that is also incredibly powerful. Write down everything that you need to do. Because the simple act of writing will get the chaos out of your head and onto the paper where you can organize and see things clearly. Pare down Remove tasks from your list that aren\u2019t a priority. If you have too much to do but not enough time for all of them, remove items from your agenda that are low importance. Productivity tips: Single-task You\u2019re going to feel like your head is everywhere. You\u2019ll be thinking about one thing while working on another thing while talking to someone about something else. The problem with that is you won\u2019t be making progress on anything when you\u2019re working on everything. Fight the urge to multitask and focus on single tasking instead. Learn to focus on what matters and start to see real results. Utilize time management When it comes to being productive while overwhelmed, time management is your friend. Be sure to utilize it so that you are making time for what matters. Productivity tips: Create a plan for your time One of the best ways to be productive when chaos surrounds you is to have a plan for your time. A plan that prioritizes the important things and helps you make daily progress. For that, I recommend you check this out. Early riser When you have a lot to do, consider waking up a little earlier. Suspend your regular morning routine for one that allows you to get up and get to it. Here are some tips for creating a better morning routine. Productivity tips: Rest It\u2019s a bit counterintuitive, but when you\u2019re feeling overwhelmed, one productivity tip that you should consider is taking breaks as often as you can. You have a lot to do and it would make sense to keep pushing through the exhaustion, but that will only lead you to feeling more overwhelmed. Instead of going that route then, make sure to rest. Get enough sleep, step away from the computer every so often, take a nap. Resting will give you the energy you need to stay motivated and productive. Health check Similar to resting, you need to keep your overall health in check during this time too. Why? Because you are likely to feel stressed, tired, and frustrated. And if you opt for junk food and no sleep as opposed to vegetables and an eight hour slumber, you\u2019re only setting yourself up for more exhaustion the next day. Treat your body well and you will be able to sustain your productivity even while overwhelmed. Productivity tips: Problem solver Here is one of the more unique productivity tips I recommend \u2013 be a problem solver. See your overwhelm as a problem that has a solution waiting to be uncovered. If your boss puts more on your plate daily and you never feel like you can catch up, see that as a problem to be solved. Maybe that means asking for help from others or sitting down with your boss and discussing your actual responsibilities. Treat your overwhelm like a case to be solved and you will find creative solutions for it. Seriously, plan your day I touched on this earlier, but if you\u2019re feeling overwhelmed, I seriously recommend planning out your day. To help, here\u2019s my post on daily planning and my bonus post on productive planning as well. Something else you\u2019ll want to keep in mind is Parkinson\u2019s law (a real game changer) which you can learn about here. Productivity tips: Ask for help This is one of the biggest productivity tips you can utilize and is often the hardest to do\u2026 ask for help. It may not always feel like it, but people love you. People care about you. And most of all, people don\u2019t want you to struggle or suffer. In fact, they want you to thrive and succeed. So if you\u2019re feeling overwhelmed, like you\u2019re drowning in to-do\u2019s, swallow your pride and ask for help. It may feel uncomfortable at first, but if you are genuine in your request, you will find that others are more than happy to support your cause. Focus time When it comes to productivity tips at work, this one is a must. When you have a lot to do, a great way to be productive in this scenario is to let your coworkers (or roommates) know that you need uninterrupted time to focus. Explain how you\u2019re feeling and how much time you need. Then, close the door or put in your headphones, and get to work. Productivity tips: Rapid fire There are so many productivity tips to choose from. All very helpful! That said, a lot of them are pretty self explanatory. To close out the list of productivity tips then, here is a rapid fire list of tips that need no (or very little) explanation. Work: Stop thinking so much. You know what you need to do, start working. That\u2019s it. Clutter: Remove clutter from your desk to help you feel organized and less overwhelmed. Apps: Download productivity apps to streamline your workflow. Here are my favorites. Downtime: When planning your schedule, build downtime and rest into your timeline. Music: Listen to music to help you focus and stay productive. I recommend this kind. Get ready: Prepare your clothes, lunch, and plan the night before. Get ready for tomorrow so that you can wake up and get to it. Tools: Similar to apps, utilize productivity tools to help you get more done. See my post here. Meetings: When in a meeting, keep everyone on task so that time doesn\u2019t go over. Hardest task: Start your day with your hardest task first. Use your energy where it\u2019s most needed. Exercise: Similar to keeping your health in check, make sure to exercise. Doing so will reduce stress, help you sleep better, and keep you sharp and in shape. What matters: Work on what matters most. Check in on your daily goals and make sure you are working in the right direction. Learn more about daily goal setting here. System: Create a system for yourself that you can rely on again and again. For help, see my goal setting course here. Time track: Feel like you aren\u2019t getting anything done? Write down where you are spending your time so that you can actually see if you\u2019re using it wisely. Bonus: Know that everything will get done. You got this.","title":"Highlights"},{"location":"Highlights/Readwise/Articles/Finishing%20Strong%20Part%201%20Run%20a%20Victory%20Lap/","text":"Finishing Strong Part 1: Run a Victory Lap \u00b6 Metadata \u00b6 Author: [[Charlie Gilkey]] Full Title: Finishing Strong Part 1: Run a Victory Lap Category: #Type/Highlights/Article URL: https://feedly.com/i/entry/d4UeDsw6o7c52AhcP1SziyOM7sQPVaBTOJSjij0oNtE=_176aa91deb5:fcfbb9:7edf6590 Highlights \u00b6 Whether it\u2019s a tough project, a tough race, or a tough year, there\u2019s nothing quite like the feeling of taking a victory lap and crossing the finish line. It\u2019s an exhilarating rush of ecstasy, relief, surprise, and pride. You have to lose yourself in the project only to find you\u2019re a different person on the other side \u2014 for as we create, we\u2019re creating ourselves. Near the end of our convoy missions, we\u2019d cross out of Iraq and back into Kuwait. About twenty minutes after crossing the border, there was a collective, palpable sense of relief, pride, and gratitude among our soldiers. Jokes would start, inane radio chatter would need to be squelched, and parts you didn\u2019t know could clench would loosen up. We weren\u2019t done, but we at least could do it by the numbers. It was then that I knew that I wouldn\u2019t be writing any letters to family members or be a chew toy for the brass back at base.","title":"Finishing Strong Part 1: Run a Victory Lap"},{"location":"Highlights/Readwise/Articles/Finishing%20Strong%20Part%201%20Run%20a%20Victory%20Lap/#finishing-strong-part-1-run-a-victory-lap","text":"","title":"Finishing Strong Part 1: Run a Victory Lap"},{"location":"Highlights/Readwise/Articles/Finishing%20Strong%20Part%201%20Run%20a%20Victory%20Lap/#metadata","text":"Author: [[Charlie Gilkey]] Full Title: Finishing Strong Part 1: Run a Victory Lap Category: #Type/Highlights/Article URL: https://feedly.com/i/entry/d4UeDsw6o7c52AhcP1SziyOM7sQPVaBTOJSjij0oNtE=_176aa91deb5:fcfbb9:7edf6590","title":"Metadata"},{"location":"Highlights/Readwise/Articles/Finishing%20Strong%20Part%201%20Run%20a%20Victory%20Lap/#highlights","text":"Whether it\u2019s a tough project, a tough race, or a tough year, there\u2019s nothing quite like the feeling of taking a victory lap and crossing the finish line. It\u2019s an exhilarating rush of ecstasy, relief, surprise, and pride. You have to lose yourself in the project only to find you\u2019re a different person on the other side \u2014 for as we create, we\u2019re creating ourselves. Near the end of our convoy missions, we\u2019d cross out of Iraq and back into Kuwait. About twenty minutes after crossing the border, there was a collective, palpable sense of relief, pride, and gratitude among our soldiers. Jokes would start, inane radio chatter would need to be squelched, and parts you didn\u2019t know could clench would loosen up. We weren\u2019t done, but we at least could do it by the numbers. It was then that I knew that I wouldn\u2019t be writing any letters to family members or be a chew toy for the brass back at base.","title":"Highlights"},{"location":"Highlights/Readwise/Articles/First%20Principles%20of%20Workflow%20Design%20%28A%202-Part%20Episode%29%20%20RadReads/","text":"First Principles of Workflow Design (A 2-Part Episode) | RadReads \u00b6 Metadata \u00b6 Author: [[Khe Hy]] Full Title: First Principles of Workflow Design (A 2-Part Episode) | RadReads Category: #Type/Highlights/Article URL: https://radreads.co/productivity-workflow-and-pkm-design-with-tiago-forte-and-khe-hy-325783bb3ea2/ Highlights \u00b6 Tiago\u2019s First Principles of Workflow Finishing every work session with a clear deliverable or milestone Optimize for intensity (via time tracking) All priorities are local Go to extremes of sociability or isolation Document everything Make pivots to new tasks or working styles as dramatic as possible Push non-value added tasks as late as possible and pull value-added tasks as early as possible Satisfice wherever possible Don\u2019t reinvent the wheel, don\u2019t do things\u200a\u2014\u200alook for excuses to do things Getting out of bed in the morning is always the first bottleneck Tiago\u2019s Toolkit For task management: Things For knowledge management and general reference material: Evernote For reading things later: Instapaper For collaborative documents: Google Docs For filesharing / backup: DropBox For digital calendar: BusyCal Khe\u2019s First Principles Limit cognitive overhead Beware of asymmetric options Deep Work Batch tasks (and single-task) Manage energy over time Khe\u2019s Toolkit For task management: Omnifocus For knowledge management and general reference material: Evernote For reading things later: Instapaper For collaborative documents: Quip For filesharing / backup: DropBox For digital calendar: Fantastical Tiago Workflow Deep-Dive Principle 1: Finishing every work session with a clear deliverable or milestone Why? Because high-value work has a huge of the ramp-up period. If you complete 90% of a deliverable, and say you\u2019ll \u201cdo the last 10% later\u201d, you have to ramp all the way up again just to finish the last 10%. Khe: \u201cBut what if it\u2019s a BIG problem that\u2019s taking you a long time?\u201d \u201cMake packets of work small\u201d If your packets of work are 3 hours, you won\u2019t accomplish anything unless you you have 3 uninterrupted hours\u200a\u2014\u200aAnd this is rare. Instead: you make your packets of work smaller (i.e. 30 minutes), you\u2019ll be able to get things done anytime you have 30 minutes. \u23f1\u23f1\u23f1 Khe: \u201cWhat if your task NEEDS cognitive momentum and takes longer than 30 minutes?\u201d \u201cWhat really creates momentum is an accelerating pace of rewards. Break down work into smaller and smaller packets, to create an accelerating pace of rewards Momentum in knowledge work isn\u2019t like momentum in horseback riding \ud83d\udc0e or running \ud83c\udfc3where you see the trees \ud83c\udf32\ud83c\udf32 as you pass by. Momentum is completely defined internally by how you feel. Here\u2019s a blog post by Tiago on the topic: Mood as Extrapolation Engine: Using Emotions to Generate Momentum I believe that moods (or less colloquially, states of mind) can be used not just defensively, making the best of\u2026praxis.fortelabs.co Principle 2: Optimize for intensity (via ACTIVE time tracking) \u201cYou must actively track your time. The point is deliberate awareness of your time allocation, not data collection.\u201d To actively track your time, you\u2019d say \u201cI am now done with project A, I consciously open my app to clock out of project A, and consciously clock into project B\u201d Tiago prefers an app like Hours Tracker, where you clock in and out, as opposed to RescueTime, that passively tracks your activity. Time Tracking Pro tip: there are all kind of issues with time tracking. Don\u2019t miss the forest through the trees\u200a\u2014\u200ait\u2019s not an exact science. The \ud83d\udd11 is to be aware and consistent in how you track. Principle 3: All Priorities are Local What does it mean? look for \u201cexcuses\u201d to do things. Change the order of your priorities based on context. In productivity, priorities are a BIG deal. You\u2019re supposed to make a list of priorities #1 through #10, and then cross out #2\u200a\u2014\u200a#10 and do #1. But this ignores an important point. The priority # of something is totally context-dependent. It\u2019s not an inherent property of the thing itself. It\u2018s based what I\u2019m trying to accomplish. If it can go on Evernote, it should. We need Multiple ways to resurface things. Because the mind is so good at making arbitrary connections. Tiago has an \u201cIdea Tickler\u201d that he uses instead of checking social media. You\u2019re tapping into human idea to want novelty and distraction. Don\u2019t treat this desire like a moral failure, use it to your advantage! Text expanders Text expanders have quite valuable to Tiago. A text expander = when you type a keyword (such as: #p ) it replaces that text with your phone number. People use them all the time time on mobile, but Tiago believes the most valuable is on desktop. [computer emoji] There are a few different options for text expanders: TextExpander aText Typinator Dash 3 TypeIt4me Keyboard Maestro Alfred 3 DIY in \u201cSystem Preferences","title":"First Principles of Workflow Design (A 2-Part Episode) | RadReads"},{"location":"Highlights/Readwise/Articles/First%20Principles%20of%20Workflow%20Design%20%28A%202-Part%20Episode%29%20%20RadReads/#first-principles-of-workflow-design-a-2-part-episode-radreads","text":"","title":"First Principles of Workflow Design (A 2-Part Episode) | RadReads"},{"location":"Highlights/Readwise/Articles/First%20Principles%20of%20Workflow%20Design%20%28A%202-Part%20Episode%29%20%20RadReads/#metadata","text":"Author: [[Khe Hy]] Full Title: First Principles of Workflow Design (A 2-Part Episode) | RadReads Category: #Type/Highlights/Article URL: https://radreads.co/productivity-workflow-and-pkm-design-with-tiago-forte-and-khe-hy-325783bb3ea2/","title":"Metadata"},{"location":"Highlights/Readwise/Articles/First%20Principles%20of%20Workflow%20Design%20%28A%202-Part%20Episode%29%20%20RadReads/#highlights","text":"Tiago\u2019s First Principles of Workflow Finishing every work session with a clear deliverable or milestone Optimize for intensity (via time tracking) All priorities are local Go to extremes of sociability or isolation Document everything Make pivots to new tasks or working styles as dramatic as possible Push non-value added tasks as late as possible and pull value-added tasks as early as possible Satisfice wherever possible Don\u2019t reinvent the wheel, don\u2019t do things\u200a\u2014\u200alook for excuses to do things Getting out of bed in the morning is always the first bottleneck Tiago\u2019s Toolkit For task management: Things For knowledge management and general reference material: Evernote For reading things later: Instapaper For collaborative documents: Google Docs For filesharing / backup: DropBox For digital calendar: BusyCal Khe\u2019s First Principles Limit cognitive overhead Beware of asymmetric options Deep Work Batch tasks (and single-task) Manage energy over time Khe\u2019s Toolkit For task management: Omnifocus For knowledge management and general reference material: Evernote For reading things later: Instapaper For collaborative documents: Quip For filesharing / backup: DropBox For digital calendar: Fantastical Tiago Workflow Deep-Dive Principle 1: Finishing every work session with a clear deliverable or milestone Why? Because high-value work has a huge of the ramp-up period. If you complete 90% of a deliverable, and say you\u2019ll \u201cdo the last 10% later\u201d, you have to ramp all the way up again just to finish the last 10%. Khe: \u201cBut what if it\u2019s a BIG problem that\u2019s taking you a long time?\u201d \u201cMake packets of work small\u201d If your packets of work are 3 hours, you won\u2019t accomplish anything unless you you have 3 uninterrupted hours\u200a\u2014\u200aAnd this is rare. Instead: you make your packets of work smaller (i.e. 30 minutes), you\u2019ll be able to get things done anytime you have 30 minutes. \u23f1\u23f1\u23f1 Khe: \u201cWhat if your task NEEDS cognitive momentum and takes longer than 30 minutes?\u201d \u201cWhat really creates momentum is an accelerating pace of rewards. Break down work into smaller and smaller packets, to create an accelerating pace of rewards Momentum in knowledge work isn\u2019t like momentum in horseback riding \ud83d\udc0e or running \ud83c\udfc3where you see the trees \ud83c\udf32\ud83c\udf32 as you pass by. Momentum is completely defined internally by how you feel. Here\u2019s a blog post by Tiago on the topic: Mood as Extrapolation Engine: Using Emotions to Generate Momentum I believe that moods (or less colloquially, states of mind) can be used not just defensively, making the best of\u2026praxis.fortelabs.co Principle 2: Optimize for intensity (via ACTIVE time tracking) \u201cYou must actively track your time. The point is deliberate awareness of your time allocation, not data collection.\u201d To actively track your time, you\u2019d say \u201cI am now done with project A, I consciously open my app to clock out of project A, and consciously clock into project B\u201d Tiago prefers an app like Hours Tracker, where you clock in and out, as opposed to RescueTime, that passively tracks your activity. Time Tracking Pro tip: there are all kind of issues with time tracking. Don\u2019t miss the forest through the trees\u200a\u2014\u200ait\u2019s not an exact science. The \ud83d\udd11 is to be aware and consistent in how you track. Principle 3: All Priorities are Local What does it mean? look for \u201cexcuses\u201d to do things. Change the order of your priorities based on context. In productivity, priorities are a BIG deal. You\u2019re supposed to make a list of priorities #1 through #10, and then cross out #2\u200a\u2014\u200a#10 and do #1. But this ignores an important point. The priority # of something is totally context-dependent. It\u2019s not an inherent property of the thing itself. It\u2018s based what I\u2019m trying to accomplish. If it can go on Evernote, it should. We need Multiple ways to resurface things. Because the mind is so good at making arbitrary connections. Tiago has an \u201cIdea Tickler\u201d that he uses instead of checking social media. You\u2019re tapping into human idea to want novelty and distraction. Don\u2019t treat this desire like a moral failure, use it to your advantage! Text expanders Text expanders have quite valuable to Tiago. A text expander = when you type a keyword (such as: #p ) it replaces that text with your phone number. People use them all the time time on mobile, but Tiago believes the most valuable is on desktop. [computer emoji] There are a few different options for text expanders: TextExpander aText Typinator Dash 3 TypeIt4me Keyboard Maestro Alfred 3 DIY in \u201cSystem Preferences","title":"Highlights"},{"location":"Highlights/Readwise/Articles/Five%20Tidyverse%20Tricks%20You%20May%20Not%20Know%20About/","text":"Five Tidyverse Tricks You May Not Know About \u00b6 Metadata \u00b6 Author: [[Keith McNulty]] Full Title: Five Tidyverse Tricks You May Not Know About Category: #Type/Highlights/Article URL: https://medium.com/p/c5026d5a19da Highlights \u00b6 Both of these updates took advantage of major new innovations in the R ecosystem, including updates in rlang, vctrs and glue among others. pivot_longer() and pivot_wider() to better manage and control transformations of dataframes from wide to long form - one of the most common data-wrangling tasks. Replacing gather() and spread(), these new functions introduced more capability to manage the specifics of the transformation, cutting time for users in terms of how they tailor their outputs. introduction of across() and c_across() as adverbs to be used with summarise() and mutate() simplified the number of scoped variants that users needed to work with and, like the tidyr changes, allowed greater control of what the output looked like.","title":"Five Tidyverse Tricks You May Not Know About"},{"location":"Highlights/Readwise/Articles/Five%20Tidyverse%20Tricks%20You%20May%20Not%20Know%20About/#five-tidyverse-tricks-you-may-not-know-about","text":"","title":"Five Tidyverse Tricks You May Not Know About"},{"location":"Highlights/Readwise/Articles/Five%20Tidyverse%20Tricks%20You%20May%20Not%20Know%20About/#metadata","text":"Author: [[Keith McNulty]] Full Title: Five Tidyverse Tricks You May Not Know About Category: #Type/Highlights/Article URL: https://medium.com/p/c5026d5a19da","title":"Metadata"},{"location":"Highlights/Readwise/Articles/Five%20Tidyverse%20Tricks%20You%20May%20Not%20Know%20About/#highlights","text":"Both of these updates took advantage of major new innovations in the R ecosystem, including updates in rlang, vctrs and glue among others. pivot_longer() and pivot_wider() to better manage and control transformations of dataframes from wide to long form - one of the most common data-wrangling tasks. Replacing gather() and spread(), these new functions introduced more capability to manage the specifics of the transformation, cutting time for users in terms of how they tailor their outputs. introduction of across() and c_across() as adverbs to be used with summarise() and mutate() simplified the number of scoped variants that users needed to work with and, like the tidyr changes, allowed greater control of what the output looked like.","title":"Highlights"},{"location":"Highlights/Readwise/Articles/GTD%20Reference%20The%20Best%20Filing%20System%20for%20Busy%20Lives%20%20Shortform%20Books/","text":"GTD Reference: The Best Filing System for Busy Lives | Shortform Books \u00b6 Metadata \u00b6 Author: [[shortform.com]] Full Title: GTD Reference: The Best Filing System for Busy Lives | Shortform Books Category: #Type/Highlights/Article Document Tags: [[Liked]] URL: https://www.shortform.com/blog/best-filing-system-getting-things-done/#:~:text=The%20GTD%20reference%20system%20is%20the%20best%20filing,next%20action%20Know%20when%20you%E2%80%99ve%20completed%20a%20project Highlights \u00b6 The best filing system is vital for success, according to David Allen in Getting Things Done. The GTD reference filing system is the best filing system if you want to keep your to-do list short, and make sure you\u2019re prioritizing tasks. ( View Highlight ) A well-organized, easy-to-navigate filing system is essential. The GTD reference filing system may be the best filing system for you. ( View Highlight ) Create a filing system that\u2019s quick and easy to use to make it as easy as possible for you to clear your in-tray and keep your whole organization system running smoothly. If it\u2019s clunky and unappealing, you\u2019re likely to put it off and end up with papers stacked in the wrong places, clogging up your workflow. ( View Highlight ) Keep a functional general-reference file, which can hold instruction manuals, brochures, articles, membership cards, flash drives, even foreign currency you want to keep for your next trip. If you don\u2019t have a place for documents that aren\u2019t actionable but that contain information you might need later, they\u2019ll clutter up your workspace and your mind, making it hard to keep up with the system. ( View Highlight ) Here are some tips to create the best filing system and make your filing system a success: ( View Highlight ) Keep your general-reference files within arm\u2019s reach. An easy and accessible system encourages you to keep up with it and file documents away before they pile up in your in-tray. ( View Highlight ) Keep extra file folders on hand. Eliminate any roadblocks to filing, so if you have something that doesn\u2019t fit in an existing file, make a file on the spot and keep things moving. ( View Highlight ) Use your labeler to label files. The uniformity is aesthetically pleasing and makes the GTD reference filing system easier to use. ( View Highlight ) Alphabetize your files. Instead of organizing files by subject or project, keep them in alphabetical order for simplicity and to minimize the chance that you won\u2019t remember where something is when you\u2019re looking for it. ( View Highlight ) Don\u2019t overstuff your filing cabinet. Try to keep your file drawer from getting more than three-quarters full. You\u2019ll be less inclined to file if it\u2019s overflowing. If you have to buy another filing cabinet, first see if you have any files you can purge and then accept that if things are worth keeping, they\u2019re worth keeping organized. ( View Highlight ) Comb through files and purge once a year. Regularly purging your files has two benefits: First, it keeps things clean, current, and organized. Second, you can feel comfortable keeping and filing documents that you\u2019re not sure you\u2019ll need, because you\u2019ll have the chance to reassess during your annual purge. (It may be helpful to put a reminder for your yearly purge day on your calendar or in your tickler file.) ( View Highlight ) Reference materials don\u2019t require any specific action but might be useful to have on hand in the future\u2014whether it\u2019s menus from your favorite food delivery spot or a list of contacts for members of the committee you chair. You can use the GTD reference system for these files. ( View Highlight ) There are two types of GTD reference systems: Subject-specific, which means you\u2019ll have one folder or one filing cabinet dedicated to one type of document (e.g. past contracts you may need for future reference). General reference, which is the catch-all for anything that doesn\u2019t fall into a specific category. It\u2019s critical that you have an easily accessible, well-organized general reference file so that those random notes and documents don\u2019t end up in a pile that overwhelms you\u2014undermining the whole system\u2014or you inadvertently bury actionable items. ( View Highlight ) Projects List and Project Support Materials File The GTD program defines projects as anything that takes more than one step and can be completed within a year. That includes everything from enrolling your kid in school to planting your garden to learning new software at work. The GTD reference system is the best filing system to help you keep track of projects and lists. Since projects require multiple steps to complete, the Projects list helps you keep track of the outcomes or finish lines for each one so that you can: Regularly determine the appropriate next action Know when you\u2019ve completed a project ( View Highlight ) You\u2019ll probably accumulate support materials\u2014such as research, invoices, and other documents\u2014for many projects. Organize these by project or topic and keep them in separate files; your Projects list merely serves as an index of these files. ( View Highlight ) You can keep your files of support materials with your reference files in the GTD reference system or in a more accessible location if you\u2019re working on a project that calls for you to consult your support materials several times a day. Whatever your system, keep it as simple as possible in your office filing system. ( View Highlight ) Waiting For List Many of your projects will include steps that require someone else\u2019s input or action before you can take your next action. Any time you\u2019re waiting on someone, add the item to your Waiting For list so you can keep track of everything and follow up when necessary in your office filing system. Additionally, if you\u2019re invested in the outcome of an item you\u2019ve delegated to someone else, add that item to your Waiting For list. The best filing system is subjective, but the GTD reference filing system offers order, organization, and mental clarity. What\u2019s important is finding the best filing system for you. ( View Highlight )","title":"GTD Reference: The Best Filing System for Busy Lives | Shortform Books"},{"location":"Highlights/Readwise/Articles/GTD%20Reference%20The%20Best%20Filing%20System%20for%20Busy%20Lives%20%20Shortform%20Books/#gtd-reference-the-best-filing-system-for-busy-lives-shortform-books","text":"","title":"GTD Reference: The Best Filing System for Busy Lives | Shortform Books"},{"location":"Highlights/Readwise/Articles/GTD%20Reference%20The%20Best%20Filing%20System%20for%20Busy%20Lives%20%20Shortform%20Books/#metadata","text":"Author: [[shortform.com]] Full Title: GTD Reference: The Best Filing System for Busy Lives | Shortform Books Category: #Type/Highlights/Article Document Tags: [[Liked]] URL: https://www.shortform.com/blog/best-filing-system-getting-things-done/#:~:text=The%20GTD%20reference%20system%20is%20the%20best%20filing,next%20action%20Know%20when%20you%E2%80%99ve%20completed%20a%20project","title":"Metadata"},{"location":"Highlights/Readwise/Articles/GTD%20Reference%20The%20Best%20Filing%20System%20for%20Busy%20Lives%20%20Shortform%20Books/#highlights","text":"The best filing system is vital for success, according to David Allen in Getting Things Done. The GTD reference filing system is the best filing system if you want to keep your to-do list short, and make sure you\u2019re prioritizing tasks. ( View Highlight ) A well-organized, easy-to-navigate filing system is essential. The GTD reference filing system may be the best filing system for you. ( View Highlight ) Create a filing system that\u2019s quick and easy to use to make it as easy as possible for you to clear your in-tray and keep your whole organization system running smoothly. If it\u2019s clunky and unappealing, you\u2019re likely to put it off and end up with papers stacked in the wrong places, clogging up your workflow. ( View Highlight ) Keep a functional general-reference file, which can hold instruction manuals, brochures, articles, membership cards, flash drives, even foreign currency you want to keep for your next trip. If you don\u2019t have a place for documents that aren\u2019t actionable but that contain information you might need later, they\u2019ll clutter up your workspace and your mind, making it hard to keep up with the system. ( View Highlight ) Here are some tips to create the best filing system and make your filing system a success: ( View Highlight ) Keep your general-reference files within arm\u2019s reach. An easy and accessible system encourages you to keep up with it and file documents away before they pile up in your in-tray. ( View Highlight ) Keep extra file folders on hand. Eliminate any roadblocks to filing, so if you have something that doesn\u2019t fit in an existing file, make a file on the spot and keep things moving. ( View Highlight ) Use your labeler to label files. The uniformity is aesthetically pleasing and makes the GTD reference filing system easier to use. ( View Highlight ) Alphabetize your files. Instead of organizing files by subject or project, keep them in alphabetical order for simplicity and to minimize the chance that you won\u2019t remember where something is when you\u2019re looking for it. ( View Highlight ) Don\u2019t overstuff your filing cabinet. Try to keep your file drawer from getting more than three-quarters full. You\u2019ll be less inclined to file if it\u2019s overflowing. If you have to buy another filing cabinet, first see if you have any files you can purge and then accept that if things are worth keeping, they\u2019re worth keeping organized. ( View Highlight ) Comb through files and purge once a year. Regularly purging your files has two benefits: First, it keeps things clean, current, and organized. Second, you can feel comfortable keeping and filing documents that you\u2019re not sure you\u2019ll need, because you\u2019ll have the chance to reassess during your annual purge. (It may be helpful to put a reminder for your yearly purge day on your calendar or in your tickler file.) ( View Highlight ) Reference materials don\u2019t require any specific action but might be useful to have on hand in the future\u2014whether it\u2019s menus from your favorite food delivery spot or a list of contacts for members of the committee you chair. You can use the GTD reference system for these files. ( View Highlight ) There are two types of GTD reference systems: Subject-specific, which means you\u2019ll have one folder or one filing cabinet dedicated to one type of document (e.g. past contracts you may need for future reference). General reference, which is the catch-all for anything that doesn\u2019t fall into a specific category. It\u2019s critical that you have an easily accessible, well-organized general reference file so that those random notes and documents don\u2019t end up in a pile that overwhelms you\u2014undermining the whole system\u2014or you inadvertently bury actionable items. ( View Highlight ) Projects List and Project Support Materials File The GTD program defines projects as anything that takes more than one step and can be completed within a year. That includes everything from enrolling your kid in school to planting your garden to learning new software at work. The GTD reference system is the best filing system to help you keep track of projects and lists. Since projects require multiple steps to complete, the Projects list helps you keep track of the outcomes or finish lines for each one so that you can: Regularly determine the appropriate next action Know when you\u2019ve completed a project ( View Highlight ) You\u2019ll probably accumulate support materials\u2014such as research, invoices, and other documents\u2014for many projects. Organize these by project or topic and keep them in separate files; your Projects list merely serves as an index of these files. ( View Highlight ) You can keep your files of support materials with your reference files in the GTD reference system or in a more accessible location if you\u2019re working on a project that calls for you to consult your support materials several times a day. Whatever your system, keep it as simple as possible in your office filing system. ( View Highlight ) Waiting For List Many of your projects will include steps that require someone else\u2019s input or action before you can take your next action. Any time you\u2019re waiting on someone, add the item to your Waiting For list so you can keep track of everything and follow up when necessary in your office filing system. Additionally, if you\u2019re invested in the outcome of an item you\u2019ve delegated to someone else, add that item to your Waiting For list. The best filing system is subjective, but the GTD reference filing system offers order, organization, and mental clarity. What\u2019s important is finding the best filing system for you. ( View Highlight )","title":"Highlights"},{"location":"Highlights/Readwise/Articles/GTD%20Refresh%2C%20Part%205%20Building%20the%20Weekly%20Review%20Habit/","text":"GTD Refresh, Part 5: Building the Weekly Review Habit \u00b6 Metadata \u00b6 Author: [[lifehack.org]] Full Title: GTD Refresh, Part 5: Building the Weekly Review Habit Category: #Type/Highlights/Article URL: https://www.lifehack.org/articles/featured/gtd-refresh-part-5-building-the-weekly-review-habit.html Highlights \u00b6 Most important because this couple of hours of \u201ctime out\u201d once a week is where virtually all the GTD magic happens \u2013 it\u2019s where we make sure everything\u2019s out of our heads and in our trusted system, so we can use our brains for doing Good Stuff instead of nagging us about the Good Stuff we should be doing. Most difficult because\u2026 well, I have my theories. ( View Highlight ) First of all, weekly reviews are hard because it is simply difficult, in a practical sense, to take an hour or two off and focus on the bigger picture. This difficulty is compounded by psychological factors \u2013 for one thing, most of us feel our moment-to-moment involvement in our work is essential, and if we\u2019re not actually working on work \u2013 even busy work \u2013 we fear things will fall apart. For another thing, spending a couple hours thinking about our work doesn\u2019t feel like work \u2013 it can take some time to get into our heads that this \u201cmeta-work\u201d is an important part of our work as a whole. ( View Highlight ) you can\u2019t build a trusted system without trusting yourself! ( View Highlight ) I\u2019ve added a list of Areas of Focus to my setup, the idea being that not only do I generate tasks from my list of projects, but I generate projects and tasks from my Areas of Focus list. This should help me keep on track, since a) it\u2019s something I don\u2019t do in my \u201cmini-reviews\u201d, and b) it leads into the \u201clooking forward\u201d part of the weekly review, which is the part that I think scares me (and others) off. ( View Highlight ) That leaves, of course, the practical concern of scheduling the time in. Fridays are a natural for me, since I rarely work on Fridays \u2013 but although I\u2019ve been doing Friday weekly reviews for the last couple weeks, I\u2019m thinking Mondays might be better, since they put me \u201ccloser to the action\u201d \u2013 I have a better idea of what\u2019s going on around me at the beginning of the week than I do guessing what might be going on at the end of the previous week. ( View Highlight ) As I said at the beginning of this post, weekly reviews are important \u2013 rather than being a drain on your available work time, done right the weekly review should add not only to your work time but your confidence and calmness about doing that work ( View Highlight ) a weekly review is a point of connection between you and your work ( View Highlight ) A weekly review is about task management and scheduling, but it\u2019s also about reconnecting with our work in a personal way, evaluating our work in terms of higher-purpose goals and life objectives, aligning the work we do today with the dreams we have of tomorrow. We aren\u2019t afforded many moments like that in life, so it\u2019s important that we create them for ourselves. ( View Highlight )","title":"GTD Refresh, Part 5: Building the Weekly Review Habit"},{"location":"Highlights/Readwise/Articles/GTD%20Refresh%2C%20Part%205%20Building%20the%20Weekly%20Review%20Habit/#gtd-refresh-part-5-building-the-weekly-review-habit","text":"","title":"GTD Refresh, Part 5: Building the Weekly Review Habit"},{"location":"Highlights/Readwise/Articles/GTD%20Refresh%2C%20Part%205%20Building%20the%20Weekly%20Review%20Habit/#metadata","text":"Author: [[lifehack.org]] Full Title: GTD Refresh, Part 5: Building the Weekly Review Habit Category: #Type/Highlights/Article URL: https://www.lifehack.org/articles/featured/gtd-refresh-part-5-building-the-weekly-review-habit.html","title":"Metadata"},{"location":"Highlights/Readwise/Articles/GTD%20Refresh%2C%20Part%205%20Building%20the%20Weekly%20Review%20Habit/#highlights","text":"Most important because this couple of hours of \u201ctime out\u201d once a week is where virtually all the GTD magic happens \u2013 it\u2019s where we make sure everything\u2019s out of our heads and in our trusted system, so we can use our brains for doing Good Stuff instead of nagging us about the Good Stuff we should be doing. Most difficult because\u2026 well, I have my theories. ( View Highlight ) First of all, weekly reviews are hard because it is simply difficult, in a practical sense, to take an hour or two off and focus on the bigger picture. This difficulty is compounded by psychological factors \u2013 for one thing, most of us feel our moment-to-moment involvement in our work is essential, and if we\u2019re not actually working on work \u2013 even busy work \u2013 we fear things will fall apart. For another thing, spending a couple hours thinking about our work doesn\u2019t feel like work \u2013 it can take some time to get into our heads that this \u201cmeta-work\u201d is an important part of our work as a whole. ( View Highlight ) you can\u2019t build a trusted system without trusting yourself! ( View Highlight ) I\u2019ve added a list of Areas of Focus to my setup, the idea being that not only do I generate tasks from my list of projects, but I generate projects and tasks from my Areas of Focus list. This should help me keep on track, since a) it\u2019s something I don\u2019t do in my \u201cmini-reviews\u201d, and b) it leads into the \u201clooking forward\u201d part of the weekly review, which is the part that I think scares me (and others) off. ( View Highlight ) That leaves, of course, the practical concern of scheduling the time in. Fridays are a natural for me, since I rarely work on Fridays \u2013 but although I\u2019ve been doing Friday weekly reviews for the last couple weeks, I\u2019m thinking Mondays might be better, since they put me \u201ccloser to the action\u201d \u2013 I have a better idea of what\u2019s going on around me at the beginning of the week than I do guessing what might be going on at the end of the previous week. ( View Highlight ) As I said at the beginning of this post, weekly reviews are important \u2013 rather than being a drain on your available work time, done right the weekly review should add not only to your work time but your confidence and calmness about doing that work ( View Highlight ) a weekly review is a point of connection between you and your work ( View Highlight ) A weekly review is about task management and scheduling, but it\u2019s also about reconnecting with our work in a personal way, evaluating our work in terms of higher-purpose goals and life objectives, aligning the work we do today with the dreams we have of tomorrow. We aren\u2019t afforded many moments like that in life, so it\u2019s important that we create them for ourselves. ( View Highlight )","title":"Highlights"},{"location":"Highlights/Readwise/Articles/GTD%20With%20Todoist%2C%20Evernote%20and%20Google%20Calendar%20%20Dr%20Veronika%20CH/","text":"GTD With Todoist, Evernote and Google Calendar | Dr Veronika CH \u00b6 Metadata \u00b6 Author: Full Title: GTD With Todoist, Evernote and Google Calendar | Dr Veronika CH Category: #Type/Highlights/Article URL: https://veronikach.com/habits-productivity/how-im-implementing-gtd-with-todoist-evernote-and-google-calendar-part-1/ Highlights \u00b6 The goals of the system are to keep me focused on important projects, but not forget everything else give me insight into how much I\u2019ve already done not overschedule my time / say no more often not get overwhelmed by everything that needs to be done eliminate decisions on what to do next Rather than the five steps of GTD, I see my system as just two steps: capture and organize. Capture everything I have never really had problems with forgetting to do something I promised, failing to start a project on time, or missing a deadline. So when I read GTD, the \u201ccapture everything\u201d idea seemed a bit unnecessary. But it has been a life changer! My rule is: as soon as I think of something I (might) need or want to do in the future, no matter how vague it is, I have to capture it in Todoist or Evernote immediately. I tend to use Todoist for actions I\u2019m quite sure I will do, like: send a reminder to a collaborator upload my recent paper to arXiV buy printer paper Evernote, on the other hand, is for ideas and \u201cmaybe\u201d actions: idea for a project around the house an article I want to read a piece of advice I want to remember The most important thing, however, is to just choose one of the two and not spend too long thinking about it. The capturing must happen as soon as possible, so I tend to only add a keyword or two, and then organize later Quick access widgets on my phone Both Todoist and Evernote have awesome widgets for your phone I use these widgets extensively when I\u2019m walking somewhere, doing things around the house, and in conversations where I wouldn\u2019t normally be taking notes. For example, I\u2019ve started doing this with all sorts of recommendations from others, for example for podcasts. In work meetings I actually tend to use pen and paper because I write faster and I don\u2019t want to use my phone the whole time. Then I transfer everything into Todoist/Evernote as soon as I\u2019m in my office again. Todoist plugin for Gmail A trap that\u2019s easy to fall into is to let your email dictate your day. Most emails have some todos associated with them, and it\u2019s tempting to handle these first, before starting \u201creal work\u201d. Not anymore with Todoist plugin for Gmail. This plugin adds a button which lets you create a todo from an email. I do this for two types of emails \u2013 emails that will need time to respond to, and emails I need to follow up on. As an example of emails that need time to respond to, I\u2019m using a reminder email to complete my reviews for a conference (I had returned the reviews already at that point). Since I wouldn\u2019t necessarily be able to do this when I received the email, I would create a todo out of it by clicking the Todoist button (right of the Labels button). This opens up a Todoist window, which already has the email\u2019s subject (as description) filled in, and possibly dates that might be involved. The subject is automatically used as a description Once I add the todo, I archive the email! This archiving was scary at first, but this goes away with time. Another way I use this plugin is for emails I need to follow-up on Email forwarding to Evernote If an email contains some information I might want to use, but I\u2019m not sure exactly when I will need it, I forward it to Evernote. Some examples: Procedures on how to do something, e.g. filling in reimbursement forms Newsletters with great content which I might want to use as inspiration someday Happy emails, e.g. \u201cthank you\u201d emails or papers getting accepted. Share to Evernote Evernote offers more ways to save to it, such as the Evernote Web Clipper for Chrome desktop, and \u201cShare via\u201d option that many Android apps have, and where Evernote comes up as an option if you have it installed. Some examples: A website I like the layout or structure of and want to use as inspiration A website of a person I might want to contact An article I might want to read An article I already read, but want to share with others A Twitter thread with good advice or opinions Opening times of a store I always forget the name of A picture of an item I might want to buy A picture of an event poster, that I might want to attend Perhaps I should mention here that another rule I have for capturing is that I HAVE to use Todoist or Evernote. Not \u201cleave it on the table where I will see it\u201d, \u201cI\u2019ll just write it down over here\u201d or \u201cI\u2019ll just add it to my favorites\u201d. This part isn\u2019t always perfect, but I\u2019m improving, and writing this post actually helped me identify problem areas (leaving things on the table). Thanks! \ud83d\ude42","title":"GTD With Todoist, Evernote and Google Calendar | Dr Veronika CH"},{"location":"Highlights/Readwise/Articles/GTD%20With%20Todoist%2C%20Evernote%20and%20Google%20Calendar%20%20Dr%20Veronika%20CH/#gtd-with-todoist-evernote-and-google-calendar-dr-veronika-ch","text":"","title":"GTD With Todoist, Evernote and Google Calendar | Dr Veronika CH"},{"location":"Highlights/Readwise/Articles/GTD%20With%20Todoist%2C%20Evernote%20and%20Google%20Calendar%20%20Dr%20Veronika%20CH/#metadata","text":"Author: Full Title: GTD With Todoist, Evernote and Google Calendar | Dr Veronika CH Category: #Type/Highlights/Article URL: https://veronikach.com/habits-productivity/how-im-implementing-gtd-with-todoist-evernote-and-google-calendar-part-1/","title":"Metadata"},{"location":"Highlights/Readwise/Articles/GTD%20With%20Todoist%2C%20Evernote%20and%20Google%20Calendar%20%20Dr%20Veronika%20CH/#highlights","text":"The goals of the system are to keep me focused on important projects, but not forget everything else give me insight into how much I\u2019ve already done not overschedule my time / say no more often not get overwhelmed by everything that needs to be done eliminate decisions on what to do next Rather than the five steps of GTD, I see my system as just two steps: capture and organize. Capture everything I have never really had problems with forgetting to do something I promised, failing to start a project on time, or missing a deadline. So when I read GTD, the \u201ccapture everything\u201d idea seemed a bit unnecessary. But it has been a life changer! My rule is: as soon as I think of something I (might) need or want to do in the future, no matter how vague it is, I have to capture it in Todoist or Evernote immediately. I tend to use Todoist for actions I\u2019m quite sure I will do, like: send a reminder to a collaborator upload my recent paper to arXiV buy printer paper Evernote, on the other hand, is for ideas and \u201cmaybe\u201d actions: idea for a project around the house an article I want to read a piece of advice I want to remember The most important thing, however, is to just choose one of the two and not spend too long thinking about it. The capturing must happen as soon as possible, so I tend to only add a keyword or two, and then organize later Quick access widgets on my phone Both Todoist and Evernote have awesome widgets for your phone I use these widgets extensively when I\u2019m walking somewhere, doing things around the house, and in conversations where I wouldn\u2019t normally be taking notes. For example, I\u2019ve started doing this with all sorts of recommendations from others, for example for podcasts. In work meetings I actually tend to use pen and paper because I write faster and I don\u2019t want to use my phone the whole time. Then I transfer everything into Todoist/Evernote as soon as I\u2019m in my office again. Todoist plugin for Gmail A trap that\u2019s easy to fall into is to let your email dictate your day. Most emails have some todos associated with them, and it\u2019s tempting to handle these first, before starting \u201creal work\u201d. Not anymore with Todoist plugin for Gmail. This plugin adds a button which lets you create a todo from an email. I do this for two types of emails \u2013 emails that will need time to respond to, and emails I need to follow up on. As an example of emails that need time to respond to, I\u2019m using a reminder email to complete my reviews for a conference (I had returned the reviews already at that point). Since I wouldn\u2019t necessarily be able to do this when I received the email, I would create a todo out of it by clicking the Todoist button (right of the Labels button). This opens up a Todoist window, which already has the email\u2019s subject (as description) filled in, and possibly dates that might be involved. The subject is automatically used as a description Once I add the todo, I archive the email! This archiving was scary at first, but this goes away with time. Another way I use this plugin is for emails I need to follow-up on Email forwarding to Evernote If an email contains some information I might want to use, but I\u2019m not sure exactly when I will need it, I forward it to Evernote. Some examples: Procedures on how to do something, e.g. filling in reimbursement forms Newsletters with great content which I might want to use as inspiration someday Happy emails, e.g. \u201cthank you\u201d emails or papers getting accepted. Share to Evernote Evernote offers more ways to save to it, such as the Evernote Web Clipper for Chrome desktop, and \u201cShare via\u201d option that many Android apps have, and where Evernote comes up as an option if you have it installed. Some examples: A website I like the layout or structure of and want to use as inspiration A website of a person I might want to contact An article I might want to read An article I already read, but want to share with others A Twitter thread with good advice or opinions Opening times of a store I always forget the name of A picture of an item I might want to buy A picture of an event poster, that I might want to attend Perhaps I should mention here that another rule I have for capturing is that I HAVE to use Todoist or Evernote. Not \u201cleave it on the table where I will see it\u201d, \u201cI\u2019ll just write it down over here\u201d or \u201cI\u2019ll just add it to my favorites\u201d. This part isn\u2019t always perfect, but I\u2019m improving, and writing this post actually helped me identify problem areas (leaving things on the table). Thanks! \ud83d\ude42","title":"Highlights"},{"location":"Highlights/Readwise/Articles/GTD%20With%20Todoist%2C%20Evernote%20and%20Google%20Calendar%20%28Part%202%29%20%20Dr%20Veronika%20CH/","text":"GTD With Todoist, Evernote and Google Calendar (Part 2) | Dr Veronika CH \u00b6 Metadata \u00b6 Author: Full Title: GTD With Todoist, Evernote and Google Calendar (Part 2) | Dr Veronika CH Category: #Type/Highlights/Article URL: https://veronikach.com/habits-productivity/how-im-implementing-gtd-with-todoist-evernote-and-google-calendar-part-2/ Highlights \u00b6 Now that everything is safely captured in Todoist and Evernote, what do I do? It\u2019s time for the organize step \u2013 sorting through everything you captured and getting the important things into your agenda \u2013 Google Calendar in my case. I do this during a weekly review, usually on Friday (at work) or Saturday (at home). I am quite strict with not doing personal projects at work and not working during the weekend, but the weekly review \u2013 which covers both types of projects \u2013 is something I can\u2019t get around. Since my inboxes (Todoist and Evernote) are combined, it\u2019s not logical to go through the process I describe below twice. Tags: [[favorite]] Evernote Inbox Zero The first thing I do is sort through everything in the Evernote inbox, where all notes were captured. The whole structure of my notebooks looks roughly like this: Inbox \u2013 notebook where everything goes by default and which will get emptied out in this section Ideas \u2013 \u201cmaybe/later\u201d notebook Work \u2013 notebook stack Blog \u2013 notebook stack Personal \u2013 notebook stack Snooze \u2013 notebook stack A few of my Evernote notebooks. I use numbers and dots to make sure the notebooks are sorted the way I want. In Work, I have notebooks for papers and classes I\u2019m teaching (current projects), but also a reference notebook with checklists and templates. The other two are reference notebooks, where I drag and drop other notes to, and which I review if I\u2019m searching for something. In Personal, I have a \u201cMean plan\u201d notebook and notebooks for different types of recipes, with drag-and-drop in between. The Snooze stack if for notebooks that I don\u2019t use very often. For example long-term projects, such as assembling a portfolio for my teaching qualification. This is something I need to pay attention to, but not every week. I also have a true Reference notebook, with things like manuals for appliances. Ideas notebook All other notes (\u201cmaybe\u201d) go into the giant Ideas notebook. A recent revelation was that I shouldn\u2019t use only topics (academia, health, AI) but also the type of note (article, Twitter thread, website) and what I would use it for (advice to share on Twitter, example to use as inspiration). I fail to do this consistently, but I try not to think about it too much, and use too many tags rather than too few. Over time, patterns in which tags I\u2019m using more are starting to emerge, so I can merge and delete tags as needed. What this accomplishes is that the things I might want to, but don\u2019t have to do, are out of sight in the Ideas notebook, and I can focus my attention on current projects. But these ideas are not lost forever! For example, if for a blog post I\u2019m looking for content to include, I will search through the Ideas notebook, and process the relevant notes, which I will afterwards move to \u201cBlog: shared content\u201d. But, I have also decided I have already spent too much time on this, which is not productive. The idea is to use this structure, and update it as I go. Note: IMPORTANT Todoist Inbox Zero Next I move on to the Todoist inbox. Here the structure looks like this: Inbox Incubator (Work and Personal) Current (Work and Personal) Snooze (Work and Personal) The inbox is a single task list, and all others have task lists related to different projects. Since I tried to capture only actions that fit into my projects, achieving inbox zero should be simple. For each todo, I first review whether that is indeed the case, and if not, the todo goes to Evernote. For all remaining todos, I do the following: Use an action verb if it doesn\u2019t already have one (to be a better collaborator to my future self) Move it to a project in Incubator, Current or Snooze Add an (approximate) date (Optional) Add labels Next 7 days Now I look at what Todoist has scheduled for me in the next 7 days. I use this to decide what really needs to be done next week, and what I could postpone. The meetings I already have in Google Calendar, also influence this. I don\u2019t want to divide my attention between too many different projects, so identify clusters / projects of focus for next week, and postpone other todos. In Todoist, for the projects of focus (usually Current \u2013 Work projects), I go through their individual task lists and break up the tasks that I want to work on into smaller, actionable tasks. I then give these smaller tasks a specific day and hour. I usually schedule high energy tasks like writing in the morning, and everything else in the afternoon. With the recent two-way integration between Todoist and Google Calendar these tasks now appear as 1-hour events on my calendar. Now I can change the length of the tasks, drag and drop the tasks between days, etc, as I would with calendar events. Tasks which only have a day, but not an hour in Todoist, appear as all-day events in Google Calendar. I try to convert these into scheduled-by-hour tasks as much as possible, as this helps me to get a better overview of how much time I spend and how many things I actually work on.","title":"GTD With Todoist, Evernote and Google Calendar (Part 2) | Dr Veronika CH"},{"location":"Highlights/Readwise/Articles/GTD%20With%20Todoist%2C%20Evernote%20and%20Google%20Calendar%20%28Part%202%29%20%20Dr%20Veronika%20CH/#gtd-with-todoist-evernote-and-google-calendar-part-2-dr-veronika-ch","text":"","title":"GTD With Todoist, Evernote and Google Calendar (Part 2) | Dr Veronika CH"},{"location":"Highlights/Readwise/Articles/GTD%20With%20Todoist%2C%20Evernote%20and%20Google%20Calendar%20%28Part%202%29%20%20Dr%20Veronika%20CH/#metadata","text":"Author: Full Title: GTD With Todoist, Evernote and Google Calendar (Part 2) | Dr Veronika CH Category: #Type/Highlights/Article URL: https://veronikach.com/habits-productivity/how-im-implementing-gtd-with-todoist-evernote-and-google-calendar-part-2/","title":"Metadata"},{"location":"Highlights/Readwise/Articles/GTD%20With%20Todoist%2C%20Evernote%20and%20Google%20Calendar%20%28Part%202%29%20%20Dr%20Veronika%20CH/#highlights","text":"Now that everything is safely captured in Todoist and Evernote, what do I do? It\u2019s time for the organize step \u2013 sorting through everything you captured and getting the important things into your agenda \u2013 Google Calendar in my case. I do this during a weekly review, usually on Friday (at work) or Saturday (at home). I am quite strict with not doing personal projects at work and not working during the weekend, but the weekly review \u2013 which covers both types of projects \u2013 is something I can\u2019t get around. Since my inboxes (Todoist and Evernote) are combined, it\u2019s not logical to go through the process I describe below twice. Tags: [[favorite]] Evernote Inbox Zero The first thing I do is sort through everything in the Evernote inbox, where all notes were captured. The whole structure of my notebooks looks roughly like this: Inbox \u2013 notebook where everything goes by default and which will get emptied out in this section Ideas \u2013 \u201cmaybe/later\u201d notebook Work \u2013 notebook stack Blog \u2013 notebook stack Personal \u2013 notebook stack Snooze \u2013 notebook stack A few of my Evernote notebooks. I use numbers and dots to make sure the notebooks are sorted the way I want. In Work, I have notebooks for papers and classes I\u2019m teaching (current projects), but also a reference notebook with checklists and templates. The other two are reference notebooks, where I drag and drop other notes to, and which I review if I\u2019m searching for something. In Personal, I have a \u201cMean plan\u201d notebook and notebooks for different types of recipes, with drag-and-drop in between. The Snooze stack if for notebooks that I don\u2019t use very often. For example long-term projects, such as assembling a portfolio for my teaching qualification. This is something I need to pay attention to, but not every week. I also have a true Reference notebook, with things like manuals for appliances. Ideas notebook All other notes (\u201cmaybe\u201d) go into the giant Ideas notebook. A recent revelation was that I shouldn\u2019t use only topics (academia, health, AI) but also the type of note (article, Twitter thread, website) and what I would use it for (advice to share on Twitter, example to use as inspiration). I fail to do this consistently, but I try not to think about it too much, and use too many tags rather than too few. Over time, patterns in which tags I\u2019m using more are starting to emerge, so I can merge and delete tags as needed. What this accomplishes is that the things I might want to, but don\u2019t have to do, are out of sight in the Ideas notebook, and I can focus my attention on current projects. But these ideas are not lost forever! For example, if for a blog post I\u2019m looking for content to include, I will search through the Ideas notebook, and process the relevant notes, which I will afterwards move to \u201cBlog: shared content\u201d. But, I have also decided I have already spent too much time on this, which is not productive. The idea is to use this structure, and update it as I go. Note: IMPORTANT Todoist Inbox Zero Next I move on to the Todoist inbox. Here the structure looks like this: Inbox Incubator (Work and Personal) Current (Work and Personal) Snooze (Work and Personal) The inbox is a single task list, and all others have task lists related to different projects. Since I tried to capture only actions that fit into my projects, achieving inbox zero should be simple. For each todo, I first review whether that is indeed the case, and if not, the todo goes to Evernote. For all remaining todos, I do the following: Use an action verb if it doesn\u2019t already have one (to be a better collaborator to my future self) Move it to a project in Incubator, Current or Snooze Add an (approximate) date (Optional) Add labels Next 7 days Now I look at what Todoist has scheduled for me in the next 7 days. I use this to decide what really needs to be done next week, and what I could postpone. The meetings I already have in Google Calendar, also influence this. I don\u2019t want to divide my attention between too many different projects, so identify clusters / projects of focus for next week, and postpone other todos. In Todoist, for the projects of focus (usually Current \u2013 Work projects), I go through their individual task lists and break up the tasks that I want to work on into smaller, actionable tasks. I then give these smaller tasks a specific day and hour. I usually schedule high energy tasks like writing in the morning, and everything else in the afternoon. With the recent two-way integration between Todoist and Google Calendar these tasks now appear as 1-hour events on my calendar. Now I can change the length of the tasks, drag and drop the tasks between days, etc, as I would with calendar events. Tasks which only have a day, but not an hour in Todoist, appear as all-day events in Google Calendar. I try to convert these into scheduled-by-hour tasks as much as possible, as this helps me to get a better overview of how much time I spend and how many things I actually work on.","title":"Highlights"},{"location":"Highlights/Readwise/Articles/Gaming%20the%20Naming%20The%20ABC%27s%20of%20Organizing%20Your%20Evernote%20Notebooks/","text":"Gaming the Naming: The ABC's of Organizing Your Evernote Notebooks \u00b6 Metadata \u00b6 Author: [[Stacey Harmon]] Full Title: Gaming the Naming: The ABC's of Organizing Your Evernote Notebooks Category: #Type/Highlights/Article URL: https://www.harmonenterprises.com/blog/naming-conventions-order-evernote-notebooks Highlights \u00b6 Notebook list is an Evernote app desktop setting that must be turned on in order to have your list display in the left side bar. If you aren't seeing your notebook list, go to [Mac] View > Sidebar Options > Show Notebook List or [PC] View > Left Panel > Show Notebooks to turn it on. Notebooks appear in the left hand sidebar note list alphabetically according to the name of the notebook. Work isn't organized alphabetically. You want your notebooks/stacks [and your work that resides in them] organized in a way that has logic and meaning to you. My work is organized in a variety of ways: by status [active or archive], by business unit [Harmon Enterprises or Untethered with Evernote], and by client. Other common structures for organizing work include grouping by product, by vendor, by department or team member, and by phase. All are valid ways of organizing your work, but what they aren't is alphabetical. Regarding A: I like to use the period (.) because it is the tiniest and most subtle of the special characters.","title":"Gaming the Naming: The ABC's of Organizing Your Evernote Notebooks"},{"location":"Highlights/Readwise/Articles/Gaming%20the%20Naming%20The%20ABC%27s%20of%20Organizing%20Your%20Evernote%20Notebooks/#gaming-the-naming-the-abcs-of-organizing-your-evernote-notebooks","text":"","title":"Gaming the Naming: The ABC's of Organizing Your Evernote Notebooks"},{"location":"Highlights/Readwise/Articles/Gaming%20the%20Naming%20The%20ABC%27s%20of%20Organizing%20Your%20Evernote%20Notebooks/#metadata","text":"Author: [[Stacey Harmon]] Full Title: Gaming the Naming: The ABC's of Organizing Your Evernote Notebooks Category: #Type/Highlights/Article URL: https://www.harmonenterprises.com/blog/naming-conventions-order-evernote-notebooks","title":"Metadata"},{"location":"Highlights/Readwise/Articles/Gaming%20the%20Naming%20The%20ABC%27s%20of%20Organizing%20Your%20Evernote%20Notebooks/#highlights","text":"Notebook list is an Evernote app desktop setting that must be turned on in order to have your list display in the left side bar. If you aren't seeing your notebook list, go to [Mac] View > Sidebar Options > Show Notebook List or [PC] View > Left Panel > Show Notebooks to turn it on. Notebooks appear in the left hand sidebar note list alphabetically according to the name of the notebook. Work isn't organized alphabetically. You want your notebooks/stacks [and your work that resides in them] organized in a way that has logic and meaning to you. My work is organized in a variety of ways: by status [active or archive], by business unit [Harmon Enterprises or Untethered with Evernote], and by client. Other common structures for organizing work include grouping by product, by vendor, by department or team member, and by phase. All are valid ways of organizing your work, but what they aren't is alphabetical. Regarding A: I like to use the period (.) because it is the tiniest and most subtle of the special characters.","title":"Highlights"},{"location":"Highlights/Readwise/Articles/Genius%20Things%20to%20Do%20on%20a%20Sunday%20to%20Have%20a%20Productive%20Week/","text":"Genius Things to Do on a Sunday to Have a Productive Week \u00b6 Metadata \u00b6 Author: [[quickbooost.com]] Full Title: Genius Things to Do on a Sunday to Have a Productive Week Category: #Type/Highlights/Article URL: https://quickbooost.com/things-sunday/ Highlights \u00b6 If you want to have a successful week, you need to set it up right. You need to prepare and plan for it. You need to be thoughtful and thorough about it. And the best way to do that? Through this post of specific things to do on a Sunday! Tags: [[favorite]] Because how you spend your time matters and I\u2019ve found Sunday to be an incredibly useful, but highly underutilized, day for man In fact, this post shows you: Why Sunday may just be the most important day of the week How you can take advantage of it to be that much more productive in the days ahead Every Sunday I get organized and plan out my week. I sit down, normally around four or five in the afternoon, and manage the various aspects of my life. I have a handful of Google Docs and Google Sheets that track things like my: Finances: I use this in tandem with Mint Health: My caloric intake, sleep tracking, etc. Housing: Renovations/Repairs that need to get done around the home Baby: Things that my wife and I need to do in preparation for our soon-arriving little one Work: Tasks that I need to do and plan for with my day-job QuickBooost: My plan of attack for the week with QuickBooost (the site that you\u2019re on right now) Schedule: Factoring everything in, I create a schedule for the week that also includes items from my calendar, Bullet Journal, and other misc Google Docs. Note: Finances in excel Health in word and excel Marvin in Gsheet shared with Pat and Keller Work - tasks in Todoist and synced to excel; projects in excel; status reports in word; code on git; issues and milestone in ghub + docs + excel; meetings \u201cFreelance\u201d - plan of attack for non-OW development work Additionally, because things change throughout the week, I\u2019ll also run through this process again each afternoon However, I normally do a faster, summarized version of this that takes around 25-40 minutes instead. Again, it\u2019s a pain sometimes, but I owe my ability to squeeze 50 hours of tasks into a 24 hour day to this very system. At its core This process is mandatory for me. Whether I want to do it or not, the benefit so much outweighs the cons that I have no excuse. It\u2019s become part of my Sunday (and subsequently, daily) ritual. It\u2019s what works for me for now. It helps me stave off overwhelm (as best I can), get organized and focused, reign in my interests, and ensure that I stay on top of everything going on in my life. This, in turn, nearly guarantees my productivity and forward progress as I navigate through the week. And those are results I want for you as well! In fact, that\u2019s what this post is all about; helping you uncover the things that you can add to your Sunday routine to set your week up for the most productivity and success as possible. Time is powerful It\u2019s not about cramming more tasks into a day or getting your errands done faster, it\u2019s about being deliberate with your time and making real progress towards your goals and ideal life. Because how you spend your time each day directly correlates to where you\u2019re going. That\u2019s why how you spend your time is so important. If you use it poorly, you will be chasing your tail, running in circles, not going anywhere and frustrated by your circumstances. But used wisely? You\u2019ll see yourself move more rapidly in the right direction than ever before. Your time is powerful and you don\u2019t want to let it go to waste. Why Sunday? To be truly productive you need to be intentional about how you spend your time. And that starts on Sunday. And Sunday, in this case, refers to the day before your workweek starts again. So in theory, if your workweek starts on Monday, that means you need to make time for intentionality on Sunday. Or if that day is Wednesday, then you need to make time on Tuesday. For the sake of this post though, I\u2019m going to use Sunday as the catch-all term for this scenario. Anyways, that day is incredibly important. Because many people see the weekend as a time to blow off steam. They\u2019ve put in work all week, they\u2019re tired, and just want to relax. I totally get. We all need a little break to rest, re-energize, and get re-motivated for the week ahead. But, there\u2019s also a secret power to treating your Sunday with a little intentionality. Meaning that while you\u2019re relaxing, there are a handful of things to do on a Sunday that when done properly, can set your week up for tremendous productivity and success. Because as I touched on earlier, the more productive your week, the more you\u2019ll achieve, and the sooner you\u2019ll reach your goals. So carve out some time on your Sunday and try out a couple of these genius things to do. Things to do on a Sunday \u2013 Make time to learn Find something that interests you and dive in. It doesn\u2019t matter what it is, as long as you find it interesting. And as you continue to explore, so will your excitement for learning. In turn, you\u2019ll discover new ways to challenge yourself and grow. You can then use that excitement as fuel to launch yourself enthusiastically into the upcoming week! Practice what you learn We consume so much information each day. Be it podcasts or books, conversations, or articles, information is constantly flowing towards us. It\u2019s one thing to listen to that knowledge, but it\u2019s another thing entirely to apply it. So just like in number one above, make time for yourself to learn. BUT more importantly, make time to apply that information. Use what you\u2019ve learned out in the real world. Employ those strategies, tactics, or tips that you\u2019ve come across. Go into each week with a list of things that you\u2019ve learned and want to try out. Then work through that list and find how exciting it is to actually take positive steps forward with your time. Don\u2019t waste that big brain of yours and don\u2019t ignore the great resources you come across and learn from. Instead, internalize those lessons and take action on them. You\u2019ll be surprised at how fun and rewarding your days will be. By the way, you may run into the occasional roadblock from time to time. Especially when working on something challenging. Don\u2019t fret though. It\u2019s all part of the process! Things to do on a Sunday \u2013 Reflect This is one of my favorite things to do on a Sunday \u2013 reflect on the week. Why? Because Sundays are a great day for reflection. With the week now behind you and the next week fast approaching, consider: What things went well this week? How can you set yourself up for more great opportunities in the future? What things went poorly this week? What can you learn from this and do differently next time? How are your goals coming along? See Sunday as a time for reflection and growth. As a period that you can utilize for introspection and contemplation. Use these questions as inspiration to plan out an even better upcoming week than the one you had prior. And if you find that you\u2019re falling a little behind on your goals, try setting some daily goals to keep yourself accountable or read my post on achieving your goals Plan out your week This is one of the best things to do on a Sunday to get ready for the week \u2013 plan it out. What do I mean by plan it out? I mean that you should create a plan for your time. Particularly for the upcoming week ahead. Because as I mentioned earlier, Sunday is a great time to sit, reflect, and ponder on your previous week and what you\u2019d like to see happen in the upcoming week. That said, creating a plan for your week is an amazing way to ensure that you get everything done that you are hoping to. If you\u2019re new to planning, see my posts on: Creating an effective morning routine \u2013 here How to do daily planning \u2013 here And how to create a productive plan for yourself \u2013 here Things to do on a Sunday \u2013 Figure out your meals If you\u2019re wondering what to do on a Sunday afternoon, look no further. Figuring out your meals for the week is a smart way to: Save money by not impulse buying at the grocery store Eat healthier because you\u2019ll only buy ingredients for healthy food And avoid rushing to figure out what to eat in the moment So try planning out your meals on a Sunday. Doing so will give you something to look forward to throughout the week, plus you\u2019ll know exactly what to get at the grocery store which will save even more time! If that feels too rigid though, try planning out a general idea of what meals you would like to have. You don\u2019t necessarily have to make them in that order, but that way you have the ingredients ready to go whenever you are. Reduce meal-time decision fatigue and improve your decision making skills by figuring out your meals ahead of time. Clean house I don\u2019t work well in messy environments. Others might, I don\u2019t. So when it comes to preparing for the week, I always make sure to have a nice clean working area ready to go. If an orderly environment is something that allows you to better focus, make it a Sunday priority. By organizing your workspace ahead of time, you will set yourself up to have a more focused week. And, more importantly, you won\u2019t be scrambling to get organized during the chaos of Monday. Ensure that each day is a productive one by being organized and prepared before your week even begins. Things to do on a Sunday \u2013 Get your clothes ready Speaking of things to do on a Sunday night, getting your clothes ready is another great idea. But, this doesn\u2019t have to just be a Sunday thing. It can really be an every night kind of thing. Planning out your clothes the night before will save you a tremendous amount of time in the long run. Instead of scrambling to throw something together in the morning, you\u2019ll deliberately plan out a great outfit the night before. So check the weather, check your schedule, and check yourself out as you put together a great wardrobe for your next day. Plus, planning your clothes out the night before will help reduce decision fatigue the next day. Win-win! Think of Sunday as the start of the week Mondays are chaotic. There are a lot of things going on and tasks being juggled. It\u2019s a dreadful way to start the week. So instead of considering Monday the start, try reframing it in your mind so that Sunday is actually when your week begins. And then, with your week now starting on a Sunday, see it as a day for calm, restoration, and preparation for the rest of your week. With a little reframing you can go into Monday with more focus, more calm, more motivation, and a more solid strategy for tackling the upcoming days. And I know, I know\u2026 This tactic is a little \u201cwoo-woo\u201d, but hey if reframing negative things into positive ones works for you, more power to you! Things to do on a Sunday \u2013 Catch up with loved ones With everything going on during the week, it\u2019s easy to let loved ones fall to the background. Take time on Sunday then to reach out to those connections and catch up. Schedule a lunch date, jump on a call, join a video chat. Reconnect with those you love and go into the week refreshed and feeling cared for. It\u2019s a wonderful way to: Share your life with those you love Get updated on how their lives are going And continue to build/maintain your relationships Try scheduling one call every Sunday. Make it a weekly habit and watch how you go into each week feeling loved, cared for, and motivated to create new experiences that you can share on your next call. Make time for yourself To close out this list of Sunday things to do, the final thing that you should consider adding to your Sunday routine is to make time for yourself. This is a must if you want to be productive throughout the week. Why? Because there\u2019s no better way to head off into the week than by giving yourself some much needed care and attention \u2013 whatever that means to you. That could be spending some time for rest, or reading a book, or watching a movie, or eating something delicious, or doing some light cardio. It\u2019s listening to your mind and body and giving it the attention it needs. By making time to re-charge, you\u2019ll be energized, focused, and ready to push through whatever future challenges come your way. In other words, you\u2019ll head into the week ready to be more productive than ever before. Plus, it\u2019s a great way to mitigate any feelings of overwhelm. Sunday Give a few of the items above a try on your next Sunday. And as you go through your week, notice how productive you feel. If you feel like you aren\u2019t making any progress forward, try something new on your next Sunday. Or if you notice a difference for the better, keep doing what you\u2019re doing! It\u2019s all about experimenting to find what works best for you. That said, moving forward be sure to utilize your Sunday to the fullest so that you set your week up on a positive note and make progress towards your goals.","title":"Genius Things to Do on a Sunday to Have a Productive Week"},{"location":"Highlights/Readwise/Articles/Genius%20Things%20to%20Do%20on%20a%20Sunday%20to%20Have%20a%20Productive%20Week/#genius-things-to-do-on-a-sunday-to-have-a-productive-week","text":"","title":"Genius Things to Do on a Sunday to Have a Productive Week"},{"location":"Highlights/Readwise/Articles/Genius%20Things%20to%20Do%20on%20a%20Sunday%20to%20Have%20a%20Productive%20Week/#metadata","text":"Author: [[quickbooost.com]] Full Title: Genius Things to Do on a Sunday to Have a Productive Week Category: #Type/Highlights/Article URL: https://quickbooost.com/things-sunday/","title":"Metadata"},{"location":"Highlights/Readwise/Articles/Genius%20Things%20to%20Do%20on%20a%20Sunday%20to%20Have%20a%20Productive%20Week/#highlights","text":"If you want to have a successful week, you need to set it up right. You need to prepare and plan for it. You need to be thoughtful and thorough about it. And the best way to do that? Through this post of specific things to do on a Sunday! Tags: [[favorite]] Because how you spend your time matters and I\u2019ve found Sunday to be an incredibly useful, but highly underutilized, day for man In fact, this post shows you: Why Sunday may just be the most important day of the week How you can take advantage of it to be that much more productive in the days ahead Every Sunday I get organized and plan out my week. I sit down, normally around four or five in the afternoon, and manage the various aspects of my life. I have a handful of Google Docs and Google Sheets that track things like my: Finances: I use this in tandem with Mint Health: My caloric intake, sleep tracking, etc. Housing: Renovations/Repairs that need to get done around the home Baby: Things that my wife and I need to do in preparation for our soon-arriving little one Work: Tasks that I need to do and plan for with my day-job QuickBooost: My plan of attack for the week with QuickBooost (the site that you\u2019re on right now) Schedule: Factoring everything in, I create a schedule for the week that also includes items from my calendar, Bullet Journal, and other misc Google Docs. Note: Finances in excel Health in word and excel Marvin in Gsheet shared with Pat and Keller Work - tasks in Todoist and synced to excel; projects in excel; status reports in word; code on git; issues and milestone in ghub + docs + excel; meetings \u201cFreelance\u201d - plan of attack for non-OW development work Additionally, because things change throughout the week, I\u2019ll also run through this process again each afternoon However, I normally do a faster, summarized version of this that takes around 25-40 minutes instead. Again, it\u2019s a pain sometimes, but I owe my ability to squeeze 50 hours of tasks into a 24 hour day to this very system. At its core This process is mandatory for me. Whether I want to do it or not, the benefit so much outweighs the cons that I have no excuse. It\u2019s become part of my Sunday (and subsequently, daily) ritual. It\u2019s what works for me for now. It helps me stave off overwhelm (as best I can), get organized and focused, reign in my interests, and ensure that I stay on top of everything going on in my life. This, in turn, nearly guarantees my productivity and forward progress as I navigate through the week. And those are results I want for you as well! In fact, that\u2019s what this post is all about; helping you uncover the things that you can add to your Sunday routine to set your week up for the most productivity and success as possible. Time is powerful It\u2019s not about cramming more tasks into a day or getting your errands done faster, it\u2019s about being deliberate with your time and making real progress towards your goals and ideal life. Because how you spend your time each day directly correlates to where you\u2019re going. That\u2019s why how you spend your time is so important. If you use it poorly, you will be chasing your tail, running in circles, not going anywhere and frustrated by your circumstances. But used wisely? You\u2019ll see yourself move more rapidly in the right direction than ever before. Your time is powerful and you don\u2019t want to let it go to waste. Why Sunday? To be truly productive you need to be intentional about how you spend your time. And that starts on Sunday. And Sunday, in this case, refers to the day before your workweek starts again. So in theory, if your workweek starts on Monday, that means you need to make time for intentionality on Sunday. Or if that day is Wednesday, then you need to make time on Tuesday. For the sake of this post though, I\u2019m going to use Sunday as the catch-all term for this scenario. Anyways, that day is incredibly important. Because many people see the weekend as a time to blow off steam. They\u2019ve put in work all week, they\u2019re tired, and just want to relax. I totally get. We all need a little break to rest, re-energize, and get re-motivated for the week ahead. But, there\u2019s also a secret power to treating your Sunday with a little intentionality. Meaning that while you\u2019re relaxing, there are a handful of things to do on a Sunday that when done properly, can set your week up for tremendous productivity and success. Because as I touched on earlier, the more productive your week, the more you\u2019ll achieve, and the sooner you\u2019ll reach your goals. So carve out some time on your Sunday and try out a couple of these genius things to do. Things to do on a Sunday \u2013 Make time to learn Find something that interests you and dive in. It doesn\u2019t matter what it is, as long as you find it interesting. And as you continue to explore, so will your excitement for learning. In turn, you\u2019ll discover new ways to challenge yourself and grow. You can then use that excitement as fuel to launch yourself enthusiastically into the upcoming week! Practice what you learn We consume so much information each day. Be it podcasts or books, conversations, or articles, information is constantly flowing towards us. It\u2019s one thing to listen to that knowledge, but it\u2019s another thing entirely to apply it. So just like in number one above, make time for yourself to learn. BUT more importantly, make time to apply that information. Use what you\u2019ve learned out in the real world. Employ those strategies, tactics, or tips that you\u2019ve come across. Go into each week with a list of things that you\u2019ve learned and want to try out. Then work through that list and find how exciting it is to actually take positive steps forward with your time. Don\u2019t waste that big brain of yours and don\u2019t ignore the great resources you come across and learn from. Instead, internalize those lessons and take action on them. You\u2019ll be surprised at how fun and rewarding your days will be. By the way, you may run into the occasional roadblock from time to time. Especially when working on something challenging. Don\u2019t fret though. It\u2019s all part of the process! Things to do on a Sunday \u2013 Reflect This is one of my favorite things to do on a Sunday \u2013 reflect on the week. Why? Because Sundays are a great day for reflection. With the week now behind you and the next week fast approaching, consider: What things went well this week? How can you set yourself up for more great opportunities in the future? What things went poorly this week? What can you learn from this and do differently next time? How are your goals coming along? See Sunday as a time for reflection and growth. As a period that you can utilize for introspection and contemplation. Use these questions as inspiration to plan out an even better upcoming week than the one you had prior. And if you find that you\u2019re falling a little behind on your goals, try setting some daily goals to keep yourself accountable or read my post on achieving your goals Plan out your week This is one of the best things to do on a Sunday to get ready for the week \u2013 plan it out. What do I mean by plan it out? I mean that you should create a plan for your time. Particularly for the upcoming week ahead. Because as I mentioned earlier, Sunday is a great time to sit, reflect, and ponder on your previous week and what you\u2019d like to see happen in the upcoming week. That said, creating a plan for your week is an amazing way to ensure that you get everything done that you are hoping to. If you\u2019re new to planning, see my posts on: Creating an effective morning routine \u2013 here How to do daily planning \u2013 here And how to create a productive plan for yourself \u2013 here Things to do on a Sunday \u2013 Figure out your meals If you\u2019re wondering what to do on a Sunday afternoon, look no further. Figuring out your meals for the week is a smart way to: Save money by not impulse buying at the grocery store Eat healthier because you\u2019ll only buy ingredients for healthy food And avoid rushing to figure out what to eat in the moment So try planning out your meals on a Sunday. Doing so will give you something to look forward to throughout the week, plus you\u2019ll know exactly what to get at the grocery store which will save even more time! If that feels too rigid though, try planning out a general idea of what meals you would like to have. You don\u2019t necessarily have to make them in that order, but that way you have the ingredients ready to go whenever you are. Reduce meal-time decision fatigue and improve your decision making skills by figuring out your meals ahead of time. Clean house I don\u2019t work well in messy environments. Others might, I don\u2019t. So when it comes to preparing for the week, I always make sure to have a nice clean working area ready to go. If an orderly environment is something that allows you to better focus, make it a Sunday priority. By organizing your workspace ahead of time, you will set yourself up to have a more focused week. And, more importantly, you won\u2019t be scrambling to get organized during the chaos of Monday. Ensure that each day is a productive one by being organized and prepared before your week even begins. Things to do on a Sunday \u2013 Get your clothes ready Speaking of things to do on a Sunday night, getting your clothes ready is another great idea. But, this doesn\u2019t have to just be a Sunday thing. It can really be an every night kind of thing. Planning out your clothes the night before will save you a tremendous amount of time in the long run. Instead of scrambling to throw something together in the morning, you\u2019ll deliberately plan out a great outfit the night before. So check the weather, check your schedule, and check yourself out as you put together a great wardrobe for your next day. Plus, planning your clothes out the night before will help reduce decision fatigue the next day. Win-win! Think of Sunday as the start of the week Mondays are chaotic. There are a lot of things going on and tasks being juggled. It\u2019s a dreadful way to start the week. So instead of considering Monday the start, try reframing it in your mind so that Sunday is actually when your week begins. And then, with your week now starting on a Sunday, see it as a day for calm, restoration, and preparation for the rest of your week. With a little reframing you can go into Monday with more focus, more calm, more motivation, and a more solid strategy for tackling the upcoming days. And I know, I know\u2026 This tactic is a little \u201cwoo-woo\u201d, but hey if reframing negative things into positive ones works for you, more power to you! Things to do on a Sunday \u2013 Catch up with loved ones With everything going on during the week, it\u2019s easy to let loved ones fall to the background. Take time on Sunday then to reach out to those connections and catch up. Schedule a lunch date, jump on a call, join a video chat. Reconnect with those you love and go into the week refreshed and feeling cared for. It\u2019s a wonderful way to: Share your life with those you love Get updated on how their lives are going And continue to build/maintain your relationships Try scheduling one call every Sunday. Make it a weekly habit and watch how you go into each week feeling loved, cared for, and motivated to create new experiences that you can share on your next call. Make time for yourself To close out this list of Sunday things to do, the final thing that you should consider adding to your Sunday routine is to make time for yourself. This is a must if you want to be productive throughout the week. Why? Because there\u2019s no better way to head off into the week than by giving yourself some much needed care and attention \u2013 whatever that means to you. That could be spending some time for rest, or reading a book, or watching a movie, or eating something delicious, or doing some light cardio. It\u2019s listening to your mind and body and giving it the attention it needs. By making time to re-charge, you\u2019ll be energized, focused, and ready to push through whatever future challenges come your way. In other words, you\u2019ll head into the week ready to be more productive than ever before. Plus, it\u2019s a great way to mitigate any feelings of overwhelm. Sunday Give a few of the items above a try on your next Sunday. And as you go through your week, notice how productive you feel. If you feel like you aren\u2019t making any progress forward, try something new on your next Sunday. Or if you notice a difference for the better, keep doing what you\u2019re doing! It\u2019s all about experimenting to find what works best for you. That said, moving forward be sure to utilize your Sunday to the fullest so that you set your week up on a positive note and make progress towards your goals.","title":"Highlights"},{"location":"Highlights/Readwise/Articles/Get%20New%20IT%20Pros%20Up%20to%20Speed%20Fast%20With%20This%20Onboarding%20Checklist/","text":"Get New IT Pros Up to Speed Fast With This Onboarding Checklist \u00b6 Metadata \u00b6 Author: [[Rich Hein]] Full Title: Get New IT Pros Up to Speed Fast With This Onboarding Checklist Category: #Type/Highlights/Article URL: https://www.cio.com/article/2384870/get-new-it-pros-up-to-speed-fast-with-this-onboarding-checklist.html Highlights \u00b6 Where to Start With Your Onboarding Plan Best Practices for Onboarding Incorporate company culture into onboarding: A great employee will have done his or her homework on your company culture, but it's not possible to get the whole picture until he or she actually begins. Experts agree that culture fit is essential to long-term success. Identify career paths and demonstrate the skills and traits required to get to the next level: This demonstrates to new employees that they are an important part of the company and that the company is invested in their professional development. Creating a career map will help employees achieve their goals and increase retention within your company. Keep the momentum going: \"It doesn't all happen on day 1,\" says Platt. Onboarding doesn't end at the end of the employee's first week or month. The process can take months and feedback from multiple sources is essential. Figure an appropriate amount of time, for example the first week, 30- and 90-day intervals, dependent on the position and check back with the new employee's managers and key stakeholders to find out where and how the new hire can grow professionally and can better meet expectations and goals. Send a companywide email: Let everyone in your company know that someone new has arrived and encourage people to introduce themselves and welcome the new employee.","title":"Get New IT Pros Up to Speed Fast With This Onboarding Checklist"},{"location":"Highlights/Readwise/Articles/Get%20New%20IT%20Pros%20Up%20to%20Speed%20Fast%20With%20This%20Onboarding%20Checklist/#get-new-it-pros-up-to-speed-fast-with-this-onboarding-checklist","text":"","title":"Get New IT Pros Up to Speed Fast With This Onboarding Checklist"},{"location":"Highlights/Readwise/Articles/Get%20New%20IT%20Pros%20Up%20to%20Speed%20Fast%20With%20This%20Onboarding%20Checklist/#metadata","text":"Author: [[Rich Hein]] Full Title: Get New IT Pros Up to Speed Fast With This Onboarding Checklist Category: #Type/Highlights/Article URL: https://www.cio.com/article/2384870/get-new-it-pros-up-to-speed-fast-with-this-onboarding-checklist.html","title":"Metadata"},{"location":"Highlights/Readwise/Articles/Get%20New%20IT%20Pros%20Up%20to%20Speed%20Fast%20With%20This%20Onboarding%20Checklist/#highlights","text":"Where to Start With Your Onboarding Plan Best Practices for Onboarding Incorporate company culture into onboarding: A great employee will have done his or her homework on your company culture, but it's not possible to get the whole picture until he or she actually begins. Experts agree that culture fit is essential to long-term success. Identify career paths and demonstrate the skills and traits required to get to the next level: This demonstrates to new employees that they are an important part of the company and that the company is invested in their professional development. Creating a career map will help employees achieve their goals and increase retention within your company. Keep the momentum going: \"It doesn't all happen on day 1,\" says Platt. Onboarding doesn't end at the end of the employee's first week or month. The process can take months and feedback from multiple sources is essential. Figure an appropriate amount of time, for example the first week, 30- and 90-day intervals, dependent on the position and check back with the new employee's managers and key stakeholders to find out where and how the new hire can grow professionally and can better meet expectations and goals. Send a companywide email: Let everyone in your company know that someone new has arrived and encourage people to introduce themselves and welcome the new employee.","title":"Highlights"},{"location":"Highlights/Readwise/Articles/Get%20Organized%20%E2%80%93%20Personal%20Development%20Ideas/","text":"Get Organized \u2013 Personal Development Ideas \u00b6 Metadata \u00b6 Author: [[personaldevelopmentideas.com]] Full Title: Get Organized \u2013 Personal Development Ideas Category: #Type/Highlights/Article URL: https://personaldevelopmentideas.com/tag/get-organized-2/ Highlights \u00b6 It\u2019s important to note that to get organized is not necessarily the same thing as becoming super-tidy and having a bare household or office, with virtually everything in its proper place and absolutely no clutter. In fact you can overdue your efforts to get organized if you focus too much on methods and not enough on accomplishing things in your personal development strategy. ( View Highlight ) \u201cAs you plan your life, resist the temptation of becoming overly organized \u2013 it\u2019s an effectiveness killer\u2026Running around with a stopwatch and keeping a totally clear desk isn\u2019t going to accomplish what you want in life.\u201d He makes the point that as we establish guidelines for organizing our lives, it is important to recognize them as \u201cguidelines rather than hard and fast rules.\u201d Inflexibility will actually work against our attempts to get organized. ( View Highlight ) Setting priorities and utilizing the power of focus are important components of getting organized. One of the characteristics I found fascinating About Steve Jobs in the recent biography by Walter Asaacson is that Jobs\u2019 approach was to focus on a few key priorities, rather than using focus, as most of us would, as a means of deciding what particular tasks to get done out of the hundreds of tasks we deemed essential at the time. ( View Highlight ) One of the biggest roadblocks in an attempt to get organized in our personal development is procrastination; and I can speak with authority on this because by nature, I am a procrastinator. I could try to convince myself that I am really setting priorities, but it is procrastination. Putting things off can interfere with any efforts to get organized because it is avoidance of tasks or goals, and, instead of contributing to our organizational progress, holds us back from organizing and implementing our priorities and getting things done. ( View Highlight ) Perseverance therefore is very important in getting major goals organized and completed, and often the best approach with major goals is to break them down or organize them into bite-size chunks and work on them one at a time, thereby making them more do-able than it would be facing a huge goal or task all at once. This idea is certainly not new and is part of practically any program or set of guidelines designed to help people get organized. But, it is an easy principle to forget if we try to move ahead to quickly in a desire to make rapid progress in our personal growth plans. ( View Highlight ) Any plan or strategy to get organized will not be easy to implement. It will take continued research and diligence in application to be successful. But if personal development were easy and intuitive we would not need all the books, blogs, and websites that are available offering us assistance. ( View Highlight ) In fact, by having too much on the go at once we run the risk of doing a maintenance job on many items rather than a quality job on fewer, but prioritized goals. If you use the 80/20 principle, 80 percent of the tasks are likely to be not all that important compared with the 20 percent that can really make a difference in improving our lives. Again, this principle is not new but it is easy to get sidetracked in trying to organize too many things at once. I struggle with this myself, as I tend to be eclectic by nature and have to work at remaining focused on activities that can \u201cmake a difference.\u201d ( View Highlight ) It is also hard to become organized if we confuse efficiency with effectiveness. The two are vastly different. I can be efficient at accomplishing a vast number of tasks in my work, for example, or in managing a household, but if I have too many tasks, I am not necessarily being effective. Better to be effective in getting organized with a lesser number of goals, for example, than being efficient in handling a larger number of low priority matters. ( View Highlight )","title":"Get Organized \u2013 Personal Development Ideas"},{"location":"Highlights/Readwise/Articles/Get%20Organized%20%E2%80%93%20Personal%20Development%20Ideas/#get-organized-personal-development-ideas","text":"","title":"Get Organized \u2013 Personal Development Ideas"},{"location":"Highlights/Readwise/Articles/Get%20Organized%20%E2%80%93%20Personal%20Development%20Ideas/#metadata","text":"Author: [[personaldevelopmentideas.com]] Full Title: Get Organized \u2013 Personal Development Ideas Category: #Type/Highlights/Article URL: https://personaldevelopmentideas.com/tag/get-organized-2/","title":"Metadata"},{"location":"Highlights/Readwise/Articles/Get%20Organized%20%E2%80%93%20Personal%20Development%20Ideas/#highlights","text":"It\u2019s important to note that to get organized is not necessarily the same thing as becoming super-tidy and having a bare household or office, with virtually everything in its proper place and absolutely no clutter. In fact you can overdue your efforts to get organized if you focus too much on methods and not enough on accomplishing things in your personal development strategy. ( View Highlight ) \u201cAs you plan your life, resist the temptation of becoming overly organized \u2013 it\u2019s an effectiveness killer\u2026Running around with a stopwatch and keeping a totally clear desk isn\u2019t going to accomplish what you want in life.\u201d He makes the point that as we establish guidelines for organizing our lives, it is important to recognize them as \u201cguidelines rather than hard and fast rules.\u201d Inflexibility will actually work against our attempts to get organized. ( View Highlight ) Setting priorities and utilizing the power of focus are important components of getting organized. One of the characteristics I found fascinating About Steve Jobs in the recent biography by Walter Asaacson is that Jobs\u2019 approach was to focus on a few key priorities, rather than using focus, as most of us would, as a means of deciding what particular tasks to get done out of the hundreds of tasks we deemed essential at the time. ( View Highlight ) One of the biggest roadblocks in an attempt to get organized in our personal development is procrastination; and I can speak with authority on this because by nature, I am a procrastinator. I could try to convince myself that I am really setting priorities, but it is procrastination. Putting things off can interfere with any efforts to get organized because it is avoidance of tasks or goals, and, instead of contributing to our organizational progress, holds us back from organizing and implementing our priorities and getting things done. ( View Highlight ) Perseverance therefore is very important in getting major goals organized and completed, and often the best approach with major goals is to break them down or organize them into bite-size chunks and work on them one at a time, thereby making them more do-able than it would be facing a huge goal or task all at once. This idea is certainly not new and is part of practically any program or set of guidelines designed to help people get organized. But, it is an easy principle to forget if we try to move ahead to quickly in a desire to make rapid progress in our personal growth plans. ( View Highlight ) Any plan or strategy to get organized will not be easy to implement. It will take continued research and diligence in application to be successful. But if personal development were easy and intuitive we would not need all the books, blogs, and websites that are available offering us assistance. ( View Highlight ) In fact, by having too much on the go at once we run the risk of doing a maintenance job on many items rather than a quality job on fewer, but prioritized goals. If you use the 80/20 principle, 80 percent of the tasks are likely to be not all that important compared with the 20 percent that can really make a difference in improving our lives. Again, this principle is not new but it is easy to get sidetracked in trying to organize too many things at once. I struggle with this myself, as I tend to be eclectic by nature and have to work at remaining focused on activities that can \u201cmake a difference.\u201d ( View Highlight ) It is also hard to become organized if we confuse efficiency with effectiveness. The two are vastly different. I can be efficient at accomplishing a vast number of tasks in my work, for example, or in managing a household, but if I have too many tasks, I am not necessarily being effective. Better to be effective in getting organized with a lesser number of goals, for example, than being efficient in handling a larger number of low priority matters. ( View Highlight )","title":"Highlights"},{"location":"Highlights/Readwise/Articles/Getting%20Data%20From%20PDFs%20the%20Easy%20Way%20With%20R%20-%20Open%20Source%20Automation/","text":"Getting Data From PDFs the Easy Way With R - Open Source Automation \u00b6 Metadata \u00b6 Author: Full Title: Getting Data From PDFs the Easy Way With R - Open Source Automation Category: #Type/Highlights/Article URL: http://theautomatic.net/2018/08/24/getting-data-from-pdfs-the-easy-way-with-r/ Highlights \u00b6 package called tabulizer was released in R, which allows you to automatically pull out tables and text from PDFs. Note, this package only works if the PDF\u2019s text is highlightable (if it\u2019s typed) \u2014 i.e. it won\u2019t work for scanned-in PDFs, or image files converted to PDFs You can extract tables from this PDF using the aptly-named extract_tables function, like this: # default call with no parameters changed matrix_results <- extract_tables(site) # get back the tables as data frames, keeping their headers df_results <- extract_tables(site, output = \"data.frame\", header = TRUE) Tags: [[r]]","title":"Getting Data From PDFs the Easy Way With R - Open Source Automation"},{"location":"Highlights/Readwise/Articles/Getting%20Data%20From%20PDFs%20the%20Easy%20Way%20With%20R%20-%20Open%20Source%20Automation/#getting-data-from-pdfs-the-easy-way-with-r-open-source-automation","text":"","title":"Getting Data From PDFs the Easy Way With R - Open Source Automation"},{"location":"Highlights/Readwise/Articles/Getting%20Data%20From%20PDFs%20the%20Easy%20Way%20With%20R%20-%20Open%20Source%20Automation/#metadata","text":"Author: Full Title: Getting Data From PDFs the Easy Way With R - Open Source Automation Category: #Type/Highlights/Article URL: http://theautomatic.net/2018/08/24/getting-data-from-pdfs-the-easy-way-with-r/","title":"Metadata"},{"location":"Highlights/Readwise/Articles/Getting%20Data%20From%20PDFs%20the%20Easy%20Way%20With%20R%20-%20Open%20Source%20Automation/#highlights","text":"package called tabulizer was released in R, which allows you to automatically pull out tables and text from PDFs. Note, this package only works if the PDF\u2019s text is highlightable (if it\u2019s typed) \u2014 i.e. it won\u2019t work for scanned-in PDFs, or image files converted to PDFs You can extract tables from this PDF using the aptly-named extract_tables function, like this: # default call with no parameters changed matrix_results <- extract_tables(site) # get back the tables as data frames, keeping their headers df_results <- extract_tables(site, output = \"data.frame\", header = TRUE) Tags: [[r]]","title":"Highlights"},{"location":"Highlights/Readwise/Articles/Getting%20More%20Done%20at%20Work%20With%20Evernote%20-%20Frank%20Buck%20Consulting/","text":"Getting More Done at Work With Evernote - Frank Buck Consulting \u00b6 Metadata \u00b6 Author: Full Title: Getting More Done at Work With Evernote - Frank Buck Consulting Category: #Type/Highlights/Article URL: https://www.frankbuck.org/getting-more-done/ Highlights \u00b6 Once you determine your Life Categories, next comes the four tenets of your ongoing Getting More Done practice: focus \u2013 different than mental attention, in this context, this is the decision to prioritize one routine over others to achieve mastery, routine \u2013 habitual behaviors connected together, accountability \u2013 finding the right type and amount of personal or social motivation, and taking action \u2013 organizing the rest of your life around your routines. In order to get more done, determine the single role or ongoing project that will be your focus for some period of time until you develop focus mastery. Fitness is stretching your \u201cwork muscles\u201d regularly. In GMD, each Fitness\u2014physical, emotional, mental, sleep/rest, nutrition, social and rejuvenation\u2014is a focus mastery project by itself.","title":"Getting More Done at Work With Evernote - Frank Buck Consulting"},{"location":"Highlights/Readwise/Articles/Getting%20More%20Done%20at%20Work%20With%20Evernote%20-%20Frank%20Buck%20Consulting/#getting-more-done-at-work-with-evernote-frank-buck-consulting","text":"","title":"Getting More Done at Work With Evernote - Frank Buck Consulting"},{"location":"Highlights/Readwise/Articles/Getting%20More%20Done%20at%20Work%20With%20Evernote%20-%20Frank%20Buck%20Consulting/#metadata","text":"Author: Full Title: Getting More Done at Work With Evernote - Frank Buck Consulting Category: #Type/Highlights/Article URL: https://www.frankbuck.org/getting-more-done/","title":"Metadata"},{"location":"Highlights/Readwise/Articles/Getting%20More%20Done%20at%20Work%20With%20Evernote%20-%20Frank%20Buck%20Consulting/#highlights","text":"Once you determine your Life Categories, next comes the four tenets of your ongoing Getting More Done practice: focus \u2013 different than mental attention, in this context, this is the decision to prioritize one routine over others to achieve mastery, routine \u2013 habitual behaviors connected together, accountability \u2013 finding the right type and amount of personal or social motivation, and taking action \u2013 organizing the rest of your life around your routines. In order to get more done, determine the single role or ongoing project that will be your focus for some period of time until you develop focus mastery. Fitness is stretching your \u201cwork muscles\u201d regularly. In GMD, each Fitness\u2014physical, emotional, mental, sleep/rest, nutrition, social and rejuvenation\u2014is a focus mastery project by itself.","title":"Highlights"},{"location":"Highlights/Readwise/Articles/Getting%20Started%20With%20GTD%20Templates%20%20Evernote%20%20Evernote%20Blog/","text":"Getting Started With GTD Templates | Evernote | Evernote Blog \u00b6 Metadata \u00b6 Author: Full Title: Getting Started With GTD Templates | Evernote | Evernote Blog Category: #Type/Highlights/Article URL: https://evernote.com/blog/getting-started-with-gtd-templates/ Highlights \u00b6 Here are the steps to stress-free productivity that GTD recommends: CAPTURE every commitment in your life in a trusted place outside your head (like a software program or a piece of paper) CLARIFY exactly what each commitment is, the desired outcome of fulfilling it, and only the very next action required ORGANIZE reminders of these actions in a Project List REFLECT on your list on a weekly basis to make sure it\u2019s clear, current, and complete EXECUTE on your actions by making intuitive decisions about what to do next, trusting your system to not let anything fall through the cracks The Project List Mindsweep The Project List Mindsweep is extremely valuable for anyone, whether you\u2019ve never heard of GTD or have been a dedicated practitioner for years. Most people couldn\u2019t give you a full inventory of their projects if their life depended on it. Yet they also tell you they have too much on their plate, and \u201cdon\u2019t have the bandwidth.\u201d Without a comprehensive Project List, you can never know how much capacity you really have. But GTD asks us to adopt a much smaller definition for what qualifies as a Project: \u201cany outcome you\u2019re committed to completing that requires more than one action step.\u201d Step 1: Capture Do a Brain Dump Don\u2019t judge. Don\u2019t filter. Don\u2019t try to clarify, process, organize, or categorize them as you capture them. That happens later. Use the Project List template for this step. We\u2019ll organize and clarify the list of projects you come up with in later steps. Here are some common places to look: Your mind What\u2019s worrying you? Identify that as a Project. Name it so you can tame it. What\u2019s taking more mental bandwidth than it deserves? What activities aren\u2019t you making consistent progress on that could benefit from a bit of structure? Example: \u201cMy back hurts\u201d \u2192 Schedule doctor\u2019s appointment to diagnose back pain Calendar Look a few weeks into the past on your calendar: what do you need to follow up on? What do you need to finish? What Projects do you want to create to follow up on events that already happened? Peer into the future: what will you need to plan or prepare? What goals do you need to set? Who do you need to catch up with? Example: \u201cI need to figure out what we\u2019ll do at that team off-site\u201d \u2192 Plan team offsite agenda Next Actions (To Do) list What things are you already doing that are actually part of a bigger project you haven\u2019t identified yet? Example: \u201cI need to follow up with that house cleaner\u201d \u2192 Contact house cleaner and schedule weekly cleaning time Agendas What about communication? Are there any actions that you\u2019ve already scheduled with people that are part of a bigger project? Example: \u201cI need to call Linda back\u201d \u2192 Develop sales campaign with Linda Briefcase/bag/wallet/purse What things have you saved because they remind you to take an action? What have you kept because you need it for a project? Digital environment Look at your computer desktop, downloads folder, documents folder, bookmarks, emails, and open browser tabs. What are you keeping around because it is part of a project that you can name and organize? Example: PDF article on desktop \u2192 Read draft article and give feedback to co-author Processes or procedures Which processes in your work or life could be more efficient, streamlined, or purposeful? What do you do regularly that takes too long, is too difficult, or you haven\u2019t thought through? Example: Grocery shopping \u2192 Collect list of staple food supplies and set up recurring deliveries on Amazon Fresh Creative opportunities What would you like to learn, develop, build, pursue, start, explore, or play with as a project? Example: Flyer for improv class \u2192 Look up and schedule improv class Competence building Are there skills you\u2019d like to learn? Which hobbies would you like to start? What kind of project could advance your career, or make your life more fun or interesting? Example: Email confirmation for online course purchase \u2192 Complete online course on Python Don\u2019t worry about the exact outcome of each Project you identify at this stage, or whether you\u2019re actually committed to it. Don\u2019t let anything keep you from writing down something that might possibly be a Project. Also, don\u2019t fret over how you name them. You might finish this step with a Brain Dump that looks something like this. Yours will probably be quite a bit longer. Schedule doctor\u2019s appointment to diagnose back pain Plan team offsite agenda Find house cleaner and schedule weekly cleaning time Develop sales campaign with Linda Follow up with potential contractor from conference Package up and mail document to business partner Read draft article and give feedback to co-author Collect list of staple food supplies and set up recurring deliveries Look up and schedule improv class Complete online course on Python Step 2: Clarify Refine your list In the previous step, you got every potential project off your mind and onto a list, where you can view it objectively. Now it\u2019s time to do another pass and clean up your list to make it more clear and actionable. Continue using the Project List template for this step, moving items from the Brain Dump section to the Project List section as you clean them up. Some options to consider: Delete anything that is obviously not a Project Sometimes you need to write a thing down to realize it\u2019s not something you\u2019re committed to or truly interested in. Delete and let it go. Move \u201csomeday/maybe\u201d projects to the bottom of the list Move anything you might be interested in doing eventually, or you\u2019re not sure you want to do, to the bottom of the list. Merge projects that are tied to the same outcome Delegate any appropriate Project Step 3: Organize Identify the outcome or intention for each Project Rewrite your Project titles to make clear how each Project leads to its desired outcome Write the outcomes/intentions you\u2019ve identified for each Project in the second column, and the time frame or deadline in the third column. Begin every Project with a verb that describes DONE: finalize, submit, deliver, complete, send, clarify, organize, update, implement, resolve, submit, reorganize, design, roll out, install, set up, publish, complete. If you find yourself using verbs like manage, oversee, ensure, or maximize, it\u2019s probably an ongoing Area of Responsibility, not a Project. An Area of Responsibility is an ongoing part of your life in which you\u2019ve committed to a certain standard, like Health, Finances, Apartment, or Productivity. These are also important to keep track of, but don\u2019t belong on your Project List. Review your GTD lists weekly Look over your entire list from a bird\u2019s eye view, and ask some fundamental questions: Does this list fully represent my priorities, interests, values, and long-term goals? In which Areas of Responsibility do I have too many Projects? Not enough? Are there important outcomes or goals that don\u2019t have any Projects targeted at them? Am I spending time or attention on something that has no clear outcome or goal? If anything is unclear, ask yourself, \u201cWhat am I really trying to accomplish here?\u201d or \u201cWhat\u2018s the point of doing this?\u201d With this whole inventory in front of you, are there any Projects you want to kill, postpone, renegotiate, or clarify? Bonus step: Prioritize your list on the Project level Prioritizing individual tasks or pieces of information as they arrive can be exhausting because we\u2019re trying to decide several things at once: Is this important? Is it urgent? Does it belong to a Project that\u2019s important? Does it belong to a Project that\u2019s urgent? Is this an insignificant detail, or a crucial one? You can eliminate a lot of this decision-making by pre-prioritizing your work on the Project level, instead of at the task level. Sort the list from highest to lowest priority, according to how much of your mental bandwidth each Project should be taking up in any given week. Doing this weekly will help make the granular decisions during the week much easier. Step 5: Execute Regain control and be more productive With a clear Project List in hand, you are ready to execute on your tasks without having to remember which balls you have in the air. The goal of GTD is for stress, tensions, and obstacles to trigger new projects, instead of emotions. If you do this review from a more calm and balanced perspective, away from the chaos of the workday, you\u2019ll find it easier to maintain perspective throughout the week. You\u2019ll start thinking less like an individual project manager, and more like a project portfolio manager, balancing all the risks and rewards of your project portfolio as a whole.","title":"Getting Started With GTD Templates | Evernote | Evernote Blog"},{"location":"Highlights/Readwise/Articles/Getting%20Started%20With%20GTD%20Templates%20%20Evernote%20%20Evernote%20Blog/#getting-started-with-gtd-templates-evernote-evernote-blog","text":"","title":"Getting Started With GTD Templates | Evernote | Evernote Blog"},{"location":"Highlights/Readwise/Articles/Getting%20Started%20With%20GTD%20Templates%20%20Evernote%20%20Evernote%20Blog/#metadata","text":"Author: Full Title: Getting Started With GTD Templates | Evernote | Evernote Blog Category: #Type/Highlights/Article URL: https://evernote.com/blog/getting-started-with-gtd-templates/","title":"Metadata"},{"location":"Highlights/Readwise/Articles/Getting%20Started%20With%20GTD%20Templates%20%20Evernote%20%20Evernote%20Blog/#highlights","text":"Here are the steps to stress-free productivity that GTD recommends: CAPTURE every commitment in your life in a trusted place outside your head (like a software program or a piece of paper) CLARIFY exactly what each commitment is, the desired outcome of fulfilling it, and only the very next action required ORGANIZE reminders of these actions in a Project List REFLECT on your list on a weekly basis to make sure it\u2019s clear, current, and complete EXECUTE on your actions by making intuitive decisions about what to do next, trusting your system to not let anything fall through the cracks The Project List Mindsweep The Project List Mindsweep is extremely valuable for anyone, whether you\u2019ve never heard of GTD or have been a dedicated practitioner for years. Most people couldn\u2019t give you a full inventory of their projects if their life depended on it. Yet they also tell you they have too much on their plate, and \u201cdon\u2019t have the bandwidth.\u201d Without a comprehensive Project List, you can never know how much capacity you really have. But GTD asks us to adopt a much smaller definition for what qualifies as a Project: \u201cany outcome you\u2019re committed to completing that requires more than one action step.\u201d Step 1: Capture Do a Brain Dump Don\u2019t judge. Don\u2019t filter. Don\u2019t try to clarify, process, organize, or categorize them as you capture them. That happens later. Use the Project List template for this step. We\u2019ll organize and clarify the list of projects you come up with in later steps. Here are some common places to look: Your mind What\u2019s worrying you? Identify that as a Project. Name it so you can tame it. What\u2019s taking more mental bandwidth than it deserves? What activities aren\u2019t you making consistent progress on that could benefit from a bit of structure? Example: \u201cMy back hurts\u201d \u2192 Schedule doctor\u2019s appointment to diagnose back pain Calendar Look a few weeks into the past on your calendar: what do you need to follow up on? What do you need to finish? What Projects do you want to create to follow up on events that already happened? Peer into the future: what will you need to plan or prepare? What goals do you need to set? Who do you need to catch up with? Example: \u201cI need to figure out what we\u2019ll do at that team off-site\u201d \u2192 Plan team offsite agenda Next Actions (To Do) list What things are you already doing that are actually part of a bigger project you haven\u2019t identified yet? Example: \u201cI need to follow up with that house cleaner\u201d \u2192 Contact house cleaner and schedule weekly cleaning time Agendas What about communication? Are there any actions that you\u2019ve already scheduled with people that are part of a bigger project? Example: \u201cI need to call Linda back\u201d \u2192 Develop sales campaign with Linda Briefcase/bag/wallet/purse What things have you saved because they remind you to take an action? What have you kept because you need it for a project? Digital environment Look at your computer desktop, downloads folder, documents folder, bookmarks, emails, and open browser tabs. What are you keeping around because it is part of a project that you can name and organize? Example: PDF article on desktop \u2192 Read draft article and give feedback to co-author Processes or procedures Which processes in your work or life could be more efficient, streamlined, or purposeful? What do you do regularly that takes too long, is too difficult, or you haven\u2019t thought through? Example: Grocery shopping \u2192 Collect list of staple food supplies and set up recurring deliveries on Amazon Fresh Creative opportunities What would you like to learn, develop, build, pursue, start, explore, or play with as a project? Example: Flyer for improv class \u2192 Look up and schedule improv class Competence building Are there skills you\u2019d like to learn? Which hobbies would you like to start? What kind of project could advance your career, or make your life more fun or interesting? Example: Email confirmation for online course purchase \u2192 Complete online course on Python Don\u2019t worry about the exact outcome of each Project you identify at this stage, or whether you\u2019re actually committed to it. Don\u2019t let anything keep you from writing down something that might possibly be a Project. Also, don\u2019t fret over how you name them. You might finish this step with a Brain Dump that looks something like this. Yours will probably be quite a bit longer. Schedule doctor\u2019s appointment to diagnose back pain Plan team offsite agenda Find house cleaner and schedule weekly cleaning time Develop sales campaign with Linda Follow up with potential contractor from conference Package up and mail document to business partner Read draft article and give feedback to co-author Collect list of staple food supplies and set up recurring deliveries Look up and schedule improv class Complete online course on Python Step 2: Clarify Refine your list In the previous step, you got every potential project off your mind and onto a list, where you can view it objectively. Now it\u2019s time to do another pass and clean up your list to make it more clear and actionable. Continue using the Project List template for this step, moving items from the Brain Dump section to the Project List section as you clean them up. Some options to consider: Delete anything that is obviously not a Project Sometimes you need to write a thing down to realize it\u2019s not something you\u2019re committed to or truly interested in. Delete and let it go. Move \u201csomeday/maybe\u201d projects to the bottom of the list Move anything you might be interested in doing eventually, or you\u2019re not sure you want to do, to the bottom of the list. Merge projects that are tied to the same outcome Delegate any appropriate Project Step 3: Organize Identify the outcome or intention for each Project Rewrite your Project titles to make clear how each Project leads to its desired outcome Write the outcomes/intentions you\u2019ve identified for each Project in the second column, and the time frame or deadline in the third column. Begin every Project with a verb that describes DONE: finalize, submit, deliver, complete, send, clarify, organize, update, implement, resolve, submit, reorganize, design, roll out, install, set up, publish, complete. If you find yourself using verbs like manage, oversee, ensure, or maximize, it\u2019s probably an ongoing Area of Responsibility, not a Project. An Area of Responsibility is an ongoing part of your life in which you\u2019ve committed to a certain standard, like Health, Finances, Apartment, or Productivity. These are also important to keep track of, but don\u2019t belong on your Project List. Review your GTD lists weekly Look over your entire list from a bird\u2019s eye view, and ask some fundamental questions: Does this list fully represent my priorities, interests, values, and long-term goals? In which Areas of Responsibility do I have too many Projects? Not enough? Are there important outcomes or goals that don\u2019t have any Projects targeted at them? Am I spending time or attention on something that has no clear outcome or goal? If anything is unclear, ask yourself, \u201cWhat am I really trying to accomplish here?\u201d or \u201cWhat\u2018s the point of doing this?\u201d With this whole inventory in front of you, are there any Projects you want to kill, postpone, renegotiate, or clarify? Bonus step: Prioritize your list on the Project level Prioritizing individual tasks or pieces of information as they arrive can be exhausting because we\u2019re trying to decide several things at once: Is this important? Is it urgent? Does it belong to a Project that\u2019s important? Does it belong to a Project that\u2019s urgent? Is this an insignificant detail, or a crucial one? You can eliminate a lot of this decision-making by pre-prioritizing your work on the Project level, instead of at the task level. Sort the list from highest to lowest priority, according to how much of your mental bandwidth each Project should be taking up in any given week. Doing this weekly will help make the granular decisions during the week much easier. Step 5: Execute Regain control and be more productive With a clear Project List in hand, you are ready to execute on your tasks without having to remember which balls you have in the air. The goal of GTD is for stress, tensions, and obstacles to trigger new projects, instead of emotions. If you do this review from a more calm and balanced perspective, away from the chaos of the workday, you\u2019ll find it easier to maintain perspective throughout the week. You\u2019ll start thinking less like an individual project manager, and more like a project portfolio manager, balancing all the risks and rewards of your project portfolio as a whole.","title":"Highlights"},{"location":"Highlights/Readwise/Articles/Getting%20Things%20Done%20Clarify/","text":"Getting Things Done: Clarify \u00b6 Metadata \u00b6 Author: [[joebuhlig.com]] Full Title: Getting Things Done: Clarify Category: #Type/Highlights/Article URL: https://joebuhlig.com/getting-things-done-clarify/ Highlights \u00b6 A lot of people write things down but fail to do anything with it afterwards. It just dies on the paper. Why write it down if you\u2019ll never look at it again? Tags: [[favorite]] Clarify is the process of taking each item in your inbox and making a decision about it. You\u2019ll empty your inboxes by deciding what you need to do with each item in them. The buckets There are eight places that you can put these items. To help visualize this, here is a link to the workflow map from David Allen that shows the process. Here are the eight buckets: Trash Throw it out. Honestly, if you\u2019re never going to do anything with it and you don\u2019t need it for reference, get rid of it. There\u2019s no need for it to stick around and clutter things up. Someday/Maybe You wrote down the name of a book you want to read, an app you want to try, or a business deal you might want to make in the future. They\u2019re items that you want to keep track of but don\u2019t have time for right now. Keep Someday/Maybe lists of those items. You\u2019ll want to come back to them when you have the bandwidth later on. Tickler A tickler helps you remember something that you want to make a decision on or use at a later time. There\u2019s a concert in the local park that you might want to attend, but you\u2019re not sure. You need a way to record that item and have it come back to you at a time when you can make a better decision. Or you may have information like a hotel confirmation that you don\u2019t need to see Reference There are always items that we need to hold on to indefinitely. Manuals, house closing papers, statements, confirmations, etc\u2026 You need some way to keep track of it all. Create a place where you can store this information and do it in a way that makes it easy to find what you\u2019re after. Tags: [[favorite]] Waiting For I\u2019ve found this to be an important bucket. It\u2019s a list of all the items that you are waiting to happen. You might be waiting on a package to arrive or you need a coworker to complete a task. Keep a list of the things you\u2019re waiting for. Next Action lists This is the big one. A large portion of the stuff you\u2019ll right down are actions you need to take. You have to put them on lists that you\u2019ll work from. And those lists are based on contexts. Contexts are lists of tasks that are organized by the tools, mindset, energy, or time you need to complete the action. You can think of contexts as tagging the action so you can consolidate them later. Here are some examples: Calls - a list of all the phone calls you need to make. MacBook - a list of items that you can only work on when you\u2019re on your laptop. Sprints - a list of tasks that you can do from anywhere on any device that will take 10 minutes or less. Read/Review - a list of items that you need to read through. Grocery Store - a list of the things you need from the store. Mom - a list of things you need to talk to mom about. Calendar The calendar is something that most of us have used for a long time. But what do you put on it? The only thing you should really put on your calendar are items that you\u2019re committed to doing at a specific time in the day. To-dos that don\u2019t have a time associated with them need to be on your Next Action lists. Keep your calendar true to your commitments. It becomes the hard landscape that you follow for the day. Project List Keep a list of the projects you\u2019re working on. Remember, a project is defined by having two or more actions in order to complete it. Even changing a light bulb could be a project if you need to buy the light bulb and then replace it. That\u2019s two steps and would be called a project. If you maintain a list of these projects, you don\u2019t have to worry about forgetting to complete one of them. You also have a point of reference for making decisions on what comes next for the project. Tags: [[favorite]] Deciding on the bucket The nice thing about the Clarify step in the workflow is that it has it\u2019s own process to help you decide what to do with the stuff in your inboxes. It becomes intuitive over time, but starting out I found myself referring to this workflow map a lot. Here are the four questions to ask yourself when deciding where to put each item: What is it? Go to your inbox and pick the first item. What is it? Sounds like a simple question, but it\u2019s sometimes harder to decide than you think. Is it a manual, a random thought, or a business idea? You can\u2019t decide what to do with it if you don\u2019t know what it is. Is it actionable? Is it something you need act on? If not, do you need to hold on to it? If the answer is no, trash it. If you need to keep it but don\u2019t need to act on it right away, you can put it on a Someday/Maybe list for later, store it in your Reference system, or add it to your Tickler. Tags: [[favorite]] If it is something you need to act on soon, what\u2019s the next action? Tags: [[favorite]] What\u2019s the next action? By asking the simple question, \u201cWhat comes next?\u201d we\u2019re changing the noun into a verb. We\u2019re taking \u201cNew furnace\u201d and turning it into \u201cGoogle reviews for a new furnace.\u201d What is the next physical thing you need to do in order to make progress on it? Is there a phone call you need to make? Do you need to pick something up at the store? Is there an email to send, a file to create, a book to read, or an article to review? Do you need to Google something? The action can take a lot of different forms, but identifying it is key. Pro tip: Try asking this question at the end of meetings or at the end of a conversation with someone. It can change the pace of your work and provide a lot of clarity. Do it, delegate it, or defer it? With the next action decided, you have three options \u2014 do it, delegate it, or defer it. If it\u2019s possible to complete the action in two minutes or less, do it right then. It\u2019ll take you longer to store it and come back to it than it would take to do it right away. So get it out of the way. Maybe you\u2019re not the right person to be doing the action at all. If that\u2019s the case, then you need to take the action of giving it to someone else and store it on your Waiting For list. If it\u2019s something you need to do later, then defer it. Put it on one of your Next Action lists. If it\u2019s something that needs to be done on a specific day, it goes on your calendar. If it\u2019s an action that has multiple steps, add it to your Project List. You don\u2019t want to complete the first action item and then lose track of the stuff that comes later. What comes next? The Clarify step is probably one of most helpful steps in the workflow because it helps get things out of your head and into an external brain of some kind. It helps you clear your mind and opens up your creativity. The next step in the workflow is Organize. It\u2019s important to organize each of these buckets in a useful way, and there are a LOT of tools available to help. This is a series about the productivity framework Getting Things Done by David Allen. You can find the entire series at the following links: Getting Things Done: Introduction Getting Things Done: Capture Getting Things Done: Clarify Getting Things Done: Organize Getting Things Done: Reflect Getting Things Done: Engage Getting Things Done: A Day in the Life","title":"Getting Things Done: Clarify"},{"location":"Highlights/Readwise/Articles/Getting%20Things%20Done%20Clarify/#getting-things-done-clarify","text":"","title":"Getting Things Done: Clarify"},{"location":"Highlights/Readwise/Articles/Getting%20Things%20Done%20Clarify/#metadata","text":"Author: [[joebuhlig.com]] Full Title: Getting Things Done: Clarify Category: #Type/Highlights/Article URL: https://joebuhlig.com/getting-things-done-clarify/","title":"Metadata"},{"location":"Highlights/Readwise/Articles/Getting%20Things%20Done%20Clarify/#highlights","text":"A lot of people write things down but fail to do anything with it afterwards. It just dies on the paper. Why write it down if you\u2019ll never look at it again? Tags: [[favorite]] Clarify is the process of taking each item in your inbox and making a decision about it. You\u2019ll empty your inboxes by deciding what you need to do with each item in them. The buckets There are eight places that you can put these items. To help visualize this, here is a link to the workflow map from David Allen that shows the process. Here are the eight buckets: Trash Throw it out. Honestly, if you\u2019re never going to do anything with it and you don\u2019t need it for reference, get rid of it. There\u2019s no need for it to stick around and clutter things up. Someday/Maybe You wrote down the name of a book you want to read, an app you want to try, or a business deal you might want to make in the future. They\u2019re items that you want to keep track of but don\u2019t have time for right now. Keep Someday/Maybe lists of those items. You\u2019ll want to come back to them when you have the bandwidth later on. Tickler A tickler helps you remember something that you want to make a decision on or use at a later time. There\u2019s a concert in the local park that you might want to attend, but you\u2019re not sure. You need a way to record that item and have it come back to you at a time when you can make a better decision. Or you may have information like a hotel confirmation that you don\u2019t need to see Reference There are always items that we need to hold on to indefinitely. Manuals, house closing papers, statements, confirmations, etc\u2026 You need some way to keep track of it all. Create a place where you can store this information and do it in a way that makes it easy to find what you\u2019re after. Tags: [[favorite]] Waiting For I\u2019ve found this to be an important bucket. It\u2019s a list of all the items that you are waiting to happen. You might be waiting on a package to arrive or you need a coworker to complete a task. Keep a list of the things you\u2019re waiting for. Next Action lists This is the big one. A large portion of the stuff you\u2019ll right down are actions you need to take. You have to put them on lists that you\u2019ll work from. And those lists are based on contexts. Contexts are lists of tasks that are organized by the tools, mindset, energy, or time you need to complete the action. You can think of contexts as tagging the action so you can consolidate them later. Here are some examples: Calls - a list of all the phone calls you need to make. MacBook - a list of items that you can only work on when you\u2019re on your laptop. Sprints - a list of tasks that you can do from anywhere on any device that will take 10 minutes or less. Read/Review - a list of items that you need to read through. Grocery Store - a list of the things you need from the store. Mom - a list of things you need to talk to mom about. Calendar The calendar is something that most of us have used for a long time. But what do you put on it? The only thing you should really put on your calendar are items that you\u2019re committed to doing at a specific time in the day. To-dos that don\u2019t have a time associated with them need to be on your Next Action lists. Keep your calendar true to your commitments. It becomes the hard landscape that you follow for the day. Project List Keep a list of the projects you\u2019re working on. Remember, a project is defined by having two or more actions in order to complete it. Even changing a light bulb could be a project if you need to buy the light bulb and then replace it. That\u2019s two steps and would be called a project. If you maintain a list of these projects, you don\u2019t have to worry about forgetting to complete one of them. You also have a point of reference for making decisions on what comes next for the project. Tags: [[favorite]] Deciding on the bucket The nice thing about the Clarify step in the workflow is that it has it\u2019s own process to help you decide what to do with the stuff in your inboxes. It becomes intuitive over time, but starting out I found myself referring to this workflow map a lot. Here are the four questions to ask yourself when deciding where to put each item: What is it? Go to your inbox and pick the first item. What is it? Sounds like a simple question, but it\u2019s sometimes harder to decide than you think. Is it a manual, a random thought, or a business idea? You can\u2019t decide what to do with it if you don\u2019t know what it is. Is it actionable? Is it something you need act on? If not, do you need to hold on to it? If the answer is no, trash it. If you need to keep it but don\u2019t need to act on it right away, you can put it on a Someday/Maybe list for later, store it in your Reference system, or add it to your Tickler. Tags: [[favorite]] If it is something you need to act on soon, what\u2019s the next action? Tags: [[favorite]] What\u2019s the next action? By asking the simple question, \u201cWhat comes next?\u201d we\u2019re changing the noun into a verb. We\u2019re taking \u201cNew furnace\u201d and turning it into \u201cGoogle reviews for a new furnace.\u201d What is the next physical thing you need to do in order to make progress on it? Is there a phone call you need to make? Do you need to pick something up at the store? Is there an email to send, a file to create, a book to read, or an article to review? Do you need to Google something? The action can take a lot of different forms, but identifying it is key. Pro tip: Try asking this question at the end of meetings or at the end of a conversation with someone. It can change the pace of your work and provide a lot of clarity. Do it, delegate it, or defer it? With the next action decided, you have three options \u2014 do it, delegate it, or defer it. If it\u2019s possible to complete the action in two minutes or less, do it right then. It\u2019ll take you longer to store it and come back to it than it would take to do it right away. So get it out of the way. Maybe you\u2019re not the right person to be doing the action at all. If that\u2019s the case, then you need to take the action of giving it to someone else and store it on your Waiting For list. If it\u2019s something you need to do later, then defer it. Put it on one of your Next Action lists. If it\u2019s something that needs to be done on a specific day, it goes on your calendar. If it\u2019s an action that has multiple steps, add it to your Project List. You don\u2019t want to complete the first action item and then lose track of the stuff that comes later. What comes next? The Clarify step is probably one of most helpful steps in the workflow because it helps get things out of your head and into an external brain of some kind. It helps you clear your mind and opens up your creativity. The next step in the workflow is Organize. It\u2019s important to organize each of these buckets in a useful way, and there are a LOT of tools available to help. This is a series about the productivity framework Getting Things Done by David Allen. You can find the entire series at the following links: Getting Things Done: Introduction Getting Things Done: Capture Getting Things Done: Clarify Getting Things Done: Organize Getting Things Done: Reflect Getting Things Done: Engage Getting Things Done: A Day in the Life","title":"Highlights"},{"location":"Highlights/Readwise/Articles/Getting%20Things%20Done%20Organize/","text":"Getting Things Done: Organize \u00b6 Metadata \u00b6 Author: Full Title: Getting Things Done: Organize Category: #Type/Highlights/Article URL: https://joebuhlig.com/getting-things-done-organize/ Highlights \u00b6 Organize. The favorite step of most GTDers. This is where you set up tools for tracking each bucket from the Clarify step. Reference Material For all the items you collect that have no action assigned, you\u2019ll need a place for long-term storage. If you\u2019re a paper person, you\u2019ll want to invest in a filing cabinet. David Allen suggests using an A-Z filing system to limit the number of places that something could be. If you\u2019re a paperless person, you\u2019ll be looking for some kind of long-term storage solution. The one that most have found to work well is Evernote. Another that is similar is OneNote. I prefer to have my reference material with me at all times, which led me to a cloud-based solution. I\u2019ve developed a split system between Evernote and DropBox. Evernote holds everything except actual files. For that I use a (dis)organized system in DropBox. List Manager Boiled down, GTD is about managing lists. That\u2019s it. You\u2019re looking for a list manager. Some are quite advanced and others are simple. You can use something robust like Omnifocus but you can also keep track of lists in a simple text file. The level of detail and the amount of functionality that you want is up to you. Keep in mind that the majority of what you\u2019re collecting will go here. Calendar It\u2019s best to only add items to your calendar that you need to be present for. That includes meetings, local events, commitments to your kids, or even agreements with yourself. Whatever they are, you will be there for them without question. To-dos and reminders are best kept in your list manager and tickler systems. Currently, I\u2019m using a mix of MS Exchange and Google Calendar. All commitments with another person go on the Exchange calendar so I\u2019m seen as \u201cbusy\u201d and to keep others from booking meetings during these times at work. Any agreements with myself that don\u2019t involve someone else go into my Google Calendar. These can include times for writing, intentional thinking, brainstorming, or administrative tasks. I keep them here so they don\u2019t mess with my availability on the Exchange server. I deviate from the rule of \u201cmeetings with a person\u201d in my Exchange calendar when I have an agreement with myself that I feel is important. Tickler The original concept behind the Tickler is an intricate system of 43 folders. You name 12 of them after the months and number the remaining 31 for each day of the month. You look at the folder for the month and day for today to see what items you need to see or make a decision on today. It\u2019s a system that worked well when we didn\u2019t have a computer in our pocket at all times. Today, we can use reminder applications and calendars to make the Tickler more robust than checking a folder in the morning. I\u2019m using a separate calendar in Google for events that I want to remember but haven\u2019t committed to. I set up a reminder on an Evernote note with information I want sent to myself at a specific time. If it\u2019s just a simple reminder, I\u2019ll add it to Apple\u2019s Reminders on the iPhone.","title":"Getting Things Done: Organize"},{"location":"Highlights/Readwise/Articles/Getting%20Things%20Done%20Organize/#getting-things-done-organize","text":"","title":"Getting Things Done: Organize"},{"location":"Highlights/Readwise/Articles/Getting%20Things%20Done%20Organize/#metadata","text":"Author: Full Title: Getting Things Done: Organize Category: #Type/Highlights/Article URL: https://joebuhlig.com/getting-things-done-organize/","title":"Metadata"},{"location":"Highlights/Readwise/Articles/Getting%20Things%20Done%20Organize/#highlights","text":"Organize. The favorite step of most GTDers. This is where you set up tools for tracking each bucket from the Clarify step. Reference Material For all the items you collect that have no action assigned, you\u2019ll need a place for long-term storage. If you\u2019re a paper person, you\u2019ll want to invest in a filing cabinet. David Allen suggests using an A-Z filing system to limit the number of places that something could be. If you\u2019re a paperless person, you\u2019ll be looking for some kind of long-term storage solution. The one that most have found to work well is Evernote. Another that is similar is OneNote. I prefer to have my reference material with me at all times, which led me to a cloud-based solution. I\u2019ve developed a split system between Evernote and DropBox. Evernote holds everything except actual files. For that I use a (dis)organized system in DropBox. List Manager Boiled down, GTD is about managing lists. That\u2019s it. You\u2019re looking for a list manager. Some are quite advanced and others are simple. You can use something robust like Omnifocus but you can also keep track of lists in a simple text file. The level of detail and the amount of functionality that you want is up to you. Keep in mind that the majority of what you\u2019re collecting will go here. Calendar It\u2019s best to only add items to your calendar that you need to be present for. That includes meetings, local events, commitments to your kids, or even agreements with yourself. Whatever they are, you will be there for them without question. To-dos and reminders are best kept in your list manager and tickler systems. Currently, I\u2019m using a mix of MS Exchange and Google Calendar. All commitments with another person go on the Exchange calendar so I\u2019m seen as \u201cbusy\u201d and to keep others from booking meetings during these times at work. Any agreements with myself that don\u2019t involve someone else go into my Google Calendar. These can include times for writing, intentional thinking, brainstorming, or administrative tasks. I keep them here so they don\u2019t mess with my availability on the Exchange server. I deviate from the rule of \u201cmeetings with a person\u201d in my Exchange calendar when I have an agreement with myself that I feel is important. Tickler The original concept behind the Tickler is an intricate system of 43 folders. You name 12 of them after the months and number the remaining 31 for each day of the month. You look at the folder for the month and day for today to see what items you need to see or make a decision on today. It\u2019s a system that worked well when we didn\u2019t have a computer in our pocket at all times. Today, we can use reminder applications and calendars to make the Tickler more robust than checking a folder in the morning. I\u2019m using a separate calendar in Google for events that I want to remember but haven\u2019t committed to. I set up a reminder on an Evernote note with information I want sent to myself at a specific time. If it\u2019s just a simple reminder, I\u2019ll add it to Apple\u2019s Reminders on the iPhone.","title":"Highlights"},{"location":"Highlights/Readwise/Articles/Getting%20Things%20Done%20With%20Todoist%20%E2%80%93%20My%20GTD%20Setup/","text":"Getting Things Done With Todoist \u2013 My GTD Setup \u00b6 Metadata \u00b6 Author: Full Title: Getting Things Done With Todoist \u2013 My GTD Setup Category: #Type/Highlights/Article URL: https://nebulous.wordpress.com/2014/12/11/getting-things-done-with-todoist/ Highlights \u00b6 Projects: I do a few things to keep things simple and organized. I start by defining a few projects. In GTD terms, they are not still projects (which need to be finite and time bound), but we can then get into the ability of Todoist to create nested projects \u2013 which will let us create actual sub-categories under these and also projects. The categories I have are: Work, Personal, Recurring Activities, For Later and Lists of Stuff. I figure that I can track most of my stuff under these categories. Under Recurring Activities, as an example, I put my Daily Review and Weekly Review activities and make them recur \u2013 so they show up in my Today list at the right time. Context: An important aspect of GTD, is to establish context for your tasks and activities. And the two most important contexts are When and Where. For this, you need to use Labels. You can set up as few \u2013 or as many \u2013 contexts as you please. But what I have found is that I generally use the superset I have listed here. Tags: [[favorite]] For When, I have set up 7 contexts: Now, Next, Soon, Later, Someday, Waiting, Weekend. I have assigned numbers to them so I can pick them off a list by just hitting a number. Now is things that need to be worked on immediately. Next is what will be done next and so on. Waiting is one that I found that I can use when I have done my piece and am waiting on someone else before I can proceed. For Where, I have just 5 contexts: Home, Work, Internet, Phone, Town. Home and Work are locations that I need to get activities done at. Town is a catch all for when I am around town and need to get activities done (Groceries for example). Internet is a catchall for aspects related to web browsing, email, etc. And Phone is for making calls. Getting Things Done: There are many (seriously \u2013 do a google search) resources around how this works, so I am not going to do a deep dive into this too much. Some key things I think you need to do are: Touch everything once: It is important that you touch everything that needs an action only once \u2013 so that you can be productive. So \u2013 it is important that you have a reliable and always accessible system in which you can file things. Todoist and Evernote are excellent tools to achieve this. Learn about Do, Delegate, Defer, Delete: So everything that you need to deal with will fall into one of these categories. Do if it will take you less than 2 minutes to accomplish. Delegate if someone else can do it (remember to attach a waiting context to it if you need to follow up). Defer if you intend to come back to it later (attach a time context to it). And my favorite, Delete if you do not need to take any action (if you are someone that does not like to delete, you may archive instead \u2013 but get it out of your inbox). Capture Everything: Everything that needs an action from you needs to be captured in your system (in this case, Todoist). Just add it to your Todoist inbox \u2013 don\u2019t worry about anything else (contexts, timing, etc.) at this time. Conduct periodic sweeps: I generally do sweeps every 2-3 hours during the day. The intent of the sweep is to go through the inbox and attach contexts, timings, etc. to tasks. Also a good time to categorize activities and identify projects and break those down. This is also where you may want to look at the Next context and reprioritize some of those to immediate or Now. Focus on the immediate/Now: Your goal is to clear your Now list \u2013 so block off a piece of time (with no distractions \u2013 AT ALL) and start working through the tasks on your Now list. Experience the endorphin rush as you check off those tasks. Rinse and repeat. Conduct Daily Reviews: I set up my daily reviews for the first 10-15 minutes of my day. This lets me gather my thoughts and put together the activities I need to get accomplished that day. It is also a good opportunity to do a review of the task list to make sure there are no pending activities \u2013 and also to capture anything else that comes into your mind that needs action. Remember that this is a planning and capture activity \u2013 leave the detailing for your periodic sweeps. Conduct Weekly Reviews: My weekly reviews are the last thing I do in my work week \u2013 and I take 30 minutes for it. It helps me review the progress I made this week and helps me plan out aspects I need to get done next week. It is a good time to be appreciative and self congratulatory of the progress you have made \u2013 or contemplative of the lack of progress, and the contributing reasons thereof. Basically, you are focusing on strategy, learning and improvement as a core part of this exercise.","title":"Getting Things Done With Todoist \u2013 My GTD Setup"},{"location":"Highlights/Readwise/Articles/Getting%20Things%20Done%20With%20Todoist%20%E2%80%93%20My%20GTD%20Setup/#getting-things-done-with-todoist-my-gtd-setup","text":"","title":"Getting Things Done With Todoist \u2013 My GTD Setup"},{"location":"Highlights/Readwise/Articles/Getting%20Things%20Done%20With%20Todoist%20%E2%80%93%20My%20GTD%20Setup/#metadata","text":"Author: Full Title: Getting Things Done With Todoist \u2013 My GTD Setup Category: #Type/Highlights/Article URL: https://nebulous.wordpress.com/2014/12/11/getting-things-done-with-todoist/","title":"Metadata"},{"location":"Highlights/Readwise/Articles/Getting%20Things%20Done%20With%20Todoist%20%E2%80%93%20My%20GTD%20Setup/#highlights","text":"Projects: I do a few things to keep things simple and organized. I start by defining a few projects. In GTD terms, they are not still projects (which need to be finite and time bound), but we can then get into the ability of Todoist to create nested projects \u2013 which will let us create actual sub-categories under these and also projects. The categories I have are: Work, Personal, Recurring Activities, For Later and Lists of Stuff. I figure that I can track most of my stuff under these categories. Under Recurring Activities, as an example, I put my Daily Review and Weekly Review activities and make them recur \u2013 so they show up in my Today list at the right time. Context: An important aspect of GTD, is to establish context for your tasks and activities. And the two most important contexts are When and Where. For this, you need to use Labels. You can set up as few \u2013 or as many \u2013 contexts as you please. But what I have found is that I generally use the superset I have listed here. Tags: [[favorite]] For When, I have set up 7 contexts: Now, Next, Soon, Later, Someday, Waiting, Weekend. I have assigned numbers to them so I can pick them off a list by just hitting a number. Now is things that need to be worked on immediately. Next is what will be done next and so on. Waiting is one that I found that I can use when I have done my piece and am waiting on someone else before I can proceed. For Where, I have just 5 contexts: Home, Work, Internet, Phone, Town. Home and Work are locations that I need to get activities done at. Town is a catch all for when I am around town and need to get activities done (Groceries for example). Internet is a catchall for aspects related to web browsing, email, etc. And Phone is for making calls. Getting Things Done: There are many (seriously \u2013 do a google search) resources around how this works, so I am not going to do a deep dive into this too much. Some key things I think you need to do are: Touch everything once: It is important that you touch everything that needs an action only once \u2013 so that you can be productive. So \u2013 it is important that you have a reliable and always accessible system in which you can file things. Todoist and Evernote are excellent tools to achieve this. Learn about Do, Delegate, Defer, Delete: So everything that you need to deal with will fall into one of these categories. Do if it will take you less than 2 minutes to accomplish. Delegate if someone else can do it (remember to attach a waiting context to it if you need to follow up). Defer if you intend to come back to it later (attach a time context to it). And my favorite, Delete if you do not need to take any action (if you are someone that does not like to delete, you may archive instead \u2013 but get it out of your inbox). Capture Everything: Everything that needs an action from you needs to be captured in your system (in this case, Todoist). Just add it to your Todoist inbox \u2013 don\u2019t worry about anything else (contexts, timing, etc.) at this time. Conduct periodic sweeps: I generally do sweeps every 2-3 hours during the day. The intent of the sweep is to go through the inbox and attach contexts, timings, etc. to tasks. Also a good time to categorize activities and identify projects and break those down. This is also where you may want to look at the Next context and reprioritize some of those to immediate or Now. Focus on the immediate/Now: Your goal is to clear your Now list \u2013 so block off a piece of time (with no distractions \u2013 AT ALL) and start working through the tasks on your Now list. Experience the endorphin rush as you check off those tasks. Rinse and repeat. Conduct Daily Reviews: I set up my daily reviews for the first 10-15 minutes of my day. This lets me gather my thoughts and put together the activities I need to get accomplished that day. It is also a good opportunity to do a review of the task list to make sure there are no pending activities \u2013 and also to capture anything else that comes into your mind that needs action. Remember that this is a planning and capture activity \u2013 leave the detailing for your periodic sweeps. Conduct Weekly Reviews: My weekly reviews are the last thing I do in my work week \u2013 and I take 30 minutes for it. It helps me review the progress I made this week and helps me plan out aspects I need to get done next week. It is a good time to be appreciative and self congratulatory of the progress you have made \u2013 or contemplative of the lack of progress, and the contributing reasons thereof. Basically, you are focusing on strategy, learning and improvement as a core part of this exercise.","title":"Highlights"},{"location":"Highlights/Readwise/Articles/Grant%20Ammons%20-%20How%20to%20Efficiently%20Manage%20Your%20Dotfiles/","text":"Grant Ammons - How to Efficiently Manage Your Dotfiles \u00b6 Metadata \u00b6 Author: Full Title: Grant Ammons - How to Efficiently Manage Your Dotfiles Category: #Type/Highlights/Article URL: https://grantammons.me/2017/11/26/efficiently-managing-dotfiles/ Highlights \u00b6 It\u2019s a good idea to store your dotfiles in Github, under the \u201cspecial\u201d name dotfiles (by convention). Most people do not actually put the dots in front of the filenames they store in the repo. So for instance, in the repo, your .vimrc would actually be stored as vimrc. Any personal executable scripts you have should also be stored here, in a bin folder. You can then set up your PATH to include ~/.bin to have access to those scripts. Installing dotfiles Using an automated tool to install dotfiles as symlinks is a best practice. The installation tool will create symlinks of the files in your dotfiles repo, in the correct location: Secret management Originally, I was recommending a solution based on keeping secrets stored in a ~/.secrets file with the secrets stored as environment variables. This emulates Heroku\u2019s 12-factor approach. However, after talking with colleagues, this approach is not ideal for a desktop environment, and here\u2019s why: You now have a plaintext file on your hard drive that is storing sensitive information. There are tools for handling sensitive info, so use them! Crash reports that get shipped off usually include environment variables. You don\u2019t have control over where your secrets go. On a desktop machine, processes can easily spawn many sub-processes, each of which now has access to sensitive environment variables. A good alternative is to Use a password store like pass or lpass and store sensitive info as a note. You can write a quick script to decrypt and use in an environment variable as needed. It explicitly limits the scope of how far sensitive information can travel, and it keeps this info behind your passphrase. Using a curated set of base dotfiles We can go deeper! Many people (including me) use a curated set of dotfiles as a \u201cbase\u201d to build upon. For my workflow, using Thoughtbot\u2019s dotfiles is a perfect starting point: Their starting vim configuration includes vim-plug, Ag, Rails.vim, and Ctrl-P out of the box. Sensible defaults for using git, rspec, tmux and ag. When using Thoughtbot\u2019s dotfiles, your own personal configs would go into ~/dotfiles-local. The benefits of using a set of base dotfiles is that someone has already culled together best practices. A drawback, however, is the cognitive load associated with actually learning what is in them, how they work, what shortcuts they provide. If you\u2019re declaring dotfile bankruptcy (which I have, twice), or are just starting out, it\u2019s worth considering base dotfiles that are sensible. I like Thoughtbot, and I consider their dotfiles sensible, which is why I chose them as a good base.","title":"Grant Ammons - How to Efficiently Manage Your Dotfiles"},{"location":"Highlights/Readwise/Articles/Grant%20Ammons%20-%20How%20to%20Efficiently%20Manage%20Your%20Dotfiles/#grant-ammons-how-to-efficiently-manage-your-dotfiles","text":"","title":"Grant Ammons - How to Efficiently Manage Your Dotfiles"},{"location":"Highlights/Readwise/Articles/Grant%20Ammons%20-%20How%20to%20Efficiently%20Manage%20Your%20Dotfiles/#metadata","text":"Author: Full Title: Grant Ammons - How to Efficiently Manage Your Dotfiles Category: #Type/Highlights/Article URL: https://grantammons.me/2017/11/26/efficiently-managing-dotfiles/","title":"Metadata"},{"location":"Highlights/Readwise/Articles/Grant%20Ammons%20-%20How%20to%20Efficiently%20Manage%20Your%20Dotfiles/#highlights","text":"It\u2019s a good idea to store your dotfiles in Github, under the \u201cspecial\u201d name dotfiles (by convention). Most people do not actually put the dots in front of the filenames they store in the repo. So for instance, in the repo, your .vimrc would actually be stored as vimrc. Any personal executable scripts you have should also be stored here, in a bin folder. You can then set up your PATH to include ~/.bin to have access to those scripts. Installing dotfiles Using an automated tool to install dotfiles as symlinks is a best practice. The installation tool will create symlinks of the files in your dotfiles repo, in the correct location: Secret management Originally, I was recommending a solution based on keeping secrets stored in a ~/.secrets file with the secrets stored as environment variables. This emulates Heroku\u2019s 12-factor approach. However, after talking with colleagues, this approach is not ideal for a desktop environment, and here\u2019s why: You now have a plaintext file on your hard drive that is storing sensitive information. There are tools for handling sensitive info, so use them! Crash reports that get shipped off usually include environment variables. You don\u2019t have control over where your secrets go. On a desktop machine, processes can easily spawn many sub-processes, each of which now has access to sensitive environment variables. A good alternative is to Use a password store like pass or lpass and store sensitive info as a note. You can write a quick script to decrypt and use in an environment variable as needed. It explicitly limits the scope of how far sensitive information can travel, and it keeps this info behind your passphrase. Using a curated set of base dotfiles We can go deeper! Many people (including me) use a curated set of dotfiles as a \u201cbase\u201d to build upon. For my workflow, using Thoughtbot\u2019s dotfiles is a perfect starting point: Their starting vim configuration includes vim-plug, Ag, Rails.vim, and Ctrl-P out of the box. Sensible defaults for using git, rspec, tmux and ag. When using Thoughtbot\u2019s dotfiles, your own personal configs would go into ~/dotfiles-local. The benefits of using a set of base dotfiles is that someone has already culled together best practices. A drawback, however, is the cognitive load associated with actually learning what is in them, how they work, what shortcuts they provide. If you\u2019re declaring dotfile bankruptcy (which I have, twice), or are just starting out, it\u2019s worth considering base dotfiles that are sensible. I like Thoughtbot, and I consider their dotfiles sensible, which is why I chose them as a good base.","title":"Highlights"},{"location":"Highlights/Readwise/Articles/Guest%20Post%20Using%20Todoist%20With%20MYN%20and%201MTD%20by%20Charles%20Olsen/","text":"Guest Post: Using Todoist With MYN and 1MTD by Charles Olsen \u00b6 Metadata \u00b6 Author: [[Michael Linenberger]] Full Title: Guest Post: Using Todoist With MYN and 1MTD by Charles Olsen Category: #Type/Highlights/Article URL: https://feedly.com/i/entry/o+Hb/2SWhsHwOl228ffK1QcYzBlMK3lVyz/Zz4ArACM=_17695237c7c:35e4f3:1e82ad8f Highlights \u00b6 The first exercise in the class was to write down the roles we serve in our lives. Everyone has multiple roles: employee, manager, spouse, parent, etc. We spent a few minutes thinking about our lives, and writing down all of the roles we play. Next, we were instructed to write a long-term goal for each of those roles. Then we were asked to write one or two short-term goals that would move us toward completing each of the long-term goals. Finally, we were told to examine each short-term goal and write down at least one or two specific actions that would move us forward toward accomplishing that goal. This is why I found Michael Linenberger\u2019s instruction to be transformational. His productivity systems \u2014 the One-Minute To-Do List (1MTD), Master Your Now (MYN), and One-Minute Project Manager (1MPM) \u2014 all revolve around the urgency of the tasks that you need to complete. One Minute To-Do List (1MTD) 1MTD is literally a \u201cOne-Minute To-Do List\u201d \u2014 you can get started in about a minute, and it is an excellent solution for managing up to about 100 tasks. 1MTD Urgency Zones In 1MTD, your tasks are arranged in lists depending on when they need to be done: today, within next 10 days, or after the next 10 days. We show this by creating Urgency Zones for storing the tasks. The CRITICAL NOW list is for tasks that must be done today. There should be no more than five tasks on this list. You should review this list several times each day \u2014 every hour is a good practice. The OPPORTUNITY NOW list is for tasks that are available to work on today, but do not have to be finished today. Some of these tasks may have a hard deadline of tomorrow, or any time in the next ten days. But they are not due today. This list can have up to 20 items, and should be reviewed every day, at the start of your work day. The OVER THE HORIZON list is for tasks that you don\u2019t need to work on or think about for the next 10 days. You should review this list every week. As you review the lists, drag the tasks up or down to meet your current plans. In each section, move the tasks into the order that you intend to work on them. If you see a task under OPPORTUNITY NOW or OVER THE HORIZON that must be completed today, move it up into the CRITICAL NOW section. If you need to track more than 100 tasks, you may need to move up to MYN. But if you\u2019re only exceeding the 100 task maximum by a small number of tasks, or only occasionally, you may be able to continue using 1MTD by adding another urgency zone. It\u2019s likely that the OVER THE HORIZON list is the one that has grown beyond the normal limit, and that it\u2019s becoming difficult to keep up with a full review of the list every week. If this list has grown beyond 75 tasks, you probably don\u2019t need to be reviewing the entire list every week. You can create another urgency zone for OVER THE HORIZON tasks that you will review once a month, rather than every week. I like to name this section OTH (monthly), and rename the original OVER THE HORIZON to OTH (weekly). With your long-term tasks split up into weekly and monthly reviews, it will be easier and less time-consuming to keep up with your reviews. Master Your Now (MYN) MYN expands the 1MTD concept by adding Start Dates to your tasks. Rather than seeing all of your tasks on the list, you will only see those that are relevant today. Tasks that you don\u2019t need to think about yet have a Start Date in the future, and will not appear on your list until you need to act on them. This approach allows you to track any number of tasks without being overwhelmed. It can be helpful to organize your tasks into projects. This could be as simple as having two projects: Home and Work. You may prefer create projects for specific goals. I like to start with a project called Routines, where I put all the boring tasks that have to be done but don\u2019t actually contribute to moving my goals forward. This includes bills that need to be paid, and routine maintenance for my house and car. Then I create projects as needed to store tasks I need to do for my goals. If you don\u2019t need to separate your tasks into projects, you can create a single project called \u201cTasks,\u201d \u201cTo-Do\u2019s,\u201d or perhaps \u201cReviewed,\u201d to indicate that you have reviewed these items and assigned the desired priority and date. You do need to have at least one project, because new tasks will sit in the Inbox until you have assigned them to a project. The next button, with the flag, will set the priority. The default is Priority 4, but all tasks in MYN should have a priority set. Since the task will not appear on your Today list until the start date arrives, think about the urgency of the task on that day. If you will absolutely need to finish the task on that day, it will be Critical Now, and should be set to Priority 1. If the task does not need to be completed on that day, it will be Opportunity Now and should be set to Priority If you don\u2019t need to work on that task within 10 days of that date, it will be Over the Horizon and should be set to Priority 3. When you select a date for a P1 task, this is obviously the date that you are going to work on the task \u2014 you have to finish it on that date. The One-Minute Project Manager (1MPM) approach is ideal for projects like this. And whether you are working the project alone or with others, Todoist is an excellent tool for tracking the project. Todoist will allow you to track the overall project plan and progress, and feed tasks to your MYN list (or the lists of other people) as appropriate. A quick review: 1MTD has three urgency zones; Critical Now: Must do todayOpportunity Now: do in 1 to 10 daysOver the Horizon: can wait beyond 10 days In 1MPM, project tasks are prioritized in these urgency zones: Critical This Week: tasks that must be completed this weekOpportunity This Week: tasks available to work on, that do not have to be completed this weekOver the Horizon or Brainstormed Tasks: initial list of all tasks needed to complete the project Step 1: Confirm that Critical Items from last week were completed and mark them as complete. Step 2: Chase down any incomplete tasks. If others are involved in the project, they may be meeting with you during the review (in person, by phone, by video call, etc.) and can explain what\u2019s going on so you can update the task. Step 3: Review the tasks in the OPPORTUNITY THIS WEEK section. Is it time to move some of these tasks to the CRITICAL THIS WEEK section? You can re-prioritize tasks by dragging them up within their current section, or dragging them to a different section. Step 4: Look at the BRAINSTORMED TASKS section \u2014 is it time to promote some tasks from there? If so, drag the tasks up to the OPPORTUNITY or CRITICAL section. Step 5: Move tasks onto someone\u2019s daily to-do list. Move Tasks to Daily To-Do Lists","title":"Guest Post: Using Todoist With MYN and 1MTD by Charles Olsen"},{"location":"Highlights/Readwise/Articles/Guest%20Post%20Using%20Todoist%20With%20MYN%20and%201MTD%20by%20Charles%20Olsen/#guest-post-using-todoist-with-myn-and-1mtd-by-charles-olsen","text":"","title":"Guest Post: Using Todoist With MYN and 1MTD by Charles Olsen"},{"location":"Highlights/Readwise/Articles/Guest%20Post%20Using%20Todoist%20With%20MYN%20and%201MTD%20by%20Charles%20Olsen/#metadata","text":"Author: [[Michael Linenberger]] Full Title: Guest Post: Using Todoist With MYN and 1MTD by Charles Olsen Category: #Type/Highlights/Article URL: https://feedly.com/i/entry/o+Hb/2SWhsHwOl228ffK1QcYzBlMK3lVyz/Zz4ArACM=_17695237c7c:35e4f3:1e82ad8f","title":"Metadata"},{"location":"Highlights/Readwise/Articles/Guest%20Post%20Using%20Todoist%20With%20MYN%20and%201MTD%20by%20Charles%20Olsen/#highlights","text":"The first exercise in the class was to write down the roles we serve in our lives. Everyone has multiple roles: employee, manager, spouse, parent, etc. We spent a few minutes thinking about our lives, and writing down all of the roles we play. Next, we were instructed to write a long-term goal for each of those roles. Then we were asked to write one or two short-term goals that would move us toward completing each of the long-term goals. Finally, we were told to examine each short-term goal and write down at least one or two specific actions that would move us forward toward accomplishing that goal. This is why I found Michael Linenberger\u2019s instruction to be transformational. His productivity systems \u2014 the One-Minute To-Do List (1MTD), Master Your Now (MYN), and One-Minute Project Manager (1MPM) \u2014 all revolve around the urgency of the tasks that you need to complete. One Minute To-Do List (1MTD) 1MTD is literally a \u201cOne-Minute To-Do List\u201d \u2014 you can get started in about a minute, and it is an excellent solution for managing up to about 100 tasks. 1MTD Urgency Zones In 1MTD, your tasks are arranged in lists depending on when they need to be done: today, within next 10 days, or after the next 10 days. We show this by creating Urgency Zones for storing the tasks. The CRITICAL NOW list is for tasks that must be done today. There should be no more than five tasks on this list. You should review this list several times each day \u2014 every hour is a good practice. The OPPORTUNITY NOW list is for tasks that are available to work on today, but do not have to be finished today. Some of these tasks may have a hard deadline of tomorrow, or any time in the next ten days. But they are not due today. This list can have up to 20 items, and should be reviewed every day, at the start of your work day. The OVER THE HORIZON list is for tasks that you don\u2019t need to work on or think about for the next 10 days. You should review this list every week. As you review the lists, drag the tasks up or down to meet your current plans. In each section, move the tasks into the order that you intend to work on them. If you see a task under OPPORTUNITY NOW or OVER THE HORIZON that must be completed today, move it up into the CRITICAL NOW section. If you need to track more than 100 tasks, you may need to move up to MYN. But if you\u2019re only exceeding the 100 task maximum by a small number of tasks, or only occasionally, you may be able to continue using 1MTD by adding another urgency zone. It\u2019s likely that the OVER THE HORIZON list is the one that has grown beyond the normal limit, and that it\u2019s becoming difficult to keep up with a full review of the list every week. If this list has grown beyond 75 tasks, you probably don\u2019t need to be reviewing the entire list every week. You can create another urgency zone for OVER THE HORIZON tasks that you will review once a month, rather than every week. I like to name this section OTH (monthly), and rename the original OVER THE HORIZON to OTH (weekly). With your long-term tasks split up into weekly and monthly reviews, it will be easier and less time-consuming to keep up with your reviews. Master Your Now (MYN) MYN expands the 1MTD concept by adding Start Dates to your tasks. Rather than seeing all of your tasks on the list, you will only see those that are relevant today. Tasks that you don\u2019t need to think about yet have a Start Date in the future, and will not appear on your list until you need to act on them. This approach allows you to track any number of tasks without being overwhelmed. It can be helpful to organize your tasks into projects. This could be as simple as having two projects: Home and Work. You may prefer create projects for specific goals. I like to start with a project called Routines, where I put all the boring tasks that have to be done but don\u2019t actually contribute to moving my goals forward. This includes bills that need to be paid, and routine maintenance for my house and car. Then I create projects as needed to store tasks I need to do for my goals. If you don\u2019t need to separate your tasks into projects, you can create a single project called \u201cTasks,\u201d \u201cTo-Do\u2019s,\u201d or perhaps \u201cReviewed,\u201d to indicate that you have reviewed these items and assigned the desired priority and date. You do need to have at least one project, because new tasks will sit in the Inbox until you have assigned them to a project. The next button, with the flag, will set the priority. The default is Priority 4, but all tasks in MYN should have a priority set. Since the task will not appear on your Today list until the start date arrives, think about the urgency of the task on that day. If you will absolutely need to finish the task on that day, it will be Critical Now, and should be set to Priority 1. If the task does not need to be completed on that day, it will be Opportunity Now and should be set to Priority If you don\u2019t need to work on that task within 10 days of that date, it will be Over the Horizon and should be set to Priority 3. When you select a date for a P1 task, this is obviously the date that you are going to work on the task \u2014 you have to finish it on that date. The One-Minute Project Manager (1MPM) approach is ideal for projects like this. And whether you are working the project alone or with others, Todoist is an excellent tool for tracking the project. Todoist will allow you to track the overall project plan and progress, and feed tasks to your MYN list (or the lists of other people) as appropriate. A quick review: 1MTD has three urgency zones; Critical Now: Must do todayOpportunity Now: do in 1 to 10 daysOver the Horizon: can wait beyond 10 days In 1MPM, project tasks are prioritized in these urgency zones: Critical This Week: tasks that must be completed this weekOpportunity This Week: tasks available to work on, that do not have to be completed this weekOver the Horizon or Brainstormed Tasks: initial list of all tasks needed to complete the project Step 1: Confirm that Critical Items from last week were completed and mark them as complete. Step 2: Chase down any incomplete tasks. If others are involved in the project, they may be meeting with you during the review (in person, by phone, by video call, etc.) and can explain what\u2019s going on so you can update the task. Step 3: Review the tasks in the OPPORTUNITY THIS WEEK section. Is it time to move some of these tasks to the CRITICAL THIS WEEK section? You can re-prioritize tasks by dragging them up within their current section, or dragging them to a different section. Step 4: Look at the BRAINSTORMED TASKS section \u2014 is it time to promote some tasks from there? If so, drag the tasks up to the OPPORTUNITY or CRITICAL section. Step 5: Move tasks onto someone\u2019s daily to-do list. Move Tasks to Daily To-Do Lists","title":"Highlights"},{"location":"Highlights/Readwise/Articles/Habits%20You%20Must%20Have%20to%20Be%20a%20Highly%20Effective%20Programmers/","text":"Habits You Must Have to Be a Highly Effective Programmers \u00b6 Metadata \u00b6 Author: [[Shoaib Mehedi]] Full Title: Habits You Must Have to Be a Highly Effective Programmers Category: #Type/Highlights/Article URL: https://medium.com/p/a8e53d04b4a7 Highlights \u00b6 Always start with the end in mind","title":"Habits You Must Have to Be a Highly Effective Programmers"},{"location":"Highlights/Readwise/Articles/Habits%20You%20Must%20Have%20to%20Be%20a%20Highly%20Effective%20Programmers/#habits-you-must-have-to-be-a-highly-effective-programmers","text":"","title":"Habits You Must Have to Be a Highly Effective Programmers"},{"location":"Highlights/Readwise/Articles/Habits%20You%20Must%20Have%20to%20Be%20a%20Highly%20Effective%20Programmers/#metadata","text":"Author: [[Shoaib Mehedi]] Full Title: Habits You Must Have to Be a Highly Effective Programmers Category: #Type/Highlights/Article URL: https://medium.com/p/a8e53d04b4a7","title":"Metadata"},{"location":"Highlights/Readwise/Articles/Habits%20You%20Must%20Have%20to%20Be%20a%20Highly%20Effective%20Programmers/#highlights","text":"Always start with the end in mind","title":"Highlights"},{"location":"Highlights/Readwise/Articles/Home%20-%20How%20to%20Write%20a%20Good%20Documentation%20-%20Library%20Guides%20at%20UC%20Berkeley/","text":"Home - How to Write a Good Documentation - Library Guides at UC Berkeley \u00b6 Metadata \u00b6 Author: [[Research Data Management]] Full Title: Home - How to Write a Good Documentation - Library Guides at UC Berkeley Category: #Type/Highlights/Article URL: https://guides.lib.berkeley.edu/c.php?g=652311&p=4575543 Highlights \u00b6 Best practices for writing documentation: Include A README file that contains A brief description of the project Installation instructions A short example/tutorial Allow issue tracker for others Write an API documentation What a function do What the function's parameters or arguments are What a function returns Document your code Apply coding conventions, such as file organization, comments, naming conventions, programming practices, etc. Include information for contributors Include citation information Include licensing information Link to your e-mail address at the end List all the version of the files along with the major edits you did in each version","title":"Home - How to Write a Good Documentation - Library Guides at UC Berkeley"},{"location":"Highlights/Readwise/Articles/Home%20-%20How%20to%20Write%20a%20Good%20Documentation%20-%20Library%20Guides%20at%20UC%20Berkeley/#home-how-to-write-a-good-documentation-library-guides-at-uc-berkeley","text":"","title":"Home - How to Write a Good Documentation - Library Guides at UC Berkeley"},{"location":"Highlights/Readwise/Articles/Home%20-%20How%20to%20Write%20a%20Good%20Documentation%20-%20Library%20Guides%20at%20UC%20Berkeley/#metadata","text":"Author: [[Research Data Management]] Full Title: Home - How to Write a Good Documentation - Library Guides at UC Berkeley Category: #Type/Highlights/Article URL: https://guides.lib.berkeley.edu/c.php?g=652311&p=4575543","title":"Metadata"},{"location":"Highlights/Readwise/Articles/Home%20-%20How%20to%20Write%20a%20Good%20Documentation%20-%20Library%20Guides%20at%20UC%20Berkeley/#highlights","text":"Best practices for writing documentation: Include A README file that contains A brief description of the project Installation instructions A short example/tutorial Allow issue tracker for others Write an API documentation What a function do What the function's parameters or arguments are What a function returns Document your code Apply coding conventions, such as file organization, comments, naming conventions, programming practices, etc. Include information for contributors Include citation information Include licensing information Link to your e-mail address at the end List all the version of the files along with the major edits you did in each version","title":"Highlights"},{"location":"Highlights/Readwise/Articles/How%20I%20Organize%20My%20Knowledge%20as%20a%20Software%20Engineer/","text":"How I Organize My Knowledge as a Software Engineer \u00b6 Metadata \u00b6 Author: [[Bruno Paz]] Full Title: How I Organize My Knowledge as a Software Engineer Category: #Type/Highlights/Article URL: https://dev.to/brpaz/how-do-i-organize-my-knowledge-as-a-software-engineer-4387 Highlights \u00b6 One of the points I consider very important regarding knowledge management is to avoid lock-in in a particular platform. All the tools I use, allow to export your data in standard formats like Markdown and HTML.","title":"How I Organize My Knowledge as a Software Engineer"},{"location":"Highlights/Readwise/Articles/How%20I%20Organize%20My%20Knowledge%20as%20a%20Software%20Engineer/#how-i-organize-my-knowledge-as-a-software-engineer","text":"","title":"How I Organize My Knowledge as a Software Engineer"},{"location":"Highlights/Readwise/Articles/How%20I%20Organize%20My%20Knowledge%20as%20a%20Software%20Engineer/#metadata","text":"Author: [[Bruno Paz]] Full Title: How I Organize My Knowledge as a Software Engineer Category: #Type/Highlights/Article URL: https://dev.to/brpaz/how-do-i-organize-my-knowledge-as-a-software-engineer-4387","title":"Metadata"},{"location":"Highlights/Readwise/Articles/How%20I%20Organize%20My%20Knowledge%20as%20a%20Software%20Engineer/#highlights","text":"One of the points I consider very important regarding knowledge management is to avoid lock-in in a particular platform. All the tools I use, allow to export your data in standard formats like Markdown and HTML.","title":"Highlights"},{"location":"Highlights/Readwise/Articles/How%20I%20Use%20Evernote%20to%20Organize%20Client%20Projects/","text":"How I Use Evernote to Organize Client Projects \u00b6 Metadata \u00b6 Author: [[Melissa Jean Clark]] Full Title: How I Use Evernote to Organize Client Projects Category: #Type/Highlights/Article URL: https://medium.com/@melissajclark_/how-i-use-evernote-to-organize-client-projects-1ee99c4cb46b Highlights \u00b6 When I begin a new client project, I start an Evernote notebook for the project. This notebook becomes a digital hub for me to save everything** related to the project. I love having all this information in one spot and being able to access it no matter what device I\u2019m using. What goes in the project notebook? Project documents \u2014 estimates, contracts, client questionnaire, project summary, etc Emails \u2014 all emails from the client(s) are automatically forwarded to the project notebook Research \u2014 potential Wordpress plugins, code examples, design inspiration, etc. Notes \u2014 I try to be paperless, but I always take handwritten notes in meetings or on client calls. Using the Evernote iPhone app, I snap a photo of my handwritten notes and save it to the project notebook. Evernote\u2019s search is so great that it searches through handwritten notes. Saving the image means I can easily look up my notes later on. ** I also have a Dropbox folder for each client project. Evernote is a way to easily access, view and search project content. Most files actually live in the Dropbox folder. I like having a copy of documents in Evernote for the search-ability. Tip: if you attach a file (such as a Word doc) to a note in Evernote, and update it outside of Evernote, it\u2019s automatically updated in Evernote too. 2) Automatically send project emails to the notebook When I start a new client project, I set up their emails to be automatically forwarded to my Evernote email address**. If you\u2019re using Gmail go to Settings and the Filters and Blocked Address section to set up filters. Or, while viewing an email, click the More tab and select Filter Messages like these. 3) Using Notebooks as a Project Timeline My Evernote system is influenced by Jamie Rubin\u2019s Going Paperless series. Rubin talks about the concept of using Evernote as a timeline. Every note saved in Evernote automatically has a Created Date (similar to data associated with files on your computer). \u201cEverything I do (and want to remember) happens at some point in time. When it happens is always important to me. I, therefore, try to be very consistent about how I use the Create Date field on my notes in Evernote. The Create Date of a Note\u2013for me\u2013is the date on which the event occurred, not necessarily when the note was created.\u201d Jamie Rubin Knowing that every note in an Evernote notebook has a Created Date allows me to quickly scan a project and see if it\u2019s on track. Did I schedule a project for six weeks, and it wound up taking 3 months? By scanning the dates of my notes, I can quickly see what project phases took longer than expected. This helps me evaluate the project and plan for future projects.","title":"How I Use Evernote to Organize Client Projects"},{"location":"Highlights/Readwise/Articles/How%20I%20Use%20Evernote%20to%20Organize%20Client%20Projects/#how-i-use-evernote-to-organize-client-projects","text":"","title":"How I Use Evernote to Organize Client Projects"},{"location":"Highlights/Readwise/Articles/How%20I%20Use%20Evernote%20to%20Organize%20Client%20Projects/#metadata","text":"Author: [[Melissa Jean Clark]] Full Title: How I Use Evernote to Organize Client Projects Category: #Type/Highlights/Article URL: https://medium.com/@melissajclark_/how-i-use-evernote-to-organize-client-projects-1ee99c4cb46b","title":"Metadata"},{"location":"Highlights/Readwise/Articles/How%20I%20Use%20Evernote%20to%20Organize%20Client%20Projects/#highlights","text":"When I begin a new client project, I start an Evernote notebook for the project. This notebook becomes a digital hub for me to save everything** related to the project. I love having all this information in one spot and being able to access it no matter what device I\u2019m using. What goes in the project notebook? Project documents \u2014 estimates, contracts, client questionnaire, project summary, etc Emails \u2014 all emails from the client(s) are automatically forwarded to the project notebook Research \u2014 potential Wordpress plugins, code examples, design inspiration, etc. Notes \u2014 I try to be paperless, but I always take handwritten notes in meetings or on client calls. Using the Evernote iPhone app, I snap a photo of my handwritten notes and save it to the project notebook. Evernote\u2019s search is so great that it searches through handwritten notes. Saving the image means I can easily look up my notes later on. ** I also have a Dropbox folder for each client project. Evernote is a way to easily access, view and search project content. Most files actually live in the Dropbox folder. I like having a copy of documents in Evernote for the search-ability. Tip: if you attach a file (such as a Word doc) to a note in Evernote, and update it outside of Evernote, it\u2019s automatically updated in Evernote too. 2) Automatically send project emails to the notebook When I start a new client project, I set up their emails to be automatically forwarded to my Evernote email address**. If you\u2019re using Gmail go to Settings and the Filters and Blocked Address section to set up filters. Or, while viewing an email, click the More tab and select Filter Messages like these. 3) Using Notebooks as a Project Timeline My Evernote system is influenced by Jamie Rubin\u2019s Going Paperless series. Rubin talks about the concept of using Evernote as a timeline. Every note saved in Evernote automatically has a Created Date (similar to data associated with files on your computer). \u201cEverything I do (and want to remember) happens at some point in time. When it happens is always important to me. I, therefore, try to be very consistent about how I use the Create Date field on my notes in Evernote. The Create Date of a Note\u2013for me\u2013is the date on which the event occurred, not necessarily when the note was created.\u201d Jamie Rubin Knowing that every note in an Evernote notebook has a Created Date allows me to quickly scan a project and see if it\u2019s on track. Did I schedule a project for six weeks, and it wound up taking 3 months? By scanning the dates of my notes, I can quickly see what project phases took longer than expected. This helps me evaluate the project and plan for future projects.","title":"Highlights"},{"location":"Highlights/Readwise/Articles/How%20a%20Single%20Freelancer%20Outperforms%20a%20Whole%20Team/","text":"How a Single Freelancer Outperforms a Whole Team \u00b6 Metadata \u00b6 Author: [[Jovan Cicmil]] Full Title: How a Single Freelancer Outperforms a Whole Team Category: #Type/Highlights/Article URL: https://medium.com/p/5974fe5db597 Highlights \u00b6 Taking a break whenever you like and setting your own schedule is a pipedream in a team environment. In theory, it\u2019s possible, but it\u2019s complicated: other people depend on you to be online at certain times, their work depends on yours and vice-versa, and there are, again, meetings to be had. That\u2019s the difference a client feels when they suddenly have a change of heart about a feature or a module of your project. A freelancer is a sports sedan \u2014 reliable, responsive, and easy to work with. If a client wants to make a U-turn, all they gotta do is tell you; your tires immediately screech, and you\u2019re headed in the client\u2019s new direction.","title":"How a Single Freelancer Outperforms a Whole Team"},{"location":"Highlights/Readwise/Articles/How%20a%20Single%20Freelancer%20Outperforms%20a%20Whole%20Team/#how-a-single-freelancer-outperforms-a-whole-team","text":"","title":"How a Single Freelancer Outperforms a Whole Team"},{"location":"Highlights/Readwise/Articles/How%20a%20Single%20Freelancer%20Outperforms%20a%20Whole%20Team/#metadata","text":"Author: [[Jovan Cicmil]] Full Title: How a Single Freelancer Outperforms a Whole Team Category: #Type/Highlights/Article URL: https://medium.com/p/5974fe5db597","title":"Metadata"},{"location":"Highlights/Readwise/Articles/How%20a%20Single%20Freelancer%20Outperforms%20a%20Whole%20Team/#highlights","text":"Taking a break whenever you like and setting your own schedule is a pipedream in a team environment. In theory, it\u2019s possible, but it\u2019s complicated: other people depend on you to be online at certain times, their work depends on yours and vice-versa, and there are, again, meetings to be had. That\u2019s the difference a client feels when they suddenly have a change of heart about a feature or a module of your project. A freelancer is a sports sedan \u2014 reliable, responsive, and easy to work with. If a client wants to make a U-turn, all they gotta do is tell you; your tires immediately screech, and you\u2019re headed in the client\u2019s new direction.","title":"Highlights"},{"location":"Highlights/Readwise/Articles/How%20the%20Web%20Works/","text":"How the Web Works \u00b6 Metadata \u00b6 Author: [[dev.to]] Full Title: How the Web Works Category: #Type/Highlights/Article URL: https://dev.to/anonyda/how-the-web-works-for-front-end-devs-2g6c Highlights \u00b6 Socrates said, we don't know what we don't know ( View Highlight )","title":"How the Web Works"},{"location":"Highlights/Readwise/Articles/How%20the%20Web%20Works/#how-the-web-works","text":"","title":"How the Web Works"},{"location":"Highlights/Readwise/Articles/How%20the%20Web%20Works/#metadata","text":"Author: [[dev.to]] Full Title: How the Web Works Category: #Type/Highlights/Article URL: https://dev.to/anonyda/how-the-web-works-for-front-end-devs-2g6c","title":"Metadata"},{"location":"Highlights/Readwise/Articles/How%20the%20Web%20Works/#highlights","text":"Socrates said, we don't know what we don't know ( View Highlight )","title":"Highlights"},{"location":"Highlights/Readwise/Articles/How%20to%20Achieve%20Your%20Daily%20Goals/","text":"How to Achieve Your Daily Goals \u00b6 Metadata \u00b6 Author: [[quickbooost.com]] Full Title: How to Achieve Your Daily Goals Category: #Type/Highlights/Article URL: https://quickbooost.com/daily-goals/ Highlights \u00b6 What you need to understand about goal setting I know, I know. You came to this post because you wanted to learn about daily goals. You want to set your daily goals, achieve your daily goals, work on your daily goals. I get it. But first, you need to see how your daily goals fit into the overall scheme of things. You need to understand what goal setting is. What are goals? Goals look at who you are today, who/where you want to be tomorrow, and how to get there. You can do amazing things with your life if you use your time effectively. If you spend your 24 hours each day to the fullest and have a plan, you can learn to harness and control it as you wish. It\u2019s not easy though and you need to have a strategy for how to spend your time. Goal setting is one great way to do that. Because goal setting gives you a plan for your time. Goal setting and your daily goals So how is goal setting related to your daily goals? See it like this \u2013 your goals are the big picture and your daily goals are the \u201clittle picture.\u201d If your goal is to save $10,000 over the next 18 months (a long term goal), your daily goal could be to save a certain amount of money each day to help you save up that amount overall. Or you could have a goal to read 1 book this month (a short term goal). Your daily goal in that case then could be to read a certain amount of pages each day to help you finish the book in time. The goals you set are the big picture. They are the macro. That thing off in the distance that you are working towards today. Your daily goals can be seen as your daily actions. The micro. The things you need to do each day to help you achieve your macro goals. Breaking it down \u2013 your daily goals There is more to the goal setting process than just setting macro and daily goals. There are things like: Determining what the right goal is to choose in the first place How to plan out your goal in both the macro, micro, and in-between When to take action And what to do when you hit roadblocks So moving forward, know this \u2013 the purpose of setting daily goals is to help you reach your overall big picture goal. Don\u2019t see daily goal setting as its own thing. See it as a piece of a much larger puzzle. Once you have your goal and plan in place, then you can set daily goals to help you make the progress that you\u2019re after. In other words, daily goals = daily actions. Use them to help you achieve your checkpoints and goals and move forward each day. Daily goals examples I\u2019ve touched on them a little bit already, but I\u2019ll give you a couple more daily goals examples to help solidify your understanding. Again, your daily goals should be the actions you take each day to help you reach your overall goals. How to achieve your daily goals Finally! The reason you\u2019re here \u2013 how to achieve your daily goals. To do that, there\u2019s an exclusive tool that I\u2019ve continuously used to keep me accountable, focused, and determined. You don\u2019t need some sort of daily goals app or daily goals template. You don\u2019t need a daily goals planner. What is an Accountability Tracker? An Accountability Tracker (AT, for short) is a tool that you can use to track and record your actions each day. Often in the form of a spreadsheet, it\u2019s a way to: See what you need to be doing each day (ie. your daily action) Confirm that you are putting in the work And prevent you from making excuses. You\u2019re either putting in the work or you\u2019re not. Tags: [[favorite]] Why you need an Accountability Tracker When it comes to goal setting, there are a lot of variables. Especially when you\u2019re first starting out with a new goal, there are going to be a lot of things that you just don\u2019t know yet. Plus, working towards a goal, particularly a challenging one, is often daunting and hard to do. That\u2019s why an AT is so nice \u2013 because it shows you what you need to be doing each day and keeps you accountable for doing it. By using an AT, you can see if you\u2019re actually putting in the work or not. So if you\u2019re not making any progress but can see that you\u2019re putting in work each day, you can recognize that your daily actions are misaligned with your goal and can then change things. Or if you\u2019re not making progress and see that, based on your AT, you aren\u2019t putting in enough effort, then you can make adjustments to start putting in more work. The AT is the tool that you can use time and time again to help you achieve your daily goals. I am going to give you a simplified process for creating your very own \u201clight-version\u201d of the AT. Here\u2019s what to do: Consider what daily action you need to take in order to achieve your goal Write that action down on a spreadsheet, doc, or piece of paper Put in the work Open up that doc each day and note whether or not you completed your daily action Continue to do that daily Watch how you start to make progress towards your goal And if you aren\u2019t making progress, recognize whether you need to put in more work OR change your daily action These aren\u2019t the most polished directions, but again, I want you to be able to create a simple AT on your own that you can get started with right now. So take some time \u2013 15 or 20 minutes \u2013 and go through the steps above. Create your own \u201clight version\u201d of the Accountability Tracker and see for yourself how you can start making swift progress towards your goals. Daily goals plus your week, month, and year You may be thinking: how does the Accountability Tracker help me set weekly goals? How does it teach me how to set monthly goals? Your AT will help you put in daily action. It will help you achieve your daily goals. In turn, the more daily goals you complete, the more weekly goals you\u2019ll complete, which will lead you to completing more monthly goals, which will eventually lead you to reaching your overall goal. As for setting weekly and monthly goals though, that\u2019s a whole other beast in and of itself. For that I recommend the following posts: Time is the most valuable thing you have. Don\u2019t waste it! Use time to your advantage by setting goals for yourself. Use the goal setting process to create a plan for your time. Then with your plan in place, use things like productivity and time management to enhance your efforts and get even more done. Utilize time management tips and time management strategies to better structure your time. Learn how to be productive and take advantage of the various ways you can increase productivity. When you treat your time as a tool to be harnessed instead of something that you just want to have pass you by, you can start to do amazing things. With your macro goal in place, use daily goals to ensure that you are moving forward each day. Consistent, meaningful effort is the key to achieving your goals and taking daily action is imperative. Use an Accountability Tracker as your exclusive tool for achieving your daily goals and keep striving to achieve great things. Your effort will pay off, so keep going! And if you are ready to take your goal setting seriously, I highly encourage you to take a look at my goal setting course. I know I\u2019ve mentioned it a lot in this post. Some may argue too much. But the reason I bring it up is because of the value I know it will add to your goal setting life. Whether you\u2019re new to goal setting, or have set goals in the past but know there\u2019s room for improvement, this course will give you what you need to know. It will take you from start to finish: from choosing a goal, to planning it out, to taking action, to understanding what to do and what to avoid along the way. I recommend it because I know the positive impact that it will have on you. So when you\u2019re ready, you can learn more about the goal setting course < there.","title":"How to Achieve Your Daily Goals"},{"location":"Highlights/Readwise/Articles/How%20to%20Achieve%20Your%20Daily%20Goals/#how-to-achieve-your-daily-goals","text":"","title":"How to Achieve Your Daily Goals"},{"location":"Highlights/Readwise/Articles/How%20to%20Achieve%20Your%20Daily%20Goals/#metadata","text":"Author: [[quickbooost.com]] Full Title: How to Achieve Your Daily Goals Category: #Type/Highlights/Article URL: https://quickbooost.com/daily-goals/","title":"Metadata"},{"location":"Highlights/Readwise/Articles/How%20to%20Achieve%20Your%20Daily%20Goals/#highlights","text":"What you need to understand about goal setting I know, I know. You came to this post because you wanted to learn about daily goals. You want to set your daily goals, achieve your daily goals, work on your daily goals. I get it. But first, you need to see how your daily goals fit into the overall scheme of things. You need to understand what goal setting is. What are goals? Goals look at who you are today, who/where you want to be tomorrow, and how to get there. You can do amazing things with your life if you use your time effectively. If you spend your 24 hours each day to the fullest and have a plan, you can learn to harness and control it as you wish. It\u2019s not easy though and you need to have a strategy for how to spend your time. Goal setting is one great way to do that. Because goal setting gives you a plan for your time. Goal setting and your daily goals So how is goal setting related to your daily goals? See it like this \u2013 your goals are the big picture and your daily goals are the \u201clittle picture.\u201d If your goal is to save $10,000 over the next 18 months (a long term goal), your daily goal could be to save a certain amount of money each day to help you save up that amount overall. Or you could have a goal to read 1 book this month (a short term goal). Your daily goal in that case then could be to read a certain amount of pages each day to help you finish the book in time. The goals you set are the big picture. They are the macro. That thing off in the distance that you are working towards today. Your daily goals can be seen as your daily actions. The micro. The things you need to do each day to help you achieve your macro goals. Breaking it down \u2013 your daily goals There is more to the goal setting process than just setting macro and daily goals. There are things like: Determining what the right goal is to choose in the first place How to plan out your goal in both the macro, micro, and in-between When to take action And what to do when you hit roadblocks So moving forward, know this \u2013 the purpose of setting daily goals is to help you reach your overall big picture goal. Don\u2019t see daily goal setting as its own thing. See it as a piece of a much larger puzzle. Once you have your goal and plan in place, then you can set daily goals to help you make the progress that you\u2019re after. In other words, daily goals = daily actions. Use them to help you achieve your checkpoints and goals and move forward each day. Daily goals examples I\u2019ve touched on them a little bit already, but I\u2019ll give you a couple more daily goals examples to help solidify your understanding. Again, your daily goals should be the actions you take each day to help you reach your overall goals. How to achieve your daily goals Finally! The reason you\u2019re here \u2013 how to achieve your daily goals. To do that, there\u2019s an exclusive tool that I\u2019ve continuously used to keep me accountable, focused, and determined. You don\u2019t need some sort of daily goals app or daily goals template. You don\u2019t need a daily goals planner. What is an Accountability Tracker? An Accountability Tracker (AT, for short) is a tool that you can use to track and record your actions each day. Often in the form of a spreadsheet, it\u2019s a way to: See what you need to be doing each day (ie. your daily action) Confirm that you are putting in the work And prevent you from making excuses. You\u2019re either putting in the work or you\u2019re not. Tags: [[favorite]] Why you need an Accountability Tracker When it comes to goal setting, there are a lot of variables. Especially when you\u2019re first starting out with a new goal, there are going to be a lot of things that you just don\u2019t know yet. Plus, working towards a goal, particularly a challenging one, is often daunting and hard to do. That\u2019s why an AT is so nice \u2013 because it shows you what you need to be doing each day and keeps you accountable for doing it. By using an AT, you can see if you\u2019re actually putting in the work or not. So if you\u2019re not making any progress but can see that you\u2019re putting in work each day, you can recognize that your daily actions are misaligned with your goal and can then change things. Or if you\u2019re not making progress and see that, based on your AT, you aren\u2019t putting in enough effort, then you can make adjustments to start putting in more work. The AT is the tool that you can use time and time again to help you achieve your daily goals. I am going to give you a simplified process for creating your very own \u201clight-version\u201d of the AT. Here\u2019s what to do: Consider what daily action you need to take in order to achieve your goal Write that action down on a spreadsheet, doc, or piece of paper Put in the work Open up that doc each day and note whether or not you completed your daily action Continue to do that daily Watch how you start to make progress towards your goal And if you aren\u2019t making progress, recognize whether you need to put in more work OR change your daily action These aren\u2019t the most polished directions, but again, I want you to be able to create a simple AT on your own that you can get started with right now. So take some time \u2013 15 or 20 minutes \u2013 and go through the steps above. Create your own \u201clight version\u201d of the Accountability Tracker and see for yourself how you can start making swift progress towards your goals. Daily goals plus your week, month, and year You may be thinking: how does the Accountability Tracker help me set weekly goals? How does it teach me how to set monthly goals? Your AT will help you put in daily action. It will help you achieve your daily goals. In turn, the more daily goals you complete, the more weekly goals you\u2019ll complete, which will lead you to completing more monthly goals, which will eventually lead you to reaching your overall goal. As for setting weekly and monthly goals though, that\u2019s a whole other beast in and of itself. For that I recommend the following posts: Time is the most valuable thing you have. Don\u2019t waste it! Use time to your advantage by setting goals for yourself. Use the goal setting process to create a plan for your time. Then with your plan in place, use things like productivity and time management to enhance your efforts and get even more done. Utilize time management tips and time management strategies to better structure your time. Learn how to be productive and take advantage of the various ways you can increase productivity. When you treat your time as a tool to be harnessed instead of something that you just want to have pass you by, you can start to do amazing things. With your macro goal in place, use daily goals to ensure that you are moving forward each day. Consistent, meaningful effort is the key to achieving your goals and taking daily action is imperative. Use an Accountability Tracker as your exclusive tool for achieving your daily goals and keep striving to achieve great things. Your effort will pay off, so keep going! And if you are ready to take your goal setting seriously, I highly encourage you to take a look at my goal setting course. I know I\u2019ve mentioned it a lot in this post. Some may argue too much. But the reason I bring it up is because of the value I know it will add to your goal setting life. Whether you\u2019re new to goal setting, or have set goals in the past but know there\u2019s room for improvement, this course will give you what you need to know. It will take you from start to finish: from choosing a goal, to planning it out, to taking action, to understanding what to do and what to avoid along the way. I recommend it because I know the positive impact that it will have on you. So when you\u2019re ready, you can learn more about the goal setting course < there.","title":"Highlights"},{"location":"Highlights/Readwise/Articles/How%20to%20Automate%20Your%20Project%20and%20Github%20Repo%20Setup%20From%20the%20Command%20Line/","text":"How to Automate Your Project and Github Repo Setup From the Command Line \u00b6 Metadata \u00b6 Author: Full Title: How to Automate Your Project and Github Repo Setup From the Command Line Category: #Type/Highlights/Article URL: https://www.freecodecamp.org/news/automate-project-github-setup-mac/ Highlights \u00b6 Make the shell script executable. To do that you type the following in the terminal: chmod +x < >. This is the unix way to make a shell script \"executable\". I'm not confident I fully understand what that means, other than it's needed to make any shell scripts you write executable, so don't ask me and I won't lie to you","title":"How to Automate Your Project and Github Repo Setup From the Command Line"},{"location":"Highlights/Readwise/Articles/How%20to%20Automate%20Your%20Project%20and%20Github%20Repo%20Setup%20From%20the%20Command%20Line/#how-to-automate-your-project-and-github-repo-setup-from-the-command-line","text":"","title":"How to Automate Your Project and Github Repo Setup From the Command Line"},{"location":"Highlights/Readwise/Articles/How%20to%20Automate%20Your%20Project%20and%20Github%20Repo%20Setup%20From%20the%20Command%20Line/#metadata","text":"Author: Full Title: How to Automate Your Project and Github Repo Setup From the Command Line Category: #Type/Highlights/Article URL: https://www.freecodecamp.org/news/automate-project-github-setup-mac/","title":"Metadata"},{"location":"Highlights/Readwise/Articles/How%20to%20Automate%20Your%20Project%20and%20Github%20Repo%20Setup%20From%20the%20Command%20Line/#highlights","text":"Make the shell script executable. To do that you type the following in the terminal: chmod +x < >. This is the unix way to make a shell script \"executable\". I'm not confident I fully understand what that means, other than it's needed to make any shell scripts you write executable, so don't ask me and I won't lie to you","title":"Highlights"},{"location":"Highlights/Readwise/Articles/How%20to%20Be%20Mentally%20Strong%20-%20James%20Altucher/","text":"How to Be Mentally Strong - James Altucher \u00b6 Metadata \u00b6 Author: Full Title: How to Be Mentally Strong - James Altucher Category: #Type/Highlights/Article URL: https://jamesaltucher.com/blog/how-to-be-mentally-strong/ Highlights \u00b6 It's time to make the most important decision of your life: Choose Yourself.","title":"How to Be Mentally Strong - James Altucher"},{"location":"Highlights/Readwise/Articles/How%20to%20Be%20Mentally%20Strong%20-%20James%20Altucher/#how-to-be-mentally-strong-james-altucher","text":"","title":"How to Be Mentally Strong - James Altucher"},{"location":"Highlights/Readwise/Articles/How%20to%20Be%20Mentally%20Strong%20-%20James%20Altucher/#metadata","text":"Author: Full Title: How to Be Mentally Strong - James Altucher Category: #Type/Highlights/Article URL: https://jamesaltucher.com/blog/how-to-be-mentally-strong/","title":"Metadata"},{"location":"Highlights/Readwise/Articles/How%20to%20Be%20Mentally%20Strong%20-%20James%20Altucher/#highlights","text":"It's time to make the most important decision of your life: Choose Yourself.","title":"Highlights"},{"location":"Highlights/Readwise/Articles/How%20to%20Be%20More%20Organized%20Declutter%2C%20Take%20Control%2C%20and%20Achieve%20More%20at%20Work/","text":"How to Be More Organized: Declutter, Take Control, and Achieve More at Work \u00b6 Metadata \u00b6 Author: Full Title: How to Be More Organized: Declutter, Take Control, and Achieve More at Work Category: #Type/Highlights/Article URL: http://www.mindtools.com/pages/article/newHTE_76.htm Highlights \u00b6 Five Habits of Organized People The more you can live and work in an organized way \u2013 even if it doesn't come naturally at first \u2013 the sooner you'll change your habits for the better. Here are five everyday strategies worth trying: Celebrate small wins. For example, if you complete three things on your To-Do List, treat yourself to a cup of coffee, or allow yourself 10 minutes of free time to check some of your favorite websites. Use one calendar. If you record some things on your desk planner, and others on your email calendar, it's going to be hard to coordinate everything. Instead, start putting it all in one place. If you do it digitally, you'll find that the technology can pull everything together for you. Schedule small tasks. If a task or project requires action beforehand (like picking up bagels and coffee for the staff meeting), make sure that you schedule those into your day, too. Missing small jobs can have big knock-on effects on everything else. Get organized at home. Don't just restrict your organized approach to work \u2013 because a chaotic home life will bring its own problems. Declutter where you live to make mornings easier. Plan your whole day carefully. And talk to the people you live with, so that they know how they can help. Put a high value on your time. Whether you're prioritizing your professional tasks for the week, or mapping out your family commitments, think about how to make every second count. In the words of the American inventor Thomas Edison, time is \"\u2026 really the only capital any human being has, and the one thing he can't afford to waste.\" Tidying and decluttering are very much \"on trend\" right now. For some, they promise answers to many of life's problems. However, it's possible to take organizing behaviors to an unhealthy extreme. So, guard against perfectionism, and don't try to control everything. If it turns out that you're actually increasing your stress, annoying others, and putting more into the process than you're getting out, think again. Aim for a balanced approach, where your organizational strategies are useful and manageable, for yourself and others. Becoming more organized brings many benefits, including greater productivity, better performance, and improved ability to handle stress. Your reputation relies on how organized you're seen to be. And your punctuality, reliability and conscientiousness can all affect the people you work with, for good or bad. Take steps to organize your working environment, so that you can start quickly, find everything you need, and focus effectively to complete all your tasks. An uncluttered approach to work helps you to manage your time, in turn making you more efficient and effective. Find the tools \u2013 traditional, or more high-tech \u2013 that will help you to feel organized and in control, both at work and in your life beyond.","title":"How to Be More Organized: Declutter, Take Control, and Achieve More at Work"},{"location":"Highlights/Readwise/Articles/How%20to%20Be%20More%20Organized%20Declutter%2C%20Take%20Control%2C%20and%20Achieve%20More%20at%20Work/#how-to-be-more-organized-declutter-take-control-and-achieve-more-at-work","text":"","title":"How to Be More Organized: Declutter, Take Control, and Achieve More at Work"},{"location":"Highlights/Readwise/Articles/How%20to%20Be%20More%20Organized%20Declutter%2C%20Take%20Control%2C%20and%20Achieve%20More%20at%20Work/#metadata","text":"Author: Full Title: How to Be More Organized: Declutter, Take Control, and Achieve More at Work Category: #Type/Highlights/Article URL: http://www.mindtools.com/pages/article/newHTE_76.htm","title":"Metadata"},{"location":"Highlights/Readwise/Articles/How%20to%20Be%20More%20Organized%20Declutter%2C%20Take%20Control%2C%20and%20Achieve%20More%20at%20Work/#highlights","text":"Five Habits of Organized People The more you can live and work in an organized way \u2013 even if it doesn't come naturally at first \u2013 the sooner you'll change your habits for the better. Here are five everyday strategies worth trying: Celebrate small wins. For example, if you complete three things on your To-Do List, treat yourself to a cup of coffee, or allow yourself 10 minutes of free time to check some of your favorite websites. Use one calendar. If you record some things on your desk planner, and others on your email calendar, it's going to be hard to coordinate everything. Instead, start putting it all in one place. If you do it digitally, you'll find that the technology can pull everything together for you. Schedule small tasks. If a task or project requires action beforehand (like picking up bagels and coffee for the staff meeting), make sure that you schedule those into your day, too. Missing small jobs can have big knock-on effects on everything else. Get organized at home. Don't just restrict your organized approach to work \u2013 because a chaotic home life will bring its own problems. Declutter where you live to make mornings easier. Plan your whole day carefully. And talk to the people you live with, so that they know how they can help. Put a high value on your time. Whether you're prioritizing your professional tasks for the week, or mapping out your family commitments, think about how to make every second count. In the words of the American inventor Thomas Edison, time is \"\u2026 really the only capital any human being has, and the one thing he can't afford to waste.\" Tidying and decluttering are very much \"on trend\" right now. For some, they promise answers to many of life's problems. However, it's possible to take organizing behaviors to an unhealthy extreme. So, guard against perfectionism, and don't try to control everything. If it turns out that you're actually increasing your stress, annoying others, and putting more into the process than you're getting out, think again. Aim for a balanced approach, where your organizational strategies are useful and manageable, for yourself and others. Becoming more organized brings many benefits, including greater productivity, better performance, and improved ability to handle stress. Your reputation relies on how organized you're seen to be. And your punctuality, reliability and conscientiousness can all affect the people you work with, for good or bad. Take steps to organize your working environment, so that you can start quickly, find everything you need, and focus effectively to complete all your tasks. An uncluttered approach to work helps you to manage your time, in turn making you more efficient and effective. Find the tools \u2013 traditional, or more high-tech \u2013 that will help you to feel organized and in control, both at work and in your life beyond.","title":"Highlights"},{"location":"Highlights/Readwise/Articles/How%20to%20Be%20More%20Productive%20Build%20a%20System%20and%2010x%20Your%20Output%20-%20The%20Monk%20Life/","text":"How to Be More Productive: Build a System and 10x Your Output - The Monk Life \u00b6 Metadata \u00b6 Author: Full Title: How to Be More Productive: Build a System and 10x Your Output - The Monk Life Category: #Type/Highlights/Article URL: https://www.themonklife.net/how-to-be-more-productive/ Highlights \u00b6 I eventually pieced together my productivity system over the course of several years. I, too, was entrenched in the idea of newer, cooler, super awesome time-saving hacks and tools. Over time, my interest in keeping up with those tricks died. That said, this is meant to be more of a guideline than the Gospel. Your productivity system should be a perfect reflection of you and your quirks, not mine. As I like to say, be an engineer, not a scientist Note: Great quote: \"Be an engineer, not a scientist\" Step 1: Identify What You Are Trying to Achieve If you were going on a road trip, what\u2019s the first thing you would do to map out your travels? \u2026you\u2019d start with the destination. Try this exercise for coming up with a rock-solid goal: Define a goal and set a deadline (ie. Make your goals SMART) \u201cI want to grow my blog to 1,000 email subscribers in 3 months.\u201d Define how much time you can work on it \u201cI can spend 2 hours per day working on this.\u201d Step 2: Identify Your Most Important Tasks At this point, nearly everybody knows the 80/20 rule \u2013 Pareto\u2019s Principle \u2013 for getting stuff done. 80 % of your results come from 20% of the work. Thank you Tim Ferriss for ingraining this in all of our heads. Whatever your case, identify the 2-3 most important tasks that you need to do to achieve your desired result. To make things easy, ask yourself this question: \u201cWhat are the core tasks that I have to do to [insert your desired result here]?\u201d Jot yours down onto a piece of paper and hang onto them. Step 3: Create a High-Level Monthly Plan Here is where the productivity system starts to take shape. In this step, you\u2019re going to use your goal and most important tasks to create a high level plan for your first month. I use Google Calendar to plan out my life, so it only makes sense for me to use it here, too. In an ideal week, here is what my calendar looks like for achieving my goals: Step 4: Choose a Method for Prioritizing Daily Tasks Your productivity system needs to account for fluctuating priorities on a daily basis. My strategy comes from the Ivy Lee Method talked about by habits expert James Clear. I\u2019ve adapted it and implemented it into my own life by using 3\u00d75 notecards. If you read the story, the Notecard Strategy was good enough for the executives of Bethlehem Steel Corporation. So much so that Charles Schwab, the company\u2019s president, wrote Ivy Lee a check for $25,000\u2026for a simple productivity tip. After finding out Noah Kagan from OkDork.com used it too, well, I figured it would definitely be good enough for me, too. The strategy itself is simple. It turns out that a highly productive day actually starts the night before. Take 10-15 minutes each night to review your goals and to-do\u2019s for the following day. Ask yourself this question: \u201cwhat are the things that absolutely HAVE to get done on this day?\u201d Make a mental list then move onto the next bullet. Choose 3-5 top priority items that you want to accomplish. More often than not, you\u2019ll want your most important tasks from Step 2 to take precedence. Here is where you\u2019ll also be breaking those down into specific actions/tasks. Those tasks should be clear, concise, and take no more than 45 minutes to an hour. I\u2019ve found that 3 to 5 well-defined tasks is usually all that we can effectively do in a day. Any more than that and energy, focus, and quality of work become real problems. A good example of a well-defined task would be \u201ccomplete intro and first section of productivity system blog post\u201d. List them in order of importance on a notecard for you to look at and carry around with you the next day. This forces you to prioritize your small list of tasks and creates a game plan for the next morning. The following morning, start with the top task and work on it until complete. Then move to the next. By design, this method helps you knock out the important tasks first thing in the morning. I\u2019ll usually knock out the first couple tasks, take a break, go to meetings, then come back to my notecard and start working again. I\u2019ve found the Notecard Strategy to be so effective because it: forces me to review my goals and tasks on a daily basis, gives me a clear list of actions for me to work from, and most importantly, I can wake up the next morning and get right to work \u2013 I don\u2019t have to waste mental energy thinking about what I should be doing. Step 5: Schedule Time to Work on Your Specific Tasks In my habits guide, I talk a lot about making time for your goals. Since I use my calendar for everything \u2013 you guessed it \u2013 I plug my specific tasks in there as well.","title":"How to Be More Productive: Build a System and 10x Your Output - The Monk Life"},{"location":"Highlights/Readwise/Articles/How%20to%20Be%20More%20Productive%20Build%20a%20System%20and%2010x%20Your%20Output%20-%20The%20Monk%20Life/#how-to-be-more-productive-build-a-system-and-10x-your-output-the-monk-life","text":"","title":"How to Be More Productive: Build a System and 10x Your Output - The Monk Life"},{"location":"Highlights/Readwise/Articles/How%20to%20Be%20More%20Productive%20Build%20a%20System%20and%2010x%20Your%20Output%20-%20The%20Monk%20Life/#metadata","text":"Author: Full Title: How to Be More Productive: Build a System and 10x Your Output - The Monk Life Category: #Type/Highlights/Article URL: https://www.themonklife.net/how-to-be-more-productive/","title":"Metadata"},{"location":"Highlights/Readwise/Articles/How%20to%20Be%20More%20Productive%20Build%20a%20System%20and%2010x%20Your%20Output%20-%20The%20Monk%20Life/#highlights","text":"I eventually pieced together my productivity system over the course of several years. I, too, was entrenched in the idea of newer, cooler, super awesome time-saving hacks and tools. Over time, my interest in keeping up with those tricks died. That said, this is meant to be more of a guideline than the Gospel. Your productivity system should be a perfect reflection of you and your quirks, not mine. As I like to say, be an engineer, not a scientist Note: Great quote: \"Be an engineer, not a scientist\" Step 1: Identify What You Are Trying to Achieve If you were going on a road trip, what\u2019s the first thing you would do to map out your travels? \u2026you\u2019d start with the destination. Try this exercise for coming up with a rock-solid goal: Define a goal and set a deadline (ie. Make your goals SMART) \u201cI want to grow my blog to 1,000 email subscribers in 3 months.\u201d Define how much time you can work on it \u201cI can spend 2 hours per day working on this.\u201d Step 2: Identify Your Most Important Tasks At this point, nearly everybody knows the 80/20 rule \u2013 Pareto\u2019s Principle \u2013 for getting stuff done. 80 % of your results come from 20% of the work. Thank you Tim Ferriss for ingraining this in all of our heads. Whatever your case, identify the 2-3 most important tasks that you need to do to achieve your desired result. To make things easy, ask yourself this question: \u201cWhat are the core tasks that I have to do to [insert your desired result here]?\u201d Jot yours down onto a piece of paper and hang onto them. Step 3: Create a High-Level Monthly Plan Here is where the productivity system starts to take shape. In this step, you\u2019re going to use your goal and most important tasks to create a high level plan for your first month. I use Google Calendar to plan out my life, so it only makes sense for me to use it here, too. In an ideal week, here is what my calendar looks like for achieving my goals: Step 4: Choose a Method for Prioritizing Daily Tasks Your productivity system needs to account for fluctuating priorities on a daily basis. My strategy comes from the Ivy Lee Method talked about by habits expert James Clear. I\u2019ve adapted it and implemented it into my own life by using 3\u00d75 notecards. If you read the story, the Notecard Strategy was good enough for the executives of Bethlehem Steel Corporation. So much so that Charles Schwab, the company\u2019s president, wrote Ivy Lee a check for $25,000\u2026for a simple productivity tip. After finding out Noah Kagan from OkDork.com used it too, well, I figured it would definitely be good enough for me, too. The strategy itself is simple. It turns out that a highly productive day actually starts the night before. Take 10-15 minutes each night to review your goals and to-do\u2019s for the following day. Ask yourself this question: \u201cwhat are the things that absolutely HAVE to get done on this day?\u201d Make a mental list then move onto the next bullet. Choose 3-5 top priority items that you want to accomplish. More often than not, you\u2019ll want your most important tasks from Step 2 to take precedence. Here is where you\u2019ll also be breaking those down into specific actions/tasks. Those tasks should be clear, concise, and take no more than 45 minutes to an hour. I\u2019ve found that 3 to 5 well-defined tasks is usually all that we can effectively do in a day. Any more than that and energy, focus, and quality of work become real problems. A good example of a well-defined task would be \u201ccomplete intro and first section of productivity system blog post\u201d. List them in order of importance on a notecard for you to look at and carry around with you the next day. This forces you to prioritize your small list of tasks and creates a game plan for the next morning. The following morning, start with the top task and work on it until complete. Then move to the next. By design, this method helps you knock out the important tasks first thing in the morning. I\u2019ll usually knock out the first couple tasks, take a break, go to meetings, then come back to my notecard and start working again. I\u2019ve found the Notecard Strategy to be so effective because it: forces me to review my goals and tasks on a daily basis, gives me a clear list of actions for me to work from, and most importantly, I can wake up the next morning and get right to work \u2013 I don\u2019t have to waste mental energy thinking about what I should be doing. Step 5: Schedule Time to Work on Your Specific Tasks In my habits guide, I talk a lot about making time for your goals. Since I use my calendar for everything \u2013 you guessed it \u2013 I plug my specific tasks in there as well.","title":"Highlights"},{"location":"Highlights/Readwise/Articles/How%20to%20Build%20a%20Personal%20Knowledge%20Management%20System%20-%20Cultivated%20Management/","text":"How to Build a Personal Knowledge Management System - Cultivated Management \u00b6 Metadata \u00b6 Author: [[cultivatedmanagement.com]] Full Title: How to Build a Personal Knowledge Management System - Cultivated Management Category: #Type/Highlights/Article URL: https://cultivatedmanagement.com/personal-knowledge-management-system/ Highlights \u00b6 The best way to continually improve is to learn and that means developing your own personal knowledge management system (PKMS). We have wiki\u2019s, documents, training, learning, company intranets, brown bag lunches and more. And they often don\u2019t solve the underlying problem of helping people to develop the skills, experience and knowledge to do their jobs better or progress in their careers. Personal knowledge management systems can also become nothing more than a process that doesn\u2019t lead to the right results. We can gather all of the information in the world but if we don\u2019t put it in to action we\u2019ll never gain knowledge. Knowledge of what works, what doesn\u2019t, how it can be improved or how we can adapt it to work better. Let\u2019s start with a wikipedia definition: \u201cPersonal knowledge management (PKM) is a collection of processes that a person uses to gather, classify, store, search, retrieve and share knowledgein their daily activities (Grundspenkis 2007) and the way in which these processes support work activities (Wright 2005). It is a response to the idea that knowledge workers need to be responsible for their own growth and learning (Smedley 2009). It is a bottom-up approach to knowledge management (KM) (Pollard 2008).\u201d Wikipedia In a nutshell it is a system that a person uses to learn. Learning doesn\u2019t happen by gathering resources together \u2013 it happens by discovering new ideas, blending knowledge together, implementing these new ideas (where possible) and observing and moving forward with what you have learned. I\u2019ve been a manger for far too many years and the greatest advantage I had in all this time was a focus on building a powerful PKMS. I\u2019ll share it here, but it\u2019s important to point out that this systems works for me, it might not work for you \u2013 hence the term \u201cpersonal\u201d knowledge management. I have four distinct activities to own personal system: Capture Curate Crunch Contribute Capture At the start of any knowledge management journey is to gather and capture information. You must feed your brain for it to develop new ideas. So what information comes in: At conferences I like to take hand-written notes as I learn more from this process, it\u2019s less frustrating for those around me (less noisy keyboard tapping) and it enhances my learning. I then take a photo of the notes and share to Apple notes app on my phone. If I find an interesting article on the web I can clip it using the Safaris Apple Notes clipper. My Kindle clippings get put in to Notes too. I \u201cshare\u201d articles from my iPad straight to notes too. My notes from doodling in the margins of books are photographed or transcribed \u2013 and end up in notes. If I find myself out and about and have an idea for a blog, book or other project I\u2019ll add the details via the Apple Notes app, or scribble it down in my notebook (and yes, these end up in Notes too). Every piece of content I would ever want to consume and learn about ends up in Apple Notes. Consider though that there is a boat-load of misinformation and nonsense on the Internet. Where you choose to source your knowledge will lead to the quality of your knowledge. I stick to about 5-10 decent blogs, 10-20 interesting people on LinkedIn and the rest of my knowledge tends to come from academic papers, books and serendipity of following interesting articles. Note: 5-10 blogs, 10-20 people, academic papers, books, ideas, etc. Limit the intake! Curate Every week or so I go through my notes and curate them. Everything ends up in the standard All Notes section in Apple Notes. I then simply process everything that has not been allocated to a folder. Curating content is all about working out the value of each piece of information Do I still value this piece of information or shall I delete it? Will I need to refer back to it again? Is this a key part of information I should crunch with my existing knowledge to move my learning forward? And of course some notes are just tasks and ideas. If I want to do something with them I\u2019ll move them my task manager (Todoist) If it\u2019s for further crunching or I\u2019ve not completely read the source I store them in the \u201cRead It Later\u201d folder. If I\u2019ve processed it, the raw note goes to a folder called \u201cCommonplace\u201d so I can find it again in the future. But before then I spend time extracting relevant learning points in the crunch phase. And then adding this relevant information to my Core Learning Notes. Note: Commonplace = like that name Crunch The majority of my notes end up being crunched. This is my term for studying the information and mashing it together with my existing knowledge. There are a few core subjects I am trying to learn and improve upon. Communication Skills \u2013 I am a lifelong learner of communication and aim to continue to grow my knowledge until I no longer can! Light Therapy \u2013 I am trying to learn as much as possible about light therapy and how light affects humans at work Management \u2013 my bread and butter skill and a topic with a never ending array of principles, ideas and opinions to digest Writing, marketing and product sales \u2013 I am learning about how to market myself, my product and how to sell! Publishing \u2013 I\u2019ve always needed to publish work (books, magazines, zines, photography, podcasting etc) so I\u2019m reading about how others are doing this and learning When I add information I am asking a few questions: Does it counter something else I already believe \u2013 how and why and what can I learn from that? Does it compliment existing knowledge? Is it a new piece of information? Is it duplicate \u2013 in which case should I delete it? Crunching is really the learning phase. This is the assimilation of information \u2013 it\u2019s about finding a home for it in my mind. Apple Notes is merely a container and model that maps closely to my mind. Contribution My favourite way of learning is to put in practice that which I have learned (if possible). So, for example, let\u2019s say I learn of a new way of organising a meeting that is supposed to lead to deeper insights and richer dialogue. I will find an opportunity to try it and see what happens for myself. This is experimentation \u2013 which for me is learning. I could assimilate this new way of running meetings and teach others how to do it without experimenting \u2013 but I don\u2019t know the nuances of when and why it works, or in which environments this new way might not work, or whether this approach even works at all. To gain these insights requires experience. In gaining the experience I am also teaching others about the techniques during that experience (if it\u2019s a shared experience), learning collectively about whether it works and building my knowledge. With enough experiments under my belt I feel more comfortable explaining the idea to others, suggesting others use it and I am safe in the knowledge that I\u2019ve learned more about it. Just being able to explain a new idea is great, but explaining how it might not work, or what nuances surround it, is the best way to ensure I have learned it. It\u2019s not always possible to experiment or try (no time, no safe environments for learning, etc) \u2013 that\u2019s not a problem, but I will then seek out more knowledge on that subject to find the opposing ideas or examples of others who have expanded their thinking about the subject through experimentation. My goal is to know the other side of every idea or theory too \u2013 it\u2019s rare everyone agrees on ideas \u2013 certainly in the world of management and communication. By taking on opposing views I build a richer understanding. Refactor There is no harm in refactoring, changing or abandoning an idea or theory -in fact, as you grow your knowledge this will happen. The goal is not to collect information for merely repeating it to others \u2013 the goal is to grow knowledge and understanding \u2013 and teach others. It\u2019s about education, not memorisation. Tools I Use Here are some of the tools I use for capture, curation, crunching and contributing. Apple Notes IFTTT Twitter LinkedIn Brain Pickings and Farnam Street Blog (Two blogs that are exceptionally good at providing food for my brain \u2013 they are doing a wonderful job of curating amazing content and insights) Hemingway App \u2013 Awesome tool for helping you write succinctly ToDoist \u2013 Good Task manager Bear Writer \u2013 Great writing app Iterate The key to a successful PKMS is to keep iterating until it feels right. I doubt you\u2019ll ever get it spot on, but you can get close. Close is good. But as soon as it doesn\u2019t feel right again, try something different. Having control of your own learning is the best way to succeed as a manager. Managers need to learn their way to success and they need to help others learn their way too. Becoming a life long learner opens doors, helps you solve problems and really can boost your career. And the best way to ensure success as a learner is to have a personal knowledge management system that works for you. I do hope you enjoyed this post.","title":"How to Build a Personal Knowledge Management System - Cultivated Management"},{"location":"Highlights/Readwise/Articles/How%20to%20Build%20a%20Personal%20Knowledge%20Management%20System%20-%20Cultivated%20Management/#how-to-build-a-personal-knowledge-management-system-cultivated-management","text":"","title":"How to Build a Personal Knowledge Management System - Cultivated Management"},{"location":"Highlights/Readwise/Articles/How%20to%20Build%20a%20Personal%20Knowledge%20Management%20System%20-%20Cultivated%20Management/#metadata","text":"Author: [[cultivatedmanagement.com]] Full Title: How to Build a Personal Knowledge Management System - Cultivated Management Category: #Type/Highlights/Article URL: https://cultivatedmanagement.com/personal-knowledge-management-system/","title":"Metadata"},{"location":"Highlights/Readwise/Articles/How%20to%20Build%20a%20Personal%20Knowledge%20Management%20System%20-%20Cultivated%20Management/#highlights","text":"The best way to continually improve is to learn and that means developing your own personal knowledge management system (PKMS). We have wiki\u2019s, documents, training, learning, company intranets, brown bag lunches and more. And they often don\u2019t solve the underlying problem of helping people to develop the skills, experience and knowledge to do their jobs better or progress in their careers. Personal knowledge management systems can also become nothing more than a process that doesn\u2019t lead to the right results. We can gather all of the information in the world but if we don\u2019t put it in to action we\u2019ll never gain knowledge. Knowledge of what works, what doesn\u2019t, how it can be improved or how we can adapt it to work better. Let\u2019s start with a wikipedia definition: \u201cPersonal knowledge management (PKM) is a collection of processes that a person uses to gather, classify, store, search, retrieve and share knowledgein their daily activities (Grundspenkis 2007) and the way in which these processes support work activities (Wright 2005). It is a response to the idea that knowledge workers need to be responsible for their own growth and learning (Smedley 2009). It is a bottom-up approach to knowledge management (KM) (Pollard 2008).\u201d Wikipedia In a nutshell it is a system that a person uses to learn. Learning doesn\u2019t happen by gathering resources together \u2013 it happens by discovering new ideas, blending knowledge together, implementing these new ideas (where possible) and observing and moving forward with what you have learned. I\u2019ve been a manger for far too many years and the greatest advantage I had in all this time was a focus on building a powerful PKMS. I\u2019ll share it here, but it\u2019s important to point out that this systems works for me, it might not work for you \u2013 hence the term \u201cpersonal\u201d knowledge management. I have four distinct activities to own personal system: Capture Curate Crunch Contribute Capture At the start of any knowledge management journey is to gather and capture information. You must feed your brain for it to develop new ideas. So what information comes in: At conferences I like to take hand-written notes as I learn more from this process, it\u2019s less frustrating for those around me (less noisy keyboard tapping) and it enhances my learning. I then take a photo of the notes and share to Apple notes app on my phone. If I find an interesting article on the web I can clip it using the Safaris Apple Notes clipper. My Kindle clippings get put in to Notes too. I \u201cshare\u201d articles from my iPad straight to notes too. My notes from doodling in the margins of books are photographed or transcribed \u2013 and end up in notes. If I find myself out and about and have an idea for a blog, book or other project I\u2019ll add the details via the Apple Notes app, or scribble it down in my notebook (and yes, these end up in Notes too). Every piece of content I would ever want to consume and learn about ends up in Apple Notes. Consider though that there is a boat-load of misinformation and nonsense on the Internet. Where you choose to source your knowledge will lead to the quality of your knowledge. I stick to about 5-10 decent blogs, 10-20 interesting people on LinkedIn and the rest of my knowledge tends to come from academic papers, books and serendipity of following interesting articles. Note: 5-10 blogs, 10-20 people, academic papers, books, ideas, etc. Limit the intake! Curate Every week or so I go through my notes and curate them. Everything ends up in the standard All Notes section in Apple Notes. I then simply process everything that has not been allocated to a folder. Curating content is all about working out the value of each piece of information Do I still value this piece of information or shall I delete it? Will I need to refer back to it again? Is this a key part of information I should crunch with my existing knowledge to move my learning forward? And of course some notes are just tasks and ideas. If I want to do something with them I\u2019ll move them my task manager (Todoist) If it\u2019s for further crunching or I\u2019ve not completely read the source I store them in the \u201cRead It Later\u201d folder. If I\u2019ve processed it, the raw note goes to a folder called \u201cCommonplace\u201d so I can find it again in the future. But before then I spend time extracting relevant learning points in the crunch phase. And then adding this relevant information to my Core Learning Notes. Note: Commonplace = like that name Crunch The majority of my notes end up being crunched. This is my term for studying the information and mashing it together with my existing knowledge. There are a few core subjects I am trying to learn and improve upon. Communication Skills \u2013 I am a lifelong learner of communication and aim to continue to grow my knowledge until I no longer can! Light Therapy \u2013 I am trying to learn as much as possible about light therapy and how light affects humans at work Management \u2013 my bread and butter skill and a topic with a never ending array of principles, ideas and opinions to digest Writing, marketing and product sales \u2013 I am learning about how to market myself, my product and how to sell! Publishing \u2013 I\u2019ve always needed to publish work (books, magazines, zines, photography, podcasting etc) so I\u2019m reading about how others are doing this and learning When I add information I am asking a few questions: Does it counter something else I already believe \u2013 how and why and what can I learn from that? Does it compliment existing knowledge? Is it a new piece of information? Is it duplicate \u2013 in which case should I delete it? Crunching is really the learning phase. This is the assimilation of information \u2013 it\u2019s about finding a home for it in my mind. Apple Notes is merely a container and model that maps closely to my mind. Contribution My favourite way of learning is to put in practice that which I have learned (if possible). So, for example, let\u2019s say I learn of a new way of organising a meeting that is supposed to lead to deeper insights and richer dialogue. I will find an opportunity to try it and see what happens for myself. This is experimentation \u2013 which for me is learning. I could assimilate this new way of running meetings and teach others how to do it without experimenting \u2013 but I don\u2019t know the nuances of when and why it works, or in which environments this new way might not work, or whether this approach even works at all. To gain these insights requires experience. In gaining the experience I am also teaching others about the techniques during that experience (if it\u2019s a shared experience), learning collectively about whether it works and building my knowledge. With enough experiments under my belt I feel more comfortable explaining the idea to others, suggesting others use it and I am safe in the knowledge that I\u2019ve learned more about it. Just being able to explain a new idea is great, but explaining how it might not work, or what nuances surround it, is the best way to ensure I have learned it. It\u2019s not always possible to experiment or try (no time, no safe environments for learning, etc) \u2013 that\u2019s not a problem, but I will then seek out more knowledge on that subject to find the opposing ideas or examples of others who have expanded their thinking about the subject through experimentation. My goal is to know the other side of every idea or theory too \u2013 it\u2019s rare everyone agrees on ideas \u2013 certainly in the world of management and communication. By taking on opposing views I build a richer understanding. Refactor There is no harm in refactoring, changing or abandoning an idea or theory -in fact, as you grow your knowledge this will happen. The goal is not to collect information for merely repeating it to others \u2013 the goal is to grow knowledge and understanding \u2013 and teach others. It\u2019s about education, not memorisation. Tools I Use Here are some of the tools I use for capture, curation, crunching and contributing. Apple Notes IFTTT Twitter LinkedIn Brain Pickings and Farnam Street Blog (Two blogs that are exceptionally good at providing food for my brain \u2013 they are doing a wonderful job of curating amazing content and insights) Hemingway App \u2013 Awesome tool for helping you write succinctly ToDoist \u2013 Good Task manager Bear Writer \u2013 Great writing app Iterate The key to a successful PKMS is to keep iterating until it feels right. I doubt you\u2019ll ever get it spot on, but you can get close. Close is good. But as soon as it doesn\u2019t feel right again, try something different. Having control of your own learning is the best way to succeed as a manager. Managers need to learn their way to success and they need to help others learn their way too. Becoming a life long learner opens doors, helps you solve problems and really can boost your career. And the best way to ensure success as a learner is to have a personal knowledge management system that works for you. I do hope you enjoyed this post.","title":"Highlights"},{"location":"Highlights/Readwise/Articles/How%20to%20Build%20an%20Efficient%20Personal%20Knowledge%20Management%20System-2/","text":"How to Build an Efficient Personal Knowledge Management System \u00b6 Metadata \u00b6 Author: [[Axton]] Full Title: How to Build an Efficient Personal Knowledge Management System Category: #Type/Highlights/Article URL: https://medium.com/p/355332ae5991 Highlights \u00b6 The best way to transform the information into our knowledge is to interpret something new to us based on what we have learned and share them. Interpreting helps us organize and digest information. Therefore it can translate information into our embedded knowledge. And sharing is not only a contribution to the information age but also our motivation to keep outputting better works, which is the reason why I believe that information becomes knowledge via organizing and sharing.","title":"How to Build an Efficient Personal Knowledge Management System"},{"location":"Highlights/Readwise/Articles/How%20to%20Build%20an%20Efficient%20Personal%20Knowledge%20Management%20System-2/#how-to-build-an-efficient-personal-knowledge-management-system","text":"","title":"How to Build an Efficient Personal Knowledge Management System"},{"location":"Highlights/Readwise/Articles/How%20to%20Build%20an%20Efficient%20Personal%20Knowledge%20Management%20System-2/#metadata","text":"Author: [[Axton]] Full Title: How to Build an Efficient Personal Knowledge Management System Category: #Type/Highlights/Article URL: https://medium.com/p/355332ae5991","title":"Metadata"},{"location":"Highlights/Readwise/Articles/How%20to%20Build%20an%20Efficient%20Personal%20Knowledge%20Management%20System-2/#highlights","text":"The best way to transform the information into our knowledge is to interpret something new to us based on what we have learned and share them. Interpreting helps us organize and digest information. Therefore it can translate information into our embedded knowledge. And sharing is not only a contribution to the information age but also our motivation to keep outputting better works, which is the reason why I believe that information becomes knowledge via organizing and sharing.","title":"Highlights"},{"location":"Highlights/Readwise/Articles/How%20to%20Build%20an%20Efficient%20Personal%20Knowledge%20Management%20System/","text":"How to Build an Efficient Personal Knowledge Management System \u00b6 Metadata \u00b6 Author: [[medium.com]] Full Title: How to Build an Efficient Personal Knowledge Management System Category: #Type/Highlights/Article URL: https://medium.com/@axtonliu/how-to-build-an-efficient-personal-knowledge-management-system-355332ae5991 Highlights \u00b6 I believe that making an effort to establish a personal knowledge management system can be beneficial to everyone. Nowadays, we all face with too much fragmented information. We have to learn how to control the information by transforming quality content into knowledge and discarding momentary and useless information. Tags: [[favorite]] Therefore I have to build a system which can help me to translate information into knowledge, and I did. Knowledge Management is one of the hottest topics today in both the industry world and information research world. In our daily life, we deal with huge amount of data and information. Data and information are not knowledge until we know how to dig the value out of it. This is the reason we need knowledge management. Unfortunately, there\u2019s no universal definition of knowledge management, just as there\u2019s no agreement as to what constitutes knowledge in the first place. After building my KM system, I keep improving and modifying it, which makes me become more efficient and help me completely solve the following issues: Amass information without creation. As I have mentioned before, every day I read a lot of articles or posts from websites, social media, and Google search. When I found an excellent article, I will promptly save it to Evernote, a digital notebook I have used before, for further reference. After many years accumulation, there are thousands of notes in my Evernote notebook. However, I did not read most of them for second times after saving them. No output, no sharing. For example, when I was dealing with a problem, I always referred to multiple resources and even did certain experiments to conclude the final solution. After the task had been done, I did not organize all the information regarding the solution and write down how I found it. Also, I did not share it with someone else. After a time, I will forget all about these: the references, the experiments, and the solution. All my efforts do not achieve their maximum value. The above picture is a DIKW (abbreviation of Data, Information, Knowledge, Wisdom) pyramid from David McCandless, which illustrates the hierarchy of data, information, knowledge and wisdom. It is important to note that there is a definite boundary in the middle of the pyramid: Data and information are what we collected, Knowledge and wisdom are what we created. Tags: [[favorite]] The essential part of a good KMS is output. Reading books, watching videos and attending lectures are all activities for acquiring information. Even though books and lectures belong to wisdom or knowledge in the DIKW model, they are the authors\u2019 wisdom and lecturers\u2019 knowledge. They are not ours. The best way to transform the information into our knowledge is to interpret something new to us based on what we have learned and share them. OneNote is the most important application of this system. It is the central storage and the perfect note taking solution. All information which is processed by me is classified and saved in OneNote. EverNote acts as a container for collected information and the final storage for raw materials. Materials which I do not study them and write notes on them are called \u201craw material,\u201d I only keep them for further reference. EverNote used to be my primary note app for a long time, while it is also a fantastic software, I finally moved to OneNote because of following reasons: Windows version OneNote has better performance than EverNote. If an EverNote notebook contains too many notes, say more than one thousand, the performance would become terrible. I cannot scroll the notebook smoothly even it is running on my i7 CPU with 16G RAM laptop. Every OneNote\u2019s page is an endless paper, which is perfect to complement additional content to a note. We face with two types of information: Active information and passive information. Active information is what we intend to acquire, such as googling a keyword. By contrast, passive information is pushed to us by its\u2019 senders, such as twitters, posts and so on. In the collection phase, the primary task is to judge which information should be kept for further reading. And it is also important that do not spend too much time on browsing the passive information. Workflow is a powerful automation tool which can \u201cconnect apps and actions together to automate things you do on your device.\u201d I use it to extract useful information from Safari by: Converting the whole web page to PDF document and save it to Dropbox for further processing. Excerpting snippets from a web page and appending them to EverNote notes. I digitize paper documents via Scanner Pro and save them to Dropbox, and use Duokan to read ePUB books because it can automatically save the book\u2019s highlights or notes to EverNote. After this phase is finished, all the information which need to be processed in next phase is stored in Pocket, Feedly, Dropbox and EverNote. For each of the collected material, we need to decide whether we should study it or just keep it for further reference. The decision depends on subjects on which we are currently focusing. For example, if I am currently concentrating on web development, an article named \u201c10 tips to build a fast HTML 5 app\u201d is definitely worth to read carefully. And \u201cHealthy dinner recipes\u201d, I am not interested in cooking, but these recipes seem perfect and maybe someday I will need to prepare a feast, so it would be better to save it in my \u201cReference\u201d notebook. Organization mainly includes classification and complement. Besides highlighting and noting down the important points in an article, it is also necessary to expand on certain contents or words to help us understand more deeply. If a post contains a term \u201cDES\u201d, for instance, which I do not know its meaning, I will google it and note down the explanation. Tags: [[favorite]] After processing a material, I should save it to an appropriate location and tag it, in other words, classify it into the proper category. In OneNote, I am using three levels for classification: Notebook, Section and Tag. Regarding how to build a personal note system, this is another topic which is worth writing the other article to describe it in detail. Simply put, the principle of my note taking solution is that the notes should be obtained or consulted again easily. The most important step is to review the organized materials periodically. Without review, our hard disk would become a landfill instead of a treasure trove of knowledge. I do review weekly. During the review, I always ask myself following questions about an organized note: Is it relevant to my current focus? If yes, then I need to put more effort on it. It can be used to solve which problem? This question helps create a relationship between the knowledge and problems. We can keep in mind that which problems can refer to these notes. Does it belong to which topic or project? Classify the note to existing topic or create a new topic if necessary. For example, before I began to write this post, I created a topic \u201cKnowledge Management System .\u201d So related articles or pictures will be classified to this topic. There are not too many apps needed in this phase. Following are the three top apps I frequently use: MarginNote Pro This is my ideal app for PDF documents studying, annotating and noting. It combines Mindmap and Outline for note organization and provides Flashcard for memorizing notes. It has a free version named \u201cMarginNote\u201d which you could try it. MindJet Maps A free mind map app with standard functions. I only read mind maps on my iPad and rarely edit them, so MindJet fulfills my needs. If you need to edit mind map frequently, I would not recommend it. OneNote A powerful and cross-platform note taking solution. Each page likes an endless paper, which makes it extremely convenient for complementing new contents to an existing note. After the organization phase, all the organized and processed information, and information which is being organized and processed, are saved in MarginNote Pro and OneNote. Ulysses for most of my writing tasks. Ulysses is a decent Markdown editor app which can make me concentrate on typing and enjoy writing.","title":"How to Build an Efficient Personal Knowledge Management System"},{"location":"Highlights/Readwise/Articles/How%20to%20Build%20an%20Efficient%20Personal%20Knowledge%20Management%20System/#how-to-build-an-efficient-personal-knowledge-management-system","text":"","title":"How to Build an Efficient Personal Knowledge Management System"},{"location":"Highlights/Readwise/Articles/How%20to%20Build%20an%20Efficient%20Personal%20Knowledge%20Management%20System/#metadata","text":"Author: [[medium.com]] Full Title: How to Build an Efficient Personal Knowledge Management System Category: #Type/Highlights/Article URL: https://medium.com/@axtonliu/how-to-build-an-efficient-personal-knowledge-management-system-355332ae5991","title":"Metadata"},{"location":"Highlights/Readwise/Articles/How%20to%20Build%20an%20Efficient%20Personal%20Knowledge%20Management%20System/#highlights","text":"I believe that making an effort to establish a personal knowledge management system can be beneficial to everyone. Nowadays, we all face with too much fragmented information. We have to learn how to control the information by transforming quality content into knowledge and discarding momentary and useless information. Tags: [[favorite]] Therefore I have to build a system which can help me to translate information into knowledge, and I did. Knowledge Management is one of the hottest topics today in both the industry world and information research world. In our daily life, we deal with huge amount of data and information. Data and information are not knowledge until we know how to dig the value out of it. This is the reason we need knowledge management. Unfortunately, there\u2019s no universal definition of knowledge management, just as there\u2019s no agreement as to what constitutes knowledge in the first place. After building my KM system, I keep improving and modifying it, which makes me become more efficient and help me completely solve the following issues: Amass information without creation. As I have mentioned before, every day I read a lot of articles or posts from websites, social media, and Google search. When I found an excellent article, I will promptly save it to Evernote, a digital notebook I have used before, for further reference. After many years accumulation, there are thousands of notes in my Evernote notebook. However, I did not read most of them for second times after saving them. No output, no sharing. For example, when I was dealing with a problem, I always referred to multiple resources and even did certain experiments to conclude the final solution. After the task had been done, I did not organize all the information regarding the solution and write down how I found it. Also, I did not share it with someone else. After a time, I will forget all about these: the references, the experiments, and the solution. All my efforts do not achieve their maximum value. The above picture is a DIKW (abbreviation of Data, Information, Knowledge, Wisdom) pyramid from David McCandless, which illustrates the hierarchy of data, information, knowledge and wisdom. It is important to note that there is a definite boundary in the middle of the pyramid: Data and information are what we collected, Knowledge and wisdom are what we created. Tags: [[favorite]] The essential part of a good KMS is output. Reading books, watching videos and attending lectures are all activities for acquiring information. Even though books and lectures belong to wisdom or knowledge in the DIKW model, they are the authors\u2019 wisdom and lecturers\u2019 knowledge. They are not ours. The best way to transform the information into our knowledge is to interpret something new to us based on what we have learned and share them. OneNote is the most important application of this system. It is the central storage and the perfect note taking solution. All information which is processed by me is classified and saved in OneNote. EverNote acts as a container for collected information and the final storage for raw materials. Materials which I do not study them and write notes on them are called \u201craw material,\u201d I only keep them for further reference. EverNote used to be my primary note app for a long time, while it is also a fantastic software, I finally moved to OneNote because of following reasons: Windows version OneNote has better performance than EverNote. If an EverNote notebook contains too many notes, say more than one thousand, the performance would become terrible. I cannot scroll the notebook smoothly even it is running on my i7 CPU with 16G RAM laptop. Every OneNote\u2019s page is an endless paper, which is perfect to complement additional content to a note. We face with two types of information: Active information and passive information. Active information is what we intend to acquire, such as googling a keyword. By contrast, passive information is pushed to us by its\u2019 senders, such as twitters, posts and so on. In the collection phase, the primary task is to judge which information should be kept for further reading. And it is also important that do not spend too much time on browsing the passive information. Workflow is a powerful automation tool which can \u201cconnect apps and actions together to automate things you do on your device.\u201d I use it to extract useful information from Safari by: Converting the whole web page to PDF document and save it to Dropbox for further processing. Excerpting snippets from a web page and appending them to EverNote notes. I digitize paper documents via Scanner Pro and save them to Dropbox, and use Duokan to read ePUB books because it can automatically save the book\u2019s highlights or notes to EverNote. After this phase is finished, all the information which need to be processed in next phase is stored in Pocket, Feedly, Dropbox and EverNote. For each of the collected material, we need to decide whether we should study it or just keep it for further reference. The decision depends on subjects on which we are currently focusing. For example, if I am currently concentrating on web development, an article named \u201c10 tips to build a fast HTML 5 app\u201d is definitely worth to read carefully. And \u201cHealthy dinner recipes\u201d, I am not interested in cooking, but these recipes seem perfect and maybe someday I will need to prepare a feast, so it would be better to save it in my \u201cReference\u201d notebook. Organization mainly includes classification and complement. Besides highlighting and noting down the important points in an article, it is also necessary to expand on certain contents or words to help us understand more deeply. If a post contains a term \u201cDES\u201d, for instance, which I do not know its meaning, I will google it and note down the explanation. Tags: [[favorite]] After processing a material, I should save it to an appropriate location and tag it, in other words, classify it into the proper category. In OneNote, I am using three levels for classification: Notebook, Section and Tag. Regarding how to build a personal note system, this is another topic which is worth writing the other article to describe it in detail. Simply put, the principle of my note taking solution is that the notes should be obtained or consulted again easily. The most important step is to review the organized materials periodically. Without review, our hard disk would become a landfill instead of a treasure trove of knowledge. I do review weekly. During the review, I always ask myself following questions about an organized note: Is it relevant to my current focus? If yes, then I need to put more effort on it. It can be used to solve which problem? This question helps create a relationship between the knowledge and problems. We can keep in mind that which problems can refer to these notes. Does it belong to which topic or project? Classify the note to existing topic or create a new topic if necessary. For example, before I began to write this post, I created a topic \u201cKnowledge Management System .\u201d So related articles or pictures will be classified to this topic. There are not too many apps needed in this phase. Following are the three top apps I frequently use: MarginNote Pro This is my ideal app for PDF documents studying, annotating and noting. It combines Mindmap and Outline for note organization and provides Flashcard for memorizing notes. It has a free version named \u201cMarginNote\u201d which you could try it. MindJet Maps A free mind map app with standard functions. I only read mind maps on my iPad and rarely edit them, so MindJet fulfills my needs. If you need to edit mind map frequently, I would not recommend it. OneNote A powerful and cross-platform note taking solution. Each page likes an endless paper, which makes it extremely convenient for complementing new contents to an existing note. After the organization phase, all the organized and processed information, and information which is being organized and processed, are saved in MarginNote Pro and OneNote. Ulysses for most of my writing tasks. Ulysses is a decent Markdown editor app which can make me concentrate on typing and enjoy writing.","title":"Highlights"},{"location":"Highlights/Readwise/Articles/How%20to%20Build%20the%20Ultimate%20Productivity%20System/","text":"How to Build the Ultimate Productivity System \u00b6 Metadata \u00b6 Author: [[Chris Kyle]] Full Title: How to Build the Ultimate Productivity System Category: #Type/Highlights/Article URL: https://medium.com/p/286d6e329b4f Highlights \u00b6 Create A System, Not A List","title":"How to Build the Ultimate Productivity System"},{"location":"Highlights/Readwise/Articles/How%20to%20Build%20the%20Ultimate%20Productivity%20System/#how-to-build-the-ultimate-productivity-system","text":"","title":"How to Build the Ultimate Productivity System"},{"location":"Highlights/Readwise/Articles/How%20to%20Build%20the%20Ultimate%20Productivity%20System/#metadata","text":"Author: [[Chris Kyle]] Full Title: How to Build the Ultimate Productivity System Category: #Type/Highlights/Article URL: https://medium.com/p/286d6e329b4f","title":"Metadata"},{"location":"Highlights/Readwise/Articles/How%20to%20Build%20the%20Ultimate%20Productivity%20System/#highlights","text":"Create A System, Not A List","title":"Highlights"},{"location":"Highlights/Readwise/Articles/How%20to%20Centralize%20Your%20Tasks%20When%20You%E2%80%99re%20Using%20Too%20Many%20Apps/","text":"How to Centralize Your Tasks When You\u2019re Using Too Many Apps \u00b6 Metadata \u00b6 Author: [[Denise Rebollido]] Full Title: How to Centralize Your Tasks When You\u2019re Using Too Many Apps Category: #Type/Highlights/Article URL: https://doist.com/blog/integrate-todoist-apps/ Highlights \u00b6 Instead of working through tasks with intention, our days become a game of whack-a-mole as we try to keep up with all the tasks that pop up across our inboxes, calendars, and communication tools. At the end of the day, it\u2019s hard to say whether we came out ahead or behind. Whittle your productivity stack down to the essentials Carl Pullein, a productivity and time management coach, provides a good rule of thumb: one app for one type of work. If you\u2019re constantly forgetting where you saved a note, or checking multiple calendars for your next appointment, it\u2019s probably time to reevaluate your current stack of productivity tools and whittle it down to a manageable size. A to-do list app A calendar app A note-taking app A writing app An email app A team messaging app A project management app start each day with one central \u201ccommand center\u201d that has the power to improve your productivity Benefits of centralizing your to-do list Saves you valuable time Another option for integrating Todoist with your email is Pleexy. Using Pleexy to connect Todoist with Gmail or Outlook will create tasks in your chosen Todoist project from new and existing starred emails in Gmail or flagged emails in Outlook. Integrate Todoist with your project management apps Integrate Todoist with your calendar app","title":"How to Centralize Your Tasks When You\u2019re Using Too Many Apps"},{"location":"Highlights/Readwise/Articles/How%20to%20Centralize%20Your%20Tasks%20When%20You%E2%80%99re%20Using%20Too%20Many%20Apps/#how-to-centralize-your-tasks-when-youre-using-too-many-apps","text":"","title":"How to Centralize Your Tasks When You\u2019re Using Too Many Apps"},{"location":"Highlights/Readwise/Articles/How%20to%20Centralize%20Your%20Tasks%20When%20You%E2%80%99re%20Using%20Too%20Many%20Apps/#metadata","text":"Author: [[Denise Rebollido]] Full Title: How to Centralize Your Tasks When You\u2019re Using Too Many Apps Category: #Type/Highlights/Article URL: https://doist.com/blog/integrate-todoist-apps/","title":"Metadata"},{"location":"Highlights/Readwise/Articles/How%20to%20Centralize%20Your%20Tasks%20When%20You%E2%80%99re%20Using%20Too%20Many%20Apps/#highlights","text":"Instead of working through tasks with intention, our days become a game of whack-a-mole as we try to keep up with all the tasks that pop up across our inboxes, calendars, and communication tools. At the end of the day, it\u2019s hard to say whether we came out ahead or behind. Whittle your productivity stack down to the essentials Carl Pullein, a productivity and time management coach, provides a good rule of thumb: one app for one type of work. If you\u2019re constantly forgetting where you saved a note, or checking multiple calendars for your next appointment, it\u2019s probably time to reevaluate your current stack of productivity tools and whittle it down to a manageable size. A to-do list app A calendar app A note-taking app A writing app An email app A team messaging app A project management app start each day with one central \u201ccommand center\u201d that has the power to improve your productivity Benefits of centralizing your to-do list Saves you valuable time Another option for integrating Todoist with your email is Pleexy. Using Pleexy to connect Todoist with Gmail or Outlook will create tasks in your chosen Todoist project from new and existing starred emails in Gmail or flagged emails in Outlook. Integrate Todoist with your project management apps Integrate Todoist with your calendar app","title":"Highlights"},{"location":"Highlights/Readwise/Articles/How%20to%20Check%20Your%20Windows%20Experience%20Score%20on%20Windows%2010/","text":"How to Check Your Windows Experience Score on Windows 10 \u00b6 Metadata \u00b6 Author: Full Title: How to Check Your Windows Experience Score on Windows 10 Category: #Type/Highlights/Article URL: https://www.makeuseof.com/tag/check-windows-experience-score-windows-10/ Highlights \u00b6 Run WinSAT to Generate Windows Experience Index The Windows System Assessment Tool (WinSAT) remains tucked away in Windows 10. You can use WinSAT to generate a Windows Experience Index for your processor, graphics card, memory speed, and more. The following process generates a Windows Experience Index then exports it to an XML file. Type command in your Start Menu search bar, right-click the Best Match and select Run as Administrator. When the Command Prompt opens, input the following command: winsat formal Wait for the process to complete. When it finishes, you can find the XML file in C:\\Windows\\Performance\\WinSAT\\DataStore. Look for a set of files containing the date you are running the test on. Open the XML file that looks like \u201c[date of test] Formal.Assessment (Recent).WinSAT.xml\u201d. When prompted, select your internet browser to view the XML file. Your browser will make the XML data readable. The Windows Experience Index is close to the top of the file. The Windows Experience Index was never a fantastic way to judge your system performance. It has a single severe limitation. Your Windows Experience Index value comes from your lowest performing piece of hardware. In my case, my disk speeds bring my overall score down, despite receiving high scores for CPU, Direct 3D, Graphics, and Memory. A single low score can alert you to a bottleneck in your system. My system score drops because I have multiple drives, some of which are old, lumbering hard drives. Overall, the Windows Experience Index isn\u2019t the best way to figure out your system performance, or where you could improve it, either. Here are two alternatives to the Windows Experience Index that give you the information you need. SiSoftware Sandra (System ANaylzer, Diagnostic, and Reporting Assistant) is a system benchmarking tool you can use to test your hardware against other users. Sandra has an online reference database that you can use to compare individual aspects of your system, like your processor or internet connection, then compare against other systems to figure out if a system upgrade is worthwhile. Another useful option is UserBenchmark. UserBenchmark runs a suite of benchmarking tools on your system, then opens the results in your default internet browser. You can then compare your results with the thousands of other UserBenchmark users, figuring out how your system ranks in comparison.","title":"How to Check Your Windows Experience Score on Windows 10"},{"location":"Highlights/Readwise/Articles/How%20to%20Check%20Your%20Windows%20Experience%20Score%20on%20Windows%2010/#how-to-check-your-windows-experience-score-on-windows-10","text":"","title":"How to Check Your Windows Experience Score on Windows 10"},{"location":"Highlights/Readwise/Articles/How%20to%20Check%20Your%20Windows%20Experience%20Score%20on%20Windows%2010/#metadata","text":"Author: Full Title: How to Check Your Windows Experience Score on Windows 10 Category: #Type/Highlights/Article URL: https://www.makeuseof.com/tag/check-windows-experience-score-windows-10/","title":"Metadata"},{"location":"Highlights/Readwise/Articles/How%20to%20Check%20Your%20Windows%20Experience%20Score%20on%20Windows%2010/#highlights","text":"Run WinSAT to Generate Windows Experience Index The Windows System Assessment Tool (WinSAT) remains tucked away in Windows 10. You can use WinSAT to generate a Windows Experience Index for your processor, graphics card, memory speed, and more. The following process generates a Windows Experience Index then exports it to an XML file. Type command in your Start Menu search bar, right-click the Best Match and select Run as Administrator. When the Command Prompt opens, input the following command: winsat formal Wait for the process to complete. When it finishes, you can find the XML file in C:\\Windows\\Performance\\WinSAT\\DataStore. Look for a set of files containing the date you are running the test on. Open the XML file that looks like \u201c[date of test] Formal.Assessment (Recent).WinSAT.xml\u201d. When prompted, select your internet browser to view the XML file. Your browser will make the XML data readable. The Windows Experience Index is close to the top of the file. The Windows Experience Index was never a fantastic way to judge your system performance. It has a single severe limitation. Your Windows Experience Index value comes from your lowest performing piece of hardware. In my case, my disk speeds bring my overall score down, despite receiving high scores for CPU, Direct 3D, Graphics, and Memory. A single low score can alert you to a bottleneck in your system. My system score drops because I have multiple drives, some of which are old, lumbering hard drives. Overall, the Windows Experience Index isn\u2019t the best way to figure out your system performance, or where you could improve it, either. Here are two alternatives to the Windows Experience Index that give you the information you need. SiSoftware Sandra (System ANaylzer, Diagnostic, and Reporting Assistant) is a system benchmarking tool you can use to test your hardware against other users. Sandra has an online reference database that you can use to compare individual aspects of your system, like your processor or internet connection, then compare against other systems to figure out if a system upgrade is worthwhile. Another useful option is UserBenchmark. UserBenchmark runs a suite of benchmarking tools on your system, then opens the results in your default internet browser. You can then compare your results with the thousands of other UserBenchmark users, figuring out how your system ranks in comparison.","title":"Highlights"},{"location":"Highlights/Readwise/Articles/How%20to%20Clean%20Your%20Windows%20Computer%20The%20Ultimate%20Checklist/","text":"How to Clean Your Windows Computer: The Ultimate Checklist \u00b6 Metadata \u00b6 Author: Full Title: How to Clean Your Windows Computer: The Ultimate Checklist Category: #Type/Highlights/Article URL: https://www.makeuseof.com/tag/clean-windows-ultimate-checklist/ Highlights \u00b6 If you\u2019ve ever done a clean install of Windows, you\u2019ll know what we\u2019re talking about. Getting rid of all the accumulated junk and starting afresh instantly makes your machine run faster and smoother. Delete Unused Software","title":"How to Clean Your Windows Computer: The Ultimate Checklist"},{"location":"Highlights/Readwise/Articles/How%20to%20Clean%20Your%20Windows%20Computer%20The%20Ultimate%20Checklist/#how-to-clean-your-windows-computer-the-ultimate-checklist","text":"","title":"How to Clean Your Windows Computer: The Ultimate Checklist"},{"location":"Highlights/Readwise/Articles/How%20to%20Clean%20Your%20Windows%20Computer%20The%20Ultimate%20Checklist/#metadata","text":"Author: Full Title: How to Clean Your Windows Computer: The Ultimate Checklist Category: #Type/Highlights/Article URL: https://www.makeuseof.com/tag/clean-windows-ultimate-checklist/","title":"Metadata"},{"location":"Highlights/Readwise/Articles/How%20to%20Clean%20Your%20Windows%20Computer%20The%20Ultimate%20Checklist/#highlights","text":"If you\u2019ve ever done a clean install of Windows, you\u2019ll know what we\u2019re talking about. Getting rid of all the accumulated junk and starting afresh instantly makes your machine run faster and smoother. Delete Unused Software","title":"Highlights"},{"location":"Highlights/Readwise/Articles/How%20to%20Create%20EaseUS%20Bootable%20USB%2C%20CDDVD%2C%20and%20ISO%20Image%20With%20EaseUS%20Todo%20Backup%20-%20EaseUS/","text":"How to Create EaseUS Bootable USB, CD/DVD, and ISO Image With EaseUS Todo Backup - EaseUS \u00b6 Metadata \u00b6 Author: [[easeus.com]] Full Title: How to Create EaseUS Bootable USB, CD/DVD, and ISO Image With EaseUS Todo Backup - EaseUS Category: #Type/Highlights/Article URL: https://www.easeus.com/todo-backup-guide/winpe-bootable-disk.html#:~:text=1%20Connect%20your%20USB%20to%20your%20computer.%202,Click%20Proceed%20to%20create%20a%20bootable%20USB%20drive. Highlights \u00b6 Under the Pre-installation Environment, we can run EaseUS Todo Backup without system boot partitions, and recover system/data from the backup. ( View Highlight )","title":"How to Create EaseUS Bootable USB, CD/DVD, and ISO Image With EaseUS Todo Backup - EaseUS"},{"location":"Highlights/Readwise/Articles/How%20to%20Create%20EaseUS%20Bootable%20USB%2C%20CDDVD%2C%20and%20ISO%20Image%20With%20EaseUS%20Todo%20Backup%20-%20EaseUS/#how-to-create-easeus-bootable-usb-cddvd-and-iso-image-with-easeus-todo-backup-easeus","text":"","title":"How to Create EaseUS Bootable USB, CD/DVD, and ISO Image With EaseUS Todo Backup - EaseUS"},{"location":"Highlights/Readwise/Articles/How%20to%20Create%20EaseUS%20Bootable%20USB%2C%20CDDVD%2C%20and%20ISO%20Image%20With%20EaseUS%20Todo%20Backup%20-%20EaseUS/#metadata","text":"Author: [[easeus.com]] Full Title: How to Create EaseUS Bootable USB, CD/DVD, and ISO Image With EaseUS Todo Backup - EaseUS Category: #Type/Highlights/Article URL: https://www.easeus.com/todo-backup-guide/winpe-bootable-disk.html#:~:text=1%20Connect%20your%20USB%20to%20your%20computer.%202,Click%20Proceed%20to%20create%20a%20bootable%20USB%20drive.","title":"Metadata"},{"location":"Highlights/Readwise/Articles/How%20to%20Create%20EaseUS%20Bootable%20USB%2C%20CDDVD%2C%20and%20ISO%20Image%20With%20EaseUS%20Todo%20Backup%20-%20EaseUS/#highlights","text":"Under the Pre-installation Environment, we can run EaseUS Todo Backup without system boot partitions, and recover system/data from the backup. ( View Highlight )","title":"Highlights"},{"location":"Highlights/Readwise/Articles/How%20to%20Create%20a%20GitHub%20Profile%20README/","text":"How to Create a GitHub Profile README \u00b6 Metadata \u00b6 Author: Full Title: How to Create a GitHub Profile README Category: #Type/Highlights/Article URL: https://www.aboutmonica.com/blog/how-to-create-a-github-profile-readme Highlights \u00b6 A solid README is a core-component of well-documented software and often encourages collaboration by sharing helpful context with contributors. In my opinion, a profile-level README seems like a great extension of a convention a lot of GitHub users are already familiar with. If you're looking to make project-level READMEs more awesome and helpful check out matiassingers/awesome-readme for resources and examples of compelling READMEs.","title":"How to Create a GitHub Profile README"},{"location":"Highlights/Readwise/Articles/How%20to%20Create%20a%20GitHub%20Profile%20README/#how-to-create-a-github-profile-readme","text":"","title":"How to Create a GitHub Profile README"},{"location":"Highlights/Readwise/Articles/How%20to%20Create%20a%20GitHub%20Profile%20README/#metadata","text":"Author: Full Title: How to Create a GitHub Profile README Category: #Type/Highlights/Article URL: https://www.aboutmonica.com/blog/how-to-create-a-github-profile-readme","title":"Metadata"},{"location":"Highlights/Readwise/Articles/How%20to%20Create%20a%20GitHub%20Profile%20README/#highlights","text":"A solid README is a core-component of well-documented software and often encourages collaboration by sharing helpful context with contributors. In my opinion, a profile-level README seems like a great extension of a convention a lot of GitHub users are already familiar with. If you're looking to make project-level READMEs more awesome and helpful check out matiassingers/awesome-readme for resources and examples of compelling READMEs.","title":"Highlights"},{"location":"Highlights/Readwise/Articles/How%20to%20Create%20an%20Effective%20Productivity%20Plan%20-%20Optimize%20Time/","text":"How to Create an Effective Productivity Plan - Optimize Time \u00b6 Metadata \u00b6 Author: [[quickbooost.com]] Full Title: How to Create an Effective Productivity Plan - Optimize Time Category: #Type/Highlights/Article URL: https://quickbooost.com/productivity-plan/ Highlights \u00b6 How To Create An Effective Productivity Plan \u2013 Optimize Time To start, let\u2019s discuss what a productivity plan is. A productivity plan is a plan that you create for your time. It is a combination of: Looking at what you need to do Recognizing when you need to do it And then creating a schedule that organizes your day into a manageable structure In other words, it\u2019s a way to map out your time so that you can get everything done that you need to each day AND make real progress forward. That may sound easy, but there\u2019s a good amount to it. Because you can\u2019t just throw some tasks on a list and call it a day. No. It requires more thought, more deliberation. You need to understand your big picture, where you\u2019re going, and why you want to go there in the first place. Things like goal setting, time management, and productivity are all factors that you\u2019ll need to keep in mind when creating your plan each day. Make more progress Having a productivity plan is essential. Why? Because of what it allows you to do: better optimize your time and get more high-level tasks done. I touch on this a little bit in my post on daily planning, but essentially, having a plan for your time allows you to focus on the important things and disregard the unimportant. It allows you to prioritize your tasks so that each thing you work on will help you make progress towards your goals. That means that in the micro, your productivity plan is a way to make more progress in the short term. And conversely, in the macro, the progress you make today will lead you to making greater progress each week, month, and year. Soon you\u2019ll find that you are moving faster and more effectively than ever before. So see it as your action plan to improve productivity at work, with your health, or really any area that you are looking to make progress in. How to create your productivity plan You can create a plan with your work in mind so that you can enhance productivity in the workplace. Or you can create a plan for this afternoon to ensure that you get some exercise in. Or better yet, and this is what I do, you can create a plan for your entire day. Either way, the following steps are ones that you can apply to your time in whatever way you\u2019d like. With that, here are the steps to creating your very own productivity plan. Productivity Plan Step 1: List everything out The first step to creating your productivity plan is to list out all of the tasks that you need to do within a certain amount of time. For instance, if you are creating a plan for the hour of downtime you have between getting home from work and going to the gym, write down every single task that you need to do during that hour. Productivity Plan Step 2: Organize by importance The next step is to re-organize your list by importance. Go ahead and place your highest-importance tasks at the top and your lowest-importance tasks at the bottom. When I say important tasks, I mean tasks that will help you make progress towards your goals. Not tasks that are irrelevant or are easy chores to handle. Productivity Plan Step 3: Note your time With that step now complete, the next step is to note your time. To do that, you need to do two things. Write down: How much time you have total And how much time each task requires So if you have one hour to complete your tasks, your total time available is one hour. And then looking at your list, you\u2019ll want to note how long each task should take to complete. Productivity Plan Step 4: Finalize it The next part in creating your productivity plan is to finalize your list. Take a look at the total amount of time you have available. Then add up the total time you need to complete all your tasks. For instance, if you need two hours to complete all your tasks, but only have one hour available, that\u2019s a problem. In that case, you would remove the lower importance items to ensure that you can get everything done within that hour. Or if you find that you have 45 minutes worth of tasks and one hour available total, that\u2019s perfect. Your list is ready to go and you can move onto the next step. Productivity Plan Step 5: Do the work The final phase is to now do the work. You have your finalized plan, you\u2019re ready, and now it\u2019s time to take action. Work through your list, keep yourself focused and on track. Make the progress that you are wanting to make by taking action and by putting in real, meaningful work. When to create your productivity plan You now know what a productivity plan is, why it\u2019s important to have a plan, and how to create it. The next item on the agenda is when to sit down and create your productivity plan. And the simple answer is\u2026 really whenever you want. Whenever you want to put in real, meaningful work you should create a plan for your time so that it gets spent wisely. That said, I recommend creating your plan at the end of each day with your next day in mind. Meaning that if today is Monday, at the end of today you\u2019d create your plan for Tuesday. Why? So that when you wake up, you\u2019ll be able to get right to work without having to scramble or waste time figuring out your plan. You\u2019ll be prepared and ready to go. You\u2019ll have your plan and can get right to work. Simple To conclude this guide to creating your very own productivity plan is the final piece of the puzzle \u2013 where to do your productivity planning. And good news! I saved the easiest part for last. Because deciding where to create your productivity plan is straightforward and entirely up to you. You don\u2019t need a fancy productivity planner. You can simply use a note on your phone, or a Google Doc, or a pad of paper with a pen. Keep it simple and write out your plan on whatever is most accessible to you. Let me repeat that last point. Keep it simple. Seriously. In fact, go ahead and apply that advice to this entire post. Productivity plans can quickly become a long, drawn-out, complicated thing. Don\u2019t let that happen though. Keep your plans simple, easy to navigate, and well organized. Write them down somewhere that you can get to easily (like a note on your phone) and watch how you start to make real progress forward each day. Moving forward with your productivity plan That\u2019s it! You\u2019ve made it to the end of this post and are now prepared to create an effective productivity plan. Well done for making it this far! What\u2019s next? Well, first and foremost, don\u2019t let this newfound knowledge go to waste. Actually go through each of the steps that I described and create a plan that you\u2019re excited about. Don\u2019t just chalk this post up to a \u201cgood read.\u201d No. Put in the work! Because remember, you read this post for a reason. You\u2019re driven and have a lot to do. Maybe you\u2019re even looking to add more to your plate. You\u2019re busy and need a thorough plan for your time. So go ahead and create a productivity plan of your very own and start moving faster and more effectively towards your goals.","title":"How to Create an Effective Productivity Plan - Optimize Time"},{"location":"Highlights/Readwise/Articles/How%20to%20Create%20an%20Effective%20Productivity%20Plan%20-%20Optimize%20Time/#how-to-create-an-effective-productivity-plan-optimize-time","text":"","title":"How to Create an Effective Productivity Plan - Optimize Time"},{"location":"Highlights/Readwise/Articles/How%20to%20Create%20an%20Effective%20Productivity%20Plan%20-%20Optimize%20Time/#metadata","text":"Author: [[quickbooost.com]] Full Title: How to Create an Effective Productivity Plan - Optimize Time Category: #Type/Highlights/Article URL: https://quickbooost.com/productivity-plan/","title":"Metadata"},{"location":"Highlights/Readwise/Articles/How%20to%20Create%20an%20Effective%20Productivity%20Plan%20-%20Optimize%20Time/#highlights","text":"How To Create An Effective Productivity Plan \u2013 Optimize Time To start, let\u2019s discuss what a productivity plan is. A productivity plan is a plan that you create for your time. It is a combination of: Looking at what you need to do Recognizing when you need to do it And then creating a schedule that organizes your day into a manageable structure In other words, it\u2019s a way to map out your time so that you can get everything done that you need to each day AND make real progress forward. That may sound easy, but there\u2019s a good amount to it. Because you can\u2019t just throw some tasks on a list and call it a day. No. It requires more thought, more deliberation. You need to understand your big picture, where you\u2019re going, and why you want to go there in the first place. Things like goal setting, time management, and productivity are all factors that you\u2019ll need to keep in mind when creating your plan each day. Make more progress Having a productivity plan is essential. Why? Because of what it allows you to do: better optimize your time and get more high-level tasks done. I touch on this a little bit in my post on daily planning, but essentially, having a plan for your time allows you to focus on the important things and disregard the unimportant. It allows you to prioritize your tasks so that each thing you work on will help you make progress towards your goals. That means that in the micro, your productivity plan is a way to make more progress in the short term. And conversely, in the macro, the progress you make today will lead you to making greater progress each week, month, and year. Soon you\u2019ll find that you are moving faster and more effectively than ever before. So see it as your action plan to improve productivity at work, with your health, or really any area that you are looking to make progress in. How to create your productivity plan You can create a plan with your work in mind so that you can enhance productivity in the workplace. Or you can create a plan for this afternoon to ensure that you get some exercise in. Or better yet, and this is what I do, you can create a plan for your entire day. Either way, the following steps are ones that you can apply to your time in whatever way you\u2019d like. With that, here are the steps to creating your very own productivity plan. Productivity Plan Step 1: List everything out The first step to creating your productivity plan is to list out all of the tasks that you need to do within a certain amount of time. For instance, if you are creating a plan for the hour of downtime you have between getting home from work and going to the gym, write down every single task that you need to do during that hour. Productivity Plan Step 2: Organize by importance The next step is to re-organize your list by importance. Go ahead and place your highest-importance tasks at the top and your lowest-importance tasks at the bottom. When I say important tasks, I mean tasks that will help you make progress towards your goals. Not tasks that are irrelevant or are easy chores to handle. Productivity Plan Step 3: Note your time With that step now complete, the next step is to note your time. To do that, you need to do two things. Write down: How much time you have total And how much time each task requires So if you have one hour to complete your tasks, your total time available is one hour. And then looking at your list, you\u2019ll want to note how long each task should take to complete. Productivity Plan Step 4: Finalize it The next part in creating your productivity plan is to finalize your list. Take a look at the total amount of time you have available. Then add up the total time you need to complete all your tasks. For instance, if you need two hours to complete all your tasks, but only have one hour available, that\u2019s a problem. In that case, you would remove the lower importance items to ensure that you can get everything done within that hour. Or if you find that you have 45 minutes worth of tasks and one hour available total, that\u2019s perfect. Your list is ready to go and you can move onto the next step. Productivity Plan Step 5: Do the work The final phase is to now do the work. You have your finalized plan, you\u2019re ready, and now it\u2019s time to take action. Work through your list, keep yourself focused and on track. Make the progress that you are wanting to make by taking action and by putting in real, meaningful work. When to create your productivity plan You now know what a productivity plan is, why it\u2019s important to have a plan, and how to create it. The next item on the agenda is when to sit down and create your productivity plan. And the simple answer is\u2026 really whenever you want. Whenever you want to put in real, meaningful work you should create a plan for your time so that it gets spent wisely. That said, I recommend creating your plan at the end of each day with your next day in mind. Meaning that if today is Monday, at the end of today you\u2019d create your plan for Tuesday. Why? So that when you wake up, you\u2019ll be able to get right to work without having to scramble or waste time figuring out your plan. You\u2019ll be prepared and ready to go. You\u2019ll have your plan and can get right to work. Simple To conclude this guide to creating your very own productivity plan is the final piece of the puzzle \u2013 where to do your productivity planning. And good news! I saved the easiest part for last. Because deciding where to create your productivity plan is straightforward and entirely up to you. You don\u2019t need a fancy productivity planner. You can simply use a note on your phone, or a Google Doc, or a pad of paper with a pen. Keep it simple and write out your plan on whatever is most accessible to you. Let me repeat that last point. Keep it simple. Seriously. In fact, go ahead and apply that advice to this entire post. Productivity plans can quickly become a long, drawn-out, complicated thing. Don\u2019t let that happen though. Keep your plans simple, easy to navigate, and well organized. Write them down somewhere that you can get to easily (like a note on your phone) and watch how you start to make real progress forward each day. Moving forward with your productivity plan That\u2019s it! You\u2019ve made it to the end of this post and are now prepared to create an effective productivity plan. Well done for making it this far! What\u2019s next? Well, first and foremost, don\u2019t let this newfound knowledge go to waste. Actually go through each of the steps that I described and create a plan that you\u2019re excited about. Don\u2019t just chalk this post up to a \u201cgood read.\u201d No. Put in the work! Because remember, you read this post for a reason. You\u2019re driven and have a lot to do. Maybe you\u2019re even looking to add more to your plate. You\u2019re busy and need a thorough plan for your time. So go ahead and create a productivity plan of your very own and start moving faster and more effectively towards your goals.","title":"Highlights"},{"location":"Highlights/Readwise/Articles/How%20to%20Crush%20It%20at%20the%20Start%20of%20Your%20New%20Developer%20Job%20-%20Small%20Business%20Programming/","text":"How to Crush It at the Start of Your New Developer Job - Small Business Programming \u00b6 Metadata \u00b6 Author: [[smallbusinessprogramming.com]] Full Title: How to Crush It at the Start of Your New Developer Job - Small Business Programming Category: #Type/Highlights/Article URL: https://smallbusinessprogramming.com/how-to-crush-it-at-the-start-of-your-new-developer-job/ Highlights \u00b6 High levels of clarity of mission and competence will be met with high rewards. But there\u2019s a flip side to that equation. If you are unable to grasp your mission or if you demonstrate low competence despite our best efforts to train you, we\u2019ll park you on unimportant tasks and micro-manage you in the best case and fire you in the worst case (I said this is a no B.S. guide). ( View Highlight ) Your mission is to help our company increase revenues and reduce costs. That\u2019s it. Every position in our company (and every for-profit company) has the same mission. Your value to our company rests on your ability to deliver on your mission. And we are judging you on that basis. So you need demonstrate that you understand your mission and start delivering on that mission as quickly as you can. The best way you can help us increase revenues and reduce costs is by working on the most important thing at all times. I can\u2019t overstate the importance of this point. ( View Highlight ) This is a major problem for you as a new employee because: you have no way of knowing the amount of \u201creturn\u201d (revenue or cost reduction) any given task could be expected to provide you can only guess at the \u201ceffort\u201d required to complete any given task because you don\u2019t know how we do things yet So, it\u2019s basically impossible for you to create much value on your own until you can make reasonable assessments of \u201creturn\u201d and \u201ceffort.\u201d And you won\u2019t get much autonomy until you prove to us that you can make these assessments reasonably well. ( View Highlight ) your most important decision is the first decision (what to work on). If you get that one really wrong nothing you do after that will help you create substantial value. You could write the world\u2019s best software but if you solve the wrong problem, it\u2019s worthless to us. it\u2019s not enough to find something of value to work on. You are looking for the thing that has the most value. the most important decisions in your job are rarely 100% technical. Our product owner is an MBA. And he can\u2019t tell the difference between an SQL query and a file full of jQuery but he\u2019s really good at this stuff. His deep domain knowledge, ability to ask us (his programmers) smart questions, and his strong grasp of how value is created (\u201creturn\u201d divided by \u201ceffort\u201d) are all he needs to make great decisions. Unfortunately for you, this is also a lot harder to learn than the typical things new programming hires ask about such as the mechanics of how we create pull requests or how we name things. it\u2019s a mistake to assume you know the best way to make all these decisions as a new hire. But it\u2019s not against the rules to ask a co-worker for help. Hint! ( View Highlight )","title":"How to Crush It at the Start of Your New Developer Job - Small Business Programming"},{"location":"Highlights/Readwise/Articles/How%20to%20Crush%20It%20at%20the%20Start%20of%20Your%20New%20Developer%20Job%20-%20Small%20Business%20Programming/#how-to-crush-it-at-the-start-of-your-new-developer-job-small-business-programming","text":"","title":"How to Crush It at the Start of Your New Developer Job - Small Business Programming"},{"location":"Highlights/Readwise/Articles/How%20to%20Crush%20It%20at%20the%20Start%20of%20Your%20New%20Developer%20Job%20-%20Small%20Business%20Programming/#metadata","text":"Author: [[smallbusinessprogramming.com]] Full Title: How to Crush It at the Start of Your New Developer Job - Small Business Programming Category: #Type/Highlights/Article URL: https://smallbusinessprogramming.com/how-to-crush-it-at-the-start-of-your-new-developer-job/","title":"Metadata"},{"location":"Highlights/Readwise/Articles/How%20to%20Crush%20It%20at%20the%20Start%20of%20Your%20New%20Developer%20Job%20-%20Small%20Business%20Programming/#highlights","text":"High levels of clarity of mission and competence will be met with high rewards. But there\u2019s a flip side to that equation. If you are unable to grasp your mission or if you demonstrate low competence despite our best efforts to train you, we\u2019ll park you on unimportant tasks and micro-manage you in the best case and fire you in the worst case (I said this is a no B.S. guide). ( View Highlight ) Your mission is to help our company increase revenues and reduce costs. That\u2019s it. Every position in our company (and every for-profit company) has the same mission. Your value to our company rests on your ability to deliver on your mission. And we are judging you on that basis. So you need demonstrate that you understand your mission and start delivering on that mission as quickly as you can. The best way you can help us increase revenues and reduce costs is by working on the most important thing at all times. I can\u2019t overstate the importance of this point. ( View Highlight ) This is a major problem for you as a new employee because: you have no way of knowing the amount of \u201creturn\u201d (revenue or cost reduction) any given task could be expected to provide you can only guess at the \u201ceffort\u201d required to complete any given task because you don\u2019t know how we do things yet So, it\u2019s basically impossible for you to create much value on your own until you can make reasonable assessments of \u201creturn\u201d and \u201ceffort.\u201d And you won\u2019t get much autonomy until you prove to us that you can make these assessments reasonably well. ( View Highlight ) your most important decision is the first decision (what to work on). If you get that one really wrong nothing you do after that will help you create substantial value. You could write the world\u2019s best software but if you solve the wrong problem, it\u2019s worthless to us. it\u2019s not enough to find something of value to work on. You are looking for the thing that has the most value. the most important decisions in your job are rarely 100% technical. Our product owner is an MBA. And he can\u2019t tell the difference between an SQL query and a file full of jQuery but he\u2019s really good at this stuff. His deep domain knowledge, ability to ask us (his programmers) smart questions, and his strong grasp of how value is created (\u201creturn\u201d divided by \u201ceffort\u201d) are all he needs to make great decisions. Unfortunately for you, this is also a lot harder to learn than the typical things new programming hires ask about such as the mechanics of how we create pull requests or how we name things. it\u2019s a mistake to assume you know the best way to make all these decisions as a new hire. But it\u2019s not against the rules to ask a co-worker for help. Hint! ( View Highlight )","title":"Highlights"},{"location":"Highlights/Readwise/Articles/How%20to%20Declutter%20%26%20Organize%20Your%20Digital%20Files/","text":"How to Declutter & Organize Your Digital Files \u00b6 Metadata \u00b6 Author: [[theblissfulmind.com]] Full Title: How to Declutter & Organize Your Digital Files Category: #Type/Highlights/Article URL: https://theblissfulmind.com/organize-your-digital-files/ Highlights \u00b6 Saving Your Digital Files ( View Highlight ) Do you want to know the #1 way to stop losing your computer documents? Switch to the cloud. ( View Highlight ) OneDrive vs. Google Drive ( View Highlight ) Organizing Your Digital Files ( View Highlight ) create Word, Excel, and PowerPoint documents straight from either Drive ( View Highlight ) Whether you choose to use the cloud or not, it\u2019s best to keep your files organized in specific folders to make finding them super easy. My rule of thumb is no more than 10 folders within each top-level folder. More than that and it gets harder to find what you\u2019re looking for! ( View Highlight )","title":"How to Declutter & Organize Your Digital Files"},{"location":"Highlights/Readwise/Articles/How%20to%20Declutter%20%26%20Organize%20Your%20Digital%20Files/#how-to-declutter-organize-your-digital-files","text":"","title":"How to Declutter &amp; Organize Your Digital Files"},{"location":"Highlights/Readwise/Articles/How%20to%20Declutter%20%26%20Organize%20Your%20Digital%20Files/#metadata","text":"Author: [[theblissfulmind.com]] Full Title: How to Declutter & Organize Your Digital Files Category: #Type/Highlights/Article URL: https://theblissfulmind.com/organize-your-digital-files/","title":"Metadata"},{"location":"Highlights/Readwise/Articles/How%20to%20Declutter%20%26%20Organize%20Your%20Digital%20Files/#highlights","text":"Saving Your Digital Files ( View Highlight ) Do you want to know the #1 way to stop losing your computer documents? Switch to the cloud. ( View Highlight ) OneDrive vs. Google Drive ( View Highlight ) Organizing Your Digital Files ( View Highlight ) create Word, Excel, and PowerPoint documents straight from either Drive ( View Highlight ) Whether you choose to use the cloud or not, it\u2019s best to keep your files organized in specific folders to make finding them super easy. My rule of thumb is no more than 10 folders within each top-level folder. More than that and it gets harder to find what you\u2019re looking for! ( View Highlight )","title":"Highlights"},{"location":"Highlights/Readwise/Articles/How%20to%20Declutter%20Your%20Data%20With%20No%20Regrets/","text":"How to Declutter Your Data With No Regrets \u00b6 Metadata \u00b6 Author: Full Title: How to Declutter Your Data With No Regrets Category: #Type/Highlights/Article URL: https://www.makeuseof.com/tag/declutter-data-no-regrets/ Highlights \u00b6 One effective way to worry less about your data is to have less of it to worry about. To get there, you\u2019ll need to redefine the word \u201cimportant\u201d to mean \u201cimpossible to get your hands on in future for free\u201d. Dump Bookmarks and Search as You Go Nothing gets deleted from the internet, ever. The upside of that? You can find anything you need with a web search. With that kind of power at your fingertips, you can afford to ditch most of your bookmarks. Of course, you might want to keep bookmarks that link to pages you visit often and those that contain indispensable information. The trick is to stop treating every bookmark as important and keep your Bookmarks folder super lean, if not empty. With this approach, if you ever need to organize your saved links in any way, it will be as good as effortless. Once you delete your bookmarks, you\u2019ll need to sharpen your search skills. Learn some smart search tricks to bring up near-instant and accurate matches for any online resource. You might feel surprised how often serendipity steps in to bring you the right information at the right time. What do you do if your search turns up a dead page? Hop over to the Wayback Machine section of the Internet Archive to find the original content of that page. You can also dig up other types of free content from that archive. As a last resort, you can also turn to online communities to find the information you need. From contacts you never call to free ebooks you never get around to reading, what data have you saved because you \u201cmight need it someday\u201d? Delete it. You probably won\u2019t need it, and if you do, help is one step away. Tags: [[favorite]] Ready to Hit the Delete Button? So, what else can you get rid of? We have more ideas for decluttering your data! You can delete: Emails: To reduce email stress Tweets: To start from scratch without losing your followers or your username Unused online accounts and their passwords: After making these changes Before you start decluttering your digital data, take a step back. It would be a nightmare to lose passwords, browser settings, tax returns, contracts, and so on. (There\u2019s data you can classify as important!) Be sure to isolate those bits of information from the rest of your data to avoid accidental deletion and back them up in multiple places. Put the whole backup process on autopilot if you can. Of course, going on a data deletion spree is not the right approach for everyone. But you\u2019re discerning enough to figure out if it\u2019s the right one for you and how far you should take it. Now, ready to set free some of your data and never bother about it again? It\u2019ll take time to go through all of it, but when you get to the other side it\u2019ll feel liberating. You\u2019ll be familiar with this feeling if you have given away physical possessions in bulk anytime. Bring it back by Kondoing your digital life.","title":"How to Declutter Your Data With No Regrets"},{"location":"Highlights/Readwise/Articles/How%20to%20Declutter%20Your%20Data%20With%20No%20Regrets/#how-to-declutter-your-data-with-no-regrets","text":"","title":"How to Declutter Your Data With No Regrets"},{"location":"Highlights/Readwise/Articles/How%20to%20Declutter%20Your%20Data%20With%20No%20Regrets/#metadata","text":"Author: Full Title: How to Declutter Your Data With No Regrets Category: #Type/Highlights/Article URL: https://www.makeuseof.com/tag/declutter-data-no-regrets/","title":"Metadata"},{"location":"Highlights/Readwise/Articles/How%20to%20Declutter%20Your%20Data%20With%20No%20Regrets/#highlights","text":"One effective way to worry less about your data is to have less of it to worry about. To get there, you\u2019ll need to redefine the word \u201cimportant\u201d to mean \u201cimpossible to get your hands on in future for free\u201d. Dump Bookmarks and Search as You Go Nothing gets deleted from the internet, ever. The upside of that? You can find anything you need with a web search. With that kind of power at your fingertips, you can afford to ditch most of your bookmarks. Of course, you might want to keep bookmarks that link to pages you visit often and those that contain indispensable information. The trick is to stop treating every bookmark as important and keep your Bookmarks folder super lean, if not empty. With this approach, if you ever need to organize your saved links in any way, it will be as good as effortless. Once you delete your bookmarks, you\u2019ll need to sharpen your search skills. Learn some smart search tricks to bring up near-instant and accurate matches for any online resource. You might feel surprised how often serendipity steps in to bring you the right information at the right time. What do you do if your search turns up a dead page? Hop over to the Wayback Machine section of the Internet Archive to find the original content of that page. You can also dig up other types of free content from that archive. As a last resort, you can also turn to online communities to find the information you need. From contacts you never call to free ebooks you never get around to reading, what data have you saved because you \u201cmight need it someday\u201d? Delete it. You probably won\u2019t need it, and if you do, help is one step away. Tags: [[favorite]] Ready to Hit the Delete Button? So, what else can you get rid of? We have more ideas for decluttering your data! You can delete: Emails: To reduce email stress Tweets: To start from scratch without losing your followers or your username Unused online accounts and their passwords: After making these changes Before you start decluttering your digital data, take a step back. It would be a nightmare to lose passwords, browser settings, tax returns, contracts, and so on. (There\u2019s data you can classify as important!) Be sure to isolate those bits of information from the rest of your data to avoid accidental deletion and back them up in multiple places. Put the whole backup process on autopilot if you can. Of course, going on a data deletion spree is not the right approach for everyone. But you\u2019re discerning enough to figure out if it\u2019s the right one for you and how far you should take it. Now, ready to set free some of your data and never bother about it again? It\u2019ll take time to go through all of it, but when you get to the other side it\u2019ll feel liberating. You\u2019ll be familiar with this feeling if you have given away physical possessions in bulk anytime. Bring it back by Kondoing your digital life.","title":"Highlights"},{"location":"Highlights/Readwise/Articles/How%20to%20Develop%20Your%20Digital%20Space%20for%20Peak%20Productivity/","text":"How to Develop Your Digital Space for Peak Productivity \u00b6 Metadata \u00b6 Author: Full Title: How to Develop Your Digital Space for Peak Productivity Category: #Type/Highlights/Article URL: https://deanyeong.com/develop-your-digital-space/ Highlights \u00b6 Other Ways of Subtracting Here are some other ways to subtract before you add. Feel free to add your ideas that I didn\u2019t mention into the comment section below. Unsubscribe from annoying newsletters. Not this one, but if you never read my newsletters, I\u2019d rather you unsubscribe. Delete online accounts that you don\u2019t use or, better yet, avoid opening a new account on distracting sites in the first place. Have only one tool for a role. If you have a multi-functional tool, great. However, you don\u2019t need multiple tools that do the same thing. For example, you don\u2019t need five different to-do list apps. Strengthen Your Toolkit Depending on what you do and what matters to you most, you can add additional tools to your toolbox to further increase your productivity and performance. A common mistake people made was to first purchase or download the tools and then come up with how they\u2019re going to use them. The worst thing that can happen is when these overcrowded snippets get slipped into your projects and daily to-do list. It becomes the distractions itself and ultimately leads to you feel overwhelmed and burnout. Weekly organization. Every week, I go through my inbox to remove items I no longer need and move items into projects, to-do lists, or reference folders accordingly. I also go through the reference folder to see if there is anything I want to address in the coming week. If yes, I will move them to the inbox or to-do list. Monthly organization. Every month, I go through my project list to realign them with my goals. There is nothing to tidy up monthly since I\u2019ve done that every week except for resetting my priorities. Quarterly organization. Every three months, I go through my desktop and Download folder on my laptop to clear files that I longer need. If You Want To Win, Develop a Winning Environment As more and more people are working online today, learning how to design a good digital space gives you an advantage. If you\u2019re a knowledge worker, this skill becomes crucial to your day-to-day productivity and performance. Personally, I see technology \u2014 the Internet and digital tools \u2014 as a great advancement in human evolution. But like anything that creates leaps and bounds of progress, it has the potential to destroy us if we\u2019re not being careful. Whether you like it or not, the environment \u2014 both physical and digital \u2014 you\u2019re in is going to shape you and your life outcomes. The goal is not trying to escape from them. Instead, learn to make the best use of what you\u2019ve got to develop a winning environment for yourself.","title":"How to Develop Your Digital Space for Peak Productivity"},{"location":"Highlights/Readwise/Articles/How%20to%20Develop%20Your%20Digital%20Space%20for%20Peak%20Productivity/#how-to-develop-your-digital-space-for-peak-productivity","text":"","title":"How to Develop Your Digital Space for Peak Productivity"},{"location":"Highlights/Readwise/Articles/How%20to%20Develop%20Your%20Digital%20Space%20for%20Peak%20Productivity/#metadata","text":"Author: Full Title: How to Develop Your Digital Space for Peak Productivity Category: #Type/Highlights/Article URL: https://deanyeong.com/develop-your-digital-space/","title":"Metadata"},{"location":"Highlights/Readwise/Articles/How%20to%20Develop%20Your%20Digital%20Space%20for%20Peak%20Productivity/#highlights","text":"Other Ways of Subtracting Here are some other ways to subtract before you add. Feel free to add your ideas that I didn\u2019t mention into the comment section below. Unsubscribe from annoying newsletters. Not this one, but if you never read my newsletters, I\u2019d rather you unsubscribe. Delete online accounts that you don\u2019t use or, better yet, avoid opening a new account on distracting sites in the first place. Have only one tool for a role. If you have a multi-functional tool, great. However, you don\u2019t need multiple tools that do the same thing. For example, you don\u2019t need five different to-do list apps. Strengthen Your Toolkit Depending on what you do and what matters to you most, you can add additional tools to your toolbox to further increase your productivity and performance. A common mistake people made was to first purchase or download the tools and then come up with how they\u2019re going to use them. The worst thing that can happen is when these overcrowded snippets get slipped into your projects and daily to-do list. It becomes the distractions itself and ultimately leads to you feel overwhelmed and burnout. Weekly organization. Every week, I go through my inbox to remove items I no longer need and move items into projects, to-do lists, or reference folders accordingly. I also go through the reference folder to see if there is anything I want to address in the coming week. If yes, I will move them to the inbox or to-do list. Monthly organization. Every month, I go through my project list to realign them with my goals. There is nothing to tidy up monthly since I\u2019ve done that every week except for resetting my priorities. Quarterly organization. Every three months, I go through my desktop and Download folder on my laptop to clear files that I longer need. If You Want To Win, Develop a Winning Environment As more and more people are working online today, learning how to design a good digital space gives you an advantage. If you\u2019re a knowledge worker, this skill becomes crucial to your day-to-day productivity and performance. Personally, I see technology \u2014 the Internet and digital tools \u2014 as a great advancement in human evolution. But like anything that creates leaps and bounds of progress, it has the potential to destroy us if we\u2019re not being careful. Whether you like it or not, the environment \u2014 both physical and digital \u2014 you\u2019re in is going to shape you and your life outcomes. The goal is not trying to escape from them. Instead, learn to make the best use of what you\u2019ve got to develop a winning environment for yourself.","title":"Highlights"},{"location":"Highlights/Readwise/Articles/How%20to%20Distribute%20Data%20With%20Your%20R%20Package%20-%20R-Hub%20Blog/","text":"How to Distribute Data With Your R Package - R-Hub Blog \u00b6 Metadata \u00b6 Author: Full Title: How to Distribute Data With Your R Package - R-Hub Blog Category: #Type/Highlights/Article URL: https://blog.r-hub.io/2020/05/29/distribute-data/ Highlights \u00b6 If the data is for the user to load and use in examples or their own code, you\u2019re looking for exported data. Since it\u2019s exported, it has to be documented. For an example, see the babynames data/ folder and R/data.R file If the data is for your functions to use internally, you\u2019re after R/sysdata.R or an internal function. If the data is to showcase how to tidy raw data, and you want the user to be able to access it, you\u2019re after\u2026 raw data living in inst/extdata. If you want to keep the raw data used to create your exported or internal data, which you should, you\u2019re after the data-raw folder. See the data-raw folder of the babynames package, in particular its R scripts. Note that data-raw has to be in the .Rbuildignore file (but usethis would help you with that). For data used in test, i.e. fixtures, you could create a folder under e.g. tests/testthat/ and whose content would be found using the testthat::test_path() function. Data as small as possible As \u201cWriting R Extensions\u201d underlines, for data under data/ and, \u201cIf your package is to be distributed, do consider the resource implications of large datasets for your users: they can make packages very slow to download and use up unwelcome amounts of storage space, as well as taking many seconds to load.\". So what do you do? You can compress the data, internal or external. Your friends are tools::resaveRdaFiles() Tags: [[favorite]] Data outside of your package Now, sometimes the data is too big to be in your package, or follows a different development cycle i.e. is updated more or less often. What can you do about that? Well, have data live somewhere else. Tags: [[favorite]] Data packages Yes, this subsection makes the point of having data live inside another package. \ud83d\ude11 You could develop companion packages to go with your package, that hold data. A data package is user-friendly in the sense that installing it saves the data on the machine and makes it available. You could also check out the datastorr package (not on CRAN) for integrating data packages with GitHub. You could use an existing infrastructure: GitHub releases (with the piggyback package whose documentation includes a thorough comparison with other approaches such as git-LFS), Amazon S3 (using the pins package?), etc.. You could make use of scientific data repositories (DataONE, Zenodo, OSF, Figshare\u2026). You could use an existing infrastructure: GitHub releases (with the piggyback package whose documentation includes a thorough comparison with other approaches such as git-LFS), Amazon S3 (using the pins package?), etc The data could be cached in an app dir which we explained in a previous blog post, using the rappdirs or hoardr package; For other approaches, your package could take a dependency on a package aimed at data storage and retrieval such as the aforementioned piggyback and pins packages, the bowerbird package, the rdataretriever package. Tags: [[favorite]] In this post we went over different setups allowing you to distribute data with or for your R package: some standard locations in your package source (inst/extdata/, data/, R/sysdata.rda); locations outside of your package (using drat, git-LFS, GitHub releases via piggyback, a web API you\u2019d build yourself), that your package would know how to access, and potentially save locally (in an app dir, or using a tool like bowerbird). Do you have a \u201cdata and R package\u201d setup you\u2019d like to share? How do you document the data you share, when it\u2019s bigger than a small table In this post we went over different setups allowing you to distribute data with or for your R package: some standard locations in your package source (inst/extdata/, data/, R/sysdata.rda); locations outside of your package (using drat, git-LFS, GitHub releases via piggyback, a web API you\u2019d build yourself), that your package would know how to access, and potentially save locally (in an app dir, or using a tool like bowerbird). Do you have a \u201cdata and R package\u201d setup you\u2019d like to share? How do you document the data you share, when it\u2019s bigger than a small table? Tags: [[favorite]]","title":"How to Distribute Data With Your R Package - R-Hub Blog"},{"location":"Highlights/Readwise/Articles/How%20to%20Distribute%20Data%20With%20Your%20R%20Package%20-%20R-Hub%20Blog/#how-to-distribute-data-with-your-r-package-r-hub-blog","text":"","title":"How to Distribute Data With Your R Package - R-Hub Blog"},{"location":"Highlights/Readwise/Articles/How%20to%20Distribute%20Data%20With%20Your%20R%20Package%20-%20R-Hub%20Blog/#metadata","text":"Author: Full Title: How to Distribute Data With Your R Package - R-Hub Blog Category: #Type/Highlights/Article URL: https://blog.r-hub.io/2020/05/29/distribute-data/","title":"Metadata"},{"location":"Highlights/Readwise/Articles/How%20to%20Distribute%20Data%20With%20Your%20R%20Package%20-%20R-Hub%20Blog/#highlights","text":"If the data is for the user to load and use in examples or their own code, you\u2019re looking for exported data. Since it\u2019s exported, it has to be documented. For an example, see the babynames data/ folder and R/data.R file If the data is for your functions to use internally, you\u2019re after R/sysdata.R or an internal function. If the data is to showcase how to tidy raw data, and you want the user to be able to access it, you\u2019re after\u2026 raw data living in inst/extdata. If you want to keep the raw data used to create your exported or internal data, which you should, you\u2019re after the data-raw folder. See the data-raw folder of the babynames package, in particular its R scripts. Note that data-raw has to be in the .Rbuildignore file (but usethis would help you with that). For data used in test, i.e. fixtures, you could create a folder under e.g. tests/testthat/ and whose content would be found using the testthat::test_path() function. Data as small as possible As \u201cWriting R Extensions\u201d underlines, for data under data/ and, \u201cIf your package is to be distributed, do consider the resource implications of large datasets for your users: they can make packages very slow to download and use up unwelcome amounts of storage space, as well as taking many seconds to load.\". So what do you do? You can compress the data, internal or external. Your friends are tools::resaveRdaFiles() Tags: [[favorite]] Data outside of your package Now, sometimes the data is too big to be in your package, or follows a different development cycle i.e. is updated more or less often. What can you do about that? Well, have data live somewhere else. Tags: [[favorite]] Data packages Yes, this subsection makes the point of having data live inside another package. \ud83d\ude11 You could develop companion packages to go with your package, that hold data. A data package is user-friendly in the sense that installing it saves the data on the machine and makes it available. You could also check out the datastorr package (not on CRAN) for integrating data packages with GitHub. You could use an existing infrastructure: GitHub releases (with the piggyback package whose documentation includes a thorough comparison with other approaches such as git-LFS), Amazon S3 (using the pins package?), etc.. You could make use of scientific data repositories (DataONE, Zenodo, OSF, Figshare\u2026). You could use an existing infrastructure: GitHub releases (with the piggyback package whose documentation includes a thorough comparison with other approaches such as git-LFS), Amazon S3 (using the pins package?), etc The data could be cached in an app dir which we explained in a previous blog post, using the rappdirs or hoardr package; For other approaches, your package could take a dependency on a package aimed at data storage and retrieval such as the aforementioned piggyback and pins packages, the bowerbird package, the rdataretriever package. Tags: [[favorite]] In this post we went over different setups allowing you to distribute data with or for your R package: some standard locations in your package source (inst/extdata/, data/, R/sysdata.rda); locations outside of your package (using drat, git-LFS, GitHub releases via piggyback, a web API you\u2019d build yourself), that your package would know how to access, and potentially save locally (in an app dir, or using a tool like bowerbird). Do you have a \u201cdata and R package\u201d setup you\u2019d like to share? How do you document the data you share, when it\u2019s bigger than a small table In this post we went over different setups allowing you to distribute data with or for your R package: some standard locations in your package source (inst/extdata/, data/, R/sysdata.rda); locations outside of your package (using drat, git-LFS, GitHub releases via piggyback, a web API you\u2019d build yourself), that your package would know how to access, and potentially save locally (in an app dir, or using a tool like bowerbird). Do you have a \u201cdata and R package\u201d setup you\u2019d like to share? How do you document the data you share, when it\u2019s bigger than a small table? Tags: [[favorite]]","title":"Highlights"},{"location":"Highlights/Readwise/Articles/How%20to%20Do%20More%20With%20Windows%2010%20Using%20PowerToys/","text":"How to Do More With Windows 10 Using PowerToys \u00b6 Metadata \u00b6 Author: Full Title: How to Do More With Windows 10 Using PowerToys Category: #Type/Highlights/Article URL: https://www.makeuseof.com/tag/windows-10-powertoys/ Highlights \u00b6 PowerToys for Windows 95 was the first version and included 15 components such as: CDAutoPlay to use AutoPlay on non-audio CDs Desktop menu to open desktop items from a taskbar menu Quick res to quickly change screen resolution The second version of PowerToys was for Windows XP. Rather than being available in a single package, these were separate downloads. Various components were discontinued over its lifetime, but there were 20 components overall such as: Alt-Tab Replacement Task Switcher to show live window previous when switching with Alt-Tab Power Calculator for advanced and complex expressions Webcam Timershot to take webcam pictures at specific intervals The utilities included in PowerToys for Windows 10 are: FancyZones File Explorer Preview Image Resizer Keyboard Manager PowerRename PowerToys Run Shortcut Guide File Explorer has a preview pane so that you can view the contents of some file types, like documents and spreadsheets, without opening them. If you don\u2019t see this when you click a file, go to the View tab on File Explorer and click Preview pane to enable it. With File Explorer Preview in PowerToys, this functionality is now extended to SVG image files and Markdown documents. You can batch resize images on Mac, and now you can do the same on Windows 10. Simply open File Explorer and select the images you want to resize, right click, and click Resize pictures. This opens a window where you can select the new image size, along with options like resizing the original (rather than creating copies) and ignoring the orientation of pictures. When ready, click Resize. Within PowerToys settings, you can edit the default size presets and add your own. You can also change the encoding settings and how the newly resized images are named. With Keyboard Manager, you can create your own keyboard shortcuts or remap existing ones. This is managed within the PowerToys settings, within the Keyboard Manager section. For example, you could use uncommon keys to control your media playback or browser navigation. Alternatively, you could do something like changing the shortcut Ctrl + C (which normally copies text) to be paste instead. There are two sections: Remap keyboard to remap a single key to another key, and Remap shortcuts to remap a shortcut to another shortcut. Click Remap a key or Remap a shortcut. Click the plus icon to add a remapping. The left side is the existing key or shortcut, while the right is what you want to remap it to. Use the trash icon to remove any remapping. When done, click OK. It can be difficult for the average user to bulk rename files and folders in Windows 10 without using PowerShell. With the PowerRename utility, it\u2019s now a breeze. In File Explorer, select the files or folders that you wish to rename. Right click and click PowerRename. This opens a window where you can choose what term to Search for and what to Replace with. There are also helpful options like case sensitive renaming, exclude folders, item extension only, and more. PowerToys Run is a search tool for quickly launching applications, files, and folders. You can also use it to switch to things you have open. By default, press Alt + Space to open it (you can customize this in the PowerToys settings). Then simply start typing to find something on your computer. Use the Up and Down keys to move between results and Enter to launch. If you wish, use the icons next to each result to Launch As Administrator or Open containing folder. Windows 10 is packed full of helpful shortcuts. With Shortcut Guide, you can hold down the Windows key to bring up a screen to remind yourself of some. Within PowerToys settings, you can change the press duration (900ms by default) and the screen\u2019s opacity and color scheme. Become a Windows 10 Master PowerToys is still in active development, so the existing tools could change and new utilities could be added over time. Some of them may even become part of the default Windows 10 operating system. If you want to be the ultimate Windows 10 user, here are loads of tips and tutorials to master Windows 10.","title":"How to Do More With Windows 10 Using PowerToys"},{"location":"Highlights/Readwise/Articles/How%20to%20Do%20More%20With%20Windows%2010%20Using%20PowerToys/#how-to-do-more-with-windows-10-using-powertoys","text":"","title":"How to Do More With Windows 10 Using PowerToys"},{"location":"Highlights/Readwise/Articles/How%20to%20Do%20More%20With%20Windows%2010%20Using%20PowerToys/#metadata","text":"Author: Full Title: How to Do More With Windows 10 Using PowerToys Category: #Type/Highlights/Article URL: https://www.makeuseof.com/tag/windows-10-powertoys/","title":"Metadata"},{"location":"Highlights/Readwise/Articles/How%20to%20Do%20More%20With%20Windows%2010%20Using%20PowerToys/#highlights","text":"PowerToys for Windows 95 was the first version and included 15 components such as: CDAutoPlay to use AutoPlay on non-audio CDs Desktop menu to open desktop items from a taskbar menu Quick res to quickly change screen resolution The second version of PowerToys was for Windows XP. Rather than being available in a single package, these were separate downloads. Various components were discontinued over its lifetime, but there were 20 components overall such as: Alt-Tab Replacement Task Switcher to show live window previous when switching with Alt-Tab Power Calculator for advanced and complex expressions Webcam Timershot to take webcam pictures at specific intervals The utilities included in PowerToys for Windows 10 are: FancyZones File Explorer Preview Image Resizer Keyboard Manager PowerRename PowerToys Run Shortcut Guide File Explorer has a preview pane so that you can view the contents of some file types, like documents and spreadsheets, without opening them. If you don\u2019t see this when you click a file, go to the View tab on File Explorer and click Preview pane to enable it. With File Explorer Preview in PowerToys, this functionality is now extended to SVG image files and Markdown documents. You can batch resize images on Mac, and now you can do the same on Windows 10. Simply open File Explorer and select the images you want to resize, right click, and click Resize pictures. This opens a window where you can select the new image size, along with options like resizing the original (rather than creating copies) and ignoring the orientation of pictures. When ready, click Resize. Within PowerToys settings, you can edit the default size presets and add your own. You can also change the encoding settings and how the newly resized images are named. With Keyboard Manager, you can create your own keyboard shortcuts or remap existing ones. This is managed within the PowerToys settings, within the Keyboard Manager section. For example, you could use uncommon keys to control your media playback or browser navigation. Alternatively, you could do something like changing the shortcut Ctrl + C (which normally copies text) to be paste instead. There are two sections: Remap keyboard to remap a single key to another key, and Remap shortcuts to remap a shortcut to another shortcut. Click Remap a key or Remap a shortcut. Click the plus icon to add a remapping. The left side is the existing key or shortcut, while the right is what you want to remap it to. Use the trash icon to remove any remapping. When done, click OK. It can be difficult for the average user to bulk rename files and folders in Windows 10 without using PowerShell. With the PowerRename utility, it\u2019s now a breeze. In File Explorer, select the files or folders that you wish to rename. Right click and click PowerRename. This opens a window where you can choose what term to Search for and what to Replace with. There are also helpful options like case sensitive renaming, exclude folders, item extension only, and more. PowerToys Run is a search tool for quickly launching applications, files, and folders. You can also use it to switch to things you have open. By default, press Alt + Space to open it (you can customize this in the PowerToys settings). Then simply start typing to find something on your computer. Use the Up and Down keys to move between results and Enter to launch. If you wish, use the icons next to each result to Launch As Administrator or Open containing folder. Windows 10 is packed full of helpful shortcuts. With Shortcut Guide, you can hold down the Windows key to bring up a screen to remind yourself of some. Within PowerToys settings, you can change the press duration (900ms by default) and the screen\u2019s opacity and color scheme. Become a Windows 10 Master PowerToys is still in active development, so the existing tools could change and new utilities could be added over time. Some of them may even become part of the default Windows 10 operating system. If you want to be the ultimate Windows 10 user, here are loads of tips and tutorials to master Windows 10.","title":"Highlights"},{"location":"Highlights/Readwise/Articles/How%20to%20Do%20a%20Weekly%20Planning%20Session./","text":"How to Do a Weekly Planning Session. \u00b6 Metadata \u00b6 Author: [[Carl Pullein]] Full Title: How to Do a Weekly Planning Session. Category: #Type/Highlights/Article URL: https://www.carlpullein.com/blog/how-to-do-a-weekly-planning-session/18/11/2020-1 Highlights \u00b6 Go through your active projects and goals and ask: what needs to happen next? Block the time required to do that work on your calendar. (Your big rocks)Review your appointments for next week and make sure they are still happeningReview your \u201cNext Week\u201d tasks to make sure they still need to be done next week and if they do, move them to your This Week folder and add a date.Do a final review of your calendar to make sure you have enough space for the unknowns.","title":"How to Do a Weekly Planning Session."},{"location":"Highlights/Readwise/Articles/How%20to%20Do%20a%20Weekly%20Planning%20Session./#how-to-do-a-weekly-planning-session","text":"","title":"How to Do a Weekly Planning Session."},{"location":"Highlights/Readwise/Articles/How%20to%20Do%20a%20Weekly%20Planning%20Session./#metadata","text":"Author: [[Carl Pullein]] Full Title: How to Do a Weekly Planning Session. Category: #Type/Highlights/Article URL: https://www.carlpullein.com/blog/how-to-do-a-weekly-planning-session/18/11/2020-1","title":"Metadata"},{"location":"Highlights/Readwise/Articles/How%20to%20Do%20a%20Weekly%20Planning%20Session./#highlights","text":"Go through your active projects and goals and ask: what needs to happen next? Block the time required to do that work on your calendar. (Your big rocks)Review your appointments for next week and make sure they are still happeningReview your \u201cNext Week\u201d tasks to make sure they still need to be done next week and if they do, move them to your This Week folder and add a date.Do a final review of your calendar to make sure you have enough space for the unknowns.","title":"Highlights"},{"location":"Highlights/Readwise/Articles/How%20to%20Do%20a%20Weekly%20Review%20Step-By-Step/","text":"How to Do a Weekly Review: Step-By-Step \u00b6 Metadata \u00b6 Author: [[becomeawritertoday.com]] Full Title: How to Do a Weekly Review: Step-By-Step Category: #Type/Highlights/Article URL: https://becomeawritertoday.com/weekly-review/ Highlights \u00b6 When was the last time you held a weekly review? ( View Highlight ) Working without a weekly review is a recipe for overwhelm, procrastination and focusing on other people\u2019s priorities rather than your own. It\u2019s a key part of any good time management or productivity system. ( View Highlight )","title":"How to Do a Weekly Review: Step-By-Step"},{"location":"Highlights/Readwise/Articles/How%20to%20Do%20a%20Weekly%20Review%20Step-By-Step/#how-to-do-a-weekly-review-step-by-step","text":"","title":"How to Do a Weekly Review: Step-By-Step"},{"location":"Highlights/Readwise/Articles/How%20to%20Do%20a%20Weekly%20Review%20Step-By-Step/#metadata","text":"Author: [[becomeawritertoday.com]] Full Title: How to Do a Weekly Review: Step-By-Step Category: #Type/Highlights/Article URL: https://becomeawritertoday.com/weekly-review/","title":"Metadata"},{"location":"Highlights/Readwise/Articles/How%20to%20Do%20a%20Weekly%20Review%20Step-By-Step/#highlights","text":"When was the last time you held a weekly review? ( View Highlight ) Working without a weekly review is a recipe for overwhelm, procrastination and focusing on other people\u2019s priorities rather than your own. It\u2019s a key part of any good time management or productivity system. ( View Highlight )","title":"Highlights"},{"location":"Highlights/Readwise/Articles/How%20to%20Enhance%20Your%20Windows%20Batch%20Files%20by%20Adding%20GUI/","text":"How to Enhance Your Windows Batch Files by Adding GUI \u00b6 Metadata \u00b6 Author: [[Shalitha Suranga]] Full Title: How to Enhance Your Windows Batch Files by Adding GUI Category: #Type/Highlights/Article URL: https://medium.com/p/7287d89ebad6 Highlights \u00b6 powershell -Command \"& { }\"","title":"How to Enhance Your Windows Batch Files by Adding GUI"},{"location":"Highlights/Readwise/Articles/How%20to%20Enhance%20Your%20Windows%20Batch%20Files%20by%20Adding%20GUI/#how-to-enhance-your-windows-batch-files-by-adding-gui","text":"","title":"How to Enhance Your Windows Batch Files by Adding GUI"},{"location":"Highlights/Readwise/Articles/How%20to%20Enhance%20Your%20Windows%20Batch%20Files%20by%20Adding%20GUI/#metadata","text":"Author: [[Shalitha Suranga]] Full Title: How to Enhance Your Windows Batch Files by Adding GUI Category: #Type/Highlights/Article URL: https://medium.com/p/7287d89ebad6","title":"Metadata"},{"location":"Highlights/Readwise/Articles/How%20to%20Enhance%20Your%20Windows%20Batch%20Files%20by%20Adding%20GUI/#highlights","text":"powershell -Command \"& { }\"","title":"Highlights"},{"location":"Highlights/Readwise/Articles/How%20to%20Export%20Evernote%20to%20Google%20Drive/","text":"How to Export Evernote to Google Drive? \u00b6 Metadata \u00b6 Author: Full Title: How to Export Evernote to Google Drive? Category: #Type/Highlights/Article URL: https://www.multcloud.com/tutorials/export-evernote-to-google-drive-0708.html Highlights \u00b6 Suppose that you want to export all your Evernote data to Google Drive in a way that you can view them as you did in Evernote - a text file note would just be a text file, a PDF would just be a PDF, and a jpg would just be a jpg. In this situation, you need to migrate Evernote to Google Drive, and MultCloud is helpful.","title":"How to Export Evernote to Google Drive?"},{"location":"Highlights/Readwise/Articles/How%20to%20Export%20Evernote%20to%20Google%20Drive/#how-to-export-evernote-to-google-drive","text":"","title":"How to Export Evernote to Google Drive?"},{"location":"Highlights/Readwise/Articles/How%20to%20Export%20Evernote%20to%20Google%20Drive/#metadata","text":"Author: Full Title: How to Export Evernote to Google Drive? Category: #Type/Highlights/Article URL: https://www.multcloud.com/tutorials/export-evernote-to-google-drive-0708.html","title":"Metadata"},{"location":"Highlights/Readwise/Articles/How%20to%20Export%20Evernote%20to%20Google%20Drive/#highlights","text":"Suppose that you want to export all your Evernote data to Google Drive in a way that you can view them as you did in Evernote - a text file note would just be a text file, a PDF would just be a PDF, and a jpg would just be a jpg. In this situation, you need to migrate Evernote to Google Drive, and MultCloud is helpful.","title":"Highlights"},{"location":"Highlights/Readwise/Articles/How%20to%20Get%20Through%20a%20Paper%20and%20Digital%20Backlog%20%E2%80%93%20Gigaom/","text":"How to Get Through a Paper and Digital Backlog \u2013 Gigaom \u00b6 Metadata \u00b6 Author: [[gigaom.com]] Full Title: How to Get Through a Paper and Digital Backlog \u2013 Gigaom Category: #Type/Highlights/Article URL: https://gigaom.com/2007/10/04/how-to-get-through-a-paper-and-digital-backlog/ Highlights \u00b6 Stage 1 \u2013 Triage. Basically, you have to know everything that\u2019s on your plate, so you can decide where to start. And you need to get through everything quickly. So the first stage of getting through a backlog is to go through everything, as quickly as possible, so that you can identify what needs to be done now, and what can be done later. We\u2019re assuming here that you have urgent tasks in this stack (or stacks). Go through everything quickly. And I mean everything: don\u2019t treat paper and digital stuff differently. Go through each \u201cinbox\u201d from top to bottom, processing as rapidly as possible. That includes your physical inbox on your desk (pile all papers in your backlog and messages in here), and all your digital inboxes \u2014 email, RSS, forums, comments, other services. Make three piles. The first is stuff that needs to be done right away. For this pile, you might want to keep a short list, so that you can put digital stuff and paper stuff all together. For example, I have an index card that I\u2019ve written all the stuff I need to do today. It\u2019s more than I normally would try to handle, but again, I\u2019m catching up. The list includes important emails and assignments. Second, make a list or pile of stuff you will sort through later. This is lower priority stuff. You\u2019ll get to it in Phase 3. The third pile is really your trashcan. Delete or trash all the stuff you don\u2019t need to deal with at all, to get it out of the way quickly. Don\u2019t do stuff yet. Although GTD advocates doing tasks if they\u2019re 2 minutes or less, as you\u2019re processing, if you have a large and urgent backlog, I say just add it to one of your lists/piles for now. Do them in one of the next stages. After you get through the backlog, I recommend following GTD\u2019s advice during your daily processing, as it greatly reduces the stuff on your list. Stage 2 \u2013 First Things First. OK, you\u2019ve sorted through your backlog and identified the top-priority stuff. This is the stuff you need to get through today. Now identify blocks of time for each, putting the most important/urgent stuff first. If you don\u2019t have enough blocks of time, you probably won\u2019t be able to do the entire list today. Be realistic \u2014 don\u2019t give yourself 15 minutes to do something that normally takes an hour. Some tips: If you have a large backlog, you\u2019ll want to work quickly, and perhaps set a timer. Set aside at least 30 minutes today to get through your backlog (Stage 3), as otherwise it\u2019ll never end and just keep getting bigger. Get the hardest and most important stuff done first. Don\u2019t put it off till last, because you might not get to it. Set aside distractions. You probably don\u2019t have time to respond to IM or most incoming emails or browsing through your fun stuff on the web. If you do, set aside a block or two of time for that, and don\u2019t let yourself do it outside those blocks of time. It\u2019s important that when you\u2019re doing your important tasks today, you are able to focus. Stage 3 \u2013 Work Through the Rest. So you\u2019re taking care of your important tasks first, but you\u2019ve still got that backlog screaming at you. And it won\u2019t go away until you deal with it. Set aside at least 30 minutes today to process your backlog, and set aside at least an hour tomorrow and for as many days as it will take to clear it. Process one inbox at a time (email, paper, etc.). And in each inbox, process one document or message at a time, make a decision and taking an action with each, clearing it from the inbox, until the inbox is empty. What decisions and actions should be taken? One of the following. Trash or delete anything that you don\u2019t need to save or process or reply to. I know this was in the earlier stage, but if you see something that you missed the first time, or that has become irrelevant, trash it now. Forward or delegate anything that someone else can do instead of you. Archive or delete (or file, if it\u2019s a paper document) to get it out of the inbox. Quickly reply to messages that can be done in a minute or two. Quickly do actions that take a couple minutes or less. Archive or delete (or file, if it\u2019s a paper document) to get it out of the inbox. Note items that need action, but that will take longer to do. Put them on a separate to-do list. Archive or delete (or file, if it\u2019s a paper document) to get it out of the inbox.","title":"How to Get Through a Paper and Digital Backlog \u2013 Gigaom"},{"location":"Highlights/Readwise/Articles/How%20to%20Get%20Through%20a%20Paper%20and%20Digital%20Backlog%20%E2%80%93%20Gigaom/#how-to-get-through-a-paper-and-digital-backlog-gigaom","text":"","title":"How to Get Through a Paper and Digital Backlog \u2013 Gigaom"},{"location":"Highlights/Readwise/Articles/How%20to%20Get%20Through%20a%20Paper%20and%20Digital%20Backlog%20%E2%80%93%20Gigaom/#metadata","text":"Author: [[gigaom.com]] Full Title: How to Get Through a Paper and Digital Backlog \u2013 Gigaom Category: #Type/Highlights/Article URL: https://gigaom.com/2007/10/04/how-to-get-through-a-paper-and-digital-backlog/","title":"Metadata"},{"location":"Highlights/Readwise/Articles/How%20to%20Get%20Through%20a%20Paper%20and%20Digital%20Backlog%20%E2%80%93%20Gigaom/#highlights","text":"Stage 1 \u2013 Triage. Basically, you have to know everything that\u2019s on your plate, so you can decide where to start. And you need to get through everything quickly. So the first stage of getting through a backlog is to go through everything, as quickly as possible, so that you can identify what needs to be done now, and what can be done later. We\u2019re assuming here that you have urgent tasks in this stack (or stacks). Go through everything quickly. And I mean everything: don\u2019t treat paper and digital stuff differently. Go through each \u201cinbox\u201d from top to bottom, processing as rapidly as possible. That includes your physical inbox on your desk (pile all papers in your backlog and messages in here), and all your digital inboxes \u2014 email, RSS, forums, comments, other services. Make three piles. The first is stuff that needs to be done right away. For this pile, you might want to keep a short list, so that you can put digital stuff and paper stuff all together. For example, I have an index card that I\u2019ve written all the stuff I need to do today. It\u2019s more than I normally would try to handle, but again, I\u2019m catching up. The list includes important emails and assignments. Second, make a list or pile of stuff you will sort through later. This is lower priority stuff. You\u2019ll get to it in Phase 3. The third pile is really your trashcan. Delete or trash all the stuff you don\u2019t need to deal with at all, to get it out of the way quickly. Don\u2019t do stuff yet. Although GTD advocates doing tasks if they\u2019re 2 minutes or less, as you\u2019re processing, if you have a large and urgent backlog, I say just add it to one of your lists/piles for now. Do them in one of the next stages. After you get through the backlog, I recommend following GTD\u2019s advice during your daily processing, as it greatly reduces the stuff on your list. Stage 2 \u2013 First Things First. OK, you\u2019ve sorted through your backlog and identified the top-priority stuff. This is the stuff you need to get through today. Now identify blocks of time for each, putting the most important/urgent stuff first. If you don\u2019t have enough blocks of time, you probably won\u2019t be able to do the entire list today. Be realistic \u2014 don\u2019t give yourself 15 minutes to do something that normally takes an hour. Some tips: If you have a large backlog, you\u2019ll want to work quickly, and perhaps set a timer. Set aside at least 30 minutes today to get through your backlog (Stage 3), as otherwise it\u2019ll never end and just keep getting bigger. Get the hardest and most important stuff done first. Don\u2019t put it off till last, because you might not get to it. Set aside distractions. You probably don\u2019t have time to respond to IM or most incoming emails or browsing through your fun stuff on the web. If you do, set aside a block or two of time for that, and don\u2019t let yourself do it outside those blocks of time. It\u2019s important that when you\u2019re doing your important tasks today, you are able to focus. Stage 3 \u2013 Work Through the Rest. So you\u2019re taking care of your important tasks first, but you\u2019ve still got that backlog screaming at you. And it won\u2019t go away until you deal with it. Set aside at least 30 minutes today to process your backlog, and set aside at least an hour tomorrow and for as many days as it will take to clear it. Process one inbox at a time (email, paper, etc.). And in each inbox, process one document or message at a time, make a decision and taking an action with each, clearing it from the inbox, until the inbox is empty. What decisions and actions should be taken? One of the following. Trash or delete anything that you don\u2019t need to save or process or reply to. I know this was in the earlier stage, but if you see something that you missed the first time, or that has become irrelevant, trash it now. Forward or delegate anything that someone else can do instead of you. Archive or delete (or file, if it\u2019s a paper document) to get it out of the inbox. Quickly reply to messages that can be done in a minute or two. Quickly do actions that take a couple minutes or less. Archive or delete (or file, if it\u2019s a paper document) to get it out of the inbox. Note items that need action, but that will take longer to do. Put them on a separate to-do list. Archive or delete (or file, if it\u2019s a paper document) to get it out of the inbox.","title":"Highlights"},{"location":"Highlights/Readwise/Articles/How%20to%20Get%20and%20Remain%20Organized%20During%20Chaotic%20Times/","text":"How to Get and Remain Organized During Chaotic Times \u00b6 Metadata \u00b6 Author: [[Molly Stovold]] Full Title: How to Get and Remain Organized During Chaotic Times Category: #Type/Highlights/Article URL: https://feedly.com/i/entry/UlwJt8pnKTUukHWHOFLyI5WIpgdbpI6aiTOWI99pQ0w=_176656f83b6:7acda:c0c31fea Highlights \u00b6 Getting Things Done is an organizational system that you can trust to remind you of what needs to get done at the opportune moment. It is a system external to your memory that allows you to remember the things that you need to remember at the exact moment you\u2019d like to remember them. By practicing GTD, your mind can take comfort in knowing that nothing is going to escape it. The phrases \u201cI forgot\u201d or \u201cI\u2019ve double-booked\u201d can be well and truly banished from your vocabulary. GTD allows the mind to dedicate itself to doing what it\u2019s made to do: Work on concrete actions, creatively and efficiently. Mizu no Kokoro [mind like water] is a Japanese phrase meaning to have a state of mind that is similar to water: Flowing, reflective, and adaptive. Mizo no Kokoro means to adopt a state of calm by trying to keep the mind transparent and clean, like water. By keeping your mind Mizu no Kokoro, you allow yourself to be calm and able to focus on the important things that need your attention. \u201cIn karate, there is an image that\u2019s used to define the position of perfect readiness: \u201cmind like water.\u201d Imagine throwing a pebble into a still pond. How does the water respond? The answer is, totally appropriately to the force and mass of the input; then it returns to calm. It doesn\u2019t overreact or underreact\u2026Anything that causes you to overreact or underreact can control you, and often does.\u201d David Allen, Getting Things Done Perspective is what encourages you to prioritize your tasks in a way that helps you work towards your overall life goals or long-term tasks. To achieve this perspective David Allen proposes a 6-level altitude model which he calls the \u201c6 Horizons of Focus\u201d.","title":"How to Get and Remain Organized During Chaotic Times"},{"location":"Highlights/Readwise/Articles/How%20to%20Get%20and%20Remain%20Organized%20During%20Chaotic%20Times/#how-to-get-and-remain-organized-during-chaotic-times","text":"","title":"How to Get and Remain Organized During Chaotic Times"},{"location":"Highlights/Readwise/Articles/How%20to%20Get%20and%20Remain%20Organized%20During%20Chaotic%20Times/#metadata","text":"Author: [[Molly Stovold]] Full Title: How to Get and Remain Organized During Chaotic Times Category: #Type/Highlights/Article URL: https://feedly.com/i/entry/UlwJt8pnKTUukHWHOFLyI5WIpgdbpI6aiTOWI99pQ0w=_176656f83b6:7acda:c0c31fea","title":"Metadata"},{"location":"Highlights/Readwise/Articles/How%20to%20Get%20and%20Remain%20Organized%20During%20Chaotic%20Times/#highlights","text":"Getting Things Done is an organizational system that you can trust to remind you of what needs to get done at the opportune moment. It is a system external to your memory that allows you to remember the things that you need to remember at the exact moment you\u2019d like to remember them. By practicing GTD, your mind can take comfort in knowing that nothing is going to escape it. The phrases \u201cI forgot\u201d or \u201cI\u2019ve double-booked\u201d can be well and truly banished from your vocabulary. GTD allows the mind to dedicate itself to doing what it\u2019s made to do: Work on concrete actions, creatively and efficiently. Mizu no Kokoro [mind like water] is a Japanese phrase meaning to have a state of mind that is similar to water: Flowing, reflective, and adaptive. Mizo no Kokoro means to adopt a state of calm by trying to keep the mind transparent and clean, like water. By keeping your mind Mizu no Kokoro, you allow yourself to be calm and able to focus on the important things that need your attention. \u201cIn karate, there is an image that\u2019s used to define the position of perfect readiness: \u201cmind like water.\u201d Imagine throwing a pebble into a still pond. How does the water respond? The answer is, totally appropriately to the force and mass of the input; then it returns to calm. It doesn\u2019t overreact or underreact\u2026Anything that causes you to overreact or underreact can control you, and often does.\u201d David Allen, Getting Things Done Perspective is what encourages you to prioritize your tasks in a way that helps you work towards your overall life goals or long-term tasks. To achieve this perspective David Allen proposes a 6-level altitude model which he calls the \u201c6 Horizons of Focus\u201d.","title":"Highlights"},{"location":"Highlights/Readwise/Articles/How%20to%20Handle%20Inbox%20Infinity/","text":"How to Handle Inbox Infinity \u00b6 Metadata \u00b6 Author: [[Robert Talbert]] Full Title: How to Handle Inbox Infinity Category: #Type/Highlights/Article URL: http://rtalbert.org/how-to-handle-inbox-infinity/ Highlights \u00b6 Let's say you're this reader, and make a series of questionable assumptions: (1) you've already got a system of tags and folders set up for housing processed emails; (2) you are fluent with the workflow for Clarifying what's in the inbox, so that the only real work involved is actually processing the emails and not figuring out the process of processing; and especially (3) you work fast when processing emails, spending only 5 seconds on average to Clarify each item and get it to the right place. Step 1: Divide and conquerThe first thing I'd do is apply the \"one year rule\" for clothes in my closet to my email inbox. This rule states that if you haven't worn a piece of clothing in a year, you're probably never going to wear it again, so there's no point keeping it. There's something about the one-year mark that demarcates stuff that might actually be useful from those that are just probably not. This includes email. So divide up the inbox into messages that are a year old or older, from those that aren't. Step 2: Out with the old Now that you've isolated all the emails older than one year, it's time for honesty. If I have not needed any of those emails by now \u2014 if I have not been bitten by ignoring them yet \u2014 then I will probably never need them. So I would declare bankruptcy and delete them all. Click the select-all box and then the trash can: But this really freaks some people out. What if I delete something that's important that I end up needing later? Let me put on my \"Dad voice\" for a second: This is why you have to have good email hygiene in the first place. If you think that all that stuff might contain something important but don't know, realize this is a huge source of stress that you don't even realize is living in your head rent-free \u2013 until you get honest with yourself and have to click the trash can button. But generally speaking, the idea here is to just delete the old stuff in a massive batch. This requires courage. However \u2014 in Gmail at least you can hedge your bets by choosing \"Archive\" instead of \"Delete\". This will put all those old emails out-of-sight/out-of-mind in an archive, out of your system but still accessible via a search later. (That's the basic rule of the internet today \u2014 nothing ever gets truly deleted.)","title":"How to Handle Inbox Infinity"},{"location":"Highlights/Readwise/Articles/How%20to%20Handle%20Inbox%20Infinity/#how-to-handle-inbox-infinity","text":"","title":"How to Handle Inbox Infinity"},{"location":"Highlights/Readwise/Articles/How%20to%20Handle%20Inbox%20Infinity/#metadata","text":"Author: [[Robert Talbert]] Full Title: How to Handle Inbox Infinity Category: #Type/Highlights/Article URL: http://rtalbert.org/how-to-handle-inbox-infinity/","title":"Metadata"},{"location":"Highlights/Readwise/Articles/How%20to%20Handle%20Inbox%20Infinity/#highlights","text":"Let's say you're this reader, and make a series of questionable assumptions: (1) you've already got a system of tags and folders set up for housing processed emails; (2) you are fluent with the workflow for Clarifying what's in the inbox, so that the only real work involved is actually processing the emails and not figuring out the process of processing; and especially (3) you work fast when processing emails, spending only 5 seconds on average to Clarify each item and get it to the right place. Step 1: Divide and conquerThe first thing I'd do is apply the \"one year rule\" for clothes in my closet to my email inbox. This rule states that if you haven't worn a piece of clothing in a year, you're probably never going to wear it again, so there's no point keeping it. There's something about the one-year mark that demarcates stuff that might actually be useful from those that are just probably not. This includes email. So divide up the inbox into messages that are a year old or older, from those that aren't. Step 2: Out with the old Now that you've isolated all the emails older than one year, it's time for honesty. If I have not needed any of those emails by now \u2014 if I have not been bitten by ignoring them yet \u2014 then I will probably never need them. So I would declare bankruptcy and delete them all. Click the select-all box and then the trash can: But this really freaks some people out. What if I delete something that's important that I end up needing later? Let me put on my \"Dad voice\" for a second: This is why you have to have good email hygiene in the first place. If you think that all that stuff might contain something important but don't know, realize this is a huge source of stress that you don't even realize is living in your head rent-free \u2013 until you get honest with yourself and have to click the trash can button. But generally speaking, the idea here is to just delete the old stuff in a massive batch. This requires courage. However \u2014 in Gmail at least you can hedge your bets by choosing \"Archive\" instead of \"Delete\". This will put all those old emails out-of-sight/out-of-mind in an archive, out of your system but still accessible via a search later. (That's the basic rule of the internet today \u2014 nothing ever gets truly deleted.)","title":"Highlights"},{"location":"Highlights/Readwise/Articles/How%20to%20Improve%20the%20Performance%20of%20Your%20Windows%20Computer%20Fundamentally/","text":"How to Improve the Performance of Your Windows Computer Fundamentally? \u00b6 Metadata \u00b6 Author: Full Title: How to Improve the Performance of Your Windows Computer Fundamentally? Category: #Type/Highlights/Article URL: http://forum.wisecleaner.com/index.php?/topic/3084-how-to-improve-the-performance-of-your-windows-computer-fundamentally-part-one/ Highlights \u00b6 Speed up a computer: Uninstall unnecessary software Either use System Restore or swap out the offending hardware. If you find there are too many software installed in your computer, and some of them you used only once or hardly use, I strongly recommend that you uninstall them, here you can use some professional uninstaller like Wise Program Uninstaller which helps you removed the unwanted ones completely, leaving no residual items behind. If nothing obvious springs to mind there are two things to check. Slow PC: Is it your PC or the broadband? First, is it your PC or your connection that is slow? If you principally use your PC to email, browse the web and use Facebook it's possible that what is slow is your web connection and not your PC. Also, if you have a laptop take it to a friend's house or into the office where you know the broadband is okay, log on and see how things are. If you have a desktop PC borrow a laptop to do the same check at home (if the laptop slows down the network is the issue). If the web connection is the culprit you can improve things in several ways, but the first one is to complain to your ISP - especially if it has recently got a lot slower. Slow PC: is it a virus? Much more likely a PC slow-down is caused by a malware infection of some kind. You should of course have a robust internet security package running on your PC or laptop. If you don't, buy and install one today for advice on which one to choose. Scan and clean your PC and you should find that things improve. If you have an existing security program it is still worth updating the virus definitions and running a scan, but it is likely that the infection has found a way around your chosen program. You can add a further layer of protection by using a free product to do a further scan and clean up any problems.","title":"How to Improve the Performance of Your Windows Computer Fundamentally?"},{"location":"Highlights/Readwise/Articles/How%20to%20Improve%20the%20Performance%20of%20Your%20Windows%20Computer%20Fundamentally/#how-to-improve-the-performance-of-your-windows-computer-fundamentally","text":"","title":"How to Improve the Performance of Your Windows Computer Fundamentally?"},{"location":"Highlights/Readwise/Articles/How%20to%20Improve%20the%20Performance%20of%20Your%20Windows%20Computer%20Fundamentally/#metadata","text":"Author: Full Title: How to Improve the Performance of Your Windows Computer Fundamentally? Category: #Type/Highlights/Article URL: http://forum.wisecleaner.com/index.php?/topic/3084-how-to-improve-the-performance-of-your-windows-computer-fundamentally-part-one/","title":"Metadata"},{"location":"Highlights/Readwise/Articles/How%20to%20Improve%20the%20Performance%20of%20Your%20Windows%20Computer%20Fundamentally/#highlights","text":"Speed up a computer: Uninstall unnecessary software Either use System Restore or swap out the offending hardware. If you find there are too many software installed in your computer, and some of them you used only once or hardly use, I strongly recommend that you uninstall them, here you can use some professional uninstaller like Wise Program Uninstaller which helps you removed the unwanted ones completely, leaving no residual items behind. If nothing obvious springs to mind there are two things to check. Slow PC: Is it your PC or the broadband? First, is it your PC or your connection that is slow? If you principally use your PC to email, browse the web and use Facebook it's possible that what is slow is your web connection and not your PC. Also, if you have a laptop take it to a friend's house or into the office where you know the broadband is okay, log on and see how things are. If you have a desktop PC borrow a laptop to do the same check at home (if the laptop slows down the network is the issue). If the web connection is the culprit you can improve things in several ways, but the first one is to complain to your ISP - especially if it has recently got a lot slower. Slow PC: is it a virus? Much more likely a PC slow-down is caused by a malware infection of some kind. You should of course have a robust internet security package running on your PC or laptop. If you don't, buy and install one today for advice on which one to choose. Scan and clean your PC and you should find that things improve. If you have an existing security program it is still worth updating the virus definitions and running a scan, but it is likely that the infection has found a way around your chosen program. You can add a further layer of protection by using a free product to do a further scan and clean up any problems.","title":"Highlights"},{"location":"Highlights/Readwise/Articles/How%20to%20Increase%20Your%20Efficiency%20at%20Work/","text":"How to Increase Your Efficiency at Work \u00b6 Metadata \u00b6 Author: [[Adrian Shepherd]] Full Title: How to Increase Your Efficiency at Work Category: #Type/Highlights/Article URL: https://www.lifehack.org/893609/efficiency-at-work Highlights \u00b6 It\u2019s amazing how much a short walk every 90 minutes or so can improve our efficiency at work. It refreshes our eyes, our mind, and our body all at once. \u201cDon\u2019t wish it were easier, wish you were better\u201d are wise words that Jim Rohn used to mention in all his lectures and a quote. It's something that everyone should take into consideration when thinking of ways to increase efficiency at work. The more experience and knowledge we acquire, the easier tasks become, which is why we should always work on improving our own ability. Busywork Sucks Most people aren\u2019t lazy. The problem is they don\u2019t want to do what they should. Instead, they fill much of their day doing activities that give them a sense of accomplishment while never making any real progress on the things they should. Time Tracking One of the big mistakes people make is they think they are good at managing their time, yet have never taken the time to really analyze just how they are using their time. With clients, one of the first things I have them do is do a time audit. I want to know just how much time they spend and where. It\u2019s often eye-opening for clients when they do this. No matter how good we think we are at using our time, we can always be better. Efficiency\u2019s Magic Number Is One A single-minded focus on a task will transform your productivity like no other. Unfortunately, most of us don\u2019t realize just how unaccustomed we are to this and think that multi-tasking is the key to getting things done. Wrong! It\u2019s precisely the opposite. Multitasking prevents us from reaching concentrated focus and our efficiency at work suffers from it. Notifications Are a Dime a Dozen Please, if you aren\u2019t a surgeon who needs to be on call because it\u2019s a life and death situation, turn off your notifications. We get distracted, on average, every 4 minutes. Those distractions are absolutely productivity killers as they take us away from our train of thought. The Bottom Line Increasing your efficiency at work isn't rock science. In fact, it's downright simple. It's the simplicity that trips people up. Too often people look for new shiny toys when the answers are right in front of them. These concepts transformed my life and those of many entrepreneurs the world over and you'd be foolish not to at least give them a fair shake. Remember, like all concepts, applying them once and expecting big results just won't happen. But over time, simple concepts done repeatedly can achieve incredible results.","title":"How to Increase Your Efficiency at Work"},{"location":"Highlights/Readwise/Articles/How%20to%20Increase%20Your%20Efficiency%20at%20Work/#how-to-increase-your-efficiency-at-work","text":"","title":"How to Increase Your Efficiency at Work"},{"location":"Highlights/Readwise/Articles/How%20to%20Increase%20Your%20Efficiency%20at%20Work/#metadata","text":"Author: [[Adrian Shepherd]] Full Title: How to Increase Your Efficiency at Work Category: #Type/Highlights/Article URL: https://www.lifehack.org/893609/efficiency-at-work","title":"Metadata"},{"location":"Highlights/Readwise/Articles/How%20to%20Increase%20Your%20Efficiency%20at%20Work/#highlights","text":"It\u2019s amazing how much a short walk every 90 minutes or so can improve our efficiency at work. It refreshes our eyes, our mind, and our body all at once. \u201cDon\u2019t wish it were easier, wish you were better\u201d are wise words that Jim Rohn used to mention in all his lectures and a quote. It's something that everyone should take into consideration when thinking of ways to increase efficiency at work. The more experience and knowledge we acquire, the easier tasks become, which is why we should always work on improving our own ability. Busywork Sucks Most people aren\u2019t lazy. The problem is they don\u2019t want to do what they should. Instead, they fill much of their day doing activities that give them a sense of accomplishment while never making any real progress on the things they should. Time Tracking One of the big mistakes people make is they think they are good at managing their time, yet have never taken the time to really analyze just how they are using their time. With clients, one of the first things I have them do is do a time audit. I want to know just how much time they spend and where. It\u2019s often eye-opening for clients when they do this. No matter how good we think we are at using our time, we can always be better. Efficiency\u2019s Magic Number Is One A single-minded focus on a task will transform your productivity like no other. Unfortunately, most of us don\u2019t realize just how unaccustomed we are to this and think that multi-tasking is the key to getting things done. Wrong! It\u2019s precisely the opposite. Multitasking prevents us from reaching concentrated focus and our efficiency at work suffers from it. Notifications Are a Dime a Dozen Please, if you aren\u2019t a surgeon who needs to be on call because it\u2019s a life and death situation, turn off your notifications. We get distracted, on average, every 4 minutes. Those distractions are absolutely productivity killers as they take us away from our train of thought. The Bottom Line Increasing your efficiency at work isn't rock science. In fact, it's downright simple. It's the simplicity that trips people up. Too often people look for new shiny toys when the answers are right in front of them. These concepts transformed my life and those of many entrepreneurs the world over and you'd be foolish not to at least give them a fair shake. Remember, like all concepts, applying them once and expecting big results just won't happen. But over time, simple concepts done repeatedly can achieve incredible results.","title":"Highlights"},{"location":"Highlights/Readwise/Articles/How%20to%20Install%20or%20Update%20PowerShell%20to%20the%20Latest%20Version%20in%20Windows%2010%20%20ITIGIC/","text":"How to Install or Update PowerShell to the Latest Version in Windows 10 | ITIGIC \u00b6 Metadata \u00b6 Author: Full Title: How to Install or Update PowerShell to the Latest Version in Windows 10 | ITIGIC Category: #Type/Highlights/Article URL: https://itigic.com/install-or-update-powershell-in-windows-10/ Highlights \u00b6 When we install Windows 10 from scratch, this console is installed and enabled by default. However, even the latest version of Windows 10 brings an outdated version of PowerShell , usually 5.1. We can check the version that we have right now installed on our computer by opening a console window and executing the following command: Get-Host | Select-Object Version What\u2019s New in PowerShell 7 PowerShell 5 , the version that is installed by default in Windows 10, is a very powerful tool, and for most users more than enough. However, there is always room for improvement, especially for advanced users and developers who work with these types of scripts. Therefore, in the new versions of PowerShell we can find functions and features that, until now, were not available in this tool, such as: Parallelism pipeline. New operators. New cmdlet (ConciseView and Get-Error). New version notifications. Compatibility layers to invoke modules in implicit sessions. Ability to invoke resources directly from the console window. Automatic method If we do not want to download and install the new version manually, we can also update PowerShell from the program itself. For this, what we must do is open a PS window with administrator permissions, and execute the following command in it: iex \"& { $(irm https://aka.ms/install-powershell.ps1) } -UseMSI\" How to use the new PowerShell Regardless of the method we have chosen, this version acts as an independent program, so in Windows 10 we will continue to have version 5 of it installed, along with this new version. We can find the new PowerShell in the following path (by default): C> Program Files> PowerShell. Check the new installed version When we have the new PowerShell installed, it will appear as \u201d PowerShell 7 \u201d within the search engine and from the launchers we use. However, if we want to be sure of the version that we have installed, we can check it very easily by running the following command again: Get-Host | Select-Object Version From now on, when there are new versions, the PowerShell window itself will notify us of its availability. And we can use either of the two previous methods to install that new version.","title":"How to Install or Update PowerShell to the Latest Version in Windows 10 | ITIGIC"},{"location":"Highlights/Readwise/Articles/How%20to%20Install%20or%20Update%20PowerShell%20to%20the%20Latest%20Version%20in%20Windows%2010%20%20ITIGIC/#how-to-install-or-update-powershell-to-the-latest-version-in-windows-10-itigic","text":"","title":"How to Install or Update PowerShell to the Latest Version in Windows 10 | ITIGIC"},{"location":"Highlights/Readwise/Articles/How%20to%20Install%20or%20Update%20PowerShell%20to%20the%20Latest%20Version%20in%20Windows%2010%20%20ITIGIC/#metadata","text":"Author: Full Title: How to Install or Update PowerShell to the Latest Version in Windows 10 | ITIGIC Category: #Type/Highlights/Article URL: https://itigic.com/install-or-update-powershell-in-windows-10/","title":"Metadata"},{"location":"Highlights/Readwise/Articles/How%20to%20Install%20or%20Update%20PowerShell%20to%20the%20Latest%20Version%20in%20Windows%2010%20%20ITIGIC/#highlights","text":"When we install Windows 10 from scratch, this console is installed and enabled by default. However, even the latest version of Windows 10 brings an outdated version of PowerShell , usually 5.1. We can check the version that we have right now installed on our computer by opening a console window and executing the following command: Get-Host | Select-Object Version What\u2019s New in PowerShell 7 PowerShell 5 , the version that is installed by default in Windows 10, is a very powerful tool, and for most users more than enough. However, there is always room for improvement, especially for advanced users and developers who work with these types of scripts. Therefore, in the new versions of PowerShell we can find functions and features that, until now, were not available in this tool, such as: Parallelism pipeline. New operators. New cmdlet (ConciseView and Get-Error). New version notifications. Compatibility layers to invoke modules in implicit sessions. Ability to invoke resources directly from the console window. Automatic method If we do not want to download and install the new version manually, we can also update PowerShell from the program itself. For this, what we must do is open a PS window with administrator permissions, and execute the following command in it: iex \"& { $(irm https://aka.ms/install-powershell.ps1) } -UseMSI\" How to use the new PowerShell Regardless of the method we have chosen, this version acts as an independent program, so in Windows 10 we will continue to have version 5 of it installed, along with this new version. We can find the new PowerShell in the following path (by default): C> Program Files> PowerShell. Check the new installed version When we have the new PowerShell installed, it will appear as \u201d PowerShell 7 \u201d within the search engine and from the launchers we use. However, if we want to be sure of the version that we have installed, we can check it very easily by running the following command again: Get-Host | Select-Object Version From now on, when there are new versions, the PowerShell window itself will notify us of its availability. And we can use either of the two previous methods to install that new version.","title":"Highlights"},{"location":"Highlights/Readwise/Articles/How%20to%20Keep%20Windows%2010%20Organized%2C%20Pretty%2C%20and%20Productive/","text":"How to Keep Windows 10 Organized, Pretty, and Productive \u00b6 Metadata \u00b6 Author: Full Title: How to Keep Windows 10 Organized, Pretty, and Productive Category: #Type/Highlights/Article URL: https://lifehacker.com/how-to-keep-windows-10-organized-pretty-and-productiv-1825213309 Highlights \u00b6 Automation is a great way to help you stay organized in Windows, and DropIt practically gives you a virtual helper at your fingertips. If you\u2019re the kind of person who arranges your smartphone apps by color, you\u2019re going to love TileIconifier. Though it\u2019s going to demand a bit of your time if you\u2019re crazy about how your Start Menu looks, this utility allows you to customize your apps\u2019 tiles. You can make both light and dark versions of the icon, too, in case you ever feel like switching Windows themes.","title":"How to Keep Windows 10 Organized, Pretty, and Productive"},{"location":"Highlights/Readwise/Articles/How%20to%20Keep%20Windows%2010%20Organized%2C%20Pretty%2C%20and%20Productive/#how-to-keep-windows-10-organized-pretty-and-productive","text":"","title":"How to Keep Windows 10 Organized, Pretty, and Productive"},{"location":"Highlights/Readwise/Articles/How%20to%20Keep%20Windows%2010%20Organized%2C%20Pretty%2C%20and%20Productive/#metadata","text":"Author: Full Title: How to Keep Windows 10 Organized, Pretty, and Productive Category: #Type/Highlights/Article URL: https://lifehacker.com/how-to-keep-windows-10-organized-pretty-and-productiv-1825213309","title":"Metadata"},{"location":"Highlights/Readwise/Articles/How%20to%20Keep%20Windows%2010%20Organized%2C%20Pretty%2C%20and%20Productive/#highlights","text":"Automation is a great way to help you stay organized in Windows, and DropIt practically gives you a virtual helper at your fingertips. If you\u2019re the kind of person who arranges your smartphone apps by color, you\u2019re going to love TileIconifier. Though it\u2019s going to demand a bit of your time if you\u2019re crazy about how your Start Menu looks, this utility allows you to customize your apps\u2019 tiles. You can make both light and dark versions of the icon, too, in case you ever feel like switching Windows themes.","title":"Highlights"},{"location":"Highlights/Readwise/Articles/How%20to%20Learn%20Linux%20and%20Git/","text":"How to Learn Linux and Git \u00b6 Metadata \u00b6 Author: [[Syed Mujtaba Jafri]] Full Title: How to Learn Linux and Git Category: #Type/Highlights/Article URL: https://medium.com/p/25b18a815778 Highlights \u00b6 Fun fact : Git was invented by Linus Torvalds, the man behind Linux. He invented it for development of Linux kernel, with other developers contributing to its initial development.","title":"How to Learn Linux and Git"},{"location":"Highlights/Readwise/Articles/How%20to%20Learn%20Linux%20and%20Git/#how-to-learn-linux-and-git","text":"","title":"How to Learn Linux and Git"},{"location":"Highlights/Readwise/Articles/How%20to%20Learn%20Linux%20and%20Git/#metadata","text":"Author: [[Syed Mujtaba Jafri]] Full Title: How to Learn Linux and Git Category: #Type/Highlights/Article URL: https://medium.com/p/25b18a815778","title":"Metadata"},{"location":"Highlights/Readwise/Articles/How%20to%20Learn%20Linux%20and%20Git/#highlights","text":"Fun fact : Git was invented by Linus Torvalds, the man behind Linux. He invented it for development of Linux kernel, with other developers contributing to its initial development.","title":"Highlights"},{"location":"Highlights/Readwise/Articles/How%20to%20Make%20Your%20Developer%20On-Boarding%20Process%20Idiot%20Proof/","text":"How to Make Your Developer On-Boarding Process Idiot Proof \u00b6 Metadata \u00b6 Author: [[Matt]] Full Title: How to Make Your Developer On-Boarding Process Idiot Proof Category: #Type/Highlights/Article URL: http://shiporgetoffthepot.com/how-to-make-your-developer-onboarding-process-idiot-proofresistant/ Highlights \u00b6 Use Github for more than just Version Control: Their Wiki and README.md features are what I am praising at the moment. The README.md is a text file using markdown formating that you can place at the root of any project. Here you can put all sorts of useful information about your project. It is used a lot in opensource projects but I don't see it used enough in private repos. Here are some of the things I put in my README.md file: Setup Instructions: So new developers do not need me holding their hand as they try to get setup. It is also a good test of how resourceful they are. Tags: [[favorite]] Code Anatomy Map: This folder holds the css, this one the javascript, this one the routes, etc Common Errors: If you run into a problem everytime a new developer runs your app and its easy to fix you should write that down so new devs don't need to ask you how to fix it. Remember the goal is to take you, the CTO, out of the equation as much as possible. Resources: These are links to any 3rd party resources you are using. It might be a whole library or just a stack overflow post that would be helpful. Sometimes I put these here more as quick links for myself than for the other devs. Pair them with a senior dev: Pair them with a senior for guidance. The senior dev might see this as a waste of their time but what is worse? Temporarily wasting a fraction of the senior developers time to ensure that the new developer is at least partially efficient Wasting your time instead of the senior devs that could be spent on the big picture. Wasting none of the senior devs time but having a completely inefficient and frustrated new developer that you are still paying that may never become proficient. Break down the architecture into logical pieces. Encourage fixable mistakes: Conclusion: Building a scalable dev team capable of hammering out a functional app at break neck speed is not an easy task. These are just some of my tips and tricks. Please feel free to post/email me your own tips and trick on the topic. Good luck to you, now get back out there and ship your product.","title":"How to Make Your Developer On-Boarding Process Idiot Proof"},{"location":"Highlights/Readwise/Articles/How%20to%20Make%20Your%20Developer%20On-Boarding%20Process%20Idiot%20Proof/#how-to-make-your-developer-on-boarding-process-idiot-proof","text":"","title":"How to Make Your Developer On-Boarding Process Idiot Proof"},{"location":"Highlights/Readwise/Articles/How%20to%20Make%20Your%20Developer%20On-Boarding%20Process%20Idiot%20Proof/#metadata","text":"Author: [[Matt]] Full Title: How to Make Your Developer On-Boarding Process Idiot Proof Category: #Type/Highlights/Article URL: http://shiporgetoffthepot.com/how-to-make-your-developer-onboarding-process-idiot-proofresistant/","title":"Metadata"},{"location":"Highlights/Readwise/Articles/How%20to%20Make%20Your%20Developer%20On-Boarding%20Process%20Idiot%20Proof/#highlights","text":"Use Github for more than just Version Control: Their Wiki and README.md features are what I am praising at the moment. The README.md is a text file using markdown formating that you can place at the root of any project. Here you can put all sorts of useful information about your project. It is used a lot in opensource projects but I don't see it used enough in private repos. Here are some of the things I put in my README.md file: Setup Instructions: So new developers do not need me holding their hand as they try to get setup. It is also a good test of how resourceful they are. Tags: [[favorite]] Code Anatomy Map: This folder holds the css, this one the javascript, this one the routes, etc Common Errors: If you run into a problem everytime a new developer runs your app and its easy to fix you should write that down so new devs don't need to ask you how to fix it. Remember the goal is to take you, the CTO, out of the equation as much as possible. Resources: These are links to any 3rd party resources you are using. It might be a whole library or just a stack overflow post that would be helpful. Sometimes I put these here more as quick links for myself than for the other devs. Pair them with a senior dev: Pair them with a senior for guidance. The senior dev might see this as a waste of their time but what is worse? Temporarily wasting a fraction of the senior developers time to ensure that the new developer is at least partially efficient Wasting your time instead of the senior devs that could be spent on the big picture. Wasting none of the senior devs time but having a completely inefficient and frustrated new developer that you are still paying that may never become proficient. Break down the architecture into logical pieces. Encourage fixable mistakes: Conclusion: Building a scalable dev team capable of hammering out a functional app at break neck speed is not an easy task. These are just some of my tips and tricks. Please feel free to post/email me your own tips and trick on the topic. Good luck to you, now get back out there and ship your product.","title":"Highlights"},{"location":"Highlights/Readwise/Articles/How%20to%20Make%20Yourself%20Into%20a%20Learning%20Machine/","text":"How to Make Yourself Into a Learning Machine \u00b6 Metadata \u00b6 Author: [[Dan Shipper]] Full Title: How to Make Yourself Into a Learning Machine Category: #Type/Highlights/Article URL: https://superorganizers.substack.com/p/how-to-build-a-learning-machine Highlights \u00b6 The core of the system is highlighting. Anything that I find that\u2019s important, I\u2019ll highlight on my Kindle. All of those highlights automatically go to my Readwise where I can add them to my learning system. Readwise is fantastic because it automatically scrapes all of my Kindle highlights and puts them into one place for me where I can search, tag, and review them. My learning system itself has two components: a flashcard system and a custom-built note repository inspired by the Zettelkasten \u2014 which is a note-taking system developed by the social scientist Niklas Luhmann. The Zettelkasten is where I spend time processing, categorizing, and connecting what I read. When I come across something in a book that seems useful to understand and remember, I will highlight it on my Kindle and add a note to it with the text: \u201c.flash\u201d. All notes with \u201c.flash\u201d in them are then automatically loaded into Readwise and organized under a \u201cflash\u201d tag. Zettelkasten system When I highlight something from a book that contains an idea, concept, metaphor, or generally something more abstract, I\u2019ll put it into my Zettelkasten instead of my flashcard system. These highlights aren\u2019t to be remembered, they are to be connected. Zettelkasten is German for \u201cslip box\u201d and is a method to manage knowledge. Basically, you take ideas from books, articles or conversations and write those ideas on note cards, collect them in a central database, and link them together so that you can start to find larger relationships between concepts you\u2019re learning. In the beginning, I would actually use physical note cards that I would hand-write and keep on my desk as my Zettelkasten. Keeping a physical system started to get out of hand, so I tried a bunch of software solutions \u2014 Workflowy, Dynalist, Notion \u2014 but they were all too slow, didn\u2019t have the features I wanted, and I worried about how they\u2019d age. I wanted a system that I could use for life. It\u2019s just text files on my computer written in Markdown, and edited using a plaintext editor. I\u2019ve also written a lot of small, auxiliary tooling for searching, browsing related notes, editor integration, and so on. The main repo where I keep all of it is on Github. Notes get into my Zettelkasten from the highlights in my Readwise. Readwise has a feature called Daily Review which shows me about 15 of my book highlights every day. If I think a highlight is important, I\u2019ll create a new note in my Zettelkasten and start connecting it with others. For example this is a note about the controversy zippers created when they first came into use: You\u2019ll see in my Zettelkasten I put in the original quote, then the source, and then write a small commentary on it. Then I\u2019ll start connecting this to other notes. One way to do that is with tags, and you\u2019ll see that I added a #pessimism tag to the note. But my system also lets me create links directly to other notes as well. You\u2019ll see on the right-hand side I have a full-text search prompt. To find other notes to connect it to, I might start by searching \u201cpessimism\u201d: I have three main areas I throw tasks into: Growth (a list of personal projects) Life (chores) Work In the Growth section, I keep track of all of my personal projects I have a lot of personal projects, and I work on them whenever I have the time. For example, I have a project called \u201cNapkin Math\u201d where I\u2019m working to improve my order-of-magnitude calculations when it comes to system design. But I have many other projects like reviewing the Vital Articles on Wikipedia, the periodic elements (and their primary uses and sources), blog posts, and a million different things I\u2019d like to learn. I expect most of these projects to take years, decades, and some of them I\u2019ll be working on for the rest of my life. I run a script when I have a few minutes that helps make little bursts of progress by choosing a random one of these areas. Tags: [[favorite]] He uses a reMarkable tablet to read long documents and emails Over the years, I\u2019ve found that reading dense PDFs or Google Docs isn\u2019t very good on a laptop or on a Kindle. Most of the Google Docs and longer emails I review, I send to my reMarkable and process there. The reMarkable gives great space to think, but because of its limitations I wouldn\u2019t recommend it to everyone. It\u2019s for a very particular workflow. It can easily end up as another expensive shelf gadget. Surprisingly, I\u2019ve also found that it works very well for making presentations with. Drawing slides is much more fun \u2014 I get frustrated when I\u2019m in Keynote for too long. Where Good Ideas Come From by Steven Johnson. This book is studded with good observations by someone who has spent a lot of time reading and thinking about scientific history. As an engineer \u2014 and fellow student of science \u2014 I loved it. I wrote a short review here.","title":"How to Make Yourself Into a Learning Machine"},{"location":"Highlights/Readwise/Articles/How%20to%20Make%20Yourself%20Into%20a%20Learning%20Machine/#how-to-make-yourself-into-a-learning-machine","text":"","title":"How to Make Yourself Into a Learning Machine"},{"location":"Highlights/Readwise/Articles/How%20to%20Make%20Yourself%20Into%20a%20Learning%20Machine/#metadata","text":"Author: [[Dan Shipper]] Full Title: How to Make Yourself Into a Learning Machine Category: #Type/Highlights/Article URL: https://superorganizers.substack.com/p/how-to-build-a-learning-machine","title":"Metadata"},{"location":"Highlights/Readwise/Articles/How%20to%20Make%20Yourself%20Into%20a%20Learning%20Machine/#highlights","text":"The core of the system is highlighting. Anything that I find that\u2019s important, I\u2019ll highlight on my Kindle. All of those highlights automatically go to my Readwise where I can add them to my learning system. Readwise is fantastic because it automatically scrapes all of my Kindle highlights and puts them into one place for me where I can search, tag, and review them. My learning system itself has two components: a flashcard system and a custom-built note repository inspired by the Zettelkasten \u2014 which is a note-taking system developed by the social scientist Niklas Luhmann. The Zettelkasten is where I spend time processing, categorizing, and connecting what I read. When I come across something in a book that seems useful to understand and remember, I will highlight it on my Kindle and add a note to it with the text: \u201c.flash\u201d. All notes with \u201c.flash\u201d in them are then automatically loaded into Readwise and organized under a \u201cflash\u201d tag. Zettelkasten system When I highlight something from a book that contains an idea, concept, metaphor, or generally something more abstract, I\u2019ll put it into my Zettelkasten instead of my flashcard system. These highlights aren\u2019t to be remembered, they are to be connected. Zettelkasten is German for \u201cslip box\u201d and is a method to manage knowledge. Basically, you take ideas from books, articles or conversations and write those ideas on note cards, collect them in a central database, and link them together so that you can start to find larger relationships between concepts you\u2019re learning. In the beginning, I would actually use physical note cards that I would hand-write and keep on my desk as my Zettelkasten. Keeping a physical system started to get out of hand, so I tried a bunch of software solutions \u2014 Workflowy, Dynalist, Notion \u2014 but they were all too slow, didn\u2019t have the features I wanted, and I worried about how they\u2019d age. I wanted a system that I could use for life. It\u2019s just text files on my computer written in Markdown, and edited using a plaintext editor. I\u2019ve also written a lot of small, auxiliary tooling for searching, browsing related notes, editor integration, and so on. The main repo where I keep all of it is on Github. Notes get into my Zettelkasten from the highlights in my Readwise. Readwise has a feature called Daily Review which shows me about 15 of my book highlights every day. If I think a highlight is important, I\u2019ll create a new note in my Zettelkasten and start connecting it with others. For example this is a note about the controversy zippers created when they first came into use: You\u2019ll see in my Zettelkasten I put in the original quote, then the source, and then write a small commentary on it. Then I\u2019ll start connecting this to other notes. One way to do that is with tags, and you\u2019ll see that I added a #pessimism tag to the note. But my system also lets me create links directly to other notes as well. You\u2019ll see on the right-hand side I have a full-text search prompt. To find other notes to connect it to, I might start by searching \u201cpessimism\u201d: I have three main areas I throw tasks into: Growth (a list of personal projects) Life (chores) Work In the Growth section, I keep track of all of my personal projects I have a lot of personal projects, and I work on them whenever I have the time. For example, I have a project called \u201cNapkin Math\u201d where I\u2019m working to improve my order-of-magnitude calculations when it comes to system design. But I have many other projects like reviewing the Vital Articles on Wikipedia, the periodic elements (and their primary uses and sources), blog posts, and a million different things I\u2019d like to learn. I expect most of these projects to take years, decades, and some of them I\u2019ll be working on for the rest of my life. I run a script when I have a few minutes that helps make little bursts of progress by choosing a random one of these areas. Tags: [[favorite]] He uses a reMarkable tablet to read long documents and emails Over the years, I\u2019ve found that reading dense PDFs or Google Docs isn\u2019t very good on a laptop or on a Kindle. Most of the Google Docs and longer emails I review, I send to my reMarkable and process there. The reMarkable gives great space to think, but because of its limitations I wouldn\u2019t recommend it to everyone. It\u2019s for a very particular workflow. It can easily end up as another expensive shelf gadget. Surprisingly, I\u2019ve also found that it works very well for making presentations with. Drawing slides is much more fun \u2014 I get frustrated when I\u2019m in Keynote for too long. Where Good Ideas Come From by Steven Johnson. This book is studded with good observations by someone who has spent a lot of time reading and thinking about scientific history. As an engineer \u2014 and fellow student of science \u2014 I loved it. I wrote a short review here.","title":"Highlights"},{"location":"Highlights/Readwise/Articles/How%20to%20Make%20a%20To-Do%20List%20and%20Get%20Sh%21t%20Done/","text":"How to Make a To-Do List and Get Sh!t Done \u00b6 Metadata \u00b6 Author: [[Shana Lebowitz]] Full Title: How to Make a To-Do List and Get Sh!t Done Category: #Type/Highlights/Article URL: https://greatist.com/happiness/make-a-to-do-list-get-shit-done Highlights \u00b6 Between housework, work-work, working out, and making friendships work, achieving goals, meeting expectations, and making deadlines always seem like more work than the work itself. Creating an efficient to-do list is an amazing first step. You\u2019re finally sitting in front of the Hallowed Checklist of Fate. And if you\u2019re not yet, add making a to-do list to your to-do list. Not everyone runs on lists. However, if you\u2019re struggling to make sense of your goals, a list could save you time, energy, and the need to come up with excuses for when the thing that needs to happen, well, doesn\u2019t. The problem is this: Not all lists are created equal. Pick a medium Make multiples Create several lists of things that need to happen. Our suggestions would be: A master list. This lays out your long-term goals. If you need to clean out your closet and whatever\u2019s living in there, want to sign up for a language class, or need to move to a new apartment, jot it all down on your master list. This should contain everything that needs to go down in the next 7 days. Maybe you need to research which language to learn or which area to start your apartment search. Throw it in here. A high-impact tasks list. This bad boy lets you know about tasks that need doing pronto: Call Aunt Sue for her birthday, pick up the dry cleaning, or finish that presentation for work tomorrow. Every day, see which items from the master list and weekly project list should move to the HIT list. You\u2019ll find that the big hitters from your master list start to play a more active role in your day-to-day. And who doesn\u2019t enjoy rubbing shoulders with their ambitions? For more guidance on infusing your life with meaning, look no further. Keep it simple Meet the MITs Start easy Break it down Stay specific Include it all Time it Don\u2019t stress Make it public Schedule scheduling Go in with the old Start fresh Make a new list every day so the same old items don\u2019t clog up the agenda. If something lives on the to-do list for too long, it does not get to-done, and that is to-disappointing. Be flexible Pro tip: Always leave about 15 minutes of \u201ccushion time\u201d in between items on the to-do list or calendar. This leaves you wiggle room. Yes, we know we drummed home the importance of not sleeping at the laundromat to get your washing finished, but you shouldn\u2019t stress yourself out to meet self-imposed timings.","title":"How to Make a To-Do List and Get Sh!t Done"},{"location":"Highlights/Readwise/Articles/How%20to%20Make%20a%20To-Do%20List%20and%20Get%20Sh%21t%20Done/#how-to-make-a-to-do-list-and-get-sht-done","text":"","title":"How to Make a To-Do List and Get Sh!t Done"},{"location":"Highlights/Readwise/Articles/How%20to%20Make%20a%20To-Do%20List%20and%20Get%20Sh%21t%20Done/#metadata","text":"Author: [[Shana Lebowitz]] Full Title: How to Make a To-Do List and Get Sh!t Done Category: #Type/Highlights/Article URL: https://greatist.com/happiness/make-a-to-do-list-get-shit-done","title":"Metadata"},{"location":"Highlights/Readwise/Articles/How%20to%20Make%20a%20To-Do%20List%20and%20Get%20Sh%21t%20Done/#highlights","text":"Between housework, work-work, working out, and making friendships work, achieving goals, meeting expectations, and making deadlines always seem like more work than the work itself. Creating an efficient to-do list is an amazing first step. You\u2019re finally sitting in front of the Hallowed Checklist of Fate. And if you\u2019re not yet, add making a to-do list to your to-do list. Not everyone runs on lists. However, if you\u2019re struggling to make sense of your goals, a list could save you time, energy, and the need to come up with excuses for when the thing that needs to happen, well, doesn\u2019t. The problem is this: Not all lists are created equal. Pick a medium Make multiples Create several lists of things that need to happen. Our suggestions would be: A master list. This lays out your long-term goals. If you need to clean out your closet and whatever\u2019s living in there, want to sign up for a language class, or need to move to a new apartment, jot it all down on your master list. This should contain everything that needs to go down in the next 7 days. Maybe you need to research which language to learn or which area to start your apartment search. Throw it in here. A high-impact tasks list. This bad boy lets you know about tasks that need doing pronto: Call Aunt Sue for her birthday, pick up the dry cleaning, or finish that presentation for work tomorrow. Every day, see which items from the master list and weekly project list should move to the HIT list. You\u2019ll find that the big hitters from your master list start to play a more active role in your day-to-day. And who doesn\u2019t enjoy rubbing shoulders with their ambitions? For more guidance on infusing your life with meaning, look no further. Keep it simple Meet the MITs Start easy Break it down Stay specific Include it all Time it Don\u2019t stress Make it public Schedule scheduling Go in with the old Start fresh Make a new list every day so the same old items don\u2019t clog up the agenda. If something lives on the to-do list for too long, it does not get to-done, and that is to-disappointing. Be flexible Pro tip: Always leave about 15 minutes of \u201ccushion time\u201d in between items on the to-do list or calendar. This leaves you wiggle room. Yes, we know we drummed home the importance of not sleeping at the laundromat to get your washing finished, but you shouldn\u2019t stress yourself out to meet self-imposed timings.","title":"Highlights"},{"location":"Highlights/Readwise/Articles/How%20to%20Organize%20%26%20Add%20Apps%20on%20Windows%2010/","text":"How to Organize & Add Apps on Windows 10 \u00b6 Metadata \u00b6 Author: Full Title: How to Organize & Add Apps on Windows 10 Category: #Type/Highlights/Article URL: https://myitmaster.com/organize-add-shortcuts-apps-list-windows-10/ Highlights \u00b6 Start menu shortcuts for your user account: %appdata%\\Microsoft\\Windows\\Start Menu\\Programs Start menu shortcuts for all users: C:\\ProgramData\\Microsoft\\Windows\\Start Menu\\Programs Create any shortcuts you like here. For example, you can right-click an .exe file elsewhere on your system, select Copy, access this shortcut, and then right-click and select \u201cPaste shortcut.\u201d Rename the shortcut anything you like and it will appear in your Start menu. This is particularly useful for portable applications and similar applications that don\u2019t automatically install shortcuts. if you place an .exe file directly into one of these folders, Windows will ignore it and not display it in the Start menu. Instead, you\u2019ll need to place the .exe file elsewhere and then create a shortcut to it in one of these folders. Windows will only show shortcuts in the All Apps list.","title":"How to Organize & Add Apps on Windows 10"},{"location":"Highlights/Readwise/Articles/How%20to%20Organize%20%26%20Add%20Apps%20on%20Windows%2010/#how-to-organize-add-apps-on-windows-10","text":"","title":"How to Organize &amp; Add Apps on Windows 10"},{"location":"Highlights/Readwise/Articles/How%20to%20Organize%20%26%20Add%20Apps%20on%20Windows%2010/#metadata","text":"Author: Full Title: How to Organize & Add Apps on Windows 10 Category: #Type/Highlights/Article URL: https://myitmaster.com/organize-add-shortcuts-apps-list-windows-10/","title":"Metadata"},{"location":"Highlights/Readwise/Articles/How%20to%20Organize%20%26%20Add%20Apps%20on%20Windows%2010/#highlights","text":"Start menu shortcuts for your user account: %appdata%\\Microsoft\\Windows\\Start Menu\\Programs Start menu shortcuts for all users: C:\\ProgramData\\Microsoft\\Windows\\Start Menu\\Programs Create any shortcuts you like here. For example, you can right-click an .exe file elsewhere on your system, select Copy, access this shortcut, and then right-click and select \u201cPaste shortcut.\u201d Rename the shortcut anything you like and it will appear in your Start menu. This is particularly useful for portable applications and similar applications that don\u2019t automatically install shortcuts. if you place an .exe file directly into one of these folders, Windows will ignore it and not display it in the Start menu. Instead, you\u2019ll need to place the .exe file elsewhere and then create a shortcut to it in one of these folders. Windows will only show shortcuts in the All Apps list.","title":"Highlights"},{"location":"Highlights/Readwise/Articles/How%20to%20Organize%20Computer%20Files%20on%20Your%20Home%20Computer/","text":"How to Organize Computer Files on Your Home Computer \u00b6 Metadata \u00b6 Author: [[home-storage-solutions-101.com]] Full Title: How to Organize Computer Files on Your Home Computer Category: #Type/Highlights/Article URL: https://www.home-storage-solutions-101.com/organize-computer-files.html Highlights \u00b6 For an organized computer file system I recommend that you do not keep files anywhere but within your documents folder. Work folder - If you work on documents or files for work, you should separate out these files into their own separate area instead of getting them mized up with your personal files. Financial folder: Banking documents - Many banks encourage their customers to go paperless these days. If you've signed up for paperless banking it is still a good idea to download your bank statements and other documents from the bank regularly, especially if your bank only provides digital records back for a certain period, like 6 months or a year. Before they aren't available anymore, make sure to download a copy so you can access it later, if you need it. Financial folder: Credit card statements (or other loan documents). Organize these folders to have sub-folders for each credit credit separately, organized by date ranges. Financial folder: Tax documents - These tax documents may include digital copies of the filed tax returns themselves, or back up documentation needed for your tax return filings, such as receipts or other records. You should organize these folders and sub-folders by year, and by the type of document, in a similar method as you would when organizing the folders in your tax organizer. Financial folder: Bills - If you have signed up for online bill payment you may get your bills as digital files, such as a PDF, instead of on paper. You should create a sub-folder for each type of bill for each year, so it's easy to keep them together and organized, and then to delete old bills once a couple of years has passed and they're no longer relevant. (You can get more ideas for organizing bills here. In addition, if your bills are sent via email, you may want to organize them in your email system instead of in your computer files. You can get more information about organizing email folders here.) Home inventory - I recommend everyone create a home inventory in case of theft or natural disaster, and keep a digital copy of that inventory. You can read more about how to create a home inventory here. PDFs, including ebooks - Many of us love to receive books and other information in the form of ebooks or PDFs. This frees us from accumulating too much physical book clutter, but we've still got to keep these documents organized. If you've only got a few informational PDFs or ebooks you can have a general folder to keep them in, being sure to name each PDF or ebook file yourself in a way that you know what it is, and why you were interested in it. However, if you accumulate a lot of ebooks or PDFs, such as if you love to get bundles of these products (like I do!) you should categorize the ebooks and PDFs into sub-folders of their own categories, such as cleaning ebooks, meal planning ebooks, or recipe ebooks, so you can find the type of information you want more easily.","title":"How to Organize Computer Files on Your Home Computer"},{"location":"Highlights/Readwise/Articles/How%20to%20Organize%20Computer%20Files%20on%20Your%20Home%20Computer/#how-to-organize-computer-files-on-your-home-computer","text":"","title":"How to Organize Computer Files on Your Home Computer"},{"location":"Highlights/Readwise/Articles/How%20to%20Organize%20Computer%20Files%20on%20Your%20Home%20Computer/#metadata","text":"Author: [[home-storage-solutions-101.com]] Full Title: How to Organize Computer Files on Your Home Computer Category: #Type/Highlights/Article URL: https://www.home-storage-solutions-101.com/organize-computer-files.html","title":"Metadata"},{"location":"Highlights/Readwise/Articles/How%20to%20Organize%20Computer%20Files%20on%20Your%20Home%20Computer/#highlights","text":"For an organized computer file system I recommend that you do not keep files anywhere but within your documents folder. Work folder - If you work on documents or files for work, you should separate out these files into their own separate area instead of getting them mized up with your personal files. Financial folder: Banking documents - Many banks encourage their customers to go paperless these days. If you've signed up for paperless banking it is still a good idea to download your bank statements and other documents from the bank regularly, especially if your bank only provides digital records back for a certain period, like 6 months or a year. Before they aren't available anymore, make sure to download a copy so you can access it later, if you need it. Financial folder: Credit card statements (or other loan documents). Organize these folders to have sub-folders for each credit credit separately, organized by date ranges. Financial folder: Tax documents - These tax documents may include digital copies of the filed tax returns themselves, or back up documentation needed for your tax return filings, such as receipts or other records. You should organize these folders and sub-folders by year, and by the type of document, in a similar method as you would when organizing the folders in your tax organizer. Financial folder: Bills - If you have signed up for online bill payment you may get your bills as digital files, such as a PDF, instead of on paper. You should create a sub-folder for each type of bill for each year, so it's easy to keep them together and organized, and then to delete old bills once a couple of years has passed and they're no longer relevant. (You can get more ideas for organizing bills here. In addition, if your bills are sent via email, you may want to organize them in your email system instead of in your computer files. You can get more information about organizing email folders here.) Home inventory - I recommend everyone create a home inventory in case of theft or natural disaster, and keep a digital copy of that inventory. You can read more about how to create a home inventory here. PDFs, including ebooks - Many of us love to receive books and other information in the form of ebooks or PDFs. This frees us from accumulating too much physical book clutter, but we've still got to keep these documents organized. If you've only got a few informational PDFs or ebooks you can have a general folder to keep them in, being sure to name each PDF or ebook file yourself in a way that you know what it is, and why you were interested in it. However, if you accumulate a lot of ebooks or PDFs, such as if you love to get bundles of these products (like I do!) you should categorize the ebooks and PDFs into sub-folders of their own categories, such as cleaning ebooks, meal planning ebooks, or recipe ebooks, so you can find the type of information you want more easily.","title":"Highlights"},{"location":"Highlights/Readwise/Articles/How%20to%20Organize%20Your%20Files%20An%20Introduction%20to%20Personal%20File%20Management%20-%20The%20Mac%20Observer/","text":"How to Organize Your Files: An Introduction to Personal File Management - The Mac Observer \u00b6 Metadata \u00b6 Author: [[Andrew Orr]] Full Title: How to Organize Your Files: An Introduction to Personal File Management - The Mac Observer Category: #Type/Highlights/Article URL: https://www.macobserver.com/tips/deep-dive/intro-to-pim/ Highlights \u00b6 Folder hierarchies like r/datacurator\u2019s file tree won\u2019t work. That\u2019s why my primary categories below are based on lifestyle. This gives us a more general organizational layer to work with, as well as an opportunity to use them in the physical world as well. It starts with a consistent way to name files. A file name is organized like this: [Primary Category][Secondary Category]-Qualifiers These brackets are not arbitrary; they are an important part of the system that help you precisely search for a file. Let\u2019s say that a secondary category is \u201cfood.\u201d I enter \u201cfood\u201d into the Finder search bar, but that brings up every file name that includes the word \u201cfood\u201d even if it\u2019s a file with \u201cfood\u201d only as a qualifier. But if I search for [food] then that specifically brings up files with [food] as a secondary category. The primary categories that I chose are based on lifestyle: Home, Learn, Play, Self, and Work. It\u2019s not a strict system; you can change the names or add new categories, like one called School for students. The important part is to use categories that work no matter which app you use. Here\u2019s how I define them. Primary Categories Home can contain data like recipes, cleaning tips, and financial information. Learn can contain a variety of data. I use this category as an \u201cother\u201d or \u201cmiscellaneous\u201d one. Play is about entertainment. Movies, books, games, etc. Self is kind of a subjective category. I use it for my journal and other personal things like self-improvement data. Work is obviously work-related data. Exceptions: Dates & Backups If you use dates in a file name then I highly recommend using the ISO 8601 format, which looks like this: YYYY-MM-DD. This format is naturally self-sorting as days and months repeat but years do not. Date should become the primary category, like so: [20200126][Work]-Article If you manually back up files (manually like dragging and dropping folders onto a hard drive, as opposed to automatic like iCloud Backup) then you can have [Backup] or [BU] as a primary category with the date you created the backup. A backed up file name would look like this: Secondary Categories Primary categories are strictly defined but secondary categories are not. These are fluid and it depends on the file and its contents. For books, the author name could be a secondary, as shown in the next section. Or you could switch it around and have the genre become a secondary. I even have some files that don\u2019t have a secondary category. My general rule is that once I have a minimum of three files that share the same secondary category, I create a folder for them. Organizing Files In iCloud Drive I have a folder called Root and inside are the five primary folders, and within each of those are folders based on type: Audio, Photo, Text, Video, Ware (software). Again, this isn\u2019t strict, and you can add or remove folders as you see fit. You could add file type as a secondary category, and I do this for certain files. There are certain situations in which organizing by file type doesn\u2019t make sense. Let\u2019s say you\u2019re working on a project for work or school. You\u2019ll probably be working with multiple file types. In that case, it\u2018s better to keep those files in one folder, instead of spread out by file type. Automation You\u2019ll definitely want to use Automator to rename your files in bulk in accordance with the system. Use Get Specified Finder Items and drag a folder with files into the action. Then use Get Folder Contents, and finally add the action called Rename Finder Items. In the drop down menu within that action, you\u2019ll probably be using the Add Text selection the most. Conclusion As I\u2019ve pondered this, I think what I\u2019m trying to create with my system is a fractal. I\u2019ve been fascinated by fractals for a long time. It\u2019s the idea that every file knows its place in the system, because each one contains a subset of the system in its name. This can translate into long file names like [Learn][Folder1][SubFolder3]-filename, but if something goes wrong and suddenly your files are scattered, the collective can be remade simply by looking at the individuals (to be a bit poetic). It\u2019s been a work in progress since I created it in 2018. I\u2019ve made small tweaks here and there but overall it has remained the same. I\u2019ll keep this guide updated as I make changes. And if you\u2019ve created your own personal information management system, mention it in the comments. I\u2019d love to read about it.","title":"How to Organize Your Files: An Introduction to Personal File Management - The Mac Observer"},{"location":"Highlights/Readwise/Articles/How%20to%20Organize%20Your%20Files%20An%20Introduction%20to%20Personal%20File%20Management%20-%20The%20Mac%20Observer/#how-to-organize-your-files-an-introduction-to-personal-file-management-the-mac-observer","text":"","title":"How to Organize Your Files: An Introduction to Personal File Management - The Mac Observer"},{"location":"Highlights/Readwise/Articles/How%20to%20Organize%20Your%20Files%20An%20Introduction%20to%20Personal%20File%20Management%20-%20The%20Mac%20Observer/#metadata","text":"Author: [[Andrew Orr]] Full Title: How to Organize Your Files: An Introduction to Personal File Management - The Mac Observer Category: #Type/Highlights/Article URL: https://www.macobserver.com/tips/deep-dive/intro-to-pim/","title":"Metadata"},{"location":"Highlights/Readwise/Articles/How%20to%20Organize%20Your%20Files%20An%20Introduction%20to%20Personal%20File%20Management%20-%20The%20Mac%20Observer/#highlights","text":"Folder hierarchies like r/datacurator\u2019s file tree won\u2019t work. That\u2019s why my primary categories below are based on lifestyle. This gives us a more general organizational layer to work with, as well as an opportunity to use them in the physical world as well. It starts with a consistent way to name files. A file name is organized like this: [Primary Category][Secondary Category]-Qualifiers These brackets are not arbitrary; they are an important part of the system that help you precisely search for a file. Let\u2019s say that a secondary category is \u201cfood.\u201d I enter \u201cfood\u201d into the Finder search bar, but that brings up every file name that includes the word \u201cfood\u201d even if it\u2019s a file with \u201cfood\u201d only as a qualifier. But if I search for [food] then that specifically brings up files with [food] as a secondary category. The primary categories that I chose are based on lifestyle: Home, Learn, Play, Self, and Work. It\u2019s not a strict system; you can change the names or add new categories, like one called School for students. The important part is to use categories that work no matter which app you use. Here\u2019s how I define them. Primary Categories Home can contain data like recipes, cleaning tips, and financial information. Learn can contain a variety of data. I use this category as an \u201cother\u201d or \u201cmiscellaneous\u201d one. Play is about entertainment. Movies, books, games, etc. Self is kind of a subjective category. I use it for my journal and other personal things like self-improvement data. Work is obviously work-related data. Exceptions: Dates & Backups If you use dates in a file name then I highly recommend using the ISO 8601 format, which looks like this: YYYY-MM-DD. This format is naturally self-sorting as days and months repeat but years do not. Date should become the primary category, like so: [20200126][Work]-Article If you manually back up files (manually like dragging and dropping folders onto a hard drive, as opposed to automatic like iCloud Backup) then you can have [Backup] or [BU] as a primary category with the date you created the backup. A backed up file name would look like this: Secondary Categories Primary categories are strictly defined but secondary categories are not. These are fluid and it depends on the file and its contents. For books, the author name could be a secondary, as shown in the next section. Or you could switch it around and have the genre become a secondary. I even have some files that don\u2019t have a secondary category. My general rule is that once I have a minimum of three files that share the same secondary category, I create a folder for them. Organizing Files In iCloud Drive I have a folder called Root and inside are the five primary folders, and within each of those are folders based on type: Audio, Photo, Text, Video, Ware (software). Again, this isn\u2019t strict, and you can add or remove folders as you see fit. You could add file type as a secondary category, and I do this for certain files. There are certain situations in which organizing by file type doesn\u2019t make sense. Let\u2019s say you\u2019re working on a project for work or school. You\u2019ll probably be working with multiple file types. In that case, it\u2018s better to keep those files in one folder, instead of spread out by file type. Automation You\u2019ll definitely want to use Automator to rename your files in bulk in accordance with the system. Use Get Specified Finder Items and drag a folder with files into the action. Then use Get Folder Contents, and finally add the action called Rename Finder Items. In the drop down menu within that action, you\u2019ll probably be using the Add Text selection the most. Conclusion As I\u2019ve pondered this, I think what I\u2019m trying to create with my system is a fractal. I\u2019ve been fascinated by fractals for a long time. It\u2019s the idea that every file knows its place in the system, because each one contains a subset of the system in its name. This can translate into long file names like [Learn][Folder1][SubFolder3]-filename, but if something goes wrong and suddenly your files are scattered, the collective can be remade simply by looking at the individuals (to be a bit poetic). It\u2019s been a work in progress since I created it in 2018. I\u2019ve made small tweaks here and there but overall it has remained the same. I\u2019ll keep this guide updated as I make changes. And if you\u2019ve created your own personal information management system, mention it in the comments. I\u2019d love to read about it.","title":"Highlights"},{"location":"Highlights/Readwise/Articles/How%20to%20Organize%20Your%20Files%20for%20Maximum%20Productivity/","text":"How to Organize Your Files for Maximum Productivity \u00b6 Metadata \u00b6 Author: [[Giorgos Petkakis]] Full Title: How to Organize Your Files for Maximum Productivity Category: #Type/Highlights/Article URL: https://medium.com/swlh/how-to-organize-your-files-for-maximum-productivity-afdc6430126a Highlights \u00b6 Before you can jump into long-term digital housekeeping, you need to get rid of a lot of these files and applications you are not using any longer. Format and Rebuild The first way to do this is to copy the files you want to keep on an external drive or cloud service, completely clear your hard drive, and reinstall your operating system. It\u2019s simple and straight-forward, and it\u2019s the method that I usually employ when making major changes to my files. Delete the Spare Automated Cleaning Once you are done cleaning up the files you can see, it\u2019s time to get to the ones you didn\u2019t even know were there. Your computer is filled with system log files, browser caches, and all kinds of other temporary files, most of which you have never seen before. Most of them are also completely unnecessary. Reorganization After the cleanup is finished, it is time to reorganize your files. Conceptually separate your folders into two categories: Working and Storage. I currently have only two folders in the Working category: Downloads and Desktop. I recommend that you keep this number to a minimum as well. Having nothing there except the immediately actionable tasks current means never losing a working file from my sight, and thus less time lost searching or trying to remember what I should be working on. As soon as you\u2019re done with a file you kept in your Working directories, feel free to move it to its appropriate spot in Storage, or delete it. The folders in the Storage category should resemble a well-balanced tree, with descriptive and distinct titles for both folders and files. The rule should be that any file which goes into your Storage folders should be renamed to fit your naming style.","title":"How to Organize Your Files for Maximum Productivity"},{"location":"Highlights/Readwise/Articles/How%20to%20Organize%20Your%20Files%20for%20Maximum%20Productivity/#how-to-organize-your-files-for-maximum-productivity","text":"","title":"How to Organize Your Files for Maximum Productivity"},{"location":"Highlights/Readwise/Articles/How%20to%20Organize%20Your%20Files%20for%20Maximum%20Productivity/#metadata","text":"Author: [[Giorgos Petkakis]] Full Title: How to Organize Your Files for Maximum Productivity Category: #Type/Highlights/Article URL: https://medium.com/swlh/how-to-organize-your-files-for-maximum-productivity-afdc6430126a","title":"Metadata"},{"location":"Highlights/Readwise/Articles/How%20to%20Organize%20Your%20Files%20for%20Maximum%20Productivity/#highlights","text":"Before you can jump into long-term digital housekeeping, you need to get rid of a lot of these files and applications you are not using any longer. Format and Rebuild The first way to do this is to copy the files you want to keep on an external drive or cloud service, completely clear your hard drive, and reinstall your operating system. It\u2019s simple and straight-forward, and it\u2019s the method that I usually employ when making major changes to my files. Delete the Spare Automated Cleaning Once you are done cleaning up the files you can see, it\u2019s time to get to the ones you didn\u2019t even know were there. Your computer is filled with system log files, browser caches, and all kinds of other temporary files, most of which you have never seen before. Most of them are also completely unnecessary. Reorganization After the cleanup is finished, it is time to reorganize your files. Conceptually separate your folders into two categories: Working and Storage. I currently have only two folders in the Working category: Downloads and Desktop. I recommend that you keep this number to a minimum as well. Having nothing there except the immediately actionable tasks current means never losing a working file from my sight, and thus less time lost searching or trying to remember what I should be working on. As soon as you\u2019re done with a file you kept in your Working directories, feel free to move it to its appropriate spot in Storage, or delete it. The folders in the Storage category should resemble a well-balanced tree, with descriptive and distinct titles for both folders and files. The rule should be that any file which goes into your Storage folders should be renamed to fit your naming style.","title":"Highlights"},{"location":"Highlights/Readwise/Articles/How%20to%20Organize%20Your%20Writing%20With%20Markdown%20-%20Redeeming%20Productivity/","text":"How to Organize Your Writing With Markdown - Redeeming Productivity \u00b6 Metadata \u00b6 Author: [[redeemingproductivity.com]] Full Title: How to Organize Your Writing With Markdown - Redeeming Productivity Category: #Type/Highlights/Article URL: https://www.redeemingproductivity.com/markdown/ Highlights \u00b6 Begin Your Writing in Markdown What Markdown adds to your plain-text writing is some simple syntax to indicate what different elements in your document are. For example, you can mark something as a level-one heading by using a hashtag. Level two headings begin with two hashtags and so forth. Bullet lists just need to begin with a hyphen or asterisk. To see all of the options check out this comprehensive Markdown cheatsheet. ( View Highlight ) Use a Markdown Editor to Organize Since Markdown documents are plain-text you could just store them in folders on your computer. But I much prefer to use a Markdown editor to organize my documents. ( View Highlight ) I use Ulysses for this since I like its infinite folder structure. But there are tons of other Markdown editors which also have organizational abilities. And most of these sync across your devices. So, you can jot stuff down from your phone. Drafts is a great lightweight option. iA Writer works in Windows, Mac, iOS, and Android. Bear is a beautiful option for the Apple ecosystem And Caret is another good cross-platform option. There are also lots of online Markdown editors like Dillinger. Or HackMD which allow you to work on Markdown documents collaboratively a la Google Docs. ( View Highlight ) Another benefit of organizing your writing this way is that your Markdown editor can act like a notebook, similar to how people use Evernote or Microsoft OneNote. For me, that means when I have an idea, I just open up Ulysses and start typing. And if I want to find an old written document, I know it\u2019s somewhere in Ulysses. Using a Markdown editor keeps your writing organized and efficient. So, now you\u2019re writing your master documents in Markdown and you\u2019re organizing them with a Markdown editor, but what do you do when it\u2019s time to output that writing to a specific format and apply styling? ( View Highlight )","title":"How to Organize Your Writing With Markdown - Redeeming Productivity"},{"location":"Highlights/Readwise/Articles/How%20to%20Organize%20Your%20Writing%20With%20Markdown%20-%20Redeeming%20Productivity/#how-to-organize-your-writing-with-markdown-redeeming-productivity","text":"","title":"How to Organize Your Writing With Markdown - Redeeming Productivity"},{"location":"Highlights/Readwise/Articles/How%20to%20Organize%20Your%20Writing%20With%20Markdown%20-%20Redeeming%20Productivity/#metadata","text":"Author: [[redeemingproductivity.com]] Full Title: How to Organize Your Writing With Markdown - Redeeming Productivity Category: #Type/Highlights/Article URL: https://www.redeemingproductivity.com/markdown/","title":"Metadata"},{"location":"Highlights/Readwise/Articles/How%20to%20Organize%20Your%20Writing%20With%20Markdown%20-%20Redeeming%20Productivity/#highlights","text":"Begin Your Writing in Markdown What Markdown adds to your plain-text writing is some simple syntax to indicate what different elements in your document are. For example, you can mark something as a level-one heading by using a hashtag. Level two headings begin with two hashtags and so forth. Bullet lists just need to begin with a hyphen or asterisk. To see all of the options check out this comprehensive Markdown cheatsheet. ( View Highlight ) Use a Markdown Editor to Organize Since Markdown documents are plain-text you could just store them in folders on your computer. But I much prefer to use a Markdown editor to organize my documents. ( View Highlight ) I use Ulysses for this since I like its infinite folder structure. But there are tons of other Markdown editors which also have organizational abilities. And most of these sync across your devices. So, you can jot stuff down from your phone. Drafts is a great lightweight option. iA Writer works in Windows, Mac, iOS, and Android. Bear is a beautiful option for the Apple ecosystem And Caret is another good cross-platform option. There are also lots of online Markdown editors like Dillinger. Or HackMD which allow you to work on Markdown documents collaboratively a la Google Docs. ( View Highlight ) Another benefit of organizing your writing this way is that your Markdown editor can act like a notebook, similar to how people use Evernote or Microsoft OneNote. For me, that means when I have an idea, I just open up Ulysses and start typing. And if I want to find an old written document, I know it\u2019s somewhere in Ulysses. Using a Markdown editor keeps your writing organized and efficient. So, now you\u2019re writing your master documents in Markdown and you\u2019re organizing them with a Markdown editor, but what do you do when it\u2019s time to output that writing to a specific format and apply styling? ( View Highlight )","title":"Highlights"},{"location":"Highlights/Readwise/Articles/How%20to%20Partition%20a%20Hard%20Drive%20in%202020/","text":"How to Partition a Hard Drive in 2020 \u00b6 Metadata \u00b6 Author: Full Title: How to Partition a Hard Drive in 2020 Category: #Type/Highlights/Article URL: https://www.cloudwards.net/how-to-partition-a-hard-drive/ Highlights \u00b6 Partitioning is a solid way to organize your data, which makes finding your files, projects and programs more simple. Separate partitions also make your data easier to backup, saving you from having to sift through multiple folders and directories. You should still use online backup, though, because multiple partitions will not protect you from hard drive failure. Partitioning also lets you use multiple operating systems on one hard drive. Having multiple partitions is mandatory for that, as each OS requires its own drive. You\u2019ll also want additional partitions for files and data relative to each OS, as intermingling them will create problems. It improves performance, too.","title":"How to Partition a Hard Drive in 2020"},{"location":"Highlights/Readwise/Articles/How%20to%20Partition%20a%20Hard%20Drive%20in%202020/#how-to-partition-a-hard-drive-in-2020","text":"","title":"How to Partition a Hard Drive in 2020"},{"location":"Highlights/Readwise/Articles/How%20to%20Partition%20a%20Hard%20Drive%20in%202020/#metadata","text":"Author: Full Title: How to Partition a Hard Drive in 2020 Category: #Type/Highlights/Article URL: https://www.cloudwards.net/how-to-partition-a-hard-drive/","title":"Metadata"},{"location":"Highlights/Readwise/Articles/How%20to%20Partition%20a%20Hard%20Drive%20in%202020/#highlights","text":"Partitioning is a solid way to organize your data, which makes finding your files, projects and programs more simple. Separate partitions also make your data easier to backup, saving you from having to sift through multiple folders and directories. You should still use online backup, though, because multiple partitions will not protect you from hard drive failure. Partitioning also lets you use multiple operating systems on one hard drive. Having multiple partitions is mandatory for that, as each OS requires its own drive. You\u2019ll also want additional partitions for files and data relative to each OS, as intermingling them will create problems. It improves performance, too.","title":"Highlights"},{"location":"Highlights/Readwise/Articles/How%20to%20Properly%20Organize%20Your%20Hard%20%28Boot%29%20Drive/","text":"How to Properly Organize Your Hard (Boot) Drive \u00b6 Metadata \u00b6 Author: Full Title: How to Properly Organize Your Hard (Boot) Drive Category: #Type/Highlights/Article URL: https://bestlaptopsworld.com/hdd-organization-101/ Highlights \u00b6 A boot drive, sometimes also called a boot device, is hardware required to start or boot your computer. It tells the computer to use a specific operating system to start and run the machine. Usually, boot drives are internal to the computer, like an internal hard drive. Sometimes, however, an external drive can be used to boot up a system. Common external boot sources include: \u200bExternal hard drive. \u200bOptical drive (CD-ROM or DVD). \u200bUSB device/jump drive. Network adapter. Boot chip (common in phones). Your hard drive is essentially a series of super thin disks stacked one on top of each other. When your system runs programs and retrieves data for you, it has to move back and forth across all those disks to perform its required tasks. When you partition the hard drive, your computer only has to look at chunks of the drive at any one time. The drive heads aren\u2019t moving around constantly trying to locate bits of information because that data is neatly stored in smaller compartments. This efficiency translates to fewer micro delays, which in turn adds up to faster overall performance. Saving this time can really make a difference when it comes to gaming or using graphics-heavy programs. Do you ever have trouble remembering where you stored things on your computer? Partitioning your boot drive can help with that because it lets you sort your storage by categories. You may just want one partition for your operating system and programs and a second for your data. However, you may desire to further compartmentalize your drive sorting by: \u200bDocuments. \u200bPhotos. \u200bVideos and films. Podcasts. Music. Games. Backup data. \u200b\u200b\u200b\u200b\u200b\u200b\u200bThe bigger your hard drive (such as over 1TB), the more you want to sort your files by type in different drive partitions. Likewise, if you store a lot of graphics-heavy material, such as if you\u2019re a professional photographer, partitions can be your friend. Separation of Business and Personal Functions If you use one laptop for both business and personal functions, you don\u2019t want to mix data and programs between the two. Organizing your boot drive into sections lets you keep them separate. This makes both sides more efficient and reduces the risk for you. If you keep data for your employer or clients on your machine, you don\u2019t want to chance that a personal program could damage them. Conversely, you wouldn\u2019t want a corrupt work file to ruin your personal stuff. First, you need to make sure you have enough space to bother partitioning your drive. If your machine is older, you may need to upgrade or replace the hard drive with a larger one. If you are already reaching the limits of your boot drive but can\u2019t make changes, think about alternatives. Could you delete old files and programs you no longer need? Could you archive old data to external or Cloud storage to make more room? Don\u2019t Wait to Get Organized If you have a new computer system without much on it yet, now is the ideal time to organize your drive. It\u2019s easier to create partitions and put new files there as you acquire them than to move existing files. Do you have an overloaded email inbox with thousands of messages you keep meaning to deal with? Don\u2019t let your new hard drive get like that. Plan Ahead Before you do anything else, think about how you intend to use your computer. Again, it\u2019s easier to put your files where you want them for the first time than to relocate them later. Give thought to how you want to partition your boot drive, such as: \u200bIs there data you need to encrypt? \u200bDo you need to separate data for different users? \u200bIs your computer for both work and personal use? Do you do a lot of gaming? Is your storage heavy on graphics and video files? Do you want to run multiple operating systems? How many partitions do you need? Where could you use folders instead of partitions? \u200b\u200b\u200b\u200b\u200b\u200bRemember that not all files take up the same amount of space. Videos, for example, use more hard drive space than emails or word processing documents. You don\u2019t necessarily need to divide your hard drive into equal segments. Make Notes As you divide up your boot drive, especially if you\u2019re moving around a lot of existing files, take copious notes. You might think you\u2019ll remember where everything is, but you might not. Leave yourself a list of what went where, at least until you use the new method for a while. Tags: [[favorite]]","title":"How to Properly Organize Your Hard (Boot) Drive"},{"location":"Highlights/Readwise/Articles/How%20to%20Properly%20Organize%20Your%20Hard%20%28Boot%29%20Drive/#how-to-properly-organize-your-hard-boot-drive","text":"","title":"How to Properly Organize Your Hard (Boot) Drive"},{"location":"Highlights/Readwise/Articles/How%20to%20Properly%20Organize%20Your%20Hard%20%28Boot%29%20Drive/#metadata","text":"Author: Full Title: How to Properly Organize Your Hard (Boot) Drive Category: #Type/Highlights/Article URL: https://bestlaptopsworld.com/hdd-organization-101/","title":"Metadata"},{"location":"Highlights/Readwise/Articles/How%20to%20Properly%20Organize%20Your%20Hard%20%28Boot%29%20Drive/#highlights","text":"A boot drive, sometimes also called a boot device, is hardware required to start or boot your computer. It tells the computer to use a specific operating system to start and run the machine. Usually, boot drives are internal to the computer, like an internal hard drive. Sometimes, however, an external drive can be used to boot up a system. Common external boot sources include: \u200bExternal hard drive. \u200bOptical drive (CD-ROM or DVD). \u200bUSB device/jump drive. Network adapter. Boot chip (common in phones). Your hard drive is essentially a series of super thin disks stacked one on top of each other. When your system runs programs and retrieves data for you, it has to move back and forth across all those disks to perform its required tasks. When you partition the hard drive, your computer only has to look at chunks of the drive at any one time. The drive heads aren\u2019t moving around constantly trying to locate bits of information because that data is neatly stored in smaller compartments. This efficiency translates to fewer micro delays, which in turn adds up to faster overall performance. Saving this time can really make a difference when it comes to gaming or using graphics-heavy programs. Do you ever have trouble remembering where you stored things on your computer? Partitioning your boot drive can help with that because it lets you sort your storage by categories. You may just want one partition for your operating system and programs and a second for your data. However, you may desire to further compartmentalize your drive sorting by: \u200bDocuments. \u200bPhotos. \u200bVideos and films. Podcasts. Music. Games. Backup data. \u200b\u200b\u200b\u200b\u200b\u200b\u200bThe bigger your hard drive (such as over 1TB), the more you want to sort your files by type in different drive partitions. Likewise, if you store a lot of graphics-heavy material, such as if you\u2019re a professional photographer, partitions can be your friend. Separation of Business and Personal Functions If you use one laptop for both business and personal functions, you don\u2019t want to mix data and programs between the two. Organizing your boot drive into sections lets you keep them separate. This makes both sides more efficient and reduces the risk for you. If you keep data for your employer or clients on your machine, you don\u2019t want to chance that a personal program could damage them. Conversely, you wouldn\u2019t want a corrupt work file to ruin your personal stuff. First, you need to make sure you have enough space to bother partitioning your drive. If your machine is older, you may need to upgrade or replace the hard drive with a larger one. If you are already reaching the limits of your boot drive but can\u2019t make changes, think about alternatives. Could you delete old files and programs you no longer need? Could you archive old data to external or Cloud storage to make more room? Don\u2019t Wait to Get Organized If you have a new computer system without much on it yet, now is the ideal time to organize your drive. It\u2019s easier to create partitions and put new files there as you acquire them than to move existing files. Do you have an overloaded email inbox with thousands of messages you keep meaning to deal with? Don\u2019t let your new hard drive get like that. Plan Ahead Before you do anything else, think about how you intend to use your computer. Again, it\u2019s easier to put your files where you want them for the first time than to relocate them later. Give thought to how you want to partition your boot drive, such as: \u200bIs there data you need to encrypt? \u200bDo you need to separate data for different users? \u200bIs your computer for both work and personal use? Do you do a lot of gaming? Is your storage heavy on graphics and video files? Do you want to run multiple operating systems? How many partitions do you need? Where could you use folders instead of partitions? \u200b\u200b\u200b\u200b\u200b\u200bRemember that not all files take up the same amount of space. Videos, for example, use more hard drive space than emails or word processing documents. You don\u2019t necessarily need to divide your hard drive into equal segments. Make Notes As you divide up your boot drive, especially if you\u2019re moving around a lot of existing files, take copious notes. You might think you\u2019ll remember where everything is, but you might not. Leave yourself a list of what went where, at least until you use the new method for a while. Tags: [[favorite]]","title":"Highlights"},{"location":"Highlights/Readwise/Articles/How%20to%20Run%20R%20Scripts%20From%20the%20Windows%20Command%20Line%20%28CMD%29%20-%20Data%20Cornering/","text":"How to Run R Scripts From the Windows Command Line (CMD) - Data Cornering \u00b6 Metadata \u00b6 Author: Full Title: How to Run R Scripts From the Windows Command Line (CMD) - Data Cornering Category: #Type/Highlights/Article URL: http://datacornering.com/how-to-run-r-scripts-from-the-windows-command-line-cmd/ Highlights \u00b6 \"C:\\Program Files\\R\\R-3.4.3\\bin\\Rscript.exe\" C:\\Users\\myusername\\Documents\\R\\Send_Outlook_Email.R C:\\Program Files\\R\\R-3.4.3\\bin\\R.exe\" CMD BATCH C:\\Users\\myusername\\Documents\\R\\Send_Outlook_Email.R Find the path to R.exe or Rscript.exe on your computer. If you try to run R.exe from the command line, you enter an R terminal In Rscript.exe case you can see additional usage options. Find the path to R file. Open Notepad and combine paths together (with quotation marks if needed and additional commands \u201cCMD BATCH\u201d if you choose to go with R.exe). 1 \"C:\\Program Files\\R\\R-3.4.3\\bin\\R.exe\" CMD BATCH C:\\Users\\myusername\\Documents\\R\\Send_Outlook_Email.R Save as file with extension .bat (for example send_email.bat). Run that batch file to execute R script.","title":"How to Run R Scripts From the Windows Command Line (CMD) - Data Cornering"},{"location":"Highlights/Readwise/Articles/How%20to%20Run%20R%20Scripts%20From%20the%20Windows%20Command%20Line%20%28CMD%29%20-%20Data%20Cornering/#how-to-run-r-scripts-from-the-windows-command-line-cmd-data-cornering","text":"","title":"How to Run R Scripts From the Windows Command Line (CMD) - Data Cornering"},{"location":"Highlights/Readwise/Articles/How%20to%20Run%20R%20Scripts%20From%20the%20Windows%20Command%20Line%20%28CMD%29%20-%20Data%20Cornering/#metadata","text":"Author: Full Title: How to Run R Scripts From the Windows Command Line (CMD) - Data Cornering Category: #Type/Highlights/Article URL: http://datacornering.com/how-to-run-r-scripts-from-the-windows-command-line-cmd/","title":"Metadata"},{"location":"Highlights/Readwise/Articles/How%20to%20Run%20R%20Scripts%20From%20the%20Windows%20Command%20Line%20%28CMD%29%20-%20Data%20Cornering/#highlights","text":"\"C:\\Program Files\\R\\R-3.4.3\\bin\\Rscript.exe\" C:\\Users\\myusername\\Documents\\R\\Send_Outlook_Email.R C:\\Program Files\\R\\R-3.4.3\\bin\\R.exe\" CMD BATCH C:\\Users\\myusername\\Documents\\R\\Send_Outlook_Email.R Find the path to R.exe or Rscript.exe on your computer. If you try to run R.exe from the command line, you enter an R terminal In Rscript.exe case you can see additional usage options. Find the path to R file. Open Notepad and combine paths together (with quotation marks if needed and additional commands \u201cCMD BATCH\u201d if you choose to go with R.exe). 1 \"C:\\Program Files\\R\\R-3.4.3\\bin\\R.exe\" CMD BATCH C:\\Users\\myusername\\Documents\\R\\Send_Outlook_Email.R Save as file with extension .bat (for example send_email.bat). Run that batch file to execute R script.","title":"Highlights"},{"location":"Highlights/Readwise/Articles/How%20to%20Save%20Email%20Into%20Evernote/","text":"How to Save Email Into Evernote \u00b6 Metadata \u00b6 Author: Full Title: How to Save Email Into Evernote Category: #articles URL: http://help.evernote.com/hc/en-us/articles/209005347 Highlights \u00b6 Windows Click Tools > Account Info from the menu bar. Your email address is next to 'Email notes to'. !Reminder: Use the exclamation point (!) to set a reminder. To add an alarm to the reminder, add the word tomorrow, or a date with numeric year, month, day separated by slashes. For example: !, !tomorrow, !2013/06/24 @Notebook: Notes will go into your default notebook unless you specify one using the at (@) symbol and notebook name, such as @travel. You do not need quotes if you have a space in the notebook title. For example, you would write @International Travel or @My Notebook. #Tag: Add tags using the pound or hashtag (#) symbol, such as #manchester #england Standard format: Email Subject: [Title of note] ![optional date for reminder] @[notebook] #[tag] Append an email to an existing note To add some text to an existing note, put a \" +\" at the end of your subject line and we'll place the body of the email into the most recent note with that title. Tags: evernote [[favorite]] Automatically file email into notebooks with related notes By default, emails sent into Evernote go into your default notebook. If you frequently save emails into Evernote and organize them with similar notebooks and tags, you can enable auto-filing. When you forward an email into Evernote, auto-filing will look for similar notes inside your account and apply the same notebook and tags. Enable auto-filing from your personal settings in Evernote Web. Automatic email filtering or forwarding You can also set up your email client's automatic email filters to automatically forward every email from a specific sender or with a particular subject. For example, you can configure your email application to forward any emails sent from \"Google Analytics' with \"weekly report\" in the subject line to your company's \"Reports\" notebook. Auto-filing You can let Evernote automatically organize your emailed in notes using our auto-filing feature. Once you enable auto-filing in your account settings, we'll check to see where you've placed similar content and how you've tagged it in the past. It's built using the same intelligent algorithms that power the smart filing feature in our Evernote Web Clipper. If you have auto-filing enabled, but want to put your notes into a specific location, simply specify a notebook and/or tag in the email subject. Using the notebook or tag names will override auto-filing for that note.","title":"How to Save Email Into Evernote"},{"location":"Highlights/Readwise/Articles/How%20to%20Save%20Email%20Into%20Evernote/#how-to-save-email-into-evernote","text":"","title":"How to Save Email Into Evernote"},{"location":"Highlights/Readwise/Articles/How%20to%20Save%20Email%20Into%20Evernote/#metadata","text":"Author: Full Title: How to Save Email Into Evernote Category: #articles URL: http://help.evernote.com/hc/en-us/articles/209005347","title":"Metadata"},{"location":"Highlights/Readwise/Articles/How%20to%20Save%20Email%20Into%20Evernote/#highlights","text":"Windows Click Tools > Account Info from the menu bar. Your email address is next to 'Email notes to'. !Reminder: Use the exclamation point (!) to set a reminder. To add an alarm to the reminder, add the word tomorrow, or a date with numeric year, month, day separated by slashes. For example: !, !tomorrow, !2013/06/24 @Notebook: Notes will go into your default notebook unless you specify one using the at (@) symbol and notebook name, such as @travel. You do not need quotes if you have a space in the notebook title. For example, you would write @International Travel or @My Notebook. #Tag: Add tags using the pound or hashtag (#) symbol, such as #manchester #england Standard format: Email Subject: [Title of note] ![optional date for reminder] @[notebook] #[tag] Append an email to an existing note To add some text to an existing note, put a \" +\" at the end of your subject line and we'll place the body of the email into the most recent note with that title. Tags: evernote [[favorite]] Automatically file email into notebooks with related notes By default, emails sent into Evernote go into your default notebook. If you frequently save emails into Evernote and organize them with similar notebooks and tags, you can enable auto-filing. When you forward an email into Evernote, auto-filing will look for similar notes inside your account and apply the same notebook and tags. Enable auto-filing from your personal settings in Evernote Web. Automatic email filtering or forwarding You can also set up your email client's automatic email filters to automatically forward every email from a specific sender or with a particular subject. For example, you can configure your email application to forward any emails sent from \"Google Analytics' with \"weekly report\" in the subject line to your company's \"Reports\" notebook. Auto-filing You can let Evernote automatically organize your emailed in notes using our auto-filing feature. Once you enable auto-filing in your account settings, we'll check to see where you've placed similar content and how you've tagged it in the past. It's built using the same intelligent algorithms that power the smart filing feature in our Evernote Web Clipper. If you have auto-filing enabled, but want to put your notes into a specific location, simply specify a notebook and/or tag in the email subject. Using the notebook or tag names will override auto-filing for that note.","title":"Highlights"},{"location":"Highlights/Readwise/Articles/How%20to%20Structure%20Your%20Data%20Science%20Workflow/","text":"How to Structure Your Data Science Workflow \u00b6 Metadata \u00b6 Author: [[Mikhail Klassen]] Full Title: How to Structure Your Data Science Workflow Category: #Type/Highlights/Article URL: https://medium.com/p/b06748b7761a Highlights \u00b6 The \u201cscience\u201d part of data science is the classic work of posing a question, generating hypotheses, examining the evidence, and formulating a model that explains the evidence. professional data scientists are drawn from the disciplines of mathematics, statistics, computer science, and physics","title":"How to Structure Your Data Science Workflow"},{"location":"Highlights/Readwise/Articles/How%20to%20Structure%20Your%20Data%20Science%20Workflow/#how-to-structure-your-data-science-workflow","text":"","title":"How to Structure Your Data Science Workflow"},{"location":"Highlights/Readwise/Articles/How%20to%20Structure%20Your%20Data%20Science%20Workflow/#metadata","text":"Author: [[Mikhail Klassen]] Full Title: How to Structure Your Data Science Workflow Category: #Type/Highlights/Article URL: https://medium.com/p/b06748b7761a","title":"Metadata"},{"location":"Highlights/Readwise/Articles/How%20to%20Structure%20Your%20Data%20Science%20Workflow/#highlights","text":"The \u201cscience\u201d part of data science is the classic work of posing a question, generating hypotheses, examining the evidence, and formulating a model that explains the evidence. professional data scientists are drawn from the disciplines of mathematics, statistics, computer science, and physics","title":"Highlights"},{"location":"Highlights/Readwise/Articles/How%20to%20Use%20Evernote%20for%20Your%20Creative%20Workflow%20-%20Forte%20Labs/","text":"How to Use Evernote for Your Creative Workflow - Forte Labs \u00b6 Metadata \u00b6 Author: [[fortelabs.co]] Full Title: How to Use Evernote for Your Creative Workflow - Forte Labs Category: #Type/Highlights/Article URL: https://fortelabs.co/blog/how-to-use-evernote-for-your-creative-workflow/ Highlights \u00b6 What the brain does best is thinking. Evernote is most valuable not as a remembering tool, but as a thinking tool. creativity is connecting things, especially things that don\u2019t seem to be connected. Essentially, it\u2019s easier for us to interact with physical objects in the environment than with abstract ideas in our heads. By externalizing your ideas in a variety of formats\u200a\u2014\u200atext, sketches, photos, videos, documents, diagrams, webclips, hyperlinks\u200a\u2014\u200ayou create a system of distributed cognition across \u201cartifacts\u201d that can be moved, edited, rearranged, and combined. I think one of the least appreciated methods for connecting ideas and producing breakthrough work is the \u201cslow burn.\u201d Richard Feynman put it best: \u201cYou have to keep a dozen of your favorite problems constantly present in your mind, although by and large they will lay in a dormant state. Every time you hear or read a new trick or a new result, test it against each of your twelve problems to see whether it helps. Every once in a while there will be a hit, and people will say, \u201cHow did he do it? He must be a genius!\u201d First, don\u2019t think quantity, think quality. you should pick and choose what you capture very carefully. Think of Evernote as a Cliff\u2019s Notes to everything valuable that you\u2019ve learned in the past\u200a\u2014\u200ait should include only the key points, not every single detail. Like a cheat sheet for life, but you get somewhere between 60 MB and 10 GB per month, instead of just a 3 x 5\u2033 notecard. Tags: [[favorite]] The best rule of thumb is not to set out explicit decision criteria for what you keep. Just thinking about that is exhausting. Instead, use resonance as your criteria. As in, \u201cthat resonates with me.\u201d We know from neuroscience research that \u201cemotions organize\u200a\u2014\u200arather than disrupt\u200a\u2014\u200arational thinking.\u201d Often, when something \u201cresonates\u201d with us, it is our intuitive/right brain/System 1 mind telling us something is valuable before our analytical/left brain/System 2 mind even knows what\u2019s going on. It\u2019s no coincidence that the former is the same part that drives creativity, spontaneity, and self-expression. This note has now become a potent information weapon, its ideas and facts ready to be used in a wide variety of future contexts, at a moment\u2019s notice. Note Design What we\u2019re talking about here is putting a lot more thought into the design and structure of each individual note. It is about making individual notes the most prominent actors, like discrete atoms that can be assembled into any form. Design is always about balancing priorities\u200a\u2014\u200ain this case: comprehensiveness and compression. Tags: [[favorite]] Compression values condensing big ideas into small packages. We gain tremendous value in condensing the Bible (and even whole religions) into the rule of thumb \u201cDo unto others as you would have them do unto you.\u201d Consuming highly compressed ideas is inherently rewarding, because we can feel that each word is rich with substance. It also helps us conserve our precious attention by eliminating the \u201cfluff\u201d (see Derek Sivers\u2019 post on \u201ccompressing knowledge into directives\u201d for more examples). Comprehensiveness values knowing all the facts. It is the voice in your head that says \u201cProve it.\u201d It wants more data, and examples, and cited sources. It is the fear that you\u2019ll remember the main point, but forget why it matters. It helps us not let anything fall through the cracks, but also drives us toward packrat insanity. Tags: [[favorite]] The way to balance these competing priorities is to: Progressively summarize the most important points of a source in small stages (compression), and\u2026 Preserve each of these stages in layers that can be peeled back on demand (comprehensiveness). Tags: [[favorite]] spend more time/attention on things that interest and resonate with you. As David Allen says, Simple, clear purposes and principles give rise to complex and intelligent behavior. Complex rules and regulations give rise to simple and stupid behavior.","title":"How to Use Evernote for Your Creative Workflow - Forte Labs"},{"location":"Highlights/Readwise/Articles/How%20to%20Use%20Evernote%20for%20Your%20Creative%20Workflow%20-%20Forte%20Labs/#how-to-use-evernote-for-your-creative-workflow-forte-labs","text":"","title":"How to Use Evernote for Your Creative Workflow - Forte Labs"},{"location":"Highlights/Readwise/Articles/How%20to%20Use%20Evernote%20for%20Your%20Creative%20Workflow%20-%20Forte%20Labs/#metadata","text":"Author: [[fortelabs.co]] Full Title: How to Use Evernote for Your Creative Workflow - Forte Labs Category: #Type/Highlights/Article URL: https://fortelabs.co/blog/how-to-use-evernote-for-your-creative-workflow/","title":"Metadata"},{"location":"Highlights/Readwise/Articles/How%20to%20Use%20Evernote%20for%20Your%20Creative%20Workflow%20-%20Forte%20Labs/#highlights","text":"What the brain does best is thinking. Evernote is most valuable not as a remembering tool, but as a thinking tool. creativity is connecting things, especially things that don\u2019t seem to be connected. Essentially, it\u2019s easier for us to interact with physical objects in the environment than with abstract ideas in our heads. By externalizing your ideas in a variety of formats\u200a\u2014\u200atext, sketches, photos, videos, documents, diagrams, webclips, hyperlinks\u200a\u2014\u200ayou create a system of distributed cognition across \u201cartifacts\u201d that can be moved, edited, rearranged, and combined. I think one of the least appreciated methods for connecting ideas and producing breakthrough work is the \u201cslow burn.\u201d Richard Feynman put it best: \u201cYou have to keep a dozen of your favorite problems constantly present in your mind, although by and large they will lay in a dormant state. Every time you hear or read a new trick or a new result, test it against each of your twelve problems to see whether it helps. Every once in a while there will be a hit, and people will say, \u201cHow did he do it? He must be a genius!\u201d First, don\u2019t think quantity, think quality. you should pick and choose what you capture very carefully. Think of Evernote as a Cliff\u2019s Notes to everything valuable that you\u2019ve learned in the past\u200a\u2014\u200ait should include only the key points, not every single detail. Like a cheat sheet for life, but you get somewhere between 60 MB and 10 GB per month, instead of just a 3 x 5\u2033 notecard. Tags: [[favorite]] The best rule of thumb is not to set out explicit decision criteria for what you keep. Just thinking about that is exhausting. Instead, use resonance as your criteria. As in, \u201cthat resonates with me.\u201d We know from neuroscience research that \u201cemotions organize\u200a\u2014\u200arather than disrupt\u200a\u2014\u200arational thinking.\u201d Often, when something \u201cresonates\u201d with us, it is our intuitive/right brain/System 1 mind telling us something is valuable before our analytical/left brain/System 2 mind even knows what\u2019s going on. It\u2019s no coincidence that the former is the same part that drives creativity, spontaneity, and self-expression. This note has now become a potent information weapon, its ideas and facts ready to be used in a wide variety of future contexts, at a moment\u2019s notice. Note Design What we\u2019re talking about here is putting a lot more thought into the design and structure of each individual note. It is about making individual notes the most prominent actors, like discrete atoms that can be assembled into any form. Design is always about balancing priorities\u200a\u2014\u200ain this case: comprehensiveness and compression. Tags: [[favorite]] Compression values condensing big ideas into small packages. We gain tremendous value in condensing the Bible (and even whole religions) into the rule of thumb \u201cDo unto others as you would have them do unto you.\u201d Consuming highly compressed ideas is inherently rewarding, because we can feel that each word is rich with substance. It also helps us conserve our precious attention by eliminating the \u201cfluff\u201d (see Derek Sivers\u2019 post on \u201ccompressing knowledge into directives\u201d for more examples). Comprehensiveness values knowing all the facts. It is the voice in your head that says \u201cProve it.\u201d It wants more data, and examples, and cited sources. It is the fear that you\u2019ll remember the main point, but forget why it matters. It helps us not let anything fall through the cracks, but also drives us toward packrat insanity. Tags: [[favorite]] The way to balance these competing priorities is to: Progressively summarize the most important points of a source in small stages (compression), and\u2026 Preserve each of these stages in layers that can be peeled back on demand (comprehensiveness). Tags: [[favorite]] spend more time/attention on things that interest and resonate with you. As David Allen says, Simple, clear purposes and principles give rise to complex and intelligent behavior. Complex rules and regulations give rise to simple and stupid behavior.","title":"Highlights"},{"location":"Highlights/Readwise/Articles/How%20to%20Use%20Evernote%27s%20Advanced%20Search%20Syntax/","text":"How to Use Evernote's Advanced Search Syntax \u00b6 Metadata \u00b6 Author: Full Title: How to Use Evernote's Advanced Search Syntax Category: #Type/Highlights/Article URL: http://help.evernote.com/hc/en-us/articles/208313828 Highlights \u00b6 Multiple words return only results containing all the words. For example, world new brave returns results with all 3 words anywhere in it. Quotation marks return results with an exact match. For example, \"brave new world\" returns only results with those 3 words in that exact sequence. An asterisk at the end of a word returns results with a minimum of those letters. For example, brav* returns results containing brave, bravo, bravado, etc. intitle: any: Searches for notes that match any of the search terms listed. Without this operator, Evernote search will return only those notes that match all of the specified search terms. any: pizza beer will return all notes containing either \"pizza\" or \"beer\" (removing this operator would return only notes containing \"pizza\" and \"beer\"). Tags: evernote tag: Searches for notes tagged with the specified tag. tag:medical will return notes that have the tag \"medical\". Note: Use tag:* to return all notes with tags. -tag: Searches for notes not tagged with the specified tag. -tag:medical will return notes that do not have the tag \"medical\". Note: Use -tag:* to return all notes without tags. created: Searches for notes created on or after the date specified. Note that the date specified must be formatted like this: YYYYMMDD (where YYYY is the 4-digit year, MM is the 2-digit month, and DD is the 2-digit day), or as a date relative to the current date (e.g., day-1 to represent yesterday, week-2 to represent two weeks ago, etc.) created:day-2 will return notes that were created in the last two days. created:20151218 will return notes created on or after December 18, 2015. updated: Searches for notes updated on or after the date specified. If a note hasn't been updated since the date it was created, the 'updated' date will be the same as the 'created' date. updated:day-2 will return notes that have been updated in the last two days. resource: Searches for notes that contain specific types of media (audio, images, etc.). resource:application/pdf will return all notes that contain a PDF file. resource:image/jpeg will return all notes containing an embedded JPEG image. resource:audio/* will return all notes that contain some type of audio file. source: Searches for notes by the application or other source used to create them (e.g., 'mail.smtp' for notes added via email, 'web.clip' for notes added using Web Clipper, etc.). source:mobile.* will return all notes created on a mobile application of some type. source:web.clip will return all notes added using Web Clipper. Keywords: filter search advanced search how to search syntax","title":"How to Use Evernote's Advanced Search Syntax"},{"location":"Highlights/Readwise/Articles/How%20to%20Use%20Evernote%27s%20Advanced%20Search%20Syntax/#how-to-use-evernotes-advanced-search-syntax","text":"","title":"How to Use Evernote's Advanced Search Syntax"},{"location":"Highlights/Readwise/Articles/How%20to%20Use%20Evernote%27s%20Advanced%20Search%20Syntax/#metadata","text":"Author: Full Title: How to Use Evernote's Advanced Search Syntax Category: #Type/Highlights/Article URL: http://help.evernote.com/hc/en-us/articles/208313828","title":"Metadata"},{"location":"Highlights/Readwise/Articles/How%20to%20Use%20Evernote%27s%20Advanced%20Search%20Syntax/#highlights","text":"Multiple words return only results containing all the words. For example, world new brave returns results with all 3 words anywhere in it. Quotation marks return results with an exact match. For example, \"brave new world\" returns only results with those 3 words in that exact sequence. An asterisk at the end of a word returns results with a minimum of those letters. For example, brav* returns results containing brave, bravo, bravado, etc. intitle: any: Searches for notes that match any of the search terms listed. Without this operator, Evernote search will return only those notes that match all of the specified search terms. any: pizza beer will return all notes containing either \"pizza\" or \"beer\" (removing this operator would return only notes containing \"pizza\" and \"beer\"). Tags: evernote tag: Searches for notes tagged with the specified tag. tag:medical will return notes that have the tag \"medical\". Note: Use tag:* to return all notes with tags. -tag: Searches for notes not tagged with the specified tag. -tag:medical will return notes that do not have the tag \"medical\". Note: Use -tag:* to return all notes without tags. created: Searches for notes created on or after the date specified. Note that the date specified must be formatted like this: YYYYMMDD (where YYYY is the 4-digit year, MM is the 2-digit month, and DD is the 2-digit day), or as a date relative to the current date (e.g., day-1 to represent yesterday, week-2 to represent two weeks ago, etc.) created:day-2 will return notes that were created in the last two days. created:20151218 will return notes created on or after December 18, 2015. updated: Searches for notes updated on or after the date specified. If a note hasn't been updated since the date it was created, the 'updated' date will be the same as the 'created' date. updated:day-2 will return notes that have been updated in the last two days. resource: Searches for notes that contain specific types of media (audio, images, etc.). resource:application/pdf will return all notes that contain a PDF file. resource:image/jpeg will return all notes containing an embedded JPEG image. resource:audio/* will return all notes that contain some type of audio file. source: Searches for notes by the application or other source used to create them (e.g., 'mail.smtp' for notes added via email, 'web.clip' for notes added using Web Clipper, etc.). source:mobile.* will return all notes created on a mobile application of some type. source:web.clip will return all notes added using Web Clipper. Keywords: filter search advanced search how to search syntax","title":"Highlights"},{"location":"Highlights/Readwise/Articles/How%20to%20Use%20Todoist%20Tutorial/","text":"How to Use Todoist Tutorial \u00b6 Metadata \u00b6 Author: [[developgoodhabits.com]] Full Title: How to Use Todoist Tutorial Category: #Type/Highlights/Article URL: https://www.developgoodhabits.com/todoist-tutorial/ Highlights \u00b6 Last Updated on February 25, 2020 (Side note: One quick productivity hack is to use a filtered news service. A great tool to do this is to join over 1 million others and start your day with the latest news from Wall St. to Silicon Valley. This newsletter is a 5-minute read that's informative, witty and FREE!) The main reason you should consider this app is it\u2019s the perfect place to practice the \u201cmind like water\u201d concept that David Allen discusses in his book, Getting Things Done. To quote Allen: In karate, there is an image that\u2019s used to define the position of perfect readiness: \u201cmind like water.\u201d Imagine throwing a pebble into a still pond. How does the water respond? The answer is, totally appropriately to the force and mass of the input; then it returns to calm. It doesn\u2019t overreact or underreact. Tags: [[favorite]] The power in a karate punch comes from speed, not muscle; it comes from a focused \u201cpop\u201d at the end of the whip. It\u2019s why petite people can learn to break boards and bricks with their hands: it doesn\u2019t take calluses or brute strength, just the ability to generate a focused thrust with speed. But a tense muscle is a slow one. So the high levels of training in the martial arts teach and demand balance and relaxation as much as anything else. Clearing the mind and being flexible is key. Anything that causes you to overreact or underreact can control you, and often does. Responding inappropriately to your email, your staff, your projects, your unread magazines, your thoughts about what you need to do, your children, or your boss will lead to less effective results than you\u2019d like. Most people give either more or less attention to things than they deserve, simply because they don\u2019t operate with a \u201cmind like water.\u201d Allen\u2019s point is that your mind is the worst place to store your ideas, tasks, and appointments. Sure, you\u2019ll probably remember most things, but if you develop the practice of capturing every open loop in your life and putting them in one place, then you can free up your brain to focus on only the task right in front of you. And in my humble opinion, the best tool for doing all this is the Todoist app. Let me explain: Most to-do lists are a mix of reminders, appointments, tasks, and random goals. These can often cause you to feel overwhelmed. Even if you work diligently and complete dozens of tasks, you might end the day feeling frustrated because you didn\u2019t check off every item on your list The goal of this Todoist tutorial is to help you rethink your to-do lists. On the surface, you\u2019ll find a walkthrough of all the app\u2019s features, but you\u2019ll also discover many strategies that can help you focus on the tasks that truly matter. identify the activities that are most important for your personal and professional life remember every single date-specific appointment, meeting, and personal obligation create projects with clearly identifiable next steps use Todoist to remove the distractions and \u201cnoise\u201d that prevents you from focusing on your big-picture activities implement the advanced features to streamline the most precious asset that you possess\u2014your time 2. Todoist uses push notifications that act as important reminders \u00b6 I usually turn off push notifications for any new app that I download. I find them to be intrusive and excessive, and they often pop up when I am trying to do something important. However, the push notifications that are sent by Todoist are always relevant, and they can help you remember important tasks and appointments that you might otherwise forget. If you use reminders selectively (which I\u2019ll discuss later), these notifications will help you make sure you never miss a critical meeting or deadline. 3. Todoist uses cloud storage to protect your tasks \u00b6 7. Todoist provides one central location for all your information. \u00b6 Warning At first, you might be tempted to mark multiple tasks with a red or orange flag because they all feel important. This is a mistake that I made. But if your tasks list is full of numerous priority 1 entries, you\u2019ll find it hard to identify the next action to work on. It has been said that once upon a time, the word priority was used in the singular form, which meant you could only have one priority at a time. In my opinion, if you\u2019d like to truly master your time (and get the most from Todoist), you must be extremely selective about what you label as a priority. The only items that should get a priority 1 label are the tasks that absolutely, positively need to be completed by the end of the day. Now, there are two basic types of triggers. The first is an external trigger (like a cell phone alarm, a push notification, or a Post-it note on your refrigerator). External triggers work because they create a Pavlovian response (e.g., when the alarm goes off, you complete a specific task). The second type is an internal trigger, which is a feeling, thought, or emotions you associate with an established habit. These are like a scratch that you must itch. For instance, if you\u2019ve ever compulsively felt the need to \u201ccheck in\u201d with social media, then this action was the direct result of an internal trigger. Focus on Building Simple Habits As someone who constantly thinks (and writes) about habit development, I\u2019ve learned that one of the secrets to consistency is to set realistic daily goals. That\u2019s why I recommend creating habits that are achievable\u2014no matter how hectic your life might get. The simplest way to do this is to incorporate a mini habits concept. A habit stacking routine can be broken down into five critical components: Identify small important actions that you need to do daily. Group these actions together into a routine. Schedule a specific time each day to complete this routine. Use a trigger as a reminder to complete this stack. Make it super easy to get started. In this section, I\u2019ll briefly cover five types of tasks: Actions Appointments Ideas Projects Processes Actions These are the quick tasks that don\u2019t require a lot of advanced planning. They can be completed in a single block of time\u2014anywhere from a minute to a few hours. Most of the time, actions are those random activities that pop up during the week that need to be scheduled into your calendar. Examples include: writing a quick report getting a haircut mowing the lawn going to the post office to mail a package handling an unexpected customer service issue Actions can also include habits. As we\u2019ve discussed, these are the recurring personal and professional activities you need to do daily. Examples include: checking and responding to email writing for business or for fun reading nonfiction books exercising for at least 30 minutes completing an evening \u201cshutdown\u201d routine Appointments This one is pretty obvious\u2014some tasks require you to be at a certain place at a certain time and meet with a specific person (or group of people). Generally speaking, there\u2019s no wiggle room when it comes to completing an appointment-based task. It needs to be scheduled into your calendar, and then everything else in your life has to be worked around it. Examples include: doctor and dental appointments conversations with your lawyer, accountant, agent, or other professionals business meetings events for family members planned vacations Ideas We all have great ideas. They often come out of nowhere\u2014popping into your mind at the weirdest moments, like when you\u2019re exercising, showering, doing chores, and talking to others. It doesn\u2019t matter when or where you get an idea\u2014what\u2019s important is to capture it! And one place you can capture these ideas is in Todoist. Examples include: tasks you need to complete future projects to pursue strategies to add to your current projects people you should network with or meet resources to research I typically use the Evernote app to store all my ideas. I find that Evernote is a better platform for capturing certain items (like receipts, website bookmarks, audio notes, and other types of research). But since my Todoist app is always open, I\u2019ll often use it as temporary storage. When an idea pops into my head, I\u2019ll immediately put it in Todoist. Then at the end of the day, I\u2019ll either add it to an existing project or record it in Evernote as a potential project to pursue. Whether you use Todoist, Evernote, a journal, or even a scrap of paper, it\u2019s important that you develop the habit of recording every idea that you have. You never know when a random thought will turn into a million-dollar idea! Tags: [[favorite]] Projects Many tasks will require multiple actions to complete. Sometimes these can be done in a single day, and other times you\u2019ll need to spend weeks, even months, doing them. That\u2019s why you should turn every multi-step activity into an action-oriented project list. This project list can include items like: a due date, if there\u2019s a deadline involved\u2014including milestones for phases of the project simple tasks that can be completed in a single day, clearly identifiable \u201cnext steps\u201d that might prevent the project from moving forward labels that add context about where the task needs to be completed, how long it will take, or who needs to be involved links and resources that you want to research daily habits critical to the success of the project examples of tasks that can be turned into a project: buying a gift for a specific person preparing for a speech tackling a new work project training for an athletic event (like your first 5K race or an obstacle course race) planning a trip for your family Processes It\u2019s important to create a distinction between projects and processes. With a project, you often don\u2019t know what steps are needed to complete it. You start with a rough idea and keep adding tasks to the project as you think of them. So how can you make a distinction between projects and processes? Well, once you\u2019ve completed a similar project once or twice, then you won\u2019t need to create a brand-new project list because all the actions will be familiar. Instead, all you\u2019ll need is a checklist (i.e., a process) to remind you of all the steps to complete. You can create a process list one time, upload it to Todoist, and then you\u2019ll have a paint-by-numbers checklist that you\u2019re familiar with. Once again, this is a topic we\u2019ll cover extensively in a future section. Until then, here are a few examples of processes: going grocery shopping packing for a trip preparing for your weekly meeting writing a book publishing a blog post . A task should only be labeled as a priority if it\u2019s time-sensitive or is a task that is crucial to your long-term success. The danger is if you identify all your tasks as priorities, then you\u2019ll be confused about what task needs to be worked on first. There\u2019s no greater feeling in the world than reaching the afternoon knowing that you\u2019ve already checked off the biggest task from your to-do list. Tags: [[favorite]] any task that requires multiple steps to complete should be put into its own project. That way, you can break everything down into actionable steps that can be completed daily. Career Goals that help you focus on improving your productivity, increasing your business revenue, or climbing up the proverbial corporate ladder. Whether you\u2019re looking to improve a specific work-related skill or streamline your business, career goals are important because they have a direct impact on the other six areas of your life. Finance Goals that will increase in importance as you get older. These actions include saving for retirement, improving your credit score, eliminating your credit card debt, and investing to build long-term wealth. Health Goals help you maintain a balance of physical fitness and eating the right foods. There are many subcategories that are included here, like losing weight, improving your diet, eating different types of foods, or becoming more physically active Leisure Goals that relate to personally significant activities. Often, we feel overwhelmed by everything else in life, so we procrastinate on those \u201cbucket list\u201d items that don\u2019t seem immediately important. However, the best way to improve the quality of your life is to set goals that relate to the fun stuff. These activities can include planning vacations, spending time with your family, or focusing on a hobby like home brewing, hunting, cooking, or painting. Relationships Goals that are about enhancing relationships with your significant other, family members, or friends. You could also set goals to improve your social skills, find a romantic partner, or simply become a better person to everyone you meet. Service Goals that are about helping others through volunteering, supporting your favorite charity, or donating money to causes you believe in. Spirituality Goals in this category have a different meaning for each of us. They could include activities like meditation, prayer, yoga, or reciting affirmations. Basically, whatever helps you achieve a calm peace of mind can be categorized as a spiritual goal. Really, how you structure your projects is up to you. What I like to do is focus on a few core projects at a time and schedule my tasks around these goals. To get an idea of how this looks, here is a snapshot of my Todoist account: The way that I structure my Todoist account is by sorting my tasks in seven primary buckets. The first are the habits I\u2019d like to build using Todoist as a reminder. This is represented in the parent project, Routine Habits & Tasks Next, there are four current projects I\u2019m focusing on: Book Projects Develop Good Habits Blog Home & Personal Projects IRONMAN Training Finally, there is a parent project called \u201cBackburner Projects,\u201d which are projects that I\u2019m temporarily putting on hold. The key to structuring is to organize these projects together in what are called \u201cparent projects.\u201d \u201cFinances.\u201d Within this category, you could create individual projects like: Debt reduction, Investments, Future Home Purchase, and Taxes. Technically, all can be organized under the umbrella of finances, but putting them into a different project helps you laser-focus on the specific goal you\u2019d like to achieve for each one. to get the most from Todoist, you should create a framework where you focus on what\u2019s important and ignore everything else Strategy #1: Focus on Five Projects That\u2019s why I recommend a simple strategy: instead of managing dozens of projects in Todoist, I suggest limiting your focus to just a few core a Strategy #2: Create a \u201cBackburner\u201d Parent Project List Strategy #3: Create a \u201cSomeday/Maybe\u201d Project Strategy #4: Turn Projects into Processes if you have a recurring project with a similar list of steps, then you should consider turning it into a process. You can do this by creating a template and uploading it to Todoist whenever you have to start a new project. 1. Identify any project that has a repeatable list of actions. \u00b6 2. Create the process in a simple file. \u00b6 The simplest way to do this is to open a spreadsheet program (like Microsoft Excel), put each step in a separate row, and then save this list as a .CSV file. Strategy #5: Ask Yourself: \u201cWhat\u2019s the Next Action?\u201d It forces you to take action on projects that often sit in Todoist without you doing anything about it. Asking this question forces you to think about the single task you can do right now to move a project forward. It makes you clarify each step because you\u2019ll often create steps that don\u2019t have an actual clearly identifiable step. Most of the time people will have a vague description without any sort of action plan behind it. It forces you to actually take action. We\u2019ve all had those projects that we dread because they seem challenging or insurmountable. The result is you keep putting them off. But when you identify a simple task that you can do to move a project forward, it forces you into action. My recommendation is to review all your current projects at least once a week. Go through all the tasks you\u2019ve created, asking yourself \u201cWhat\u2019s my next action?\u201d Or more importantly, \u201cWhat is the simplest thing I can do right now to create momentum?\u201d @next: the \u201cwhat\u2019s my next action\u201d task in a project to move it forward @5_min: tasks that only take a few minutes to complete @phone: phone calls you need to make @waiting: if you\u2019re waiting for a certain action to be completed before you can complete this item @home: actions that need to be completed at home @work: actions that need to be completed at work @www: any task that should require looking things up while on the web @review: actions where something just needs to be read or reviewed (perfect for waiting in lines) @school: actions that need to be completed at school @email: correspondence that needs to be sent via email @laptop: work done at your laptop or PC @mobile: done on your mobile phone (social media, etc.), which is another good batch you can use while waiting for appointments or in line @phone: any work that needs to be done via phone calls @errands: all the shopping, personal appointments, or any task that needs to be completed when you\u2019re in your car @meetings: any task related to a work or personal meeting @daily: any recurring daily task @weekly: any recurring weekly task @monthly: any recurring monthly task Keyword Filter Queries These work similarly to labels. You can create a group of tasks that contain a specific phrase either in the task or in the comments section, then the filter will only display these tasks. For example, if I created a filter titled Email, then I can pull up all the tasks that have the word email in it and then work on completing just these tasks. This is useful for those times when you block off time to do just one type of activity. It\u2019s easy to create a keyword filter query. Simply type the phrase search: KEYWORD (and substitute KEYWORD with the phrase that would help you find these specific types of tasks). Then you\u2019ll have a list of tasks that require a similar type of action to complete. Quadrant 1\u2014Urgent and Important: (overdue, today) & (p1, p2, or p3) Quadrant 2\u2014Important but Not Urgent: (no date) & (p1, p2, or p3) Quadrant 3\u2014Urgent but Not Important: (overdue, today) Quadrant 4\u2014Not Important and Not Urgent: (no date) One recipe that I recommend is to automatically turn your Google Calendar events into Todoist tasks. That means whenever you schedule an appointment Step #2: Use a Weekly Review to Schedule Your Tasks Action #1: Answer Five Questions Each weekly review should start with a few minutes of critical thinking about the next seven days. This is the time to mentally review your immediate goals and decide what deserves your attention. You can do this by answering five basic questions: What are my personal obligations? What are my priority projects? How much time do I have? What are the next actions on my Todoist project lists? Is there any item on my Someday/Maybe list that I\u2019d like to focus on this week? Action #2: Apply the 80/20 Rule to Your Schedule The 80/20 Rule, originally mentioned by Italian economist Vilfredo Pareto, says that 80% of your results often come from 20% of your efforts. So only a handful of your tasks will produce any sort of measurable result. This rule can be applied to any industry or business. For example, 80% of revenue is generated by 20% of the salespeople; 80% of complaints come from only 20% of customers; and 80% of highway traffic is funneled through 20% of the roads. During a weekly review, take a few minutes to carefully consider the answers to these questions: What tasks are causing 80% of my problems and unhappiness? What core activities have the biggest impact on my career? What experiences produce 80% of my fulfillment and happiness? Who are the people that cause 80% of my enjoyment and make me feel truly engaged? Who are the 20% of people who cause me to feel angry, unhappy, and unfulfilled? What habits make up 80% of my efficiency or effectiveness? Action #3: Block Out Time on a Calendar Step #3: Build the \u201cTodoist Daily Review\u201d Habit 3. Create recurring tasks based on completion date. The typical way to create recurring tasks based upon a specific start date is to use the \u201cstarting\u201d modifier. For example, if you have a task that is, \u201cevery two weeks starting August 1\u201d you will create a task for August 1 that will recur on August 15 then August 29 then September 12, and so on. This is basic stuff that we\u2019ve already covered. \u00b6 An advanced way to create a recurring task is to use a \u201cnot\u201d symbol in your modifier, which is: ! For instance, you could create a task like: every! two weeks starting August 1 What this does is change the next recurring dates to two weeks after the completion date rather than two weeks after the task starts. Integrate with Google Drive Create a task when you star an email in Gmail. Earlier in this section, we talked about how you could create tasks from Gmail with an applet button. But maybe you often forget to add tasks when you\u2019re going through your messages. So with this recipe, you can create a new task whenever you star an email, which is a tool that Gmail uses to identify messages as being important. Here is the link to the IFTTT recipe. Create a copy of all tasks you complete in a Gmail message. Maybe you have a boss or coworker that needs to know what you are doing. This recipe will generate a summary of tasks you\u2019ve completed into a Gmail message that can be delivered to anyone that you designate. Here is the link to the IFTTT recipe. Put completed tasks into Google Sheets. Automatically create a Google Calendar event for new Todoist tasks. You can also reverse the previous strategy and create a calendar event for every task that you create. A word of warning: this can get pretty overwhelming if you\u2019re someone who is constantly adding tasks to your to-do list. Here is the link to the IFTTT recipe. Add a note in Evernote whenever you add a specific label in Todoist. As I\u2019ve previously mentioned, Evernote allows users to create a \u201cnote\u201d that can be a piece of formatted text, a full webpage or webpage excerpt, a photograph, a voice memo, or file attachment. If you\u2019re someone who uses Evernote frequently, you can create an @evernote label, and then whenever you add that label to a task in Todoist, it will be archived in Evernote. Here is the link to the IFTTT recipe. Create a task whenever you receive a priority email in Microsoft Office. If you use Office, this strategy can be a great time-saver. Most priority messages require you to take action on a specific project. With this strategy, a task will be created automatically whenever you receive one of these priority messages. Here is the IFTTT recipe. Next, I recommend creating a project for every major area of your life. If you get stuck, you can use the seven areas that most people focus on: Career Finance Leisure Health Relationships Service Spirituality Inside each of these parent projects, create subprojects for any action that requires multiple steps to complete. It\u2019s up to you what projects you create\u2014just think of the major \u201cbuckets\u201d in your life and add projects based on these recurring activities. Third, make that commitment to review Todoist daily. Check off the tasks you\u2019ve completed. Add new ones that you\u2019d like to accomplish. And create a project whenever you start a new multistep activity. The one reason some people fail to get results with their to-do lists is they don\u2019t fully commit to the process. So if you take five minutes daily to open Todoist, then you\u2019ll eventually build a very powerful habit of reviewing your tasks. Once that happens, you\u2019ll be 100% confident that anything stored in this app will be there when you need it. Finally, when you\u2019re comfortable with the core features of Todoist, you can incorporate some of the 23 advanced strategies I just mentioned. Go to IFTTT.com to automate the other apps and programs that you typically use, like Evernote, Slack, or Gmail. If you\u2019re someone who likes to systematize their life as much as possible, then these recipes can streamline many of the actions you do frequently.","title":"How to Use Todoist Tutorial"},{"location":"Highlights/Readwise/Articles/How%20to%20Use%20Todoist%20Tutorial/#how-to-use-todoist-tutorial","text":"","title":"How to Use Todoist Tutorial"},{"location":"Highlights/Readwise/Articles/How%20to%20Use%20Todoist%20Tutorial/#metadata","text":"Author: [[developgoodhabits.com]] Full Title: How to Use Todoist Tutorial Category: #Type/Highlights/Article URL: https://www.developgoodhabits.com/todoist-tutorial/","title":"Metadata"},{"location":"Highlights/Readwise/Articles/How%20to%20Use%20Todoist%20Tutorial/#highlights","text":"Last Updated on February 25, 2020 (Side note: One quick productivity hack is to use a filtered news service. A great tool to do this is to join over 1 million others and start your day with the latest news from Wall St. to Silicon Valley. This newsletter is a 5-minute read that's informative, witty and FREE!) The main reason you should consider this app is it\u2019s the perfect place to practice the \u201cmind like water\u201d concept that David Allen discusses in his book, Getting Things Done. To quote Allen: In karate, there is an image that\u2019s used to define the position of perfect readiness: \u201cmind like water.\u201d Imagine throwing a pebble into a still pond. How does the water respond? The answer is, totally appropriately to the force and mass of the input; then it returns to calm. It doesn\u2019t overreact or underreact. Tags: [[favorite]] The power in a karate punch comes from speed, not muscle; it comes from a focused \u201cpop\u201d at the end of the whip. It\u2019s why petite people can learn to break boards and bricks with their hands: it doesn\u2019t take calluses or brute strength, just the ability to generate a focused thrust with speed. But a tense muscle is a slow one. So the high levels of training in the martial arts teach and demand balance and relaxation as much as anything else. Clearing the mind and being flexible is key. Anything that causes you to overreact or underreact can control you, and often does. Responding inappropriately to your email, your staff, your projects, your unread magazines, your thoughts about what you need to do, your children, or your boss will lead to less effective results than you\u2019d like. Most people give either more or less attention to things than they deserve, simply because they don\u2019t operate with a \u201cmind like water.\u201d Allen\u2019s point is that your mind is the worst place to store your ideas, tasks, and appointments. Sure, you\u2019ll probably remember most things, but if you develop the practice of capturing every open loop in your life and putting them in one place, then you can free up your brain to focus on only the task right in front of you. And in my humble opinion, the best tool for doing all this is the Todoist app. Let me explain: Most to-do lists are a mix of reminders, appointments, tasks, and random goals. These can often cause you to feel overwhelmed. Even if you work diligently and complete dozens of tasks, you might end the day feeling frustrated because you didn\u2019t check off every item on your list The goal of this Todoist tutorial is to help you rethink your to-do lists. On the surface, you\u2019ll find a walkthrough of all the app\u2019s features, but you\u2019ll also discover many strategies that can help you focus on the tasks that truly matter. identify the activities that are most important for your personal and professional life remember every single date-specific appointment, meeting, and personal obligation create projects with clearly identifiable next steps use Todoist to remove the distractions and \u201cnoise\u201d that prevents you from focusing on your big-picture activities implement the advanced features to streamline the most precious asset that you possess\u2014your time","title":"Highlights"},{"location":"Highlights/Readwise/Articles/How%20to%20Use%20Todoist%20Tutorial/#2-todoist-uses-push-notifications-that-act-as-important-reminders","text":"I usually turn off push notifications for any new app that I download. I find them to be intrusive and excessive, and they often pop up when I am trying to do something important. However, the push notifications that are sent by Todoist are always relevant, and they can help you remember important tasks and appointments that you might otherwise forget. If you use reminders selectively (which I\u2019ll discuss later), these notifications will help you make sure you never miss a critical meeting or deadline.","title":"2. Todoist uses push notifications that act as important reminders"},{"location":"Highlights/Readwise/Articles/How%20to%20Use%20Todoist%20Tutorial/#3-todoist-uses-cloud-storage-to-protect-your-tasks","text":"","title":"3. Todoist uses cloud storage to protect your tasks"},{"location":"Highlights/Readwise/Articles/How%20to%20Use%20Todoist%20Tutorial/#7-todoist-provides-one-central-location-for-all-your-information","text":"Warning At first, you might be tempted to mark multiple tasks with a red or orange flag because they all feel important. This is a mistake that I made. But if your tasks list is full of numerous priority 1 entries, you\u2019ll find it hard to identify the next action to work on. It has been said that once upon a time, the word priority was used in the singular form, which meant you could only have one priority at a time. In my opinion, if you\u2019d like to truly master your time (and get the most from Todoist), you must be extremely selective about what you label as a priority. The only items that should get a priority 1 label are the tasks that absolutely, positively need to be completed by the end of the day. Now, there are two basic types of triggers. The first is an external trigger (like a cell phone alarm, a push notification, or a Post-it note on your refrigerator). External triggers work because they create a Pavlovian response (e.g., when the alarm goes off, you complete a specific task). The second type is an internal trigger, which is a feeling, thought, or emotions you associate with an established habit. These are like a scratch that you must itch. For instance, if you\u2019ve ever compulsively felt the need to \u201ccheck in\u201d with social media, then this action was the direct result of an internal trigger. Focus on Building Simple Habits As someone who constantly thinks (and writes) about habit development, I\u2019ve learned that one of the secrets to consistency is to set realistic daily goals. That\u2019s why I recommend creating habits that are achievable\u2014no matter how hectic your life might get. The simplest way to do this is to incorporate a mini habits concept. A habit stacking routine can be broken down into five critical components: Identify small important actions that you need to do daily. Group these actions together into a routine. Schedule a specific time each day to complete this routine. Use a trigger as a reminder to complete this stack. Make it super easy to get started. In this section, I\u2019ll briefly cover five types of tasks: Actions Appointments Ideas Projects Processes Actions These are the quick tasks that don\u2019t require a lot of advanced planning. They can be completed in a single block of time\u2014anywhere from a minute to a few hours. Most of the time, actions are those random activities that pop up during the week that need to be scheduled into your calendar. Examples include: writing a quick report getting a haircut mowing the lawn going to the post office to mail a package handling an unexpected customer service issue Actions can also include habits. As we\u2019ve discussed, these are the recurring personal and professional activities you need to do daily. Examples include: checking and responding to email writing for business or for fun reading nonfiction books exercising for at least 30 minutes completing an evening \u201cshutdown\u201d routine Appointments This one is pretty obvious\u2014some tasks require you to be at a certain place at a certain time and meet with a specific person (or group of people). Generally speaking, there\u2019s no wiggle room when it comes to completing an appointment-based task. It needs to be scheduled into your calendar, and then everything else in your life has to be worked around it. Examples include: doctor and dental appointments conversations with your lawyer, accountant, agent, or other professionals business meetings events for family members planned vacations Ideas We all have great ideas. They often come out of nowhere\u2014popping into your mind at the weirdest moments, like when you\u2019re exercising, showering, doing chores, and talking to others. It doesn\u2019t matter when or where you get an idea\u2014what\u2019s important is to capture it! And one place you can capture these ideas is in Todoist. Examples include: tasks you need to complete future projects to pursue strategies to add to your current projects people you should network with or meet resources to research I typically use the Evernote app to store all my ideas. I find that Evernote is a better platform for capturing certain items (like receipts, website bookmarks, audio notes, and other types of research). But since my Todoist app is always open, I\u2019ll often use it as temporary storage. When an idea pops into my head, I\u2019ll immediately put it in Todoist. Then at the end of the day, I\u2019ll either add it to an existing project or record it in Evernote as a potential project to pursue. Whether you use Todoist, Evernote, a journal, or even a scrap of paper, it\u2019s important that you develop the habit of recording every idea that you have. You never know when a random thought will turn into a million-dollar idea! Tags: [[favorite]] Projects Many tasks will require multiple actions to complete. Sometimes these can be done in a single day, and other times you\u2019ll need to spend weeks, even months, doing them. That\u2019s why you should turn every multi-step activity into an action-oriented project list. This project list can include items like: a due date, if there\u2019s a deadline involved\u2014including milestones for phases of the project simple tasks that can be completed in a single day, clearly identifiable \u201cnext steps\u201d that might prevent the project from moving forward labels that add context about where the task needs to be completed, how long it will take, or who needs to be involved links and resources that you want to research daily habits critical to the success of the project examples of tasks that can be turned into a project: buying a gift for a specific person preparing for a speech tackling a new work project training for an athletic event (like your first 5K race or an obstacle course race) planning a trip for your family Processes It\u2019s important to create a distinction between projects and processes. With a project, you often don\u2019t know what steps are needed to complete it. You start with a rough idea and keep adding tasks to the project as you think of them. So how can you make a distinction between projects and processes? Well, once you\u2019ve completed a similar project once or twice, then you won\u2019t need to create a brand-new project list because all the actions will be familiar. Instead, all you\u2019ll need is a checklist (i.e., a process) to remind you of all the steps to complete. You can create a process list one time, upload it to Todoist, and then you\u2019ll have a paint-by-numbers checklist that you\u2019re familiar with. Once again, this is a topic we\u2019ll cover extensively in a future section. Until then, here are a few examples of processes: going grocery shopping packing for a trip preparing for your weekly meeting writing a book publishing a blog post . A task should only be labeled as a priority if it\u2019s time-sensitive or is a task that is crucial to your long-term success. The danger is if you identify all your tasks as priorities, then you\u2019ll be confused about what task needs to be worked on first. There\u2019s no greater feeling in the world than reaching the afternoon knowing that you\u2019ve already checked off the biggest task from your to-do list. Tags: [[favorite]] any task that requires multiple steps to complete should be put into its own project. That way, you can break everything down into actionable steps that can be completed daily. Career Goals that help you focus on improving your productivity, increasing your business revenue, or climbing up the proverbial corporate ladder. Whether you\u2019re looking to improve a specific work-related skill or streamline your business, career goals are important because they have a direct impact on the other six areas of your life. Finance Goals that will increase in importance as you get older. These actions include saving for retirement, improving your credit score, eliminating your credit card debt, and investing to build long-term wealth. Health Goals help you maintain a balance of physical fitness and eating the right foods. There are many subcategories that are included here, like losing weight, improving your diet, eating different types of foods, or becoming more physically active Leisure Goals that relate to personally significant activities. Often, we feel overwhelmed by everything else in life, so we procrastinate on those \u201cbucket list\u201d items that don\u2019t seem immediately important. However, the best way to improve the quality of your life is to set goals that relate to the fun stuff. These activities can include planning vacations, spending time with your family, or focusing on a hobby like home brewing, hunting, cooking, or painting. Relationships Goals that are about enhancing relationships with your significant other, family members, or friends. You could also set goals to improve your social skills, find a romantic partner, or simply become a better person to everyone you meet. Service Goals that are about helping others through volunteering, supporting your favorite charity, or donating money to causes you believe in. Spirituality Goals in this category have a different meaning for each of us. They could include activities like meditation, prayer, yoga, or reciting affirmations. Basically, whatever helps you achieve a calm peace of mind can be categorized as a spiritual goal. Really, how you structure your projects is up to you. What I like to do is focus on a few core projects at a time and schedule my tasks around these goals. To get an idea of how this looks, here is a snapshot of my Todoist account: The way that I structure my Todoist account is by sorting my tasks in seven primary buckets. The first are the habits I\u2019d like to build using Todoist as a reminder. This is represented in the parent project, Routine Habits & Tasks Next, there are four current projects I\u2019m focusing on: Book Projects Develop Good Habits Blog Home & Personal Projects IRONMAN Training Finally, there is a parent project called \u201cBackburner Projects,\u201d which are projects that I\u2019m temporarily putting on hold. The key to structuring is to organize these projects together in what are called \u201cparent projects.\u201d \u201cFinances.\u201d Within this category, you could create individual projects like: Debt reduction, Investments, Future Home Purchase, and Taxes. Technically, all can be organized under the umbrella of finances, but putting them into a different project helps you laser-focus on the specific goal you\u2019d like to achieve for each one. to get the most from Todoist, you should create a framework where you focus on what\u2019s important and ignore everything else Strategy #1: Focus on Five Projects That\u2019s why I recommend a simple strategy: instead of managing dozens of projects in Todoist, I suggest limiting your focus to just a few core a Strategy #2: Create a \u201cBackburner\u201d Parent Project List Strategy #3: Create a \u201cSomeday/Maybe\u201d Project Strategy #4: Turn Projects into Processes if you have a recurring project with a similar list of steps, then you should consider turning it into a process. You can do this by creating a template and uploading it to Todoist whenever you have to start a new project.","title":"7. Todoist provides one central location for all your information."},{"location":"Highlights/Readwise/Articles/How%20to%20Use%20Todoist%20Tutorial/#1-identify-any-project-that-has-a-repeatable-list-of-actions","text":"","title":"1. Identify any project that has a repeatable list of actions."},{"location":"Highlights/Readwise/Articles/How%20to%20Use%20Todoist%20Tutorial/#2-create-the-process-in-a-simple-file","text":"The simplest way to do this is to open a spreadsheet program (like Microsoft Excel), put each step in a separate row, and then save this list as a .CSV file. Strategy #5: Ask Yourself: \u201cWhat\u2019s the Next Action?\u201d It forces you to take action on projects that often sit in Todoist without you doing anything about it. Asking this question forces you to think about the single task you can do right now to move a project forward. It makes you clarify each step because you\u2019ll often create steps that don\u2019t have an actual clearly identifiable step. Most of the time people will have a vague description without any sort of action plan behind it. It forces you to actually take action. We\u2019ve all had those projects that we dread because they seem challenging or insurmountable. The result is you keep putting them off. But when you identify a simple task that you can do to move a project forward, it forces you into action. My recommendation is to review all your current projects at least once a week. Go through all the tasks you\u2019ve created, asking yourself \u201cWhat\u2019s my next action?\u201d Or more importantly, \u201cWhat is the simplest thing I can do right now to create momentum?\u201d @next: the \u201cwhat\u2019s my next action\u201d task in a project to move it forward @5_min: tasks that only take a few minutes to complete @phone: phone calls you need to make @waiting: if you\u2019re waiting for a certain action to be completed before you can complete this item @home: actions that need to be completed at home @work: actions that need to be completed at work @www: any task that should require looking things up while on the web @review: actions where something just needs to be read or reviewed (perfect for waiting in lines) @school: actions that need to be completed at school @email: correspondence that needs to be sent via email @laptop: work done at your laptop or PC @mobile: done on your mobile phone (social media, etc.), which is another good batch you can use while waiting for appointments or in line @phone: any work that needs to be done via phone calls @errands: all the shopping, personal appointments, or any task that needs to be completed when you\u2019re in your car @meetings: any task related to a work or personal meeting @daily: any recurring daily task @weekly: any recurring weekly task @monthly: any recurring monthly task Keyword Filter Queries These work similarly to labels. You can create a group of tasks that contain a specific phrase either in the task or in the comments section, then the filter will only display these tasks. For example, if I created a filter titled Email, then I can pull up all the tasks that have the word email in it and then work on completing just these tasks. This is useful for those times when you block off time to do just one type of activity. It\u2019s easy to create a keyword filter query. Simply type the phrase search: KEYWORD (and substitute KEYWORD with the phrase that would help you find these specific types of tasks). Then you\u2019ll have a list of tasks that require a similar type of action to complete. Quadrant 1\u2014Urgent and Important: (overdue, today) & (p1, p2, or p3) Quadrant 2\u2014Important but Not Urgent: (no date) & (p1, p2, or p3) Quadrant 3\u2014Urgent but Not Important: (overdue, today) Quadrant 4\u2014Not Important and Not Urgent: (no date) One recipe that I recommend is to automatically turn your Google Calendar events into Todoist tasks. That means whenever you schedule an appointment Step #2: Use a Weekly Review to Schedule Your Tasks Action #1: Answer Five Questions Each weekly review should start with a few minutes of critical thinking about the next seven days. This is the time to mentally review your immediate goals and decide what deserves your attention. You can do this by answering five basic questions: What are my personal obligations? What are my priority projects? How much time do I have? What are the next actions on my Todoist project lists? Is there any item on my Someday/Maybe list that I\u2019d like to focus on this week? Action #2: Apply the 80/20 Rule to Your Schedule The 80/20 Rule, originally mentioned by Italian economist Vilfredo Pareto, says that 80% of your results often come from 20% of your efforts. So only a handful of your tasks will produce any sort of measurable result. This rule can be applied to any industry or business. For example, 80% of revenue is generated by 20% of the salespeople; 80% of complaints come from only 20% of customers; and 80% of highway traffic is funneled through 20% of the roads. During a weekly review, take a few minutes to carefully consider the answers to these questions: What tasks are causing 80% of my problems and unhappiness? What core activities have the biggest impact on my career? What experiences produce 80% of my fulfillment and happiness? Who are the people that cause 80% of my enjoyment and make me feel truly engaged? Who are the 20% of people who cause me to feel angry, unhappy, and unfulfilled? What habits make up 80% of my efficiency or effectiveness? Action #3: Block Out Time on a Calendar Step #3: Build the \u201cTodoist Daily Review\u201d Habit","title":"2. Create the process in a simple file."},{"location":"Highlights/Readwise/Articles/How%20to%20Use%20Todoist%20Tutorial/#3-create-recurring-tasks-based-on-completion-date-the-typical-way-to-create-recurring-tasks-based-upon-a-specific-start-date-is-to-use-the-starting-modifier-for-example-if-you-have-a-task-that-is-every-two-weeks-starting-august-1-you-will-create-a-task-for-august-1-that-will-recur-on-august-15-then-august-29-then-september-12-and-so-on-this-is-basic-stuff-that-weve-already-covered","text":"An advanced way to create a recurring task is to use a \u201cnot\u201d symbol in your modifier, which is: ! For instance, you could create a task like: every! two weeks starting August 1 What this does is change the next recurring dates to two weeks after the completion date rather than two weeks after the task starts. Integrate with Google Drive Create a task when you star an email in Gmail. Earlier in this section, we talked about how you could create tasks from Gmail with an applet button. But maybe you often forget to add tasks when you\u2019re going through your messages. So with this recipe, you can create a new task whenever you star an email, which is a tool that Gmail uses to identify messages as being important. Here is the link to the IFTTT recipe. Create a copy of all tasks you complete in a Gmail message. Maybe you have a boss or coworker that needs to know what you are doing. This recipe will generate a summary of tasks you\u2019ve completed into a Gmail message that can be delivered to anyone that you designate. Here is the link to the IFTTT recipe. Put completed tasks into Google Sheets. Automatically create a Google Calendar event for new Todoist tasks. You can also reverse the previous strategy and create a calendar event for every task that you create. A word of warning: this can get pretty overwhelming if you\u2019re someone who is constantly adding tasks to your to-do list. Here is the link to the IFTTT recipe. Add a note in Evernote whenever you add a specific label in Todoist. As I\u2019ve previously mentioned, Evernote allows users to create a \u201cnote\u201d that can be a piece of formatted text, a full webpage or webpage excerpt, a photograph, a voice memo, or file attachment. If you\u2019re someone who uses Evernote frequently, you can create an @evernote label, and then whenever you add that label to a task in Todoist, it will be archived in Evernote. Here is the link to the IFTTT recipe. Create a task whenever you receive a priority email in Microsoft Office. If you use Office, this strategy can be a great time-saver. Most priority messages require you to take action on a specific project. With this strategy, a task will be created automatically whenever you receive one of these priority messages. Here is the IFTTT recipe. Next, I recommend creating a project for every major area of your life. If you get stuck, you can use the seven areas that most people focus on: Career Finance Leisure Health Relationships Service Spirituality Inside each of these parent projects, create subprojects for any action that requires multiple steps to complete. It\u2019s up to you what projects you create\u2014just think of the major \u201cbuckets\u201d in your life and add projects based on these recurring activities. Third, make that commitment to review Todoist daily. Check off the tasks you\u2019ve completed. Add new ones that you\u2019d like to accomplish. And create a project whenever you start a new multistep activity. The one reason some people fail to get results with their to-do lists is they don\u2019t fully commit to the process. So if you take five minutes daily to open Todoist, then you\u2019ll eventually build a very powerful habit of reviewing your tasks. Once that happens, you\u2019ll be 100% confident that anything stored in this app will be there when you need it. Finally, when you\u2019re comfortable with the core features of Todoist, you can incorporate some of the 23 advanced strategies I just mentioned. Go to IFTTT.com to automate the other apps and programs that you typically use, like Evernote, Slack, or Gmail. If you\u2019re someone who likes to systematize their life as much as possible, then these recipes can streamline many of the actions you do frequently.","title":"3. Create recurring tasks based on completion date. The typical way to create recurring tasks based upon a specific start date is to use the \u201cstarting\u201d modifier. For example, if you have a task that is, \u201cevery two weeks starting August 1\u201d you will create a task for August 1 that will recur on August 15 then August 29 then September 12, and so on. This is basic stuff that we\u2019ve already covered."},{"location":"Highlights/Readwise/Articles/How%20to%20Use%20Your%20Calendar%20to%20Make%20Every%20Day%20Your%20Ideal%20Day/","text":"How to Use Your Calendar to Make Every Day Your Ideal Day \u00b6 Metadata \u00b6 Author: [[John Zeratsky]] Full Title: How to Use Your Calendar to Make Every Day Your Ideal Day Category: #Type/Highlights/Article URL: https://medium.com/p/d51e2dcdfa57 Highlights \u00b6 When we\u2019re faced with abundance, it breaks our mental framework for how to manage that resource, and we go bonkers. This approach is powerful because it forces you to confront the trade-offs required when you agree to do something new.","title":"How to Use Your Calendar to Make Every Day Your Ideal Day"},{"location":"Highlights/Readwise/Articles/How%20to%20Use%20Your%20Calendar%20to%20Make%20Every%20Day%20Your%20Ideal%20Day/#how-to-use-your-calendar-to-make-every-day-your-ideal-day","text":"","title":"How to Use Your Calendar to Make Every Day Your Ideal Day"},{"location":"Highlights/Readwise/Articles/How%20to%20Use%20Your%20Calendar%20to%20Make%20Every%20Day%20Your%20Ideal%20Day/#metadata","text":"Author: [[John Zeratsky]] Full Title: How to Use Your Calendar to Make Every Day Your Ideal Day Category: #Type/Highlights/Article URL: https://medium.com/p/d51e2dcdfa57","title":"Metadata"},{"location":"Highlights/Readwise/Articles/How%20to%20Use%20Your%20Calendar%20to%20Make%20Every%20Day%20Your%20Ideal%20Day/#highlights","text":"When we\u2019re faced with abundance, it breaks our mental framework for how to manage that resource, and we go bonkers. This approach is powerful because it forces you to confront the trade-offs required when you agree to do something new.","title":"Highlights"},{"location":"Highlights/Readwise/Articles/How%20to%20Use%20a%20Daily%20Inspirational%20Routine%20for%20Long-Lasting%20Success%20in%202021/","text":"How to Use a Daily Inspirational Routine for Long-Lasting Success in 2021 \u00b6 Metadata \u00b6 Author: [[Christopher D. Connors]] Full Title: How to Use a Daily Inspirational Routine for Long-Lasting Success in 2021 Category: #Type/Highlights/Article URL: https://medium.com/p/91a5945b3644 Highlights \u00b6 The beginning of a new year is an opportunity to reinvent, renew and revamp our approach toward living our best life. It\u2019s great for planning and refocusing our priorities. If you ended 2020 in the doldrums of despair and disappointment, please know you now have the ability to write a masterpiece this year. The surest way to get there is by creating an inspirational routine that empowers and encourages you to create habits and plan your success for each day and week. It all starts with inspirational ideas. \u201cYou need to learn how to select your thoughts just the same way you select your clothes every day. This is a power you can cultivate. If you want to control things in your life so bad, work on the mind. That\u2019s the only thing you should be trying to control.\u201d \u2014 Elizabeth Gilbert In this vein, I urge you to develop an inspirational routine each morning. It may come through the power of meditation, prayer, genuine heartfelt interaction with those that you love or from your favorite song. It could be a video that plays back the piano recital you played to perfection that brought the house down. \u201cGreat are they who see that spiritual is stronger than any material force \u2014 that thoughts rule the world.\u201d \u2014 Ralph Waldo Emerson Make your routine an every day thing. As I\u2019ve built a successful entrepreneurial career from scratch, I\u2019ve learned that planning and daily routine are what power success. Planning reinforces what you\u2019re trying to achieve. Planning reassure you that all of your progress toward self-actualization, as well as greater harmony and rhythm in living, is worth the pain and occasional doubts. Dedicate 10 minutes of contemplation time, ideally, at the beginning of each day. This sets the tone for your day and gets you feeling inspired. Use this time alone in solitude, in a quiet place. Focus your thoughts on positive, inspiring thoughts such as: romantic love, excitement for a new opportunity, music, friendship and envisioning yourself attaining success or fame. There\u2019s tremendous power that comes through dreaming and seeing yourself standing \u201cin the winner\u2019s circle.\u201d Get these positive thoughts going and keep them going. Write down these thoughts that come to mind. Keep referring back to them throughout your work day or school day. Think of them when you\u2019re out in the social world, during moments of difficulty or times of joy. Look at them again before you go to bed at night and reset your mind. Then rest and get read for the new day with excitement, anticipation and a clear mind for fresh, new thoughts.","title":"How to Use a Daily Inspirational Routine for Long-Lasting Success in 2021"},{"location":"Highlights/Readwise/Articles/How%20to%20Use%20a%20Daily%20Inspirational%20Routine%20for%20Long-Lasting%20Success%20in%202021/#how-to-use-a-daily-inspirational-routine-for-long-lasting-success-in-2021","text":"","title":"How to Use a Daily Inspirational Routine for Long-Lasting Success in 2021"},{"location":"Highlights/Readwise/Articles/How%20to%20Use%20a%20Daily%20Inspirational%20Routine%20for%20Long-Lasting%20Success%20in%202021/#metadata","text":"Author: [[Christopher D. Connors]] Full Title: How to Use a Daily Inspirational Routine for Long-Lasting Success in 2021 Category: #Type/Highlights/Article URL: https://medium.com/p/91a5945b3644","title":"Metadata"},{"location":"Highlights/Readwise/Articles/How%20to%20Use%20a%20Daily%20Inspirational%20Routine%20for%20Long-Lasting%20Success%20in%202021/#highlights","text":"The beginning of a new year is an opportunity to reinvent, renew and revamp our approach toward living our best life. It\u2019s great for planning and refocusing our priorities. If you ended 2020 in the doldrums of despair and disappointment, please know you now have the ability to write a masterpiece this year. The surest way to get there is by creating an inspirational routine that empowers and encourages you to create habits and plan your success for each day and week. It all starts with inspirational ideas. \u201cYou need to learn how to select your thoughts just the same way you select your clothes every day. This is a power you can cultivate. If you want to control things in your life so bad, work on the mind. That\u2019s the only thing you should be trying to control.\u201d \u2014 Elizabeth Gilbert In this vein, I urge you to develop an inspirational routine each morning. It may come through the power of meditation, prayer, genuine heartfelt interaction with those that you love or from your favorite song. It could be a video that plays back the piano recital you played to perfection that brought the house down. \u201cGreat are they who see that spiritual is stronger than any material force \u2014 that thoughts rule the world.\u201d \u2014 Ralph Waldo Emerson Make your routine an every day thing. As I\u2019ve built a successful entrepreneurial career from scratch, I\u2019ve learned that planning and daily routine are what power success. Planning reinforces what you\u2019re trying to achieve. Planning reassure you that all of your progress toward self-actualization, as well as greater harmony and rhythm in living, is worth the pain and occasional doubts. Dedicate 10 minutes of contemplation time, ideally, at the beginning of each day. This sets the tone for your day and gets you feeling inspired. Use this time alone in solitude, in a quiet place. Focus your thoughts on positive, inspiring thoughts such as: romantic love, excitement for a new opportunity, music, friendship and envisioning yourself attaining success or fame. There\u2019s tremendous power that comes through dreaming and seeing yourself standing \u201cin the winner\u2019s circle.\u201d Get these positive thoughts going and keep them going. Write down these thoughts that come to mind. Keep referring back to them throughout your work day or school day. Think of them when you\u2019re out in the social world, during moments of difficulty or times of joy. Look at them again before you go to bed at night and reset your mind. Then rest and get read for the new day with excitement, anticipation and a clear mind for fresh, new thoughts.","title":"Highlights"},{"location":"Highlights/Readwise/Articles/How%20to%20Use%20the%20Windows%20Media%20Creation%20Tool%20to%20Create%20a%20Windows%2010%20ISO%20File/","text":"How to Use the Windows Media Creation Tool to Create a Windows 10 ISO File \u00b6 Metadata \u00b6 Author: [[techrepublic.com]] Full Title: How to Use the Windows Media Creation Tool to Create a Windows 10 ISO File Category: #Type/Highlights/Article URL: https://www.techrepublic.com/article/how-to-use-the-windows-media-creation-tool-to-create-a-windows-10-iso-file/ Highlights \u00b6 The Windows Media Creation Tool is located on the same page as the Windows Update Assistant. Click the download button and save the tool to your hard drive. Before you run the tool, you should first check that you have met all the prerequisites and considered all the parameters necessary for creating a Windows 10 ISO file:If you plan to store your ISO file on a USB drive, you will need one with at least 8GB of storage. (Note, any data on the USB drive will be deleted and lost.)The ISO file will be a 64-bit or a 32-bit version of Windows 10 depending on the PC you use to do the creating.To use the Windows 10 ISO file, you must have a valid Product Key, so pick a version and edition accordingly.You cannot make a Windows 10 Enterprise ISO from a Windows Home or Windows Pro PC. The editions should match.You must have administrative access to run the Windows Media Creation Tool.Assuming you have met the prerequisites and are ready to proceed, you can start the tool.","title":"How to Use the Windows Media Creation Tool to Create a Windows 10 ISO File"},{"location":"Highlights/Readwise/Articles/How%20to%20Use%20the%20Windows%20Media%20Creation%20Tool%20to%20Create%20a%20Windows%2010%20ISO%20File/#how-to-use-the-windows-media-creation-tool-to-create-a-windows-10-iso-file","text":"","title":"How to Use the Windows Media Creation Tool to Create a Windows 10 ISO File"},{"location":"Highlights/Readwise/Articles/How%20to%20Use%20the%20Windows%20Media%20Creation%20Tool%20to%20Create%20a%20Windows%2010%20ISO%20File/#metadata","text":"Author: [[techrepublic.com]] Full Title: How to Use the Windows Media Creation Tool to Create a Windows 10 ISO File Category: #Type/Highlights/Article URL: https://www.techrepublic.com/article/how-to-use-the-windows-media-creation-tool-to-create-a-windows-10-iso-file/","title":"Metadata"},{"location":"Highlights/Readwise/Articles/How%20to%20Use%20the%20Windows%20Media%20Creation%20Tool%20to%20Create%20a%20Windows%2010%20ISO%20File/#highlights","text":"The Windows Media Creation Tool is located on the same page as the Windows Update Assistant. Click the download button and save the tool to your hard drive. Before you run the tool, you should first check that you have met all the prerequisites and considered all the parameters necessary for creating a Windows 10 ISO file:If you plan to store your ISO file on a USB drive, you will need one with at least 8GB of storage. (Note, any data on the USB drive will be deleted and lost.)The ISO file will be a 64-bit or a 32-bit version of Windows 10 depending on the PC you use to do the creating.To use the Windows 10 ISO file, you must have a valid Product Key, so pick a version and edition accordingly.You cannot make a Windows 10 Enterprise ISO from a Windows Home or Windows Pro PC. The editions should match.You must have administrative access to run the Windows Media Creation Tool.Assuming you have met the prerequisites and are ready to proceed, you can start the tool.","title":"Highlights"},{"location":"Highlights/Readwise/Articles/How%20to%20%E2%80%98DevOps%E2%80%99%20as%20a%20Software%20Developer/","text":"How to \u2018DevOps\u2019 as a Software Developer \u00b6 Metadata \u00b6 Author: [[Komal Venkatesh Ganesan]] Full Title: How to \u2018DevOps\u2019 as a Software Developer Category: #Type/Highlights/Article URL: https://medium.com/p/d428821ae681 Highlights \u00b6 If your application runs on Docker, these certificates will have to be loaded into your container. These are usually enforced by the security team in your organization. Be aware of these and evaluate what your software might need beforehand. Your application might need client-certs to be installed on the machine to connect and trust remote HTTPS endpoints. Or if you are a server, you might require a server-cert signed by your organization\u2019s root CA. Understand key concepts such as IP subnets, routing policies, firewall and DNS rules. These determine external connectivity \u2014 to and from your application. Most modern apps work by exposing HTTP APIs. The webserver that handles this needs to have limits set on important parameters like \u2014 incoming_payload_size, max_conncurrent_connectionsand connection-timeoutvalues.","title":"How to \u2018DevOps\u2019 as a Software Developer"},{"location":"Highlights/Readwise/Articles/How%20to%20%E2%80%98DevOps%E2%80%99%20as%20a%20Software%20Developer/#how-to-devops-as-a-software-developer","text":"","title":"How to \u2018DevOps\u2019 as a Software Developer"},{"location":"Highlights/Readwise/Articles/How%20to%20%E2%80%98DevOps%E2%80%99%20as%20a%20Software%20Developer/#metadata","text":"Author: [[Komal Venkatesh Ganesan]] Full Title: How to \u2018DevOps\u2019 as a Software Developer Category: #Type/Highlights/Article URL: https://medium.com/p/d428821ae681","title":"Metadata"},{"location":"Highlights/Readwise/Articles/How%20to%20%E2%80%98DevOps%E2%80%99%20as%20a%20Software%20Developer/#highlights","text":"If your application runs on Docker, these certificates will have to be loaded into your container. These are usually enforced by the security team in your organization. Be aware of these and evaluate what your software might need beforehand. Your application might need client-certs to be installed on the machine to connect and trust remote HTTPS endpoints. Or if you are a server, you might require a server-cert signed by your organization\u2019s root CA. Understand key concepts such as IP subnets, routing policies, firewall and DNS rules. These determine external connectivity \u2014 to and from your application. Most modern apps work by exposing HTTP APIs. The webserver that handles this needs to have limits set on important parameters like \u2014 incoming_payload_size, max_conncurrent_connectionsand connection-timeoutvalues.","title":"Highlights"},{"location":"Highlights/Readwise/Articles/I%20Built%20Docker%20Like%20Executable%20.Exe%20for%20RShiny%21/","text":"I Built Docker Like Executable .Exe for RShiny! \u00b6 Metadata \u00b6 Author: [[Pulkit Saraf]] Full Title: I Built Docker Like Executable .Exe for RShiny! Category: #Type/Highlights/Article URL: https://medium.com/p/3f1421d75d09 Highlights \u00b6 It pastes latest packages and executes around 50 lines of code before launching the tool in this artificial environment. With 100% success rate. There\u2019s an outer layer of a bash script that prepares the system. The script checks for environment variables, whether or not R is installed on the system and pastes .Renviron and .Rprofile files among other dependent files on the client system.","title":"I Built Docker Like Executable .Exe for RShiny!"},{"location":"Highlights/Readwise/Articles/I%20Built%20Docker%20Like%20Executable%20.Exe%20for%20RShiny%21/#i-built-docker-like-executable-exe-for-rshiny","text":"","title":"I Built Docker Like Executable .Exe for RShiny!"},{"location":"Highlights/Readwise/Articles/I%20Built%20Docker%20Like%20Executable%20.Exe%20for%20RShiny%21/#metadata","text":"Author: [[Pulkit Saraf]] Full Title: I Built Docker Like Executable .Exe for RShiny! Category: #Type/Highlights/Article URL: https://medium.com/p/3f1421d75d09","title":"Metadata"},{"location":"Highlights/Readwise/Articles/I%20Built%20Docker%20Like%20Executable%20.Exe%20for%20RShiny%21/#highlights","text":"It pastes latest packages and executes around 50 lines of code before launching the tool in this artificial environment. With 100% success rate. There\u2019s an outer layer of a bash script that prepares the system. The script checks for environment variables, whether or not R is installed on the system and pastes .Renviron and .Rprofile files among other dependent files on the client system.","title":"Highlights"},{"location":"Highlights/Readwise/Articles/Implementing%20an%20Idea-Management%20System%20-%20LessWrong%202.0/","text":"Implementing an Idea-Management System - LessWrong 2.0 \u00b6 Metadata \u00b6 Author: [[lesswrong.com]] Full Title: Implementing an Idea-Management System - LessWrong 2.0 Category: #Type/Highlights/Article URL: https://www.lesswrong.com/posts/BHp82PvqCDayFpefg/implementing-an-idea-management-system Highlights \u00b6 The ideal idea-management system Separates ideas from commitments I want a system that separates obligations from ideas. Form follows function, so I\u2019d prefer something that doesn\u2019t structure ideas in lists. This rules out Todoist completely. Shows you the right ideas at the right time Even with complete foreknowledge, finding the perfect schedule might be practically impossible. In contrast, thinking on your feet and reacting as jobs come in won\u2019t give you as perfect a schedule as if you\u2019d seen into the future-but the best you can do is much easier to compute. \u2014 Algorithms to Live By Allows you to break down ideas into smaller parts, and re-combine them as needed Tiago Forte\u2019s Intermediate Packets inspired this. Many of our ideas can work in exactly the same way. Has low overhead You want to spend as little time as possible sorting and searching through your ideas. This should be a no-brainer. You want it to be easy to inter-link ideas and to add reference material. And when you get an idea on the train, you want to offload it without wasting time. Time for action Okay, Martin, I\u2019m sold. But folders, task-managers, outliners like Workflowy and Dynalist \u2014 they\u2019re all hierarchical! You\u2019re rig","title":"Implementing an Idea-Management System - LessWrong 2.0"},{"location":"Highlights/Readwise/Articles/Implementing%20an%20Idea-Management%20System%20-%20LessWrong%202.0/#implementing-an-idea-management-system-lesswrong-20","text":"","title":"Implementing an Idea-Management System - LessWrong 2.0"},{"location":"Highlights/Readwise/Articles/Implementing%20an%20Idea-Management%20System%20-%20LessWrong%202.0/#metadata","text":"Author: [[lesswrong.com]] Full Title: Implementing an Idea-Management System - LessWrong 2.0 Category: #Type/Highlights/Article URL: https://www.lesswrong.com/posts/BHp82PvqCDayFpefg/implementing-an-idea-management-system","title":"Metadata"},{"location":"Highlights/Readwise/Articles/Implementing%20an%20Idea-Management%20System%20-%20LessWrong%202.0/#highlights","text":"The ideal idea-management system Separates ideas from commitments I want a system that separates obligations from ideas. Form follows function, so I\u2019d prefer something that doesn\u2019t structure ideas in lists. This rules out Todoist completely. Shows you the right ideas at the right time Even with complete foreknowledge, finding the perfect schedule might be practically impossible. In contrast, thinking on your feet and reacting as jobs come in won\u2019t give you as perfect a schedule as if you\u2019d seen into the future-but the best you can do is much easier to compute. \u2014 Algorithms to Live By Allows you to break down ideas into smaller parts, and re-combine them as needed Tiago Forte\u2019s Intermediate Packets inspired this. Many of our ideas can work in exactly the same way. Has low overhead You want to spend as little time as possible sorting and searching through your ideas. This should be a no-brainer. You want it to be easy to inter-link ideas and to add reference material. And when you get an idea on the train, you want to offload it without wasting time. Time for action Okay, Martin, I\u2019m sold. But folders, task-managers, outliners like Workflowy and Dynalist \u2014 they\u2019re all hierarchical! You\u2019re rig","title":"Highlights"},{"location":"Highlights/Readwise/Articles/Inbox%20Master%20Get%20All%20Your%20Inboxes%20to%20Zero%2C%20and%20Have%20Fewer%20Inboxes%20%20Zen%20Habits/","text":"Inbox Master: Get All Your Inboxes to Zero, and Have Fewer Inboxes : Zen Habits \u00b6 Metadata \u00b6 Author: Full Title: Inbox Master: Get All Your Inboxes to Zero, and Have Fewer Inboxes : Zen Habits Category: #Type/Highlights/Article URL: https://zenhabits.net/inbox-master-get-all-your-inboxes-to-zero-and-have-fewer-inboxes/ Highlights \u00b6 List all the ways you receive information. You might forget a few at first, but as you remember new ways, add them to the list. The list should include digital and analog information \u2014 paper and computer. Evaluate each to see if it gives you value. Sometimes we continue to check certain inboxes even if it\u2019s not adding anything to our lives. It\u2019s just more stuff to check. Have a pager when you also have a cell phone? Maybe the pager isn\u2019t any use to you anymore. Find ways to combine or eliminate inboxes. If something\u2019s not giving you value, consider eliminating it from your life. See if you can go a week without missing it. For all the rest, see if you can combine multiple information streams into one inbox. For example, how many places in your home do incoming papers get placed? Have one inbox at home for all mail, papers from work, school papers, phone notes, computer printouts, schedules, and more. Have four email services? See if you can forward them all to one service. Get different voicemails? Try forwarding them to one service, or use an internet service to deliver them to your email inbox. At work, have one inbox for all incoming paperwork. Read a lot of blogs? Put them all into a feedreader, in a single stream of posts, instead of having to check 25 different inboxes. The fewer inboxes you have, the better. Aim for 4-7 inboxes if possible. Note: How to Minimize My Inboxes Second stage: Master your inboxes. This stage will sound familiar to my long-time readers, but it should be covered here: Don\u2019t allow your inboxes to overflow. This will create a huge backlog of stuff for you to go through, and it will definitely stress you out. Instead, become the master of your inboxes. Check and process your inboxes once a day. For some inboxes, you may need to check more than once (I check my email every hour), but don\u2019t check constantly and obsessively. That just wastes your time and cuts into your productivity and real life. But don\u2019t check less than once a day, because otherwise you\u2019ll allow it to pile up. Piles are your enemy. Process it from the top down, making quick and immediate decisions. Start with the top item in your inbox, and make an immediate decision. Don\u2019t skip over it or put it back in or delay the decision. Here are your choices: delete, delegate to someone else, do it immediately (if it takes 2 minutes or less), or defer it for later (add it to your to-do list). In all cases, don\u2019t leave the item in your inbox. Delete or file it. Work your way down through each item until your inbox is empty. Note: if you have hundreds of items in your inbox, it might be good to toss them all into a folder to be processed later (and schedule a couple hours to do that), and then start this process with all new items from that point on. Repeat this process, to keep your inboxes empty. If you\u2019ve minimized the number of inboxes you have, this shouldn\u2019t be too hard. Celebrate when your inbox is empty! It\u2019s a wonderful feeling. Remember: Don\u2019t check them all day long \u2014 schedule your processing time \u2014 and definitely don\u2019t have instant notification on.","title":"Inbox Master: Get All Your Inboxes to Zero, and Have Fewer Inboxes : Zen Habits"},{"location":"Highlights/Readwise/Articles/Inbox%20Master%20Get%20All%20Your%20Inboxes%20to%20Zero%2C%20and%20Have%20Fewer%20Inboxes%20%20Zen%20Habits/#inbox-master-get-all-your-inboxes-to-zero-and-have-fewer-inboxes-zen-habits","text":"","title":"Inbox Master: Get All Your Inboxes to Zero, and Have Fewer Inboxes : Zen Habits"},{"location":"Highlights/Readwise/Articles/Inbox%20Master%20Get%20All%20Your%20Inboxes%20to%20Zero%2C%20and%20Have%20Fewer%20Inboxes%20%20Zen%20Habits/#metadata","text":"Author: Full Title: Inbox Master: Get All Your Inboxes to Zero, and Have Fewer Inboxes : Zen Habits Category: #Type/Highlights/Article URL: https://zenhabits.net/inbox-master-get-all-your-inboxes-to-zero-and-have-fewer-inboxes/","title":"Metadata"},{"location":"Highlights/Readwise/Articles/Inbox%20Master%20Get%20All%20Your%20Inboxes%20to%20Zero%2C%20and%20Have%20Fewer%20Inboxes%20%20Zen%20Habits/#highlights","text":"List all the ways you receive information. You might forget a few at first, but as you remember new ways, add them to the list. The list should include digital and analog information \u2014 paper and computer. Evaluate each to see if it gives you value. Sometimes we continue to check certain inboxes even if it\u2019s not adding anything to our lives. It\u2019s just more stuff to check. Have a pager when you also have a cell phone? Maybe the pager isn\u2019t any use to you anymore. Find ways to combine or eliminate inboxes. If something\u2019s not giving you value, consider eliminating it from your life. See if you can go a week without missing it. For all the rest, see if you can combine multiple information streams into one inbox. For example, how many places in your home do incoming papers get placed? Have one inbox at home for all mail, papers from work, school papers, phone notes, computer printouts, schedules, and more. Have four email services? See if you can forward them all to one service. Get different voicemails? Try forwarding them to one service, or use an internet service to deliver them to your email inbox. At work, have one inbox for all incoming paperwork. Read a lot of blogs? Put them all into a feedreader, in a single stream of posts, instead of having to check 25 different inboxes. The fewer inboxes you have, the better. Aim for 4-7 inboxes if possible. Note: How to Minimize My Inboxes Second stage: Master your inboxes. This stage will sound familiar to my long-time readers, but it should be covered here: Don\u2019t allow your inboxes to overflow. This will create a huge backlog of stuff for you to go through, and it will definitely stress you out. Instead, become the master of your inboxes. Check and process your inboxes once a day. For some inboxes, you may need to check more than once (I check my email every hour), but don\u2019t check constantly and obsessively. That just wastes your time and cuts into your productivity and real life. But don\u2019t check less than once a day, because otherwise you\u2019ll allow it to pile up. Piles are your enemy. Process it from the top down, making quick and immediate decisions. Start with the top item in your inbox, and make an immediate decision. Don\u2019t skip over it or put it back in or delay the decision. Here are your choices: delete, delegate to someone else, do it immediately (if it takes 2 minutes or less), or defer it for later (add it to your to-do list). In all cases, don\u2019t leave the item in your inbox. Delete or file it. Work your way down through each item until your inbox is empty. Note: if you have hundreds of items in your inbox, it might be good to toss them all into a folder to be processed later (and schedule a couple hours to do that), and then start this process with all new items from that point on. Repeat this process, to keep your inboxes empty. If you\u2019ve minimized the number of inboxes you have, this shouldn\u2019t be too hard. Celebrate when your inbox is empty! It\u2019s a wonderful feeling. Remember: Don\u2019t check them all day long \u2014 schedule your processing time \u2014 and definitely don\u2019t have instant notification on.","title":"Highlights"},{"location":"Highlights/Readwise/Articles/Information%20Strategy%20My%20Routine%2C%20Inputs%20%E2%80%93%20Interdependent%20Thoughts/","text":"Information Strategy: My Routine, Inputs \u2013 Interdependent Thoughts \u00b6 Metadata \u00b6 Author: Full Title: Information Strategy: My Routine, Inputs \u2013 Interdependent Thoughts Category: #Type/Highlights/Article URL: https://www.zylstra.org/blog/2005/10/information_str_2/ Highlights \u00b6 general subscriptions on people\u2019s blogs, and a number of del.icio.us feeds of those same people, and subscriptions to a few mainstream media sources for headline news, a \u2018keeping track\u2019 section, with feeds from blogs, fora, wiki\u2019s, and bookmark collections of communities I directly participate in, so I know what is going on in those specific groups. Also a feed with most recent Flickr uploads from my contacts is in this group, a \u2018tracking tags\u2019 section, to which I add feeds for different topics (at the moment web2.0, long tail, personal knowledge management, innovation and the like) from Technorati, Flickr, and del.icio.us. This brings a general picture (also through the number of daily results) of what is happening around a specific theme, a \u2018clients\u2019 section which contains RSS feeds of clients I work with, so I know what is happening, and stay in touch with their context also when we are not directly in touch all the time. During the browsing I drag parts that draw my interest into Qumana via the drop pad. (for later publishing, writing) and into my wiki (for filing or further processing) on a page called BlogsDailyRoundUp. Observations or sudden ideas that come to me through browsing end up in that wiki-page as well. Entries in the BlogsDailyRoundUp page usually have formats like: put in delicious [account] [url] (account being my own, my company\u2019s delicious account or that of a community I partake in) comment at [name]\u2019s about [topic] [url] follow up reading [entry] at [url] (meaning go check out the links in that posting: I read off-line remember) file [quote] from [url] mail [name] about [topic] [url] Basically I am building a To Do list based on what I read in my RSS reader. The things I want to blog or write about go into Qumana, where they basically form a list \u201cThings to Possibly Write About\u201d E-mail E-mail I read througout the day, and may result in tasks in which case they end up in the calendar or in the wiki. I hardly have any e-mail list services I use left. Less than 5. One for my old fraternity, one for a local community, and one or two for professional discussions. In those last two I do not actively participate any longer.","title":"Information Strategy: My Routine, Inputs \u2013 Interdependent Thoughts"},{"location":"Highlights/Readwise/Articles/Information%20Strategy%20My%20Routine%2C%20Inputs%20%E2%80%93%20Interdependent%20Thoughts/#information-strategy-my-routine-inputs-interdependent-thoughts","text":"","title":"Information Strategy: My Routine, Inputs \u2013 Interdependent Thoughts"},{"location":"Highlights/Readwise/Articles/Information%20Strategy%20My%20Routine%2C%20Inputs%20%E2%80%93%20Interdependent%20Thoughts/#metadata","text":"Author: Full Title: Information Strategy: My Routine, Inputs \u2013 Interdependent Thoughts Category: #Type/Highlights/Article URL: https://www.zylstra.org/blog/2005/10/information_str_2/","title":"Metadata"},{"location":"Highlights/Readwise/Articles/Information%20Strategy%20My%20Routine%2C%20Inputs%20%E2%80%93%20Interdependent%20Thoughts/#highlights","text":"general subscriptions on people\u2019s blogs, and a number of del.icio.us feeds of those same people, and subscriptions to a few mainstream media sources for headline news, a \u2018keeping track\u2019 section, with feeds from blogs, fora, wiki\u2019s, and bookmark collections of communities I directly participate in, so I know what is going on in those specific groups. Also a feed with most recent Flickr uploads from my contacts is in this group, a \u2018tracking tags\u2019 section, to which I add feeds for different topics (at the moment web2.0, long tail, personal knowledge management, innovation and the like) from Technorati, Flickr, and del.icio.us. This brings a general picture (also through the number of daily results) of what is happening around a specific theme, a \u2018clients\u2019 section which contains RSS feeds of clients I work with, so I know what is happening, and stay in touch with their context also when we are not directly in touch all the time. During the browsing I drag parts that draw my interest into Qumana via the drop pad. (for later publishing, writing) and into my wiki (for filing or further processing) on a page called BlogsDailyRoundUp. Observations or sudden ideas that come to me through browsing end up in that wiki-page as well. Entries in the BlogsDailyRoundUp page usually have formats like: put in delicious [account] [url] (account being my own, my company\u2019s delicious account or that of a community I partake in) comment at [name]\u2019s about [topic] [url] follow up reading [entry] at [url] (meaning go check out the links in that posting: I read off-line remember) file [quote] from [url] mail [name] about [topic] [url] Basically I am building a To Do list based on what I read in my RSS reader. The things I want to blog or write about go into Qumana, where they basically form a list \u201cThings to Possibly Write About\u201d E-mail E-mail I read througout the day, and may result in tasks in which case they end up in the calendar or in the wiki. I hardly have any e-mail list services I use left. Less than 5. One for my old fraternity, one for a local community, and one or two for professional discussions. In those last two I do not actively participate any longer.","title":"Highlights"},{"location":"Highlights/Readwise/Articles/Initial%20Thoughts%20on%20Notion%20and%20Getting%20Started%20Building%20a%20New%20Productivity%20Workflow/","text":"Initial Thoughts on Notion and Getting Started Building a New Productivity Workflow \u00b6 Metadata \u00b6 Author: [[Bob Stanke]] Full Title: Initial Thoughts on Notion and Getting Started Building a New Productivity Workflow Category: #Type/Highlights/Article URL: https://feedly.com/i/entry/Pq1LDl1Q3tHLZj4pI82LXJGUjVgyJM5zGdiCuhkc4Ac=_174a4820748:1d56:a9069290 Highlights \u00b6 My Plans for Using NotionMuch like how I used Evernote back in the day, my plan for Notion is to move everything into it and build workflows to manage my life. I think I will even be able to do more than I could with Evernote just because of the power and flexibility Notion offers.","title":"Initial Thoughts on Notion and Getting Started Building a New Productivity Workflow"},{"location":"Highlights/Readwise/Articles/Initial%20Thoughts%20on%20Notion%20and%20Getting%20Started%20Building%20a%20New%20Productivity%20Workflow/#initial-thoughts-on-notion-and-getting-started-building-a-new-productivity-workflow","text":"","title":"Initial Thoughts on Notion and Getting Started Building a New Productivity Workflow"},{"location":"Highlights/Readwise/Articles/Initial%20Thoughts%20on%20Notion%20and%20Getting%20Started%20Building%20a%20New%20Productivity%20Workflow/#metadata","text":"Author: [[Bob Stanke]] Full Title: Initial Thoughts on Notion and Getting Started Building a New Productivity Workflow Category: #Type/Highlights/Article URL: https://feedly.com/i/entry/Pq1LDl1Q3tHLZj4pI82LXJGUjVgyJM5zGdiCuhkc4Ac=_174a4820748:1d56:a9069290","title":"Metadata"},{"location":"Highlights/Readwise/Articles/Initial%20Thoughts%20on%20Notion%20and%20Getting%20Started%20Building%20a%20New%20Productivity%20Workflow/#highlights","text":"My Plans for Using NotionMuch like how I used Evernote back in the day, my plan for Notion is to move everything into it and build workflows to manage my life. I think I will even be able to do more than I could with Evernote just because of the power and flexibility Notion offers.","title":"Highlights"},{"location":"Highlights/Readwise/Articles/Instapaper%20Empowering%20How%20I%20Read%20Articles%20With%20Highlights%20and%20Tracking%20-%20Mark%20Koester/","text":"Instapaper: Empowering How I Read Articles With Highlights and Tracking - Mark Koester \u00b6 Metadata \u00b6 Author: [[Mark Koester]] Full Title: Instapaper: Empowering How I Read Articles With Highlights and Tracking - Mark Koester Category: #Type/Highlights/Article URL: http://www.markwk.com/article-tracking-with-instapaper.html Highlights \u00b6 While I may not always read it in the app, I do my best to save and archive what I read once a day. This means nearly every important article I read online is captured and tracked. That way I have a decent record and count of my reading habits. We will look more at the tracking part shortly. I have researched and tried some of these tools, like Liner, but never found the experience very good across devices and systems. The other nice thing about Instapaper is Search. Tracking Your Article Reading and Highlights with IFTTT and QS Ledger Instapaper and IFTTT have a really great integration that makes it possible to keep a log of every article you save, read and like. t can be used to understand how you sleep, your exercise behavior, or how much time you spend on the computer or listening to music. It can also be used to pull data on what articles you read from both Pocket and Instapaper. Each project and integration includes a data downloader and data analysis notebook. After you\u2019ve got your data, I recommend you checkout the Instapaper data analysis notebook which provides a good way to look at your reading history. Creating a Heatmap of Daily Articles Read in Instapaper","title":"Instapaper: Empowering How I Read Articles With Highlights and Tracking - Mark Koester"},{"location":"Highlights/Readwise/Articles/Instapaper%20Empowering%20How%20I%20Read%20Articles%20With%20Highlights%20and%20Tracking%20-%20Mark%20Koester/#instapaper-empowering-how-i-read-articles-with-highlights-and-tracking-mark-koester","text":"","title":"Instapaper: Empowering How I Read Articles With Highlights and Tracking - Mark Koester"},{"location":"Highlights/Readwise/Articles/Instapaper%20Empowering%20How%20I%20Read%20Articles%20With%20Highlights%20and%20Tracking%20-%20Mark%20Koester/#metadata","text":"Author: [[Mark Koester]] Full Title: Instapaper: Empowering How I Read Articles With Highlights and Tracking - Mark Koester Category: #Type/Highlights/Article URL: http://www.markwk.com/article-tracking-with-instapaper.html","title":"Metadata"},{"location":"Highlights/Readwise/Articles/Instapaper%20Empowering%20How%20I%20Read%20Articles%20With%20Highlights%20and%20Tracking%20-%20Mark%20Koester/#highlights","text":"While I may not always read it in the app, I do my best to save and archive what I read once a day. This means nearly every important article I read online is captured and tracked. That way I have a decent record and count of my reading habits. We will look more at the tracking part shortly. I have researched and tried some of these tools, like Liner, but never found the experience very good across devices and systems. The other nice thing about Instapaper is Search. Tracking Your Article Reading and Highlights with IFTTT and QS Ledger Instapaper and IFTTT have a really great integration that makes it possible to keep a log of every article you save, read and like. t can be used to understand how you sleep, your exercise behavior, or how much time you spend on the computer or listening to music. It can also be used to pull data on what articles you read from both Pocket and Instapaper. Each project and integration includes a data downloader and data analysis notebook. After you\u2019ve got your data, I recommend you checkout the Instapaper data analysis notebook which provides a good way to look at your reading history. Creating a Heatmap of Daily Articles Read in Instapaper","title":"Highlights"},{"location":"Highlights/Readwise/Articles/Introducing%20the%20MESA%20Method%20Creating%20the%20Ideal%20Work%20Experience%20-%20Forte%20Labs/","text":"Introducing the MESA Method: Creating the Ideal Work Experience - Forte Labs \u00b6 Metadata \u00b6 Author: [[fortelabs.co]] Full Title: Introducing the MESA Method: Creating the Ideal Work Experience - Forte Labs Category: #Type/Highlights/Article URL: https://fortelabs.co/blog/introducing-the-mesa-method-creating-the-ideal-work-experience/ Highlights \u00b6 during what I call \u201caccelerated work experiences,\u201d or AWEs for short. This includes any work format that compresses productive activity in time or space to deliver a result much faster than would otherwise be possible. Popular methods include pomodoros, hackathons, design sprints, Scrum sprints, rapid prototyping sessions, design thinking crash courses, and Startup Weekends, among others. The splintering of the experience of work into a million tiny pieces has made us stressed out, frazzled, and distracted. It has robbed us of many of the inherent pleasures of work: the bliss of deep concentration, the satisfaction of starting and finishing something in one sitting, and the fulfillment of working shoulder to shoulder with peers. Here is the basic premise: the world is only getting more complex. This means there will be fewer and fewer proven solutions to problems. What we need is not a new and better solution, but a method for creating solutions quickly, in response to changing conditions. The method takes advantage of rapid prototyping tools, software-as-a-service, and modular templates to build something real and functional that embodies the knowledge and experience of everyone at the table. This prototype is used not just to demonstrate the viability of a solution, but to build consensus around a new direction for the company. Day 1 is a \u201cdownload day\u201d dedicated to getting all the relevant information out of everyone\u2019s heads and \u201cout on the table.\u201d On Day 2, the carefully worded \u201cmission\u201d is unveiled, drawing on the discoveries from the day before to frame the problem owner\u2019s problem as an inspiring, yet feasible challenge. The second half of the day is spent generating a small set of ideas to prototype. Day 3 is for prototyping, which includes small groups writing copy, making mockups or landing pages, building demos, or producing short videos or presentations to demonstrate the viability of the ideas from the day before. It is on Day 3, once people have to start making real tradeoffs in the making of the product, that the real constraints arise. Day 4 is focused on more advanced prototyping, taking the most viable prototypes to a basic level of functionality. The leader pushes to bring the fidelity of the prototype as close to reality as possible, including real code and functional backends whenever possible. The further toward reality it moves, the more hidden constraints and priorities will come to the surface. But where MESA shines is not in the explicit \u2013 the rules, structures, schedule, checklists \u2013 but in the tacit, the subtle, and the sublime. They have found a way to use these subtle touches not just to create a memorable experience, but to produce results that more heavy-handed methods can only dream of.","title":"Introducing the MESA Method: Creating the Ideal Work Experience - Forte Labs"},{"location":"Highlights/Readwise/Articles/Introducing%20the%20MESA%20Method%20Creating%20the%20Ideal%20Work%20Experience%20-%20Forte%20Labs/#introducing-the-mesa-method-creating-the-ideal-work-experience-forte-labs","text":"","title":"Introducing the MESA Method: Creating the Ideal Work Experience - Forte Labs"},{"location":"Highlights/Readwise/Articles/Introducing%20the%20MESA%20Method%20Creating%20the%20Ideal%20Work%20Experience%20-%20Forte%20Labs/#metadata","text":"Author: [[fortelabs.co]] Full Title: Introducing the MESA Method: Creating the Ideal Work Experience - Forte Labs Category: #Type/Highlights/Article URL: https://fortelabs.co/blog/introducing-the-mesa-method-creating-the-ideal-work-experience/","title":"Metadata"},{"location":"Highlights/Readwise/Articles/Introducing%20the%20MESA%20Method%20Creating%20the%20Ideal%20Work%20Experience%20-%20Forte%20Labs/#highlights","text":"during what I call \u201caccelerated work experiences,\u201d or AWEs for short. This includes any work format that compresses productive activity in time or space to deliver a result much faster than would otherwise be possible. Popular methods include pomodoros, hackathons, design sprints, Scrum sprints, rapid prototyping sessions, design thinking crash courses, and Startup Weekends, among others. The splintering of the experience of work into a million tiny pieces has made us stressed out, frazzled, and distracted. It has robbed us of many of the inherent pleasures of work: the bliss of deep concentration, the satisfaction of starting and finishing something in one sitting, and the fulfillment of working shoulder to shoulder with peers. Here is the basic premise: the world is only getting more complex. This means there will be fewer and fewer proven solutions to problems. What we need is not a new and better solution, but a method for creating solutions quickly, in response to changing conditions. The method takes advantage of rapid prototyping tools, software-as-a-service, and modular templates to build something real and functional that embodies the knowledge and experience of everyone at the table. This prototype is used not just to demonstrate the viability of a solution, but to build consensus around a new direction for the company. Day 1 is a \u201cdownload day\u201d dedicated to getting all the relevant information out of everyone\u2019s heads and \u201cout on the table.\u201d On Day 2, the carefully worded \u201cmission\u201d is unveiled, drawing on the discoveries from the day before to frame the problem owner\u2019s problem as an inspiring, yet feasible challenge. The second half of the day is spent generating a small set of ideas to prototype. Day 3 is for prototyping, which includes small groups writing copy, making mockups or landing pages, building demos, or producing short videos or presentations to demonstrate the viability of the ideas from the day before. It is on Day 3, once people have to start making real tradeoffs in the making of the product, that the real constraints arise. Day 4 is focused on more advanced prototyping, taking the most viable prototypes to a basic level of functionality. The leader pushes to bring the fidelity of the prototype as close to reality as possible, including real code and functional backends whenever possible. The further toward reality it moves, the more hidden constraints and priorities will come to the surface. But where MESA shines is not in the explicit \u2013 the rules, structures, schedule, checklists \u2013 but in the tacit, the subtle, and the sublime. They have found a way to use these subtle touches not just to create a memorable experience, but to produce results that more heavy-handed methods can only dream of.","title":"Highlights"},{"location":"Highlights/Readwise/Articles/It%27s%20the%20Programming%20Environment%2C%20Not%20the%20Programming%20Language%20%20thesephist.com/","text":"It's the Programming Environment, Not the Programming Language | thesephist.com \u00b6 Metadata \u00b6 Author: Full Title: It's the Programming Environment, Not the Programming Language | thesephist.com Category: #Type/Highlights/Article URL: https://thesephist.com/posts/programming-environment/ Highlights \u00b6 But while programming languages are academically interesting, I think we more desperately need innovation in programming environments. Tags: [[favorite]] The programming environment isn\u2019t a single component of our workflow, but the total sum enabled by the tools working together harmoniously. The environment contains the programming language, but also includes the debugging experience, dependency management, how we communicate with other developers (both within source code and without), how we trace and observe code in production, and everything else in the process of designing APIs to recovering from failure. C brought practical portability to (what was at the time) high level programs. C literally elevated the programming environment out of processor-specific assembly code into a common vernacular. The legacy is so strong that most languages we use in production today are either direct descendants of C, or inherit much of their syntax, like curly brace-delineated blocks and structures, semicolon statement-terminators, and parenthesized function calls. JavaScript is popular outside of the browser almost entirely on the merit of its ecosystem, its tooling, and the trivial debugging experience enabled by the repl. JavaScript\u2019s programming environment is entirely interactive, visual, and real-time, without the need for clunky debugging apparatuses. The impact of that interactivity is obvious in the fact that many of my developer friends started programming on the Web, explicitly because it was the easiest way to write programs that produced output we could see and share. Tags: [[favorite]] One of Go\u2019s claims to fame and primary design goals is compilation speed. Compared to its predecessor C++, Go compiles fast. And when you make something fast, people start to use it differently.","title":"It's the Programming Environment, Not the Programming Language | thesephist.com"},{"location":"Highlights/Readwise/Articles/It%27s%20the%20Programming%20Environment%2C%20Not%20the%20Programming%20Language%20%20thesephist.com/#its-the-programming-environment-not-the-programming-language-thesephistcom","text":"","title":"It's the Programming Environment, Not the Programming Language | thesephist.com"},{"location":"Highlights/Readwise/Articles/It%27s%20the%20Programming%20Environment%2C%20Not%20the%20Programming%20Language%20%20thesephist.com/#metadata","text":"Author: Full Title: It's the Programming Environment, Not the Programming Language | thesephist.com Category: #Type/Highlights/Article URL: https://thesephist.com/posts/programming-environment/","title":"Metadata"},{"location":"Highlights/Readwise/Articles/It%27s%20the%20Programming%20Environment%2C%20Not%20the%20Programming%20Language%20%20thesephist.com/#highlights","text":"But while programming languages are academically interesting, I think we more desperately need innovation in programming environments. Tags: [[favorite]] The programming environment isn\u2019t a single component of our workflow, but the total sum enabled by the tools working together harmoniously. The environment contains the programming language, but also includes the debugging experience, dependency management, how we communicate with other developers (both within source code and without), how we trace and observe code in production, and everything else in the process of designing APIs to recovering from failure. C brought practical portability to (what was at the time) high level programs. C literally elevated the programming environment out of processor-specific assembly code into a common vernacular. The legacy is so strong that most languages we use in production today are either direct descendants of C, or inherit much of their syntax, like curly brace-delineated blocks and structures, semicolon statement-terminators, and parenthesized function calls. JavaScript is popular outside of the browser almost entirely on the merit of its ecosystem, its tooling, and the trivial debugging experience enabled by the repl. JavaScript\u2019s programming environment is entirely interactive, visual, and real-time, without the need for clunky debugging apparatuses. The impact of that interactivity is obvious in the fact that many of my developer friends started programming on the Web, explicitly because it was the easiest way to write programs that produced output we could see and share. Tags: [[favorite]] One of Go\u2019s claims to fame and primary design goals is compilation speed. Compared to its predecessor C++, Go compiles fast. And when you make something fast, people start to use it differently.","title":"Highlights"},{"location":"Highlights/Readwise/Articles/It%E2%80%99s%20Not%20You%20-%20It%E2%80%99s%20Your%20Knowledge%20Base/","text":"It\u2019s Not You - It\u2019s Your Knowledge Base \u00b6 Metadata \u00b6 Author: [[kevinslin.com]] Full Title: It\u2019s Not You - It\u2019s Your Knowledge Base Category: #Type/Highlights/Article URL: https://www.kevinslin.com/notes/e1455752-b052-4212-ac6e-cc054659f2bb.html Highlights \u00b6 Information Overload Have you ever struggled to find information inside your knowledge base or note-taking app? When you did find what you needed, was it after a long time searching and wading through lots of results? If so, this is likely because of information overload - when every human being has access to the sum of all human knowledge, finding any specific bit of it becomes a daunting task. ( View Highlight ) Existing Tools ( View Highlight ) The problem with these tools is that the more information we put in, the harder it becomes to get it back out. This is because existing tools lack the capability of organizing large amounts of information and why most of us rely on search to find what we need. ( View Highlight ) Search ( View Highlight ) Search is great when you are looking through the internet, know what you\u2019re looking for and need a good result. For example, a google search for \u201cthe height of Mt Everest\u201d will give you exactly what you need. Search fails when you are looking through your knowledge base, might not know the exact query, and are looking for a highly specific result. For example, say you saved an article about government tax breaks. Searching those exact terms together might yield no results but searching for \u201cgovernment\u201d or \u201ctax\u201d individually might flood your screen with non-relevant data. ( View Highlight ) Organizing ( View Highlight ) The most common way that people organize information is to group related concepts into topics. By grouping related information, you reduce the cognitive load required to keep track of individual items. The psychological term for this is called chunking and it is something that the brain is naturally good at. Even unconsciously, we will create associations between things. This process is so powerful that we now have unconcious bias training to train ourselves not to do this when it results in discriminatory behavior. ( View Highlight ) Creating a Better Tool What if we could create a tool that made it possible to organize and find the information we cared about, no matter how much information we had? What could we do with such a tool? Thinking about such a tool is something I\u2019ve done for much of the last decade. More than think about it, I\u2019ve built such a tool and used it to manage a personal knowledge base of +20k notes. This tool has become my second brain and I use it for just about everything that I do. A year ago, I left my job at Amazon to build a consumer-ready version of this tool. It is called Dendron and will be entering into early access in early May and is now out in preview. Note that using Dendron will not magically make information overload go away. You still have to do the hard work of organizing your information. But Dendron finally gives you a sane way of doing so. This post is not a sales pitch and I\u2019d be lying to say we got it all figured out. Rather, it is an invitation to come along on a journey to find answers to what I consider to be one of the biggest challenges of our age. How do we make sense of the world we live in? If this message resonate, lets connect. You can join the conversation on dendron\u2019s discord server or contact me directly at kevin@dendron.so. It is said that life is about the journey - what greater journey is there than the one to make sense of it all? Notes Thanks to Luke Sernau and Ilana Lin for proofreading drafts of this Special thanks to Ilana Lin for creating the beautiful illustrations in this post ( View Highlight )","title":"It\u2019s Not You - It\u2019s Your Knowledge Base"},{"location":"Highlights/Readwise/Articles/It%E2%80%99s%20Not%20You%20-%20It%E2%80%99s%20Your%20Knowledge%20Base/#its-not-you-its-your-knowledge-base","text":"","title":"It\u2019s Not You - It\u2019s Your Knowledge Base"},{"location":"Highlights/Readwise/Articles/It%E2%80%99s%20Not%20You%20-%20It%E2%80%99s%20Your%20Knowledge%20Base/#metadata","text":"Author: [[kevinslin.com]] Full Title: It\u2019s Not You - It\u2019s Your Knowledge Base Category: #Type/Highlights/Article URL: https://www.kevinslin.com/notes/e1455752-b052-4212-ac6e-cc054659f2bb.html","title":"Metadata"},{"location":"Highlights/Readwise/Articles/It%E2%80%99s%20Not%20You%20-%20It%E2%80%99s%20Your%20Knowledge%20Base/#highlights","text":"Information Overload Have you ever struggled to find information inside your knowledge base or note-taking app? When you did find what you needed, was it after a long time searching and wading through lots of results? If so, this is likely because of information overload - when every human being has access to the sum of all human knowledge, finding any specific bit of it becomes a daunting task. ( View Highlight ) Existing Tools ( View Highlight ) The problem with these tools is that the more information we put in, the harder it becomes to get it back out. This is because existing tools lack the capability of organizing large amounts of information and why most of us rely on search to find what we need. ( View Highlight ) Search ( View Highlight ) Search is great when you are looking through the internet, know what you\u2019re looking for and need a good result. For example, a google search for \u201cthe height of Mt Everest\u201d will give you exactly what you need. Search fails when you are looking through your knowledge base, might not know the exact query, and are looking for a highly specific result. For example, say you saved an article about government tax breaks. Searching those exact terms together might yield no results but searching for \u201cgovernment\u201d or \u201ctax\u201d individually might flood your screen with non-relevant data. ( View Highlight ) Organizing ( View Highlight ) The most common way that people organize information is to group related concepts into topics. By grouping related information, you reduce the cognitive load required to keep track of individual items. The psychological term for this is called chunking and it is something that the brain is naturally good at. Even unconsciously, we will create associations between things. This process is so powerful that we now have unconcious bias training to train ourselves not to do this when it results in discriminatory behavior. ( View Highlight ) Creating a Better Tool What if we could create a tool that made it possible to organize and find the information we cared about, no matter how much information we had? What could we do with such a tool? Thinking about such a tool is something I\u2019ve done for much of the last decade. More than think about it, I\u2019ve built such a tool and used it to manage a personal knowledge base of +20k notes. This tool has become my second brain and I use it for just about everything that I do. A year ago, I left my job at Amazon to build a consumer-ready version of this tool. It is called Dendron and will be entering into early access in early May and is now out in preview. Note that using Dendron will not magically make information overload go away. You still have to do the hard work of organizing your information. But Dendron finally gives you a sane way of doing so. This post is not a sales pitch and I\u2019d be lying to say we got it all figured out. Rather, it is an invitation to come along on a journey to find answers to what I consider to be one of the biggest challenges of our age. How do we make sense of the world we live in? If this message resonate, lets connect. You can join the conversation on dendron\u2019s discord server or contact me directly at kevin@dendron.so. It is said that life is about the journey - what greater journey is there than the one to make sense of it all? Notes Thanks to Luke Sernau and Ilana Lin for proofreading drafts of this Special thanks to Ilana Lin for creating the beautiful illustrations in this post ( View Highlight )","title":"Highlights"},{"location":"Highlights/Readwise/Articles/Jani%E2%80%99s%20Notes/","text":"Jani\u2019s Notes \u00b6 Metadata \u00b6 Author: [[jevakallio.github.io]] Full Title: Jani\u2019s Notes Category: #Type/Highlights/Article URL: https://jevakallio.github.io/notes/foam-one-month-in.html Highlights \u00b6 What I ended up building took me six days from idea to production. To understand how, let\u2019s go back to Johnson\u2019s Where Good Ideas Come From. Chapter 2, The Adjacent Possible, explains that good ideas rarely occur out of the blue. In fact, when they do, they rarely tend to be successful in the market, and are considered either to be wrong, or \u201cahead of their time\u201d. Instead, good ideas are are often just one step away from what was previously possible \u2014 or a combination of established ideas that together form something new: an innovation. Foam is very much an innovation borne out of The Adjacent Possible: It\u2019s the ideas behind How to Take Smart Notes as interpreted by Roam Research, combined with my own personal experiences using Visual Studio Code and GitHub. So in the end, I didn\u2019t need to invent much. The Slow Hunch Chapter 3, The Slow Hunch makes the case that good ideas are rarely a lightbulb moment, but a slowly evolving hunch, or a series of ideas that build on top of each other until reaching their final, innovative form. In 2018, I wrote and published a serialised novel in a fashion that, in retrospect, is much like Foam. It was only after falling in and out of love with Roam that I realised the true power of these tools, when transposed outside of the software development context. So, Foam didn\u2019t just come to me: it\u2019s a natural conclusion (or at least a milestone) of a path I\u2019ve been on for a while. (In a mind-bending coincidence, this chapter also discusses the need for good note-taking in order to cultivate the slow hunch, and describes the tradition of Foam-like journals from the Commonplaces of English enlightenment and thinkers like John Locke, all the way to Tim Berners-Lee\u2019s World Wide Web!) \ud83d\udc22 Foam Stack GitHub allows us to store, version and collaborate on information stored as text. GitHub Pages allows us to publish that information (if you choose) by converting that text to HTML (Tim Berners-Lee\u2019s turtle) Visual Studio Code, besides being a world-class text editor, is also an amazing extensibility platform with its own extension ecosystem, further extended by NPM, world\u2019s largest open source package repository. Markdown is an authoring-friendly text format supported by all of the above tools, and besides its warts (no real specification! competing flavours! fuzzy semantics!), a commonly accepted interoperability surface for tools to read, write, and transform. \ud83d\uddbc Software As Curation Earlier this week, Geoffrey Litt wrote a piece, Foam: Software as Curation, where he asks a question: We tend to think of software in terms of monolithic \u201capps.\u201d But what if we thought about software design as a process of curating existing parts into a holistic user experience? He also explains, in layman\u2019s terms, Foam\u2019s \u201cmostly air\u201d philosophy: While Foam does install its own extension, most of the value comes from installing other existing extensions and choosing good default settings. For example, it installs a few extensions that provide a nicer Markdown writing experience, and that tweak lots of things about how Markdown docs link to each other. And it picks a color theme well suited to writing Markdown. I would have never come across this whole configuration on my own, but I\u2019m glad that someone else figured it out for me. The piece is very good (and not too rosy-eyed about Foam\u2019s approach, either, which I appreciated), but it ascribes to me, the curator, too much prescience: I didn\u2019t build Foam out of existing extensions because I have faith in Software as a Curation. I did so because it was the easiest way to get it done. Hard things are hard. I, personally, have always been a big fan of the easy road, especially when the payoff of the work is uncertain, as it is with ideas. Building Foam by combining existing extensions was an act of prototyping, not a philosophy.","title":"Jani\u2019s Notes"},{"location":"Highlights/Readwise/Articles/Jani%E2%80%99s%20Notes/#janis-notes","text":"","title":"Jani\u2019s Notes"},{"location":"Highlights/Readwise/Articles/Jani%E2%80%99s%20Notes/#metadata","text":"Author: [[jevakallio.github.io]] Full Title: Jani\u2019s Notes Category: #Type/Highlights/Article URL: https://jevakallio.github.io/notes/foam-one-month-in.html","title":"Metadata"},{"location":"Highlights/Readwise/Articles/Jani%E2%80%99s%20Notes/#highlights","text":"What I ended up building took me six days from idea to production. To understand how, let\u2019s go back to Johnson\u2019s Where Good Ideas Come From. Chapter 2, The Adjacent Possible, explains that good ideas rarely occur out of the blue. In fact, when they do, they rarely tend to be successful in the market, and are considered either to be wrong, or \u201cahead of their time\u201d. Instead, good ideas are are often just one step away from what was previously possible \u2014 or a combination of established ideas that together form something new: an innovation. Foam is very much an innovation borne out of The Adjacent Possible: It\u2019s the ideas behind How to Take Smart Notes as interpreted by Roam Research, combined with my own personal experiences using Visual Studio Code and GitHub. So in the end, I didn\u2019t need to invent much. The Slow Hunch Chapter 3, The Slow Hunch makes the case that good ideas are rarely a lightbulb moment, but a slowly evolving hunch, or a series of ideas that build on top of each other until reaching their final, innovative form. In 2018, I wrote and published a serialised novel in a fashion that, in retrospect, is much like Foam. It was only after falling in and out of love with Roam that I realised the true power of these tools, when transposed outside of the software development context. So, Foam didn\u2019t just come to me: it\u2019s a natural conclusion (or at least a milestone) of a path I\u2019ve been on for a while. (In a mind-bending coincidence, this chapter also discusses the need for good note-taking in order to cultivate the slow hunch, and describes the tradition of Foam-like journals from the Commonplaces of English enlightenment and thinkers like John Locke, all the way to Tim Berners-Lee\u2019s World Wide Web!) \ud83d\udc22 Foam Stack GitHub allows us to store, version and collaborate on information stored as text. GitHub Pages allows us to publish that information (if you choose) by converting that text to HTML (Tim Berners-Lee\u2019s turtle) Visual Studio Code, besides being a world-class text editor, is also an amazing extensibility platform with its own extension ecosystem, further extended by NPM, world\u2019s largest open source package repository. Markdown is an authoring-friendly text format supported by all of the above tools, and besides its warts (no real specification! competing flavours! fuzzy semantics!), a commonly accepted interoperability surface for tools to read, write, and transform. \ud83d\uddbc Software As Curation Earlier this week, Geoffrey Litt wrote a piece, Foam: Software as Curation, where he asks a question: We tend to think of software in terms of monolithic \u201capps.\u201d But what if we thought about software design as a process of curating existing parts into a holistic user experience? He also explains, in layman\u2019s terms, Foam\u2019s \u201cmostly air\u201d philosophy: While Foam does install its own extension, most of the value comes from installing other existing extensions and choosing good default settings. For example, it installs a few extensions that provide a nicer Markdown writing experience, and that tweak lots of things about how Markdown docs link to each other. And it picks a color theme well suited to writing Markdown. I would have never come across this whole configuration on my own, but I\u2019m glad that someone else figured it out for me. The piece is very good (and not too rosy-eyed about Foam\u2019s approach, either, which I appreciated), but it ascribes to me, the curator, too much prescience: I didn\u2019t build Foam out of existing extensions because I have faith in Software as a Curation. I did so because it was the easiest way to get it done. Hard things are hard. I, personally, have always been a big fan of the easy road, especially when the payoff of the work is uncertain, as it is with ideas. Building Foam by combining existing extensions was an act of prototyping, not a philosophy.","title":"Highlights"},{"location":"Highlights/Readwise/Articles/Just-In-Time%20Project%20Management%20A%20Digital-First%20Framework%20for%20Modern%20Projects%20-%20Forte%20Labs/","text":"Just-In-Time Project Management: A Digital-First Framework for Modern Projects - Forte Labs \u00b6 Metadata \u00b6 Author: [[fortelabs.co]] Full Title: Just-In-Time Project Management: A Digital-First Framework for Modern Projects - Forte Labs Category: #Type/Highlights/Article URL: https://fortelabs.co/blog/just-in-time-project-management-a-digital-first-framework-for-modern-projects/ Highlights \u00b6 Projects have become non-linear \u2013 not simply a sum of the time and dollars spent on them, but complex emergent phenomena we can barely understand or control. Because understanding them takes just as many units of attention as acting on them, it makes more sense to plunge in with exploratory actions, instead of trying to predict what will happen in advance. Knowledge management is project management The challenge of modern work is how to create systems that free up attention, instead of consuming more of it. In other words, we need systems for managing our attention that produce value now, not eventually. We can\u2019t be \u201cinvesting\u201d our most valuable asset today in hopes of a distant future that may never come. Personal knowledge management (PKM) is the key capability in modern work, because it allows us to continuously make use of attention we\u2019ve already deployed. But for it to be viable in the short term, PKM must also be integrated into how we manage day-to-day projects.","title":"Just-In-Time Project Management: A Digital-First Framework for Modern Projects - Forte Labs"},{"location":"Highlights/Readwise/Articles/Just-In-Time%20Project%20Management%20A%20Digital-First%20Framework%20for%20Modern%20Projects%20-%20Forte%20Labs/#just-in-time-project-management-a-digital-first-framework-for-modern-projects-forte-labs","text":"","title":"Just-In-Time Project Management: A Digital-First Framework for Modern Projects - Forte Labs"},{"location":"Highlights/Readwise/Articles/Just-In-Time%20Project%20Management%20A%20Digital-First%20Framework%20for%20Modern%20Projects%20-%20Forte%20Labs/#metadata","text":"Author: [[fortelabs.co]] Full Title: Just-In-Time Project Management: A Digital-First Framework for Modern Projects - Forte Labs Category: #Type/Highlights/Article URL: https://fortelabs.co/blog/just-in-time-project-management-a-digital-first-framework-for-modern-projects/","title":"Metadata"},{"location":"Highlights/Readwise/Articles/Just-In-Time%20Project%20Management%20A%20Digital-First%20Framework%20for%20Modern%20Projects%20-%20Forte%20Labs/#highlights","text":"Projects have become non-linear \u2013 not simply a sum of the time and dollars spent on them, but complex emergent phenomena we can barely understand or control. Because understanding them takes just as many units of attention as acting on them, it makes more sense to plunge in with exploratory actions, instead of trying to predict what will happen in advance. Knowledge management is project management The challenge of modern work is how to create systems that free up attention, instead of consuming more of it. In other words, we need systems for managing our attention that produce value now, not eventually. We can\u2019t be \u201cinvesting\u201d our most valuable asset today in hopes of a distant future that may never come. Personal knowledge management (PKM) is the key capability in modern work, because it allows us to continuously make use of attention we\u2019ve already deployed. But for it to be viable in the short term, PKM must also be integrated into how we manage day-to-day projects.","title":"Highlights"},{"location":"Highlights/Readwise/Articles/Keep%20It%20Simple%2C%20Stupid%21%20Minimalism%20in%20Programming%20How%20Complexity%20Harms%20Your%20Productivity%20%20Finxter/","text":"Keep It Simple, Stupid! Minimalism in Programming: How Complexity Harms Your Productivity | Finxter \u00b6 Metadata \u00b6 Author: [[blog.finxter.com]] Full Title: Keep It Simple, Stupid! Minimalism in Programming: How Complexity Harms Your Productivity | Finxter Category: #Type/Highlights/Article URL: https://blog.finxter.com/minimalism-in-programming/ Highlights \u00b6 To answer the question right away, the best way to start is not by choosing a programming book and reading over all syntactical features of the programming language. Surprisingly, these coding books sell well\u2014even I am a seller of such books. However, interacting with thousands of programming students personally I realized that many ambitious students buy programming books as a commitment device to put the learning task on their ToDo lists\u2014if they\u2019ve spent money on the book, they better read it or the investment will be lost. But as so many other tasks on their ToDo lists, reading a programming book is seldomly one to be completed. ( View Highlight ) So, what is the best way to start to learn to program? In my opinion, the best way to start is to choose a practical code project\u2014a simple one if you\u2019re a beginner\u2014and push it to completion. Don\u2019t read coding books before you do this. Don\u2019t read random tutorials on the web. Don\u2019t scroll through endless feeds on StackOverflow. Just set up the project and start coding with the limited skills you have and your common sense. It\u2019s okay if you don\u2019t understand what you\u2019re doing, you will gradually increase your understanding. You read books and articles only to make progress on the project in front of you. By diving into the process of finishing your first project, you need to solve a number of highly relevant problems: Which code editor should you use? How to install Python? How to read input from a file? How to store the input in your program for later use? How to manipulate the input to obtain the desired output? By answering these questions, you gradually build a well-rounded skill set of a practitioner. Over time, you\u2019ll answer these questions better and better. Your speed and skill to solve these problems will grow. You\u2019ll be able to solve similar problems much bigger and you\u2019ll create your internal database of programming patterns and conceptual insights. Even advanced coders learn and improve with the exact same process\u2014only the coding projects have become much larger and more complicated. ( View Highlight ) You\u2019ll struggle with complexity in: finding bugs in ever-growing codebases, understanding code components and how they interact, choosing the right feature to be implemented next, understanding the mathematical and conceptual basics of the code. ( View Highlight ) Complexity is everywhere, at every stage of a project that comes to life. And the hidden costs of this complexity are very tangible: coders who are just starting out throw in the towel and the projects never see the light of day. The beginner argues: \u201ccoding is too difficult for me\u201d and he truly believes it\u2014even though nothing can be further from the truth. ( View Highlight ) The answer is straightforward, and I\u2019ve already stressed it a few times in this book: minimalism. Seek simplicity and focus \u2013 in every stage of the coding cycle. I want you to take this one concept out of the book: Take a radically minimalistic position in every area you\u2019ll encounter in the programming space. If this book can convince you to take more extreme measures to increase your focus, it has accomplished its mission! ( View Highlight ) What is Complexity? ( View Highlight ) Complexity: \u201ca whole, made up of parts, that is difficult to analyze, understand, or explain\u201d. ( View Highlight ) Tags: [[favorite]] If you are a coder, you are especially prone to overwhelming complexity. Let\u2019s dive into different sources of complexity in the field of programming: Complexity in a Project Lifecycle Complexity in Software and Algorithmic Theory Complexity in Learning Complexity in Processes Complexity in Social Networks Complexity in Your Daily Life Complexity in a Project Lifecycle ( View Highlight ) Planning ( View Highlight ) The first stage of the software development life cycle is the planning phase. From software engineering literature, you may know this as requirement analysis. The purpose of this phase is to determine how the end product will look like. A successful planning phase leads to a strictly defined set of required features to deliver to the customer or the end user. ( View Highlight ) This phase is crucial because it can save you from massive wastages of downstream energy in the following phases. Business owners know that capital allocation (or generally-speaking: resource allocation) is the single most important function of a CEO. The planning phase is where leverage plays out to its fullest extent: Planning mistakes can lead to millions of dollars\u2019 worth of wasted resources. On the other hand, careful planning has the power of setting the business up for great success in the years to follow. The planning phase is a great leverage point where you can apply your newly acquired skill of 80/20 thinking. ( View Highlight ) However, the planning phase is also very difficult to do right. ( View Highlight ) Why? Because of our major enemy that is lurking everywhere: complexity. It is complicated to assess risk in advance properly. It\u2019s equally complicated to figure out the strategic direction of a company or an organization. It\u2019s complicated to guess the customers\u2019 responses to a software project. It\u2019s complicated to weigh the positive impact of different feature candidates\u2014the features that are considered for inclusion. And it\u2019s complicated to determine the legal implications of a given software feature. Taken together, the sheer complexity of solving this multi-dimensional problem is killing us. ( View Highlight ) Defining ( View Highlight ) Compared to the previous phase, this phase is relatively simple. The defining phase consists of translating the results of the previous phase (requirements) into properly specified software requirements. In other words, it formalizes the output of the previous phase to gain approval or feedback from clients and end users who will later use the product. ( View Highlight ) Designing ( View Highlight ) The goal of the designing phase is to draft the architecture of the system, decide on the modules and components that deliver the defined functionality, and design the user interface \u2013 keeping the requirements in mind that were developed in the previous two phases. The gold standard of the designing phase is to create a crystal-clear picture on how the final software product will look like and how it is built. ( View Highlight ) Roughly speaking, you want maximum bang for your buck. ( View Highlight ) Building ( View Highlight ) This is where many coders want to spend all their time in. The building phase is where the transformation from the architectural draft to the software product happens. Here, your ideas transform into tangible results\u2014it feels satisfying to see your brainchild come to life. ( View Highlight ) Yet, the building phase is always full of new and emerging problems. Unexpected things happen that slow down the progress such as bugs in external libraries, performance issues, corrupted data, human mistakes, and many more. Building a software product is a highly complicated endeavor. To write great software, you must use an artificial language and properly explain to dumb machines what to do in every possible circumstance. A small spelling mistake (=bug) can decide over the correctness and viability of the whole software product. ( View Highlight ) Testing ( View Highlight ) You still must test the behavior of your software product for different user inputs and usage patterns. It seems like a minor detail, but this phase is often the most important of all! ( View Highlight ) In fact, it\u2019s so important that many practitioners now advocate the use of test-driven development where you don\u2019t even start to implement (in the previous phase) without having written all tests. While you can argue against that point of view \u2013 I haven\u2019t seen a way to rigorously deploy test-driven development in practice \u2013 it\u2019s generally a good idea to spend lots of time to think of different ways to test your product by creating test cases and checking if the software delivers the correct result for these test cases. ( View Highlight ) Deployment ( View Highlight ) Your software has passed the rigorous testing phase. Now, it\u2019s time to release it and throw it into the marketplace. ( View Highlight ) Complexity in Software and Algorithmic Theory ( View Highlight ) That\u2019s why algorithmic complexity is a thoroughly researched field with decades of progress and myriads of computer scientists who continuously reduce the algorithmic complexity of algorithms to solve the same problems quicker and quicker. In my opinion, the algorithms produced in decades of computer science research are among the most valuable technological assets of humanity. Those algorithms allow us to solve the same problems with fewer resources, not once, but over and over. We truly stand on the shoulders of giants. ( View Highlight ) Complexity in Learning ( View Highlight ) The world\u2019s information can be modeled as a huge network of interrelated chunks of information\u2014and no chunk of information is independent of other chunks. ( View Highlight ) In the year 2012, Google announced to populate a data structure called the \u201cKnowledge Graph\u201d with information. The knowledge graph represents information in a network-like structure\u2014which, instead of storing dumb and independent facts, maintained an interrelationship between different facts and pieces of information. ( View Highlight ) The Google search engine then used this interdependency of facts to enrich the search results with higher-level knowledge and to create many answers autonomously. ( View Highlight ) Example: small part of the knowledge graph may be about the famous computer scientist Alan Turing. In the knowledge graph, the concept of Alan Turing is connected to different pieces of information such as his birth year (2012), his field of study (computer science, philosophy, language theory), and his doctoral advisor (Alonzo Church). Each of those pieces of information is also connected to other facts (e.g., Alonzo Church\u2019s field of study was computer science as well), forming a massive network of interrelated facts. You can use this network to acquire new information and answer user queries programmatically. For example, a query about the \u201cfield of study of Turing\u2019s doctor father\u201d would result in the deducted answer \u201ccomputer science\u201d. While this may sound trivial to you, generating new factoids like these lead to a breakthrough in information retrieval and search engine relevancy. You\u2019d probably agree that it\u2019s far more effective to learn by association than by remembering unrelated facts. You can easily remember a story, but you struggle remembering the phone number of your mother! ( View Highlight ) If you study any field, you must accumulate knowledge about a great number of interrelated facts. Over time, you\u2019ll understand more than you understood before\u2014but you\u2019ll never understand everything. Knowledge is far too complex. There are too many dependencies and facts in the graph. You can learn more but the more you learn, the more you become aware of the limitations of your knowledge. It is obvious that complexity poses the most fundamental boundaries to your ambitions to learn. Learning and complexity are two sides of the same coin: complexity is at the boundary of the knowledge you\u2019ve already acquired. To learn more, you must first know how to control complexity. ( View Highlight ) We\u2019re getting kind of abstract here, so let\u2019s have a practical example! Say you want to program a trading bot that buys and sells assets according to a set of sophisticated rules. There\u2019s lots of useful knowledge that you could learn before starting your project. You could learn about concepts such as the basics of programming, distributed systems, databases, application programming interfaces (APIs), web services, machine learning, data science, maths and many more. ( View Highlight ) Fortunately, because you\u2019ve read this book, you\u2019ve attained the only effective weapon against complexity. This weapon has many names: focus, simplification, scaling down, reducing, minimalism. It\u2019s how you obtain success: you focus on mastering one area\u2014and forgetting about anything else. You reduce complexity with minimalism. You think first-principles and forget about the noise. You create one program, not many. Philosophically, you go for one full life and don\u2019t try to live one hundred partial ones. ( View Highlight ) Complexity in Processes ( View Highlight ) A process is a series of actions that you, a group of people, or even a machine takes with the goal of realizing a defined result. ( View Highlight ) If people are the lifeblood of a business, processes are the veins and arteries. If your arteries are clocked, you need to get rid of the bottlenecks quickly or your body will suffer. It\u2019s the same for a business: if the business suffers, you must remove bottlenecks in your business processes to stay alive. ( View Highlight ) Complexity in Your Daily Life or the Death of a Thousand Cuts ( View Highlight ) Now, the caveat: it has become almost impossible to engage in deep work if you don\u2019t brutally enforce it. The external world demands your attention. Your boss and your colleagues will regularly pop into your office. Your smartphone will demand your attention in, say, 20 minute intervals. Your email provider will present you with email after email\u2014each asking for a slice of your time. To make matters worse, not only the external world plays against your plan to engage in deep work\u2014your internal work does, too. Deep work results in delayed gratification. It\u2019s a satisfying feeling to have spent weeks of your time to complete a computer program that works. ( View Highlight ) How to Handle a Complex World ( View Highlight ) You should now see how complexity is the enemy of the lean and efficient organization and individual. You simply cannot become productive without mastering tactics and strategies to handle complexity. A simple but efficient tactic to overcome complexity in social networks is to uninstall them from your smartphone (I won\u2019t water down this recommendation only because some people assume it\u2019s not possible\u2014read Deep Work from Cal Newport if you want to learn how it can be done). A simple strategy to overcome complexity in business is to schedule a monthly session where you discuss with your teams tasks you can get rid of\u2014even knowing that these tasks may provide some value to some people (think: opportunity costs, not absolute value). ( View Highlight ) Let\u2019s recap some of the most important consequences of the preceding arguments: Complexity harms productivity due to the loss of focus it incurs. If you don\u2019t take control and full responsibility for this problem, it will quickly consume your most precious resource: time. At the end of your life, you won\u2019t judge whether you\u2019ve led a meaningful life based on how many emails you\u2019ve replied to, how many hours of computer games you\u2019ve played, or how many Sudokus you\u2019ve solved. ( View Highlight ) As the 80/20 principle, complexity is everywhere, and you constantly need to think about how to reduce complexity and simplify things. Keep it simple, stupid! ( View Highlight ) This article is based on a draft of a new chapter of my upcoming book \u201cFrom One to Zero: A Minimalistic Approach to Programming\u201d ( View Highlight )","title":"Keep It Simple, Stupid! Minimalism in Programming: How Complexity Harms Your Productivity | Finxter"},{"location":"Highlights/Readwise/Articles/Keep%20It%20Simple%2C%20Stupid%21%20Minimalism%20in%20Programming%20How%20Complexity%20Harms%20Your%20Productivity%20%20Finxter/#keep-it-simple-stupid-minimalism-in-programming-how-complexity-harms-your-productivity-finxter","text":"","title":"Keep It Simple, Stupid! Minimalism in Programming: How Complexity Harms Your Productivity | Finxter"},{"location":"Highlights/Readwise/Articles/Keep%20It%20Simple%2C%20Stupid%21%20Minimalism%20in%20Programming%20How%20Complexity%20Harms%20Your%20Productivity%20%20Finxter/#metadata","text":"Author: [[blog.finxter.com]] Full Title: Keep It Simple, Stupid! Minimalism in Programming: How Complexity Harms Your Productivity | Finxter Category: #Type/Highlights/Article URL: https://blog.finxter.com/minimalism-in-programming/","title":"Metadata"},{"location":"Highlights/Readwise/Articles/Keep%20It%20Simple%2C%20Stupid%21%20Minimalism%20in%20Programming%20How%20Complexity%20Harms%20Your%20Productivity%20%20Finxter/#highlights","text":"To answer the question right away, the best way to start is not by choosing a programming book and reading over all syntactical features of the programming language. Surprisingly, these coding books sell well\u2014even I am a seller of such books. However, interacting with thousands of programming students personally I realized that many ambitious students buy programming books as a commitment device to put the learning task on their ToDo lists\u2014if they\u2019ve spent money on the book, they better read it or the investment will be lost. But as so many other tasks on their ToDo lists, reading a programming book is seldomly one to be completed. ( View Highlight ) So, what is the best way to start to learn to program? In my opinion, the best way to start is to choose a practical code project\u2014a simple one if you\u2019re a beginner\u2014and push it to completion. Don\u2019t read coding books before you do this. Don\u2019t read random tutorials on the web. Don\u2019t scroll through endless feeds on StackOverflow. Just set up the project and start coding with the limited skills you have and your common sense. It\u2019s okay if you don\u2019t understand what you\u2019re doing, you will gradually increase your understanding. You read books and articles only to make progress on the project in front of you. By diving into the process of finishing your first project, you need to solve a number of highly relevant problems: Which code editor should you use? How to install Python? How to read input from a file? How to store the input in your program for later use? How to manipulate the input to obtain the desired output? By answering these questions, you gradually build a well-rounded skill set of a practitioner. Over time, you\u2019ll answer these questions better and better. Your speed and skill to solve these problems will grow. You\u2019ll be able to solve similar problems much bigger and you\u2019ll create your internal database of programming patterns and conceptual insights. Even advanced coders learn and improve with the exact same process\u2014only the coding projects have become much larger and more complicated. ( View Highlight ) You\u2019ll struggle with complexity in: finding bugs in ever-growing codebases, understanding code components and how they interact, choosing the right feature to be implemented next, understanding the mathematical and conceptual basics of the code. ( View Highlight ) Complexity is everywhere, at every stage of a project that comes to life. And the hidden costs of this complexity are very tangible: coders who are just starting out throw in the towel and the projects never see the light of day. The beginner argues: \u201ccoding is too difficult for me\u201d and he truly believes it\u2014even though nothing can be further from the truth. ( View Highlight ) The answer is straightforward, and I\u2019ve already stressed it a few times in this book: minimalism. Seek simplicity and focus \u2013 in every stage of the coding cycle. I want you to take this one concept out of the book: Take a radically minimalistic position in every area you\u2019ll encounter in the programming space. If this book can convince you to take more extreme measures to increase your focus, it has accomplished its mission! ( View Highlight ) What is Complexity? ( View Highlight ) Complexity: \u201ca whole, made up of parts, that is difficult to analyze, understand, or explain\u201d. ( View Highlight ) Tags: [[favorite]] If you are a coder, you are especially prone to overwhelming complexity. Let\u2019s dive into different sources of complexity in the field of programming: Complexity in a Project Lifecycle Complexity in Software and Algorithmic Theory Complexity in Learning Complexity in Processes Complexity in Social Networks Complexity in Your Daily Life Complexity in a Project Lifecycle ( View Highlight ) Planning ( View Highlight ) The first stage of the software development life cycle is the planning phase. From software engineering literature, you may know this as requirement analysis. The purpose of this phase is to determine how the end product will look like. A successful planning phase leads to a strictly defined set of required features to deliver to the customer or the end user. ( View Highlight ) This phase is crucial because it can save you from massive wastages of downstream energy in the following phases. Business owners know that capital allocation (or generally-speaking: resource allocation) is the single most important function of a CEO. The planning phase is where leverage plays out to its fullest extent: Planning mistakes can lead to millions of dollars\u2019 worth of wasted resources. On the other hand, careful planning has the power of setting the business up for great success in the years to follow. The planning phase is a great leverage point where you can apply your newly acquired skill of 80/20 thinking. ( View Highlight ) However, the planning phase is also very difficult to do right. ( View Highlight ) Why? Because of our major enemy that is lurking everywhere: complexity. It is complicated to assess risk in advance properly. It\u2019s equally complicated to figure out the strategic direction of a company or an organization. It\u2019s complicated to guess the customers\u2019 responses to a software project. It\u2019s complicated to weigh the positive impact of different feature candidates\u2014the features that are considered for inclusion. And it\u2019s complicated to determine the legal implications of a given software feature. Taken together, the sheer complexity of solving this multi-dimensional problem is killing us. ( View Highlight ) Defining ( View Highlight ) Compared to the previous phase, this phase is relatively simple. The defining phase consists of translating the results of the previous phase (requirements) into properly specified software requirements. In other words, it formalizes the output of the previous phase to gain approval or feedback from clients and end users who will later use the product. ( View Highlight ) Designing ( View Highlight ) The goal of the designing phase is to draft the architecture of the system, decide on the modules and components that deliver the defined functionality, and design the user interface \u2013 keeping the requirements in mind that were developed in the previous two phases. The gold standard of the designing phase is to create a crystal-clear picture on how the final software product will look like and how it is built. ( View Highlight ) Roughly speaking, you want maximum bang for your buck. ( View Highlight ) Building ( View Highlight ) This is where many coders want to spend all their time in. The building phase is where the transformation from the architectural draft to the software product happens. Here, your ideas transform into tangible results\u2014it feels satisfying to see your brainchild come to life. ( View Highlight ) Yet, the building phase is always full of new and emerging problems. Unexpected things happen that slow down the progress such as bugs in external libraries, performance issues, corrupted data, human mistakes, and many more. Building a software product is a highly complicated endeavor. To write great software, you must use an artificial language and properly explain to dumb machines what to do in every possible circumstance. A small spelling mistake (=bug) can decide over the correctness and viability of the whole software product. ( View Highlight ) Testing ( View Highlight ) You still must test the behavior of your software product for different user inputs and usage patterns. It seems like a minor detail, but this phase is often the most important of all! ( View Highlight ) In fact, it\u2019s so important that many practitioners now advocate the use of test-driven development where you don\u2019t even start to implement (in the previous phase) without having written all tests. While you can argue against that point of view \u2013 I haven\u2019t seen a way to rigorously deploy test-driven development in practice \u2013 it\u2019s generally a good idea to spend lots of time to think of different ways to test your product by creating test cases and checking if the software delivers the correct result for these test cases. ( View Highlight ) Deployment ( View Highlight ) Your software has passed the rigorous testing phase. Now, it\u2019s time to release it and throw it into the marketplace. ( View Highlight ) Complexity in Software and Algorithmic Theory ( View Highlight ) That\u2019s why algorithmic complexity is a thoroughly researched field with decades of progress and myriads of computer scientists who continuously reduce the algorithmic complexity of algorithms to solve the same problems quicker and quicker. In my opinion, the algorithms produced in decades of computer science research are among the most valuable technological assets of humanity. Those algorithms allow us to solve the same problems with fewer resources, not once, but over and over. We truly stand on the shoulders of giants. ( View Highlight ) Complexity in Learning ( View Highlight ) The world\u2019s information can be modeled as a huge network of interrelated chunks of information\u2014and no chunk of information is independent of other chunks. ( View Highlight ) In the year 2012, Google announced to populate a data structure called the \u201cKnowledge Graph\u201d with information. The knowledge graph represents information in a network-like structure\u2014which, instead of storing dumb and independent facts, maintained an interrelationship between different facts and pieces of information. ( View Highlight ) The Google search engine then used this interdependency of facts to enrich the search results with higher-level knowledge and to create many answers autonomously. ( View Highlight ) Example: small part of the knowledge graph may be about the famous computer scientist Alan Turing. In the knowledge graph, the concept of Alan Turing is connected to different pieces of information such as his birth year (2012), his field of study (computer science, philosophy, language theory), and his doctoral advisor (Alonzo Church). Each of those pieces of information is also connected to other facts (e.g., Alonzo Church\u2019s field of study was computer science as well), forming a massive network of interrelated facts. You can use this network to acquire new information and answer user queries programmatically. For example, a query about the \u201cfield of study of Turing\u2019s doctor father\u201d would result in the deducted answer \u201ccomputer science\u201d. While this may sound trivial to you, generating new factoids like these lead to a breakthrough in information retrieval and search engine relevancy. You\u2019d probably agree that it\u2019s far more effective to learn by association than by remembering unrelated facts. You can easily remember a story, but you struggle remembering the phone number of your mother! ( View Highlight ) If you study any field, you must accumulate knowledge about a great number of interrelated facts. Over time, you\u2019ll understand more than you understood before\u2014but you\u2019ll never understand everything. Knowledge is far too complex. There are too many dependencies and facts in the graph. You can learn more but the more you learn, the more you become aware of the limitations of your knowledge. It is obvious that complexity poses the most fundamental boundaries to your ambitions to learn. Learning and complexity are two sides of the same coin: complexity is at the boundary of the knowledge you\u2019ve already acquired. To learn more, you must first know how to control complexity. ( View Highlight ) We\u2019re getting kind of abstract here, so let\u2019s have a practical example! Say you want to program a trading bot that buys and sells assets according to a set of sophisticated rules. There\u2019s lots of useful knowledge that you could learn before starting your project. You could learn about concepts such as the basics of programming, distributed systems, databases, application programming interfaces (APIs), web services, machine learning, data science, maths and many more. ( View Highlight ) Fortunately, because you\u2019ve read this book, you\u2019ve attained the only effective weapon against complexity. This weapon has many names: focus, simplification, scaling down, reducing, minimalism. It\u2019s how you obtain success: you focus on mastering one area\u2014and forgetting about anything else. You reduce complexity with minimalism. You think first-principles and forget about the noise. You create one program, not many. Philosophically, you go for one full life and don\u2019t try to live one hundred partial ones. ( View Highlight ) Complexity in Processes ( View Highlight ) A process is a series of actions that you, a group of people, or even a machine takes with the goal of realizing a defined result. ( View Highlight ) If people are the lifeblood of a business, processes are the veins and arteries. If your arteries are clocked, you need to get rid of the bottlenecks quickly or your body will suffer. It\u2019s the same for a business: if the business suffers, you must remove bottlenecks in your business processes to stay alive. ( View Highlight ) Complexity in Your Daily Life or the Death of a Thousand Cuts ( View Highlight ) Now, the caveat: it has become almost impossible to engage in deep work if you don\u2019t brutally enforce it. The external world demands your attention. Your boss and your colleagues will regularly pop into your office. Your smartphone will demand your attention in, say, 20 minute intervals. Your email provider will present you with email after email\u2014each asking for a slice of your time. To make matters worse, not only the external world plays against your plan to engage in deep work\u2014your internal work does, too. Deep work results in delayed gratification. It\u2019s a satisfying feeling to have spent weeks of your time to complete a computer program that works. ( View Highlight ) How to Handle a Complex World ( View Highlight ) You should now see how complexity is the enemy of the lean and efficient organization and individual. You simply cannot become productive without mastering tactics and strategies to handle complexity. A simple but efficient tactic to overcome complexity in social networks is to uninstall them from your smartphone (I won\u2019t water down this recommendation only because some people assume it\u2019s not possible\u2014read Deep Work from Cal Newport if you want to learn how it can be done). A simple strategy to overcome complexity in business is to schedule a monthly session where you discuss with your teams tasks you can get rid of\u2014even knowing that these tasks may provide some value to some people (think: opportunity costs, not absolute value). ( View Highlight ) Let\u2019s recap some of the most important consequences of the preceding arguments: Complexity harms productivity due to the loss of focus it incurs. If you don\u2019t take control and full responsibility for this problem, it will quickly consume your most precious resource: time. At the end of your life, you won\u2019t judge whether you\u2019ve led a meaningful life based on how many emails you\u2019ve replied to, how many hours of computer games you\u2019ve played, or how many Sudokus you\u2019ve solved. ( View Highlight ) As the 80/20 principle, complexity is everywhere, and you constantly need to think about how to reduce complexity and simplify things. Keep it simple, stupid! ( View Highlight ) This article is based on a draft of a new chapter of my upcoming book \u201cFrom One to Zero: A Minimalistic Approach to Programming\u201d ( View Highlight )","title":"Highlights"},{"location":"Highlights/Readwise/Articles/Knoco%20Stories%20What%27s%20Unique%20About%20Knowledge%20Management/","text":"Knoco Stories: What's Unique About Knowledge Management? \u00b6 Metadata \u00b6 Author: Full Title: Knoco Stories: What's Unique About Knowledge Management? Category: #Type/Highlights/Article URL: http://www.nickmilton.com/2014/07/whats-unique-about-knowledge-management.html Highlights \u00b6 Document management is a subset of information management. Document management covers the management of electronic documents, whether they are knowledge or not. Knowledge Management covers the management of knowledge, some of which may be codified within documents. As above, there is an overlap between the two, as well as distinct separate areas.","title":"Knoco Stories: What's Unique About Knowledge Management?"},{"location":"Highlights/Readwise/Articles/Knoco%20Stories%20What%27s%20Unique%20About%20Knowledge%20Management/#knoco-stories-whats-unique-about-knowledge-management","text":"","title":"Knoco Stories: What's Unique About Knowledge Management?"},{"location":"Highlights/Readwise/Articles/Knoco%20Stories%20What%27s%20Unique%20About%20Knowledge%20Management/#metadata","text":"Author: Full Title: Knoco Stories: What's Unique About Knowledge Management? Category: #Type/Highlights/Article URL: http://www.nickmilton.com/2014/07/whats-unique-about-knowledge-management.html","title":"Metadata"},{"location":"Highlights/Readwise/Articles/Knoco%20Stories%20What%27s%20Unique%20About%20Knowledge%20Management/#highlights","text":"Document management is a subset of information management. Document management covers the management of electronic documents, whether they are knowledge or not. Knowledge Management covers the management of knowledge, some of which may be codified within documents. As above, there is an overlap between the two, as well as distinct separate areas.","title":"Highlights"},{"location":"Highlights/Readwise/Articles/Kubernetes%20Explained%20to%20Product%20Managers/","text":"Kubernetes Explained to Product Managers \u00b6 Metadata \u00b6 Author: [[dev.to]] Full Title: Kubernetes Explained to Product Managers Category: #Type/Highlights/Article URL: https://dev.to/strio/kubernetes-explained-to-product-managers-4b1a Highlights \u00b6 containers, Docker, Kubernetes or clusters ( View Highlight ) some basic knowledge should allow you to collaborate more fluidly with your team, while being able to get an idea of the stakes, either because your company is considering migrating to Kubernetes, or because they already use this technology on a daily basis. ( View Highlight ) Why is everyone talking about Kubernetes? ( View Highlight ) Kubernetes is an open-source project initiated by Google, and launched in 2014. Google being praised for its high performing infrastructure and applications, an open-source project originating from the company is kind of a guarantee that it might be helpful to other organizations. Google has a tradition of open-source, with more than 2,000 projects launched to date. Some of them are particularly famous, like the Go language or Spinnaker (although launched by Netflix, it's been considerably extended by Google). ( View Highlight ) Today, Kubernetes is no longer managed by Google, as the company passed the project to the Cloud Native Computing Foundation, or CNCF, a non-profit organization hosting critical infrastructure projects. Although launched only 6 years ago, Kubernetes is becoming a standard used by an increasing number of companies. 78% of companies using container orchestration have chosen Kubernetes, from tech companies, to large enterprises or rising startups. Think Google, Slack, The New York Times, BlaBlaCar or Huawei. ( View Highlight ) So what exactly is Kubernetes? ( View Highlight ) The name Kubernetes originates from Greek, meaning helmsman or pilot. ( View Highlight ) Note: Kubernetes=\u201cHelmsman or Pilot\u201d in Greek. Look towards Latin, Greek, or other ancient languages for cool names! Kubernetes defines itself as \"an open-source system for automating deployment, scaling, and management of containerized applications.\" ( View Highlight ) Since Kubernetes orchestrates containers, let's start by examining what containers actually are. Containers have been made popular by an open-source project called Docker, created in 2013 ( View Highlight ) Think of the container as a standardized unit of software. It is a way to package software into standardized units for Development, Shipment and Deployment. You can imagine containers as same-sized boxes built around your code, which allow you to manipulate them much more easily than if the code was on its own, without any standard. Thanks to this standardization, containers allow complex architecture to be managed much more easily. ( View Highlight ) A container is composed of several elements. To be precise, each container has its own filesystem, CPU, memory or process space. They are fully decoupled from the architecture, which allows them to be portable. ( View Highlight ) Containers are great but they must be managed and orchestrated. For example, if a container goes down, another container needs to start instead to avoid downtime on the app. Instead of moving containers one by one, that's where orchestration tools such as Kubernetes comes in. Kubernetes is an orchestration tool, that takes care of the orchestration and scaling of containers. Without Kubernetes, containers would be handled by hand. As you can imagine, the more the containers the more the hand work, which is not compatible with the growth of an application. Kubernetes runs these containers for you and therefore is your best ally when your application is scaling. ( View Highlight ) What makes K8S special? ( View Highlight ) Kubernetes runs containers at scale and have the following features: Declarative: Declarative refers to a model where you don't have to specify and plan exactly how things will happen. Instead, you just state what your desired outcome is, without thinking at the way it is achieved. This allows Kubernetes users to forget about the complex details, to focus only on the outcome. Automation: Thanks to this declarative mode, Kubernetes achieves automation. Rather than spending countless hours working on the details of containers orchestration, Kubernetes abstracts it for you. Portable: Kubernetes can be used whatever the cloud provider or the kind of infrastructure used, which means it is portable. ( View Highlight ) Kubernetes can run anywhere. It is cloud agnostic and can run on virtual machines, which means there is no vendor lock-in ( View Highlight ) Kubernetes accompanies the scaling of applications and helps manage complex architectures and infrastructures ( View Highlight ) Kubernetes allows developers to be more productive ( View Highlight ) Kubernetes vocabulary ( View Highlight ) Basically, Kubernetes is made of clusters, nodes and pods. When you deploy Kubernetes, you get a cluster. Inside this cluster, you can find nodes. You deploy pods on these nodes. ( View Highlight ) Cluster: It is a collection of hosts (servers) that helps you to aggregate their available resources. That includes ram, CPU, ram, disk, and their devices into a usable pool. ( View Highlight ) Nodes: Nodes are controlled by the control plane. Nodes are a virtual or physical machine. Nodes are the machinery needed to deploy pods. ( View Highlight ) Pods: Pods are the smallest units in Kubernetes. A pod is a group of one or more containers, with shared storage/network resources, and a specification for how to run the containers. ( View Highlight ) Want to go further? Here is a set of beginners resources about Kubernetes. Kubernetes documentation Why and when you should use Kubernetes More about Kubernetes components A Youtube Kubernetes tutorial for beginners The illustrated children's guide to Kubernetes ( View Highlight )","title":"Kubernetes Explained to Product Managers"},{"location":"Highlights/Readwise/Articles/Kubernetes%20Explained%20to%20Product%20Managers/#kubernetes-explained-to-product-managers","text":"","title":"Kubernetes Explained to Product Managers"},{"location":"Highlights/Readwise/Articles/Kubernetes%20Explained%20to%20Product%20Managers/#metadata","text":"Author: [[dev.to]] Full Title: Kubernetes Explained to Product Managers Category: #Type/Highlights/Article URL: https://dev.to/strio/kubernetes-explained-to-product-managers-4b1a","title":"Metadata"},{"location":"Highlights/Readwise/Articles/Kubernetes%20Explained%20to%20Product%20Managers/#highlights","text":"containers, Docker, Kubernetes or clusters ( View Highlight ) some basic knowledge should allow you to collaborate more fluidly with your team, while being able to get an idea of the stakes, either because your company is considering migrating to Kubernetes, or because they already use this technology on a daily basis. ( View Highlight ) Why is everyone talking about Kubernetes? ( View Highlight ) Kubernetes is an open-source project initiated by Google, and launched in 2014. Google being praised for its high performing infrastructure and applications, an open-source project originating from the company is kind of a guarantee that it might be helpful to other organizations. Google has a tradition of open-source, with more than 2,000 projects launched to date. Some of them are particularly famous, like the Go language or Spinnaker (although launched by Netflix, it's been considerably extended by Google). ( View Highlight ) Today, Kubernetes is no longer managed by Google, as the company passed the project to the Cloud Native Computing Foundation, or CNCF, a non-profit organization hosting critical infrastructure projects. Although launched only 6 years ago, Kubernetes is becoming a standard used by an increasing number of companies. 78% of companies using container orchestration have chosen Kubernetes, from tech companies, to large enterprises or rising startups. Think Google, Slack, The New York Times, BlaBlaCar or Huawei. ( View Highlight ) So what exactly is Kubernetes? ( View Highlight ) The name Kubernetes originates from Greek, meaning helmsman or pilot. ( View Highlight ) Note: Kubernetes=\u201cHelmsman or Pilot\u201d in Greek. Look towards Latin, Greek, or other ancient languages for cool names! Kubernetes defines itself as \"an open-source system for automating deployment, scaling, and management of containerized applications.\" ( View Highlight ) Since Kubernetes orchestrates containers, let's start by examining what containers actually are. Containers have been made popular by an open-source project called Docker, created in 2013 ( View Highlight ) Think of the container as a standardized unit of software. It is a way to package software into standardized units for Development, Shipment and Deployment. You can imagine containers as same-sized boxes built around your code, which allow you to manipulate them much more easily than if the code was on its own, without any standard. Thanks to this standardization, containers allow complex architecture to be managed much more easily. ( View Highlight ) A container is composed of several elements. To be precise, each container has its own filesystem, CPU, memory or process space. They are fully decoupled from the architecture, which allows them to be portable. ( View Highlight ) Containers are great but they must be managed and orchestrated. For example, if a container goes down, another container needs to start instead to avoid downtime on the app. Instead of moving containers one by one, that's where orchestration tools such as Kubernetes comes in. Kubernetes is an orchestration tool, that takes care of the orchestration and scaling of containers. Without Kubernetes, containers would be handled by hand. As you can imagine, the more the containers the more the hand work, which is not compatible with the growth of an application. Kubernetes runs these containers for you and therefore is your best ally when your application is scaling. ( View Highlight ) What makes K8S special? ( View Highlight ) Kubernetes runs containers at scale and have the following features: Declarative: Declarative refers to a model where you don't have to specify and plan exactly how things will happen. Instead, you just state what your desired outcome is, without thinking at the way it is achieved. This allows Kubernetes users to forget about the complex details, to focus only on the outcome. Automation: Thanks to this declarative mode, Kubernetes achieves automation. Rather than spending countless hours working on the details of containers orchestration, Kubernetes abstracts it for you. Portable: Kubernetes can be used whatever the cloud provider or the kind of infrastructure used, which means it is portable. ( View Highlight ) Kubernetes can run anywhere. It is cloud agnostic and can run on virtual machines, which means there is no vendor lock-in ( View Highlight ) Kubernetes accompanies the scaling of applications and helps manage complex architectures and infrastructures ( View Highlight ) Kubernetes allows developers to be more productive ( View Highlight ) Kubernetes vocabulary ( View Highlight ) Basically, Kubernetes is made of clusters, nodes and pods. When you deploy Kubernetes, you get a cluster. Inside this cluster, you can find nodes. You deploy pods on these nodes. ( View Highlight ) Cluster: It is a collection of hosts (servers) that helps you to aggregate their available resources. That includes ram, CPU, ram, disk, and their devices into a usable pool. ( View Highlight ) Nodes: Nodes are controlled by the control plane. Nodes are a virtual or physical machine. Nodes are the machinery needed to deploy pods. ( View Highlight ) Pods: Pods are the smallest units in Kubernetes. A pod is a group of one or more containers, with shared storage/network resources, and a specification for how to run the containers. ( View Highlight ) Want to go further? Here is a set of beginners resources about Kubernetes. Kubernetes documentation Why and when you should use Kubernetes More about Kubernetes components A Youtube Kubernetes tutorial for beginners The illustrated children's guide to Kubernetes ( View Highlight )","title":"Highlights"},{"location":"Highlights/Readwise/Articles/Last-Minute%20Moving%20Tips%20How%20to%20Pack%20in%20a%20Pinch%20-%20Updater/","text":"Last-Minute Moving Tips: How to Pack in a Pinch - Updater \u00b6 Metadata \u00b6 Author: [[updater.com]] Full Title: Last-Minute Moving Tips: How to Pack in a Pinch - Updater Category: #Type/Highlights/Article Document Tags: [[Liked]] URL: https://updater.com/moving-tips/last-minute-moving-tips/ Highlights \u00b6 Make a list. This last-minute moving tip is essential and will set you up for success further down the list. Before you get down to business, take a walk through your home or apartment to assess items that you\u2019ll definitely want in your new place \u2014 versus items you might leave behind. Make three lists in an effort to keep yourself organized: Pack, Donate, and Trash. Create these lists on whatever is convenient for you, whether that\u2019s a notebook or your phone. Write down everything that needs to be done, packed, donated or thrown out. ( View Highlight )","title":"Last-Minute Moving Tips: How to Pack in a Pinch - Updater"},{"location":"Highlights/Readwise/Articles/Last-Minute%20Moving%20Tips%20How%20to%20Pack%20in%20a%20Pinch%20-%20Updater/#last-minute-moving-tips-how-to-pack-in-a-pinch-updater","text":"","title":"Last-Minute Moving Tips: How to Pack in a Pinch - Updater"},{"location":"Highlights/Readwise/Articles/Last-Minute%20Moving%20Tips%20How%20to%20Pack%20in%20a%20Pinch%20-%20Updater/#metadata","text":"Author: [[updater.com]] Full Title: Last-Minute Moving Tips: How to Pack in a Pinch - Updater Category: #Type/Highlights/Article Document Tags: [[Liked]] URL: https://updater.com/moving-tips/last-minute-moving-tips/","title":"Metadata"},{"location":"Highlights/Readwise/Articles/Last-Minute%20Moving%20Tips%20How%20to%20Pack%20in%20a%20Pinch%20-%20Updater/#highlights","text":"Make a list. This last-minute moving tip is essential and will set you up for success further down the list. Before you get down to business, take a walk through your home or apartment to assess items that you\u2019ll definitely want in your new place \u2014 versus items you might leave behind. Make three lists in an effort to keep yourself organized: Pack, Donate, and Trash. Create these lists on whatever is convenient for you, whether that\u2019s a notebook or your phone. Write down everything that needs to be done, packed, donated or thrown out. ( View Highlight )","title":"Highlights"},{"location":"Highlights/Readwise/Articles/LeaRning%20Path%20on%20R%20-%20Step%20by%20Step%20Guide%20to%20Learn%20Data%20Science%20on%20R/","text":"LeaRning Path on R - Step by Step Guide to Learn Data Science on R \u00b6 Metadata \u00b6 Author: Full Title: LeaRning Path on R - Step by Step Guide to Learn Data Science on R Category: #Type/Highlights/Article URL: https://www.analyticsvidhya.com/learning-paths-data-science-business-analytics-business-intelligence-big-data/learning-path-r-data-science/ Highlights \u00b6 Step 0: Warming up Before starting your journey, the first question to answer is: Why use R? or How would R be useful? R is a fast growing open source contestant to commercial software packages like SAS, STATA and SPSS. The demand for R skills in the job marketing is rising rapidly, and recently companies such as Microsoft pledged their commitment to R as a lingua franca of Data Science. Step 1: Setting up your machine The easiest way to set-up R is by downloading a copy of it on your local computer from the Comprehensive R Archive Network (CRAN). You can choose between binaries for Linux, Mac and Windows. Although you could consider working with the basic R console, we recommend you to install one of R\u2019s integrated development environment (IDE). The most well known IDE is RStudio, which makes R coding much easier and faster as it allows you to type multiple lines of code, handle plots, install and maintain packages and navigate your programming environment much more productively. An alternative to RStudio is Architect, an eclipse-based workbench. (Need a GUI? Check R-commander or Deducer) Assignment Install R, and RStudio Install Packages Rcmdr, rattle, and Deducer. Install all suggested packages or dependencies including GUI. Load these packages using library command and open these GUIs one by one. Step 2: Learn the basics of R language In addition to these online resources, you can also consider the following excellent written resources: The free introduction to R manual by CRAN Jared Lander\u2019s R for Everyone Quick-R Specifically learn: read.table, data frames, table, summary, describe, loading and installing packages, data visualization using plot command Assignment Take the free online R tutorial by DataCamp and become familiar with basic R syntax Create a github account at http://github.com Learn to troubleshoot package installation above by googling for help. Install package swirl and learn R programming (see above) Step 3: Understanding the R community The major reason R is growing rapidly and is such a huge success, is because of its strong community. At the center of this is R\u2019s package ecosystem. These packages can be downloaded from the Comprehensive R Archive Network, or from bioconductor, github and bitbucket. At Rdocumentation you can easily search packages from CRAN, github and bioconductor that will fit your needs for the task at hand. Next to the package ecosystem R, you can also easily find help and feedback on your R endeavours. First of all there is R\u2019s built-in help system which you can access via the command ? and the name of e.g. a function. There is also Analytics Vidhya Discussions, Stack Overflow where R is one of the fastests growing languages. To end, there are numerous blogs run by R enthusiast, a great collection of these is aggregated at R-bloggers. Assignment Understand the R package ecosystem by visiting Cran Task Views Sign up at http://r-bloggers.com for the daily newsletter Step 4: Importing and manipulating your data Importing and manipulating your data are important steps in the data science workflow. R allows for the import of different data formats using specific packages that can make your job easier: readr for importing flat files The readxl package for getting excel files into R The haven package lets you import SAS, STATA and SPSS data files into R. Databases: connect via packages like RMySQL and RpostgreSQL, and access and manipulate via DBI rvest for webscraping Once your data is available in your working environment you are ready to start manipulating it using these packages: The stringr package for string manipulation. For data frame like objects learn the ins and outs of the dplyr package (try this course). Need to perform heavy data wrangling tasks? Check out the data.table package Performing time series analysis? Try out packages like like zoo, xts and quantmod. Assignment Master the packages mentioned for importing data via this \u201cImporting Data Into R\u201d course, or read these articles 1,2,3 and 4. See this Data Wrangling with R video by RStudio Read and practice how to work with packages like dplyr, tidyr, and data.table. Step 5: Effective Data Visualization 5.3: HTML widgets A very promising new tool for visualizations in R is the usage of HTML widgets. HTML widgets allow you to create interactive web visualizations in an easy way (see the tutorial by RStudio) and mastering this type of visualizations is very likely to become a must have R skill. Impress your friends and colleagues with these visualizations: Dynamic maps with leaflet Time-series data charting using dygraphs Interactive tables (DataTables) DiagrammeR for diagrams and flowcharts D3 scatterplots, line charts, and histograms with MetricsGraphics Assignment Make sure you have understand the principles of the grammar of graphics. Take the ggplot2 tutorial Follow the html widgets tutorial by RStudio Step 7: Reporting Results Communicating your results and sharing your insights with fellow data science enthusiast is equally important as the analysis itself. Luckily R has some very nifty tools to do this that can save you a lot of time. The first is R Markdown , a great tool for reporting your data analysis in a reproducible manner based on knitr and pandoc. With R markdown, R generates a final document that replaces the R code with its results. This document can be in an html, word, pfd, ioslides, etc. format. You can learn more on it via this tutorial and use this cheat sheet a a reference. Next to R Markdown there is also ReporteRs. ReporteRs is an R package for creating Microsoft (Word docx and Powerpoint pptx) and html documents and runs on Windows, Linux, Unix and Mac OS systems. Just like R Markdown it\u2019s an ideal tool to automate reporting generation from R. See here how to get started. Last but not least there is Shiny, one of the most exciting tools in R around at the moment. Shiny makes it incredibly easy to build interactive web applications with R. It allows you to turn your analysis into interactive web applications without needing to know HTML, CSS or Javascript. If you want to get started with Shiny (and believe us you should!), checkout the RStudio learning portal. Assignment Create your first interactive report using RMarkdown and/or ReporteRs Try to build your very first Shiny app Bonus Step: Practice You will only become a great R programmer through practice. Therefore, make sure to tackle new data science challenges regularly. The best recommendation we can make to you here is to start competing with fellow data scientists on Kaggle: https://www.kaggle.com/c/titanic-gettingStarted. Test your R Skills on live challenges \u2013 Practice Problems Step 9: Becoming an R Master Now that you have learnt most of data analytics using R , it is time to give some advanced topics a shot. There is a good chance that you already know many of these, but have a look at these tutorials too. Advanced R by Hadley Wickham Using R together with Hadoop, MongoDB or NoSQL The RevoScaleR package by Microsoft (formerly Revolution Analytics)","title":"LeaRning Path on R - Step by Step Guide to Learn Data Science on R"},{"location":"Highlights/Readwise/Articles/LeaRning%20Path%20on%20R%20-%20Step%20by%20Step%20Guide%20to%20Learn%20Data%20Science%20on%20R/#learning-path-on-r-step-by-step-guide-to-learn-data-science-on-r","text":"","title":"LeaRning Path on R - Step by Step Guide to Learn Data Science on R"},{"location":"Highlights/Readwise/Articles/LeaRning%20Path%20on%20R%20-%20Step%20by%20Step%20Guide%20to%20Learn%20Data%20Science%20on%20R/#metadata","text":"Author: Full Title: LeaRning Path on R - Step by Step Guide to Learn Data Science on R Category: #Type/Highlights/Article URL: https://www.analyticsvidhya.com/learning-paths-data-science-business-analytics-business-intelligence-big-data/learning-path-r-data-science/","title":"Metadata"},{"location":"Highlights/Readwise/Articles/LeaRning%20Path%20on%20R%20-%20Step%20by%20Step%20Guide%20to%20Learn%20Data%20Science%20on%20R/#highlights","text":"Step 0: Warming up Before starting your journey, the first question to answer is: Why use R? or How would R be useful? R is a fast growing open source contestant to commercial software packages like SAS, STATA and SPSS. The demand for R skills in the job marketing is rising rapidly, and recently companies such as Microsoft pledged their commitment to R as a lingua franca of Data Science. Step 1: Setting up your machine The easiest way to set-up R is by downloading a copy of it on your local computer from the Comprehensive R Archive Network (CRAN). You can choose between binaries for Linux, Mac and Windows. Although you could consider working with the basic R console, we recommend you to install one of R\u2019s integrated development environment (IDE). The most well known IDE is RStudio, which makes R coding much easier and faster as it allows you to type multiple lines of code, handle plots, install and maintain packages and navigate your programming environment much more productively. An alternative to RStudio is Architect, an eclipse-based workbench. (Need a GUI? Check R-commander or Deducer) Assignment Install R, and RStudio Install Packages Rcmdr, rattle, and Deducer. Install all suggested packages or dependencies including GUI. Load these packages using library command and open these GUIs one by one. Step 2: Learn the basics of R language In addition to these online resources, you can also consider the following excellent written resources: The free introduction to R manual by CRAN Jared Lander\u2019s R for Everyone Quick-R Specifically learn: read.table, data frames, table, summary, describe, loading and installing packages, data visualization using plot command Assignment Take the free online R tutorial by DataCamp and become familiar with basic R syntax Create a github account at http://github.com Learn to troubleshoot package installation above by googling for help. Install package swirl and learn R programming (see above) Step 3: Understanding the R community The major reason R is growing rapidly and is such a huge success, is because of its strong community. At the center of this is R\u2019s package ecosystem. These packages can be downloaded from the Comprehensive R Archive Network, or from bioconductor, github and bitbucket. At Rdocumentation you can easily search packages from CRAN, github and bioconductor that will fit your needs for the task at hand. Next to the package ecosystem R, you can also easily find help and feedback on your R endeavours. First of all there is R\u2019s built-in help system which you can access via the command ? and the name of e.g. a function. There is also Analytics Vidhya Discussions, Stack Overflow where R is one of the fastests growing languages. To end, there are numerous blogs run by R enthusiast, a great collection of these is aggregated at R-bloggers. Assignment Understand the R package ecosystem by visiting Cran Task Views Sign up at http://r-bloggers.com for the daily newsletter Step 4: Importing and manipulating your data Importing and manipulating your data are important steps in the data science workflow. R allows for the import of different data formats using specific packages that can make your job easier: readr for importing flat files The readxl package for getting excel files into R The haven package lets you import SAS, STATA and SPSS data files into R. Databases: connect via packages like RMySQL and RpostgreSQL, and access and manipulate via DBI rvest for webscraping Once your data is available in your working environment you are ready to start manipulating it using these packages: The stringr package for string manipulation. For data frame like objects learn the ins and outs of the dplyr package (try this course). Need to perform heavy data wrangling tasks? Check out the data.table package Performing time series analysis? Try out packages like like zoo, xts and quantmod. Assignment Master the packages mentioned for importing data via this \u201cImporting Data Into R\u201d course, or read these articles 1,2,3 and 4. See this Data Wrangling with R video by RStudio Read and practice how to work with packages like dplyr, tidyr, and data.table. Step 5: Effective Data Visualization 5.3: HTML widgets A very promising new tool for visualizations in R is the usage of HTML widgets. HTML widgets allow you to create interactive web visualizations in an easy way (see the tutorial by RStudio) and mastering this type of visualizations is very likely to become a must have R skill. Impress your friends and colleagues with these visualizations: Dynamic maps with leaflet Time-series data charting using dygraphs Interactive tables (DataTables) DiagrammeR for diagrams and flowcharts D3 scatterplots, line charts, and histograms with MetricsGraphics Assignment Make sure you have understand the principles of the grammar of graphics. Take the ggplot2 tutorial Follow the html widgets tutorial by RStudio Step 7: Reporting Results Communicating your results and sharing your insights with fellow data science enthusiast is equally important as the analysis itself. Luckily R has some very nifty tools to do this that can save you a lot of time. The first is R Markdown , a great tool for reporting your data analysis in a reproducible manner based on knitr and pandoc. With R markdown, R generates a final document that replaces the R code with its results. This document can be in an html, word, pfd, ioslides, etc. format. You can learn more on it via this tutorial and use this cheat sheet a a reference. Next to R Markdown there is also ReporteRs. ReporteRs is an R package for creating Microsoft (Word docx and Powerpoint pptx) and html documents and runs on Windows, Linux, Unix and Mac OS systems. Just like R Markdown it\u2019s an ideal tool to automate reporting generation from R. See here how to get started. Last but not least there is Shiny, one of the most exciting tools in R around at the moment. Shiny makes it incredibly easy to build interactive web applications with R. It allows you to turn your analysis into interactive web applications without needing to know HTML, CSS or Javascript. If you want to get started with Shiny (and believe us you should!), checkout the RStudio learning portal. Assignment Create your first interactive report using RMarkdown and/or ReporteRs Try to build your very first Shiny app Bonus Step: Practice You will only become a great R programmer through practice. Therefore, make sure to tackle new data science challenges regularly. The best recommendation we can make to you here is to start competing with fellow data scientists on Kaggle: https://www.kaggle.com/c/titanic-gettingStarted. Test your R Skills on live challenges \u2013 Practice Problems Step 9: Becoming an R Master Now that you have learnt most of data analytics using R , it is time to give some advanced topics a shot. There is a good chance that you already know many of these, but have a look at these tutorials too. Advanced R by Hadley Wickham Using R together with Hadoop, MongoDB or NoSQL The RevoScaleR package by Microsoft (formerly Revolution Analytics)","title":"Highlights"},{"location":"Highlights/Readwise/Articles/List%20Making%20When%20Overwhelmed%20Turn%20Stress%20Into%20Productivity/","text":"List Making When Overwhelmed: Turn Stress Into Productivity \u00b6 Metadata \u00b6 Author: [[quickbooost.com]] Full Title: List Making When Overwhelmed: Turn Stress Into Productivity Category: #Type/Highlights/Article URL: https://quickbooost.com/list-making/ Highlights \u00b6 Sometimes it sucks being driven, doesn\u2019t it? Like on one hand your drive is the main force behind all the great things you have in your life. But on the other hand, it\u2019s that desire for bigger and better things that keeps loading up your plate with more responsibilities\u2026 and now your plate\u2019s full. I\u2019m going to get into list making in just a second, but I want to riff on this a little bit more first. Your drive is an amazing thing. It\u2019s what has led you down the path of success so far and it\u2019s the thing that will keep you going even when you\u2019re frustrated, stuck, or disappointed. But let\u2019s be honest, drive is a greedy little thing. It\u2019s that voice inside your head saying I want more! And more is what you give it. Because it\u2019s fun. Achieving things is fun. Creating an amazing life for yourself is fun. List making is a powerful thing that I use to keep myself organized and focused, especially when overwhelmed. Because overwhelm is a terrible feeling. Like your brain is being pulled in every direction. Like you\u2019re treading water but are slowly sinking. It\u2019s not fun. But, in my experience, I have found list making to be one way that I can gain some control and offset some of that overwhelming chaos. So what is list making? In its most basic form, it is writing down everything that you need to do. It\u2019s honestly that simple and for some reason not a lot of people do it. Instead they let things pile up in their head until they either: Forget what they need to do Panic because their mind feels like insanity with all the tasks bouncing around It really doesn\u2019t need to be that hard. You just need to do a little list making. The power of list making I see it like this \u2013 if you\u2019re driven and are working towards an amazing life (which I\u2019m assuming you are), overwhelm is a sensation that you\u2019ll need to get used to. As far as I can tell, it\u2019s part of the process. The importance of to-do lists There is a tremendous value to be gained in list making. Like I mentioned, it isn\u2019t the end-all-be-all to eliminating your overwhelm, but it is a useful tool to help manage your life and to stay on top of things. And while list making as a concept is simple to explain and comprehend, there is a specific formula that I recommend you follow when creating a list for yourself. Especially when first starting out with list making. Now, the exact step-by-step process that I recommend is a little too long to explain in full detail for this post, so instead I\u2019ve created a bootcamp around the subject. The bootcamp is a free, five day email series. Each day I will email you one new lesson that you can use to create a productive plan for your time. It\u2019s like a combination of a planning course and a to-do list course. And it\u2019s free. When list making is right for you As I\u2019ve touched on, list making is a great tool to have in your toolbelt. It\u2019s a smart strategy to employ when feeling: Overwhelmed Frustrated Or that life is chaotic By creating a to-do list for yourself you\u2019ll take back some of that control that you feel you\u2019re lacking. You\u2019ll reign in some of that chaos, quiet some of that frustration, reduce some of that overwhelm. If those are feelings you are experiencing, or those are the results you are looking for, list making is for you. And now that you have an understanding of who list making can benefit (you) and what to expect, here is how you can get started creating effective lists of your very own. List making: How to create your to-do list The process of list making is straightforward. Follow this simple five step formula to create a comprehensive list that you can use throughout your day. Step 1: Write it down First, write down everything that you need to do. Everything. Write down every little detail, every little task. Every single item that you can think of. Getting this all out of your head and onto something that you can see and organize will help calm down some of that noise rattling around your brain. Step 2: Organize Next, take your full list and reorganize it by priority. Place your most important tasks at the top and your least important ones at the bottom. You\u2019re going to always work on your most important tasks first so that you are continuously making progress forward. If you\u2019re not sure what the priority is, see my post here. It covers how to set goals for yourself. Don\u2019t get too caught up on that though. The reason that post in particular is helpful is that it walks you through the process of understanding what is and isn\u2019t important in your life. A lesson that you can then come back to and apply to this step of the list making process Step 3: Time value From there, look at each task on your list and write down how long you expect it to take. For example: Complete report (45 minutes) Call consulting team (15 minutes) Read book (35 minutes) That way you can gain a better understanding of how much time is actually required to get everything done. Don\u2019t panic if you feel like there is too much to do. You will eventually get everything done. Step 4: Factor it At this point, you have your list and you know how long everything should take. The next step is to factor those tasks into the context of your day. You have a busy and full life and while it\u2019s great that you have your list of tasks ready to go, you need to be able to fit it into your schedule amongst the other items vying for your attention. So to help, see my posts on daily planning here and productive planning here. Step 5: One step Finally, don\u2019t see your list as this huge expedition that needs to be traveled in a day. No. Recognize that you are on a long journey and that each day you just need to take one step forward. That\u2019s it. If you take one step forward each day, you\u2019ll get to your end goal in no time. Don\u2019t stress out over the amount of tasks you need to do. Just focus on one at a time. When that one task is done, move onto the next one. And when that\u2019s done, move on from there. You know the saying about not seeing the forest for the trees? Ya, well ignore it. Zoom in on those trees and take it one at a time. Don\u2019t worry about the end of the forest because you\u2019ll eventually get there. For now, just take it one tree at a time. And if you can\u2019t get everything done today, there\u2019s always tomorrow. Don\u2019t stress too much. It will all get done. Be the puzzle master you know you can be. When is a good time for list making? At this point you may be wondering: so when should I be creating my lists? Is there a specific time or period of the day that I should do my list making? A great question. The answer is totally dependent on you and your preferences. If you\u2019re feeling overwhelmed right now and it\u2019s the middle of the day, now\u2019s the perfect time. If you wake up at three in the morning panicked by how much you have to do, that\u2019s an equally great time to make a list. Personally, I create my lists for the following day. For example, if today is Monday, at the end of the day I will create my list and plan for Tuesday so that when I wake up I can be ready to tackle the day with focus and organization on my side. I use list making to be proactive. But I will also do list making when feeling overloaded or stressed. The best place for list making Just like my answer to when to create your list, where to create your list is also entirely up to you. I will say though, do whatever is easiest for you. If you have a pad of paper nearby, use that. If you have a napkin by your side, use that. Do your list making in whatever space or on whatever material is easiest for you to get to. There isn\u2019t any list making app or notebook that is better than another. It\u2019s your preference. Personally, I use a combination of the Notes app on my iPhone and the Google Docs app. I\u2019ll use the Notes app to log any ideas or tasks that arise throughout the day. And then later when planning out the next day, I will move those notes onto one of my various Google Docs where I have larger, master lists. Moving forward with list making List making is a powerful thing. It\u2019s a simple, yet effective strategy to reduce overwhelm, get organized, and gain some control over your life. So give it a try! Go through the steps above and create some to-do lists of your very own. Check back on this post from time to time for a refresher and continue to work on your list making skills until they become habit.","title":"List Making When Overwhelmed: Turn Stress Into Productivity"},{"location":"Highlights/Readwise/Articles/List%20Making%20When%20Overwhelmed%20Turn%20Stress%20Into%20Productivity/#list-making-when-overwhelmed-turn-stress-into-productivity","text":"","title":"List Making When Overwhelmed: Turn Stress Into Productivity"},{"location":"Highlights/Readwise/Articles/List%20Making%20When%20Overwhelmed%20Turn%20Stress%20Into%20Productivity/#metadata","text":"Author: [[quickbooost.com]] Full Title: List Making When Overwhelmed: Turn Stress Into Productivity Category: #Type/Highlights/Article URL: https://quickbooost.com/list-making/","title":"Metadata"},{"location":"Highlights/Readwise/Articles/List%20Making%20When%20Overwhelmed%20Turn%20Stress%20Into%20Productivity/#highlights","text":"Sometimes it sucks being driven, doesn\u2019t it? Like on one hand your drive is the main force behind all the great things you have in your life. But on the other hand, it\u2019s that desire for bigger and better things that keeps loading up your plate with more responsibilities\u2026 and now your plate\u2019s full. I\u2019m going to get into list making in just a second, but I want to riff on this a little bit more first. Your drive is an amazing thing. It\u2019s what has led you down the path of success so far and it\u2019s the thing that will keep you going even when you\u2019re frustrated, stuck, or disappointed. But let\u2019s be honest, drive is a greedy little thing. It\u2019s that voice inside your head saying I want more! And more is what you give it. Because it\u2019s fun. Achieving things is fun. Creating an amazing life for yourself is fun. List making is a powerful thing that I use to keep myself organized and focused, especially when overwhelmed. Because overwhelm is a terrible feeling. Like your brain is being pulled in every direction. Like you\u2019re treading water but are slowly sinking. It\u2019s not fun. But, in my experience, I have found list making to be one way that I can gain some control and offset some of that overwhelming chaos. So what is list making? In its most basic form, it is writing down everything that you need to do. It\u2019s honestly that simple and for some reason not a lot of people do it. Instead they let things pile up in their head until they either: Forget what they need to do Panic because their mind feels like insanity with all the tasks bouncing around It really doesn\u2019t need to be that hard. You just need to do a little list making. The power of list making I see it like this \u2013 if you\u2019re driven and are working towards an amazing life (which I\u2019m assuming you are), overwhelm is a sensation that you\u2019ll need to get used to. As far as I can tell, it\u2019s part of the process. The importance of to-do lists There is a tremendous value to be gained in list making. Like I mentioned, it isn\u2019t the end-all-be-all to eliminating your overwhelm, but it is a useful tool to help manage your life and to stay on top of things. And while list making as a concept is simple to explain and comprehend, there is a specific formula that I recommend you follow when creating a list for yourself. Especially when first starting out with list making. Now, the exact step-by-step process that I recommend is a little too long to explain in full detail for this post, so instead I\u2019ve created a bootcamp around the subject. The bootcamp is a free, five day email series. Each day I will email you one new lesson that you can use to create a productive plan for your time. It\u2019s like a combination of a planning course and a to-do list course. And it\u2019s free. When list making is right for you As I\u2019ve touched on, list making is a great tool to have in your toolbelt. It\u2019s a smart strategy to employ when feeling: Overwhelmed Frustrated Or that life is chaotic By creating a to-do list for yourself you\u2019ll take back some of that control that you feel you\u2019re lacking. You\u2019ll reign in some of that chaos, quiet some of that frustration, reduce some of that overwhelm. If those are feelings you are experiencing, or those are the results you are looking for, list making is for you. And now that you have an understanding of who list making can benefit (you) and what to expect, here is how you can get started creating effective lists of your very own. List making: How to create your to-do list The process of list making is straightforward. Follow this simple five step formula to create a comprehensive list that you can use throughout your day. Step 1: Write it down First, write down everything that you need to do. Everything. Write down every little detail, every little task. Every single item that you can think of. Getting this all out of your head and onto something that you can see and organize will help calm down some of that noise rattling around your brain. Step 2: Organize Next, take your full list and reorganize it by priority. Place your most important tasks at the top and your least important ones at the bottom. You\u2019re going to always work on your most important tasks first so that you are continuously making progress forward. If you\u2019re not sure what the priority is, see my post here. It covers how to set goals for yourself. Don\u2019t get too caught up on that though. The reason that post in particular is helpful is that it walks you through the process of understanding what is and isn\u2019t important in your life. A lesson that you can then come back to and apply to this step of the list making process Step 3: Time value From there, look at each task on your list and write down how long you expect it to take. For example: Complete report (45 minutes) Call consulting team (15 minutes) Read book (35 minutes) That way you can gain a better understanding of how much time is actually required to get everything done. Don\u2019t panic if you feel like there is too much to do. You will eventually get everything done. Step 4: Factor it At this point, you have your list and you know how long everything should take. The next step is to factor those tasks into the context of your day. You have a busy and full life and while it\u2019s great that you have your list of tasks ready to go, you need to be able to fit it into your schedule amongst the other items vying for your attention. So to help, see my posts on daily planning here and productive planning here. Step 5: One step Finally, don\u2019t see your list as this huge expedition that needs to be traveled in a day. No. Recognize that you are on a long journey and that each day you just need to take one step forward. That\u2019s it. If you take one step forward each day, you\u2019ll get to your end goal in no time. Don\u2019t stress out over the amount of tasks you need to do. Just focus on one at a time. When that one task is done, move onto the next one. And when that\u2019s done, move on from there. You know the saying about not seeing the forest for the trees? Ya, well ignore it. Zoom in on those trees and take it one at a time. Don\u2019t worry about the end of the forest because you\u2019ll eventually get there. For now, just take it one tree at a time. And if you can\u2019t get everything done today, there\u2019s always tomorrow. Don\u2019t stress too much. It will all get done. Be the puzzle master you know you can be. When is a good time for list making? At this point you may be wondering: so when should I be creating my lists? Is there a specific time or period of the day that I should do my list making? A great question. The answer is totally dependent on you and your preferences. If you\u2019re feeling overwhelmed right now and it\u2019s the middle of the day, now\u2019s the perfect time. If you wake up at three in the morning panicked by how much you have to do, that\u2019s an equally great time to make a list. Personally, I create my lists for the following day. For example, if today is Monday, at the end of the day I will create my list and plan for Tuesday so that when I wake up I can be ready to tackle the day with focus and organization on my side. I use list making to be proactive. But I will also do list making when feeling overloaded or stressed. The best place for list making Just like my answer to when to create your list, where to create your list is also entirely up to you. I will say though, do whatever is easiest for you. If you have a pad of paper nearby, use that. If you have a napkin by your side, use that. Do your list making in whatever space or on whatever material is easiest for you to get to. There isn\u2019t any list making app or notebook that is better than another. It\u2019s your preference. Personally, I use a combination of the Notes app on my iPhone and the Google Docs app. I\u2019ll use the Notes app to log any ideas or tasks that arise throughout the day. And then later when planning out the next day, I will move those notes onto one of my various Google Docs where I have larger, master lists. Moving forward with list making List making is a powerful thing. It\u2019s a simple, yet effective strategy to reduce overwhelm, get organized, and gain some control over your life. So give it a try! Go through the steps above and create some to-do lists of your very own. Check back on this post from time to time for a refresher and continue to work on your list making skills until they become habit.","title":"Highlights"},{"location":"Highlights/Readwise/Articles/Logging%20Events%20in%20Shiny%20Apps%20%E2%80%A2%20shinyEventLogger/","text":"Logging Events in Shiny Apps \u2022 shinyEventLogger \u00b6 Metadata \u00b6 Author: Full Title: Logging Events in Shiny Apps \u2022 shinyEventLogger Category: #Type/Highlights/Article URL: https://kalimu.github.io/shinyEventLogger/index.html Highlights \u00b6 Simple app logging different events to R console, browser JavaScript console and to a file. shinyEventLogger::run_demo() Dashboard that allows for interactive analysis of events from demo app. shinyEventLogger::run_demo_dashboard() library(shiny) library(shinyEventLogger) set_logging() shinyApp( ui = fluidPage(log_init()), server = function(input, output) { set_logging_session() log_event(\"Hello World\") } ) For other logging packages see: https://github.com/daroczig/logger","title":"Logging Events in Shiny Apps \u2022 shinyEventLogger"},{"location":"Highlights/Readwise/Articles/Logging%20Events%20in%20Shiny%20Apps%20%E2%80%A2%20shinyEventLogger/#logging-events-in-shiny-apps-shinyeventlogger","text":"","title":"Logging Events in Shiny Apps \u2022 shinyEventLogger"},{"location":"Highlights/Readwise/Articles/Logging%20Events%20in%20Shiny%20Apps%20%E2%80%A2%20shinyEventLogger/#metadata","text":"Author: Full Title: Logging Events in Shiny Apps \u2022 shinyEventLogger Category: #Type/Highlights/Article URL: https://kalimu.github.io/shinyEventLogger/index.html","title":"Metadata"},{"location":"Highlights/Readwise/Articles/Logging%20Events%20in%20Shiny%20Apps%20%E2%80%A2%20shinyEventLogger/#highlights","text":"Simple app logging different events to R console, browser JavaScript console and to a file. shinyEventLogger::run_demo() Dashboard that allows for interactive analysis of events from demo app. shinyEventLogger::run_demo_dashboard() library(shiny) library(shinyEventLogger) set_logging() shinyApp( ui = fluidPage(log_init()), server = function(input, output) { set_logging_session() log_event(\"Hello World\") } ) For other logging packages see: https://github.com/daroczig/logger","title":"Highlights"},{"location":"Highlights/Readwise/Articles/Managing%20My%20Personal%20Knowledge%20Base/","text":"Managing My Personal Knowledge Base \u00b6 Metadata \u00b6 Author: [[Thomas Kainrad]] Full Title: Managing My Personal Knowledge Base Category: #Type/Highlights/Article URL: https://tkainrad.dev/posts/managing-my-personal-knowledge-base/ Highlights \u00b6 It is hard to imagine any other field where lifelong learning is more important than in software engineering. Another unique characteristic is the degree to which learning material is available for free on the internet. On top of that, we create various resources ourselves by documenting issues, submitting bug reports, writing notes, creating documentation, and many others. The sum of all these resources can be called a knowledge base. You could argue that every developer has a system to manage their personal knowledge base, whether they know it or not. Tags: [[favorite]] Note: Add this to a post written on the importance of knowledge management in software development and programming. A good basis is to keep your personal knowledge base strictly technical and to never include data that is related to customers, or people in general. Writing a post about my Linux setup has been very rewarding for me. While documenting my configuration, especially my command-line workflows, I identified some shortcomings that I have since eliminated. After writing this article, I can already say that my knowledge management workflows have improved similarly. Much of this post comes down to describing my usage of software tools. The stars will be Notion GitLab Workona Dropbox Albert Copying all of my practices will likely not serve you well. I invite you to try out things at your own pace and revisit this post whenever you are looking for new ideas. Bookmarking Even though everybody loves books, or at least says so, myself included, the reality is that we rely on digital resources most of the time. The challenge is to organize this knowledge efficiently without creating too much overhead. Tags: [[favorite]] My current setup is a little more complex, but in the end, it does not require more work than keeping bookmarks solely in the browser. I organize my bookmarks in multiple layers, depending on how often I want to access them and how long they should persist. Maybe you are thinking of caching now, but fortunately, bookmarking layers are not caching levels. This would be hard to manage because as we all know, there are two hard problems in computer science: cache invalidation, naming things, and off-by-1 errors. In contrast to cache entries, a bookmark is not supposed to move between layers. Instead, it gets inserted at the right place and stays there. Tags: [[favorite]] Note: Interesting.. three hard problems in computer science: Cache Invalidation Naming Things (and avoiding the temptation to rename without reason). Off-by-1-Errors (?) - not sure on this one will research. Chrome bookmarks are ideal for things that I need often and want to have accessible somewhat independent of context. They are, however, not well suited for keeping extensive bookmark libraries. There is no tagging, it is not possible to add comments, and browsers do not even save a timestamp for when a page was bookmarked. It is further not possible to filter and search Chrome bookmarks using complex queries. In my experience, browser bookmark libraries are hard to manage if they grow beyond a certain size. Some examples of well-suited Chrome bookmarks: AWS EC2 dashboard Google cloud platform console Slack workspaces GitLab boards Content sites, such as Hacker News, InfoQ, and DZone Tags: [[favorite]] Examples of things that should not be Chrome bookmarks: Blog posts to be read later Links to Open Source Projects Stack Overflow questions Tags: [[favorite]] Workona Workona is a relatively new addition to my toolbox. I have mixed feelings about it, mainly because it can feel a little slow at times. There are some things it does very well though. Workona further allows you to add apps and will then collect links and even features for those apps to be quickly accessible. For example, I use it to access my different GitLab and GitHub projects, Slack Workspaces, and sometimes even StackOverflow questions. These entries are automatically created by Workona and therefore I do not see them as bookmarks. It is also possible to access features of these apps directly from Workona, mainly to create new resources, such as GitLab/GitHub projects, Google Docs, DropBox Files and so on. It feels a little bit like Station built directly into the browser. Notion Finally, we arrive at the layer that is suited for maintaining a large library of bookmarks. For this, and many other use cases, I use Notion. It has become the core of my personal knowledge base. The killer feature for me is the database. It is amazingly flexible and is single-handedly able to replace multiple other tools for me. For my bookmark collection, I use a single large database. Adding new items can be done via the Notion Web Clipper. I am a little annoyed that the web clipper doesn\u2019t let me add properties and tags directly, but other than that, it works well. Previously, I used Trello, which was also quite good at keeping bookmarks. However, to limit the number of different tools I use, I replaced it with Notion. Things get really exciting once you use relations between different Notion databases. As an example, I have a database of my blog posts that has a relation to my bookmarks. I can now filter my bookmarks by blog posts and quickly see which sources influenced a particular post. Native Bookmark Sources The last layer does not require any work at all. It only means to be aware of native bookmark sources when trying to find something, and also when thinking about adding new bookmarks. For example, it is quite easy to search through questions you have answered on Stack Overflow. It is also not a problem to go back to your Hacker News posts or search through projects you starred on GitHub. Keeping those things in your own bookmark sources adds redundancy and noise. These are some of my most commonly used native bookmark sources: Summary I am aware that this sounds immensely complicated. However, I stick to my statement that it does not actually require more work than keeping all bookmarks in the browser. You still have to add every bookmark only once. If you internalize your system, you will not have problems searching for bookmarks as it will be quite obvious where a specific resource could be. Admittedly, it does require some maintenance to keep a large bookmark collection in Notion, but it pays off soon and the pay-off accumulates over time. Organizing Self-Written Resources Having a proper system for external resources is great, but it does not help much if everything you write yourself is a mess. Therefore, it is essential to organize self-written resources. Keeping Track of Update Ideas You may have noticed that some of my blog posts are quite long. Keeping them up-to-date is a little challenging. Fortunately, I have Notion to assist me with this. I have a database where I add proposals for updating my existing posts. Using a relation, I link these ideas to the respective posts in my posts database: Tracking Sources To keep track of third-party resources that were helpful in creating a post, I add them to my bookmarks database and link them to my posts database. My bookmarks database filtered to show only entries related to this post. Taking Notes I suppose every software engineer takes notes to some extent, even if they do not have a system and just casually write stuff into text files. There is also a large amount of free and paid software for taking and organizing notes. Some people even like to use physical paper with the BuJo system. No matter which method you prefer, you have to think about when, why, and how to take notes. When to take Notes I thought quite a bit about this question, and previously I did not adhere to any predefined rules regarding this matter. To gain a better understanding of my habits and to decide what worked best in the past, I looked through my notes from the last years that were spread over multiple applications and lots of files. I tried to find common patterns: Capturing information from audio sources I am a visual learner and prefer written content over audio. However, there are many types of audio sources that everybody encounters: Meetings Presentations Meetups Conferences Informal Discussions Videos Podcasts Preserving information that is often needed but doesn\u2019t fit in any proper documentation project In my case, these are things like the following: Command-lines with multiple parameters, complex options, and paths. I keep them in my notes so that I can quickly copy-paste them in the potentially distant future. Instructions for tasks that will likely have to be repeated in the future, for example setting up a development environment for a specific tech stack deploying a project on a specific hosting service. Questions Sometimes I think of a question that I would like to ask someone specific, who is not available at the moment. The question and its eventual answer are a nice use case for a note. On the other hand, it is important to make clear also what should not be a note in this system: Project-specific knowledge Everything that is directly related to a specific software project, should not be a note in your personal knowledge base. Instead, it should go into whichever system is used to keep track of issues, merge requests, documentation, and so on. This post includes a . Information that is needed for a very short time Sometimes I need to take notes during a conversation that I will need only immediately afterward. For this, I just open VSCode and type ahead. Once the information is no longer needed, the file can be deleted completely. Why Take Notes The obvious answer is to remember things. This does not mean that note-taking should replace your memory. To the contrary, taking notes provides structure and context and therefore helps your brain build up a map of your knowledge. I believe that taking notes increases the amount of data that you can recall from memory. Additionally, some things are just very hard to remember, such as complex tech stacks presented at meetups, command-lines with several opaque options, numbers, and so on. Writing these things down can extend your knowledge base significantly. Notes are also very helpful when writing documentation in the future, or for writing blog posts like this one ;-) How to Take Notes It can be tempting to just type ahead during a talk. Noting down whatever seems interesting at the moment. However, you should meet basic formal requirements and write down some context. Otherwise, you will have trouble extracting useful information from your notes in the future. If you take notes regularly, it is also important to organize them by assigning tags and properties, having a creation date, being able to filter and search through them, and so on. Software can help with these things. I strongly recommend organizing all your notes in a single database with appropriate tags, such as meeting, presentation, tc, and question. Similar to the bookmarks database described above, Notion will automatically provide a column with the creation time of the note. If you have frequent meetings with the same people, you can think about adding a Participants column. Project-specific Knowledge In my experience, it is best to keep project information as closely together as possible. For me, this means that issue tracking, merge requests (i.e. pull requests), documentation and everything else that comes with a software project should live alongside the source code. Managing Files This one is relatively straightforward. I think the most important thing is to use some form of cloud storage. Personally, I use Dropbox. Next, you should think about a proper folder structure. Finally, you should be able to search for your files quickly. If you can tick the three boxes availability on all devices structure searchable you should be all set. Note: WOW - needed this direction. Code Snippets Currently, I have two ways of collecting code snippets. I hope I can eventually integrate them somehow. VSCode User Snippets The first one are VSCode User Snippets. VSCode does many things right and snippet management is one of them. It is very easy to define new snippets and use them by typing a predefined string. Simply press Ctrl-Shift-p and choose Preferences: Configure User Snippets. Then, you can split your snippets into multiple files or just put all of them together in the global-snipptes.code-snippets file. These are some of my snippets for writing blog posts with markdown and Hugo: Code Snippets Currently, I have two ways of collecting code snippets. I hope I can eventually integrate them somehow. VSCode User Snippets The first one are VSCode User Snippets. VSCode does many things right and snippet management is one of them. It is very easy to define new snippets and use them by typing a predefined string. Simply press Ctrl-Shift-p and choose Preferences: Configure User Snippets. Then, you can split your snippets into multiple files or just put all of them together in the global-snipptes.code-snippets file. These are some of my snippets for writing blog posts with markdown and Hugo: Code Snippets Currently, I have two ways of collecting code snippets. I hope I can eventually integrate them somehow. VSCode User Snippets Notion Snippet database The second use case concerns small pieces of code that I have written myself and that I would like to remember. This is not necessarily for productivity reasons, but rather for nostalgia. It is ideal for small algorithms, for example when you manage to substantially increase the performance of something by applying some clever technique. I keep those snippets in a Notion database, which works great because I can tag them and add arbitrary properties. A nice benefit of this habit is that it\u2019s not a problem if you don\u2019t do it for a while. Your database will not look messy all of a sudden. Shortcut Database I believe that typing proficiency is important for a software engineer. It is easier to stay in flow if you can type fast and navigate around your IDE and tools with shortcuts. As my set of tools grew, I realized that I have a hard time to keep track of which shortcuts I am using, which of them work in which application, and whether I can change them so that they work across as many tools as possible. Therefore, I started to keep track of some shortcuts I would like to use everywhere. These are things like creating new tabs, creating new windows, opening the respective tool\u2019s search feature and more. This database helps me identify overlaps and motivates me to think about which task could fit for a specific key-combination that I use often. For example, I use Ctrl - Shift - T in IDEs to search for type definitions and Ctrl - Shift - R to search for resources in general. Since I have these key combinations memorized for years and can use it very quickly, I want to make use of it wherever possible. Therefore, I try to set up my applications so that some kind of search opens whenever I use one of these combinations. My Notion database makes it easy to see which applications offer search features and which of them I can modify. For example, my Browser now forwards Ctrl - Shift - T / R to Workona and allows me to switch/search workspaces or use the general search, respectively. This post gave me the idea for https://keycombiner.com. It is a web application to track the keyboard shortcuts you use, get better at using them, and to learn new ones. It is in open beta and I would love to hear your feedback! Tools Database I also have a Notion database to keep track of small web tools that I use. This serves little purpose for things that are used frequently as you will remember them anyway. However, for minor things that are only needed once in a while, such as color palette generators, detecting handwriting as LaTeX symbols, and checking SSL certificates this is quite handy. Usually, you can find these tools via google, but sometimes there are many tools for a task and it is nice to keep track of the ones that work best. Screenshot of my software tools database in Notion. Again, the important thing here is to not overdo it. There are extensive publicly available lists of such tools. Your list should not be a copy of those but rather a small collection of the things you like and need from time to time. Collecting Ideas for new Projects Like many software engineers in these golden times, I sometimes think about starting new software projects, maybe even bootstrapping a small business. You probably guessed it already, I keep ideas for possible projects in a Notion database. The main benefit is, once again, that it allows me to easily link it with other databases, such as my bookmarks. Conclusion Similar posts often conclude with warnings that you should be very careful not to spend too much time on organizing and maintaining your knowledge and workflows. In principle, I agree with this sentiment. After all, you want to increase your productivity. I do believe, however, that it is worth it to spend some time thinking about your knowledge management system. The most important part about conceptualizing a system is to decide exactly which types of information you want to maintain in your knowledge base. If you get this right you will benefit for the rest of your career. Even if the tools might change in the future, the system will stay. Please don\u2019t hesitate to share your own experiences in the comments below. I am sure that my workflows are not perfect, but they might get closer with your tips. This post is released together with a new post in my Reading List series, which lists related resources. If you want to dive even deeper into knowledge management concepts, you might want to have a look.","title":"Managing My Personal Knowledge Base"},{"location":"Highlights/Readwise/Articles/Managing%20My%20Personal%20Knowledge%20Base/#managing-my-personal-knowledge-base","text":"","title":"Managing My Personal Knowledge Base"},{"location":"Highlights/Readwise/Articles/Managing%20My%20Personal%20Knowledge%20Base/#metadata","text":"Author: [[Thomas Kainrad]] Full Title: Managing My Personal Knowledge Base Category: #Type/Highlights/Article URL: https://tkainrad.dev/posts/managing-my-personal-knowledge-base/","title":"Metadata"},{"location":"Highlights/Readwise/Articles/Managing%20My%20Personal%20Knowledge%20Base/#highlights","text":"It is hard to imagine any other field where lifelong learning is more important than in software engineering. Another unique characteristic is the degree to which learning material is available for free on the internet. On top of that, we create various resources ourselves by documenting issues, submitting bug reports, writing notes, creating documentation, and many others. The sum of all these resources can be called a knowledge base. You could argue that every developer has a system to manage their personal knowledge base, whether they know it or not. Tags: [[favorite]] Note: Add this to a post written on the importance of knowledge management in software development and programming. A good basis is to keep your personal knowledge base strictly technical and to never include data that is related to customers, or people in general. Writing a post about my Linux setup has been very rewarding for me. While documenting my configuration, especially my command-line workflows, I identified some shortcomings that I have since eliminated. After writing this article, I can already say that my knowledge management workflows have improved similarly. Much of this post comes down to describing my usage of software tools. The stars will be Notion GitLab Workona Dropbox Albert Copying all of my practices will likely not serve you well. I invite you to try out things at your own pace and revisit this post whenever you are looking for new ideas. Bookmarking Even though everybody loves books, or at least says so, myself included, the reality is that we rely on digital resources most of the time. The challenge is to organize this knowledge efficiently without creating too much overhead. Tags: [[favorite]] My current setup is a little more complex, but in the end, it does not require more work than keeping bookmarks solely in the browser. I organize my bookmarks in multiple layers, depending on how often I want to access them and how long they should persist. Maybe you are thinking of caching now, but fortunately, bookmarking layers are not caching levels. This would be hard to manage because as we all know, there are two hard problems in computer science: cache invalidation, naming things, and off-by-1 errors. In contrast to cache entries, a bookmark is not supposed to move between layers. Instead, it gets inserted at the right place and stays there. Tags: [[favorite]] Note: Interesting.. three hard problems in computer science: Cache Invalidation Naming Things (and avoiding the temptation to rename without reason). Off-by-1-Errors (?) - not sure on this one will research. Chrome bookmarks are ideal for things that I need often and want to have accessible somewhat independent of context. They are, however, not well suited for keeping extensive bookmark libraries. There is no tagging, it is not possible to add comments, and browsers do not even save a timestamp for when a page was bookmarked. It is further not possible to filter and search Chrome bookmarks using complex queries. In my experience, browser bookmark libraries are hard to manage if they grow beyond a certain size. Some examples of well-suited Chrome bookmarks: AWS EC2 dashboard Google cloud platform console Slack workspaces GitLab boards Content sites, such as Hacker News, InfoQ, and DZone Tags: [[favorite]] Examples of things that should not be Chrome bookmarks: Blog posts to be read later Links to Open Source Projects Stack Overflow questions Tags: [[favorite]] Workona Workona is a relatively new addition to my toolbox. I have mixed feelings about it, mainly because it can feel a little slow at times. There are some things it does very well though. Workona further allows you to add apps and will then collect links and even features for those apps to be quickly accessible. For example, I use it to access my different GitLab and GitHub projects, Slack Workspaces, and sometimes even StackOverflow questions. These entries are automatically created by Workona and therefore I do not see them as bookmarks. It is also possible to access features of these apps directly from Workona, mainly to create new resources, such as GitLab/GitHub projects, Google Docs, DropBox Files and so on. It feels a little bit like Station built directly into the browser. Notion Finally, we arrive at the layer that is suited for maintaining a large library of bookmarks. For this, and many other use cases, I use Notion. It has become the core of my personal knowledge base. The killer feature for me is the database. It is amazingly flexible and is single-handedly able to replace multiple other tools for me. For my bookmark collection, I use a single large database. Adding new items can be done via the Notion Web Clipper. I am a little annoyed that the web clipper doesn\u2019t let me add properties and tags directly, but other than that, it works well. Previously, I used Trello, which was also quite good at keeping bookmarks. However, to limit the number of different tools I use, I replaced it with Notion. Things get really exciting once you use relations between different Notion databases. As an example, I have a database of my blog posts that has a relation to my bookmarks. I can now filter my bookmarks by blog posts and quickly see which sources influenced a particular post. Native Bookmark Sources The last layer does not require any work at all. It only means to be aware of native bookmark sources when trying to find something, and also when thinking about adding new bookmarks. For example, it is quite easy to search through questions you have answered on Stack Overflow. It is also not a problem to go back to your Hacker News posts or search through projects you starred on GitHub. Keeping those things in your own bookmark sources adds redundancy and noise. These are some of my most commonly used native bookmark sources: Summary I am aware that this sounds immensely complicated. However, I stick to my statement that it does not actually require more work than keeping all bookmarks in the browser. You still have to add every bookmark only once. If you internalize your system, you will not have problems searching for bookmarks as it will be quite obvious where a specific resource could be. Admittedly, it does require some maintenance to keep a large bookmark collection in Notion, but it pays off soon and the pay-off accumulates over time. Organizing Self-Written Resources Having a proper system for external resources is great, but it does not help much if everything you write yourself is a mess. Therefore, it is essential to organize self-written resources. Keeping Track of Update Ideas You may have noticed that some of my blog posts are quite long. Keeping them up-to-date is a little challenging. Fortunately, I have Notion to assist me with this. I have a database where I add proposals for updating my existing posts. Using a relation, I link these ideas to the respective posts in my posts database: Tracking Sources To keep track of third-party resources that were helpful in creating a post, I add them to my bookmarks database and link them to my posts database. My bookmarks database filtered to show only entries related to this post. Taking Notes I suppose every software engineer takes notes to some extent, even if they do not have a system and just casually write stuff into text files. There is also a large amount of free and paid software for taking and organizing notes. Some people even like to use physical paper with the BuJo system. No matter which method you prefer, you have to think about when, why, and how to take notes. When to take Notes I thought quite a bit about this question, and previously I did not adhere to any predefined rules regarding this matter. To gain a better understanding of my habits and to decide what worked best in the past, I looked through my notes from the last years that were spread over multiple applications and lots of files. I tried to find common patterns: Capturing information from audio sources I am a visual learner and prefer written content over audio. However, there are many types of audio sources that everybody encounters: Meetings Presentations Meetups Conferences Informal Discussions Videos Podcasts Preserving information that is often needed but doesn\u2019t fit in any proper documentation project In my case, these are things like the following: Command-lines with multiple parameters, complex options, and paths. I keep them in my notes so that I can quickly copy-paste them in the potentially distant future. Instructions for tasks that will likely have to be repeated in the future, for example setting up a development environment for a specific tech stack deploying a project on a specific hosting service. Questions Sometimes I think of a question that I would like to ask someone specific, who is not available at the moment. The question and its eventual answer are a nice use case for a note. On the other hand, it is important to make clear also what should not be a note in this system: Project-specific knowledge Everything that is directly related to a specific software project, should not be a note in your personal knowledge base. Instead, it should go into whichever system is used to keep track of issues, merge requests, documentation, and so on. This post includes a . Information that is needed for a very short time Sometimes I need to take notes during a conversation that I will need only immediately afterward. For this, I just open VSCode and type ahead. Once the information is no longer needed, the file can be deleted completely. Why Take Notes The obvious answer is to remember things. This does not mean that note-taking should replace your memory. To the contrary, taking notes provides structure and context and therefore helps your brain build up a map of your knowledge. I believe that taking notes increases the amount of data that you can recall from memory. Additionally, some things are just very hard to remember, such as complex tech stacks presented at meetups, command-lines with several opaque options, numbers, and so on. Writing these things down can extend your knowledge base significantly. Notes are also very helpful when writing documentation in the future, or for writing blog posts like this one ;-) How to Take Notes It can be tempting to just type ahead during a talk. Noting down whatever seems interesting at the moment. However, you should meet basic formal requirements and write down some context. Otherwise, you will have trouble extracting useful information from your notes in the future. If you take notes regularly, it is also important to organize them by assigning tags and properties, having a creation date, being able to filter and search through them, and so on. Software can help with these things. I strongly recommend organizing all your notes in a single database with appropriate tags, such as meeting, presentation, tc, and question. Similar to the bookmarks database described above, Notion will automatically provide a column with the creation time of the note. If you have frequent meetings with the same people, you can think about adding a Participants column. Project-specific Knowledge In my experience, it is best to keep project information as closely together as possible. For me, this means that issue tracking, merge requests (i.e. pull requests), documentation and everything else that comes with a software project should live alongside the source code. Managing Files This one is relatively straightforward. I think the most important thing is to use some form of cloud storage. Personally, I use Dropbox. Next, you should think about a proper folder structure. Finally, you should be able to search for your files quickly. If you can tick the three boxes availability on all devices structure searchable you should be all set. Note: WOW - needed this direction. Code Snippets Currently, I have two ways of collecting code snippets. I hope I can eventually integrate them somehow. VSCode User Snippets The first one are VSCode User Snippets. VSCode does many things right and snippet management is one of them. It is very easy to define new snippets and use them by typing a predefined string. Simply press Ctrl-Shift-p and choose Preferences: Configure User Snippets. Then, you can split your snippets into multiple files or just put all of them together in the global-snipptes.code-snippets file. These are some of my snippets for writing blog posts with markdown and Hugo: Code Snippets Currently, I have two ways of collecting code snippets. I hope I can eventually integrate them somehow. VSCode User Snippets The first one are VSCode User Snippets. VSCode does many things right and snippet management is one of them. It is very easy to define new snippets and use them by typing a predefined string. Simply press Ctrl-Shift-p and choose Preferences: Configure User Snippets. Then, you can split your snippets into multiple files or just put all of them together in the global-snipptes.code-snippets file. These are some of my snippets for writing blog posts with markdown and Hugo: Code Snippets Currently, I have two ways of collecting code snippets. I hope I can eventually integrate them somehow. VSCode User Snippets Notion Snippet database The second use case concerns small pieces of code that I have written myself and that I would like to remember. This is not necessarily for productivity reasons, but rather for nostalgia. It is ideal for small algorithms, for example when you manage to substantially increase the performance of something by applying some clever technique. I keep those snippets in a Notion database, which works great because I can tag them and add arbitrary properties. A nice benefit of this habit is that it\u2019s not a problem if you don\u2019t do it for a while. Your database will not look messy all of a sudden. Shortcut Database I believe that typing proficiency is important for a software engineer. It is easier to stay in flow if you can type fast and navigate around your IDE and tools with shortcuts. As my set of tools grew, I realized that I have a hard time to keep track of which shortcuts I am using, which of them work in which application, and whether I can change them so that they work across as many tools as possible. Therefore, I started to keep track of some shortcuts I would like to use everywhere. These are things like creating new tabs, creating new windows, opening the respective tool\u2019s search feature and more. This database helps me identify overlaps and motivates me to think about which task could fit for a specific key-combination that I use often. For example, I use Ctrl - Shift - T in IDEs to search for type definitions and Ctrl - Shift - R to search for resources in general. Since I have these key combinations memorized for years and can use it very quickly, I want to make use of it wherever possible. Therefore, I try to set up my applications so that some kind of search opens whenever I use one of these combinations. My Notion database makes it easy to see which applications offer search features and which of them I can modify. For example, my Browser now forwards Ctrl - Shift - T / R to Workona and allows me to switch/search workspaces or use the general search, respectively. This post gave me the idea for https://keycombiner.com. It is a web application to track the keyboard shortcuts you use, get better at using them, and to learn new ones. It is in open beta and I would love to hear your feedback! Tools Database I also have a Notion database to keep track of small web tools that I use. This serves little purpose for things that are used frequently as you will remember them anyway. However, for minor things that are only needed once in a while, such as color palette generators, detecting handwriting as LaTeX symbols, and checking SSL certificates this is quite handy. Usually, you can find these tools via google, but sometimes there are many tools for a task and it is nice to keep track of the ones that work best. Screenshot of my software tools database in Notion. Again, the important thing here is to not overdo it. There are extensive publicly available lists of such tools. Your list should not be a copy of those but rather a small collection of the things you like and need from time to time. Collecting Ideas for new Projects Like many software engineers in these golden times, I sometimes think about starting new software projects, maybe even bootstrapping a small business. You probably guessed it already, I keep ideas for possible projects in a Notion database. The main benefit is, once again, that it allows me to easily link it with other databases, such as my bookmarks. Conclusion Similar posts often conclude with warnings that you should be very careful not to spend too much time on organizing and maintaining your knowledge and workflows. In principle, I agree with this sentiment. After all, you want to increase your productivity. I do believe, however, that it is worth it to spend some time thinking about your knowledge management system. The most important part about conceptualizing a system is to decide exactly which types of information you want to maintain in your knowledge base. If you get this right you will benefit for the rest of your career. Even if the tools might change in the future, the system will stay. Please don\u2019t hesitate to share your own experiences in the comments below. I am sure that my workflows are not perfect, but they might get closer with your tips. This post is released together with a new post in my Reading List series, which lists related resources. If you want to dive even deeper into knowledge management concepts, you might want to have a look.","title":"Highlights"},{"location":"Highlights/Readwise/Articles/Managing%20Your%20Dotfiles/","text":"Managing Your Dotfiles \u00b6 Metadata \u00b6 Author: [[anishathalye.com]] Full Title: Managing Your Dotfiles Category: #Type/Highlights/Article URL: https://www.anishathalye.com/2014/08/03/managing-your-dotfiles/ Highlights \u00b6 Unix command-line programs are usually configured using plain-text hidden files, commonly referred to as dotfiles, that are stored in the user\u2019s home directory. For developers who spend any amount of time in the terminal, tweaking and optimizing settings for command-line programs can be an extremely worthwhile investment. Something as easy as light shell customization can result in a significant increase in productivity. Dotfiles are supposed to contain your personal settings \u2014 what works for someone else isn\u2019t necessarily optimal for you. If certain configurations worked for everybody, those settings would have been built into programs as defaults. Blindly cloning someone else\u2019s dotfiles, especially without having an understanding of how everything works, is not the optimal approach. That being said, I am a big fan of sharing dotfiles and taking inspiration from others\u2019 configurations. My own dotfiles have been open sourced, and parts of my configuration are inspired by other people\u2019s dotfiles. However, my dotfiles are my own personal settings, and I understand every bit of code and configuration in there. That is important. There are some people who have forked my dotfiles, but I do not recommend that approach. Copying parts of my configuration, however, is encouraged! It\u2019s best when you understand what you are using \u2014 that\u2019s why I\u2019ve tried to keep my dotfiles organized and well-commented. Note: https://github.com/anishathalye/dotfiles Most likely, as a developer, you will keep using and improving your dotfiles for your entire career. Your dotfiles will most likely be the longest project you ever work on. For this reason, it is worthwhile to organize your dotfiles project in a disciplined manner for maintainability and extensibility. Getting started can feel like a daunting task, partly due to the numerous organizational approaches and choices to make. In this post, I will discuss the tradeoffs between some of the different approaches of structuring your dotfiles, and I\u2019ll explain the choices I ended up making in the process of setting up my own dotfiles. Version Control Keeping a history of your changes allows you to safely experiment with new configurations, revert bad changes, and review the details of past changes. When working on multiple systems, choosing to use a version control system is a no-brainer \u2014 version control helps you keep your dotfiles in sync while properly dealing with changes being made on different systems. It is possible to use dedicated tools such as rcm or homesick for this purpose. These tools usually handle both versioning and installation of dotfiles, which is accomplished by using a dedicated version control system behind the scenes and providing a front end designed specifically for managing dotfiles. These tools are additional dependencies that need to be installed prior to setting up your dotfiles. They are fairly heavyweight, so I prefer to avoid external dependencies in favor of a simpler, self-contained setup. There are two main approaches for using a VCS to keep track of configuration files: you can have your entire home directory under version control (and ignore non-configuration files), or you can keep your configuration files in a separate directory and copy or link them into place. The latter approach is vastly superior for several reasons: There is no possibility of accidentally deleting your files. With your entire home directory under version control, running something like a git clean could wipe out everything in your home directory that is not tracked by your VCS. It is possible to track configuration files that belong somewhere other than $HOME. Installing dotfiles on new machines is easier. All that is required is cloning your dotfiles followed by copying or linking files. Keeping the entire home directory under version complicates installation. If you haven\u2019t done any dotfiles customization, this is a great time to get started! Create a new repository for your dotfiles and start with something simple like shell prompt customization. Installation With your dotfiles in their own repository, there are two possible ways to install dotfiles on systems: copying or symbolically linking files. Symbolic links are better \u2014 using symlinks, there is no need to manage discrepancies between copies. Changes to configuration files are changes to the working copy in the repository. The best approach is to automate the installation process in a \u201cone click\u201d idempotent install script, a program that be run multiple times without having any effect beyond the initial application. That way, when setting up a new machine or syncing changes between machines, all it takes is the execution of a single program to complete the installation process. The installer can be something as simple as a shell script like this: #!/bin/bash BASEDIR=\"$(cd \"$(dirname \"${BASH_SOURCE[0]}\")\" && pwd)\" # vim ln -s ${BASEDIR}/vimrc ~/.vimrc ln -s ${BASEDIR}/vim/ ~/.vim # zsh ln -s ${BASEDIR}/zshrc ~/.zshrc # git ln -s ${BASEDIR}/gitconfig ~/.gitconfig This works, and a lot of people use scripts just like it, but it\u2019s not very robust. Among other things, existing files could be overwritten as a result of the installation process. It\u2019s possible to write a more robust shell script that accomplishes the same thing, and many people have done so. Looking through people\u2019s collections of dotfiles on GitHub, there are hundreds of ad-hoc install scripts (with varying degrees of robustness) that have been written for this particular purpose (and I had written one too). On the other hand, there are more heavyweight tools like vcsh that have more functionality (but most tools are external dependencies that have to be installed before your dotfiles). I prefer sticking to approaches that do not require external dependencies that are not tracked by my dotfiles repository. In the past, I used a custom install script to install my dotfiles. In my opinion, that\u2019s a fine approach. Currently, I use Dotbot to install my dotfiles (full disclosure: I am the author of Dotbot). It\u2019s actually tracked directly in my dotfiles repository as a git submodule, and it has no external dependencies, so there is no extra work required when setting up new systems. All I have to do is run ./install, and everything else is automated. For me, this is a perfect balance \u2014 it is lightweight, clean, and robust, and it is a dependency that is managed directly in my dotfiles repository. Dotbot can provide \u201cone click\u201d idempotent installations that are specified using JSON files. Update (12/8/2014): Dotbot now supports a much cleaner YAML-based (and fully backwards-compatible!) syntax for configurations. Here is the configuration that does the equivalent of the script above: [ { \"link\": { \"~/.vimrc\": \"vimrc\", \"~/.vim\": \"vim/\", \"~/.zshrc\": \"zshrc\", \"~/.gitconfig\": \"gitconfig\" } } ] Dotbot can do more than just link files (as you can see in a more sophisticated configuration). For more details, see the project page. To see Dotbot in action, you can take a look at public dotfiles repositories that are using Dotbot. Here are a few examples: anishathalye/dotfiles crzysdrs/dotfiles Whether you choose to use a custom install script or a specialized tool, symbolically linking files is superior to copying, and having an idempotent install script greatly simplifies the process. Tools like Dotbot or alternatives such as rcm, homesick, vcsh, dots, deedot, GNU Stow, homedir, dotfiles, sync-dotfiles, or dot-files can make your life much easier. Submodules are the best way of managing dependencies that are under version control. Dependency versions are tracked properly, and it is easy to check out the proper versions of dependencies and update dependencies. Many VCSs have first-class support for this feature \u2014 Git has submodules For example, if you wanted to add Dotbot as a submodule in the dotbot directory, you could run the following command: git submodule add https://github.com/anishathalye/dotbot dotbot Initializing all your submodules and checking out the specified versions is also easy. This operation is idempotent, and it can be run after cloning or updating your dotfiles: git submodule update --init --recursive Upgrading submodules to the latest published version can be done by running this command: git submodule update --init --remote After upgrading your dotfiles, the new versions of plugins can be checked into your git repository. All kinds of interesting plugins are available on the Internet. You can get syntax highlighting for your shell. You can manage your vim plugins with ease using Pathogen. Your vim plugins (along with pathogen itself) can all be installed as submodules. For the most part, anything that can be installed by running a git clone can be installed as a submodule by running git submodule add instead. When using submodules in your dotfiles, it is handy to have submodule initialization as part of your installation script. Adding git submodule update --init --recursive to your installation process will take care of that. This can be done using Dotbot by adding the following shell command: Local Customization When managing dotfiles on multiple machines, the majority of your configuration will be the same between machines, and there will be some minor differences between installations. One way to handle this is to use branches in your main dotfiles repository, but that can quickly get out of hand. The cleanest way is to have a main dotfiles repository and have a separate repository for local customizations that override defaults. To see how I did this, you can take a look at how I organized my dotfiles-local repository. This has the additional advantage that your main dotfiles can be open sourced, and your local customizations can be kept private (because they may contain things such as SSH aliases, etc). This secondary repository should have branches for all your different machines (or groups of machines). You should have an install script for this repository as well. I use Dotbot for both my main dotfiles repository and my local customizations. It is easy to structure your dotfiles so settings are easy to override. The basic pattern is to check for the existence of an overriding file and source the file if it exists. Shell You can add the following to the end of your shell rc file to enable overriding: if [ -f ~/.zshrc_local ]; then source ~/.zshrc_local fi If you\u2019re using a different shell, you probably want to name the file differently. Git You can add the following to the end of your .gitconfig file to enable overriding: [include] path = ~/.gitconfig_local Vim You can add the following to the end of your .vimrc file to enable overriding: let $LOCALFILE=expand(\"~/.vimrc_local\") if filereadable($LOCALFILE) source $LOCALFILE endif tmux You can add the following to the end of your .tmux.conf file to enable overriding: if-shell \"[ -f ~/.tmux_local.conf ]\" 'source ~/.tmux_local.conf' Miscellaneous Tips Path to Dotfiles It is nice to be able to put your dotfiles anywhere on a system and have your files linked into place. Sometimes, it can be handy to have a persistent path to your dotfiles repository. This can be done by always keeping your dotfiles in a specific directory such as ~/dotfiles, but there is a cleaner way to achieve the same result. You can create a symbolic link from ~/.dotfiles to your dotfiles as a part of your installation process. This can be done with Dotbot by adding the following link: [ { \"link\": { \"~/.dotfiles\": \"\" } } ] Tracking Custom Scripts You can keep track of your custom shell scripts in your dotfiles, too! The easiest way to do this is to create a bin/ directory for your shell scripts, and then add the following to your shell rc file: export PATH=~/.dotfiles/bin:${PATH} For this to work properly, make sure you followed the tip above to create ~/.dotfiles as a symbolic link to your dotfiles directory. Tracking Config Files in Other Directories","title":"Managing Your Dotfiles"},{"location":"Highlights/Readwise/Articles/Managing%20Your%20Dotfiles/#managing-your-dotfiles","text":"","title":"Managing Your Dotfiles"},{"location":"Highlights/Readwise/Articles/Managing%20Your%20Dotfiles/#metadata","text":"Author: [[anishathalye.com]] Full Title: Managing Your Dotfiles Category: #Type/Highlights/Article URL: https://www.anishathalye.com/2014/08/03/managing-your-dotfiles/","title":"Metadata"},{"location":"Highlights/Readwise/Articles/Managing%20Your%20Dotfiles/#highlights","text":"Unix command-line programs are usually configured using plain-text hidden files, commonly referred to as dotfiles, that are stored in the user\u2019s home directory. For developers who spend any amount of time in the terminal, tweaking and optimizing settings for command-line programs can be an extremely worthwhile investment. Something as easy as light shell customization can result in a significant increase in productivity. Dotfiles are supposed to contain your personal settings \u2014 what works for someone else isn\u2019t necessarily optimal for you. If certain configurations worked for everybody, those settings would have been built into programs as defaults. Blindly cloning someone else\u2019s dotfiles, especially without having an understanding of how everything works, is not the optimal approach. That being said, I am a big fan of sharing dotfiles and taking inspiration from others\u2019 configurations. My own dotfiles have been open sourced, and parts of my configuration are inspired by other people\u2019s dotfiles. However, my dotfiles are my own personal settings, and I understand every bit of code and configuration in there. That is important. There are some people who have forked my dotfiles, but I do not recommend that approach. Copying parts of my configuration, however, is encouraged! It\u2019s best when you understand what you are using \u2014 that\u2019s why I\u2019ve tried to keep my dotfiles organized and well-commented. Note: https://github.com/anishathalye/dotfiles Most likely, as a developer, you will keep using and improving your dotfiles for your entire career. Your dotfiles will most likely be the longest project you ever work on. For this reason, it is worthwhile to organize your dotfiles project in a disciplined manner for maintainability and extensibility. Getting started can feel like a daunting task, partly due to the numerous organizational approaches and choices to make. In this post, I will discuss the tradeoffs between some of the different approaches of structuring your dotfiles, and I\u2019ll explain the choices I ended up making in the process of setting up my own dotfiles. Version Control Keeping a history of your changes allows you to safely experiment with new configurations, revert bad changes, and review the details of past changes. When working on multiple systems, choosing to use a version control system is a no-brainer \u2014 version control helps you keep your dotfiles in sync while properly dealing with changes being made on different systems. It is possible to use dedicated tools such as rcm or homesick for this purpose. These tools usually handle both versioning and installation of dotfiles, which is accomplished by using a dedicated version control system behind the scenes and providing a front end designed specifically for managing dotfiles. These tools are additional dependencies that need to be installed prior to setting up your dotfiles. They are fairly heavyweight, so I prefer to avoid external dependencies in favor of a simpler, self-contained setup. There are two main approaches for using a VCS to keep track of configuration files: you can have your entire home directory under version control (and ignore non-configuration files), or you can keep your configuration files in a separate directory and copy or link them into place. The latter approach is vastly superior for several reasons: There is no possibility of accidentally deleting your files. With your entire home directory under version control, running something like a git clean could wipe out everything in your home directory that is not tracked by your VCS. It is possible to track configuration files that belong somewhere other than $HOME. Installing dotfiles on new machines is easier. All that is required is cloning your dotfiles followed by copying or linking files. Keeping the entire home directory under version complicates installation. If you haven\u2019t done any dotfiles customization, this is a great time to get started! Create a new repository for your dotfiles and start with something simple like shell prompt customization. Installation With your dotfiles in their own repository, there are two possible ways to install dotfiles on systems: copying or symbolically linking files. Symbolic links are better \u2014 using symlinks, there is no need to manage discrepancies between copies. Changes to configuration files are changes to the working copy in the repository. The best approach is to automate the installation process in a \u201cone click\u201d idempotent install script, a program that be run multiple times without having any effect beyond the initial application. That way, when setting up a new machine or syncing changes between machines, all it takes is the execution of a single program to complete the installation process. The installer can be something as simple as a shell script like this: #!/bin/bash BASEDIR=\"$(cd \"$(dirname \"${BASH_SOURCE[0]}\")\" && pwd)\" # vim ln -s ${BASEDIR}/vimrc ~/.vimrc ln -s ${BASEDIR}/vim/ ~/.vim # zsh ln -s ${BASEDIR}/zshrc ~/.zshrc # git ln -s ${BASEDIR}/gitconfig ~/.gitconfig This works, and a lot of people use scripts just like it, but it\u2019s not very robust. Among other things, existing files could be overwritten as a result of the installation process. It\u2019s possible to write a more robust shell script that accomplishes the same thing, and many people have done so. Looking through people\u2019s collections of dotfiles on GitHub, there are hundreds of ad-hoc install scripts (with varying degrees of robustness) that have been written for this particular purpose (and I had written one too). On the other hand, there are more heavyweight tools like vcsh that have more functionality (but most tools are external dependencies that have to be installed before your dotfiles). I prefer sticking to approaches that do not require external dependencies that are not tracked by my dotfiles repository. In the past, I used a custom install script to install my dotfiles. In my opinion, that\u2019s a fine approach. Currently, I use Dotbot to install my dotfiles (full disclosure: I am the author of Dotbot). It\u2019s actually tracked directly in my dotfiles repository as a git submodule, and it has no external dependencies, so there is no extra work required when setting up new systems. All I have to do is run ./install, and everything else is automated. For me, this is a perfect balance \u2014 it is lightweight, clean, and robust, and it is a dependency that is managed directly in my dotfiles repository. Dotbot can provide \u201cone click\u201d idempotent installations that are specified using JSON files. Update (12/8/2014): Dotbot now supports a much cleaner YAML-based (and fully backwards-compatible!) syntax for configurations. Here is the configuration that does the equivalent of the script above: [ { \"link\": { \"~/.vimrc\": \"vimrc\", \"~/.vim\": \"vim/\", \"~/.zshrc\": \"zshrc\", \"~/.gitconfig\": \"gitconfig\" } } ] Dotbot can do more than just link files (as you can see in a more sophisticated configuration). For more details, see the project page. To see Dotbot in action, you can take a look at public dotfiles repositories that are using Dotbot. Here are a few examples: anishathalye/dotfiles crzysdrs/dotfiles Whether you choose to use a custom install script or a specialized tool, symbolically linking files is superior to copying, and having an idempotent install script greatly simplifies the process. Tools like Dotbot or alternatives such as rcm, homesick, vcsh, dots, deedot, GNU Stow, homedir, dotfiles, sync-dotfiles, or dot-files can make your life much easier. Submodules are the best way of managing dependencies that are under version control. Dependency versions are tracked properly, and it is easy to check out the proper versions of dependencies and update dependencies. Many VCSs have first-class support for this feature \u2014 Git has submodules For example, if you wanted to add Dotbot as a submodule in the dotbot directory, you could run the following command: git submodule add https://github.com/anishathalye/dotbot dotbot Initializing all your submodules and checking out the specified versions is also easy. This operation is idempotent, and it can be run after cloning or updating your dotfiles: git submodule update --init --recursive Upgrading submodules to the latest published version can be done by running this command: git submodule update --init --remote After upgrading your dotfiles, the new versions of plugins can be checked into your git repository. All kinds of interesting plugins are available on the Internet. You can get syntax highlighting for your shell. You can manage your vim plugins with ease using Pathogen. Your vim plugins (along with pathogen itself) can all be installed as submodules. For the most part, anything that can be installed by running a git clone can be installed as a submodule by running git submodule add instead. When using submodules in your dotfiles, it is handy to have submodule initialization as part of your installation script. Adding git submodule update --init --recursive to your installation process will take care of that. This can be done using Dotbot by adding the following shell command: Local Customization When managing dotfiles on multiple machines, the majority of your configuration will be the same between machines, and there will be some minor differences between installations. One way to handle this is to use branches in your main dotfiles repository, but that can quickly get out of hand. The cleanest way is to have a main dotfiles repository and have a separate repository for local customizations that override defaults. To see how I did this, you can take a look at how I organized my dotfiles-local repository. This has the additional advantage that your main dotfiles can be open sourced, and your local customizations can be kept private (because they may contain things such as SSH aliases, etc). This secondary repository should have branches for all your different machines (or groups of machines). You should have an install script for this repository as well. I use Dotbot for both my main dotfiles repository and my local customizations. It is easy to structure your dotfiles so settings are easy to override. The basic pattern is to check for the existence of an overriding file and source the file if it exists. Shell You can add the following to the end of your shell rc file to enable overriding: if [ -f ~/.zshrc_local ]; then source ~/.zshrc_local fi If you\u2019re using a different shell, you probably want to name the file differently. Git You can add the following to the end of your .gitconfig file to enable overriding: [include] path = ~/.gitconfig_local Vim You can add the following to the end of your .vimrc file to enable overriding: let $LOCALFILE=expand(\"~/.vimrc_local\") if filereadable($LOCALFILE) source $LOCALFILE endif tmux You can add the following to the end of your .tmux.conf file to enable overriding: if-shell \"[ -f ~/.tmux_local.conf ]\" 'source ~/.tmux_local.conf' Miscellaneous Tips Path to Dotfiles It is nice to be able to put your dotfiles anywhere on a system and have your files linked into place. Sometimes, it can be handy to have a persistent path to your dotfiles repository. This can be done by always keeping your dotfiles in a specific directory such as ~/dotfiles, but there is a cleaner way to achieve the same result. You can create a symbolic link from ~/.dotfiles to your dotfiles as a part of your installation process. This can be done with Dotbot by adding the following link: [ { \"link\": { \"~/.dotfiles\": \"\" } } ] Tracking Custom Scripts You can keep track of your custom shell scripts in your dotfiles, too! The easiest way to do this is to create a bin/ directory for your shell scripts, and then add the following to your shell rc file: export PATH=~/.dotfiles/bin:${PATH} For this to work properly, make sure you followed the tip above to create ~/.dotfiles as a symbolic link to your dotfiles directory. Tracking Config Files in Other Directories","title":"Highlights"},{"location":"Highlights/Readwise/Articles/Managing%20Your%20Project%20-%20How%20to%20Make%20Your%20Research%20Reproducible%20-%20Library%20Gu/","text":"Managing Your Project - How to Make Your Research Reproducible - Library Gu \u00b6 Metadata \u00b6 Author: [[Anna Sackmann]] Full Title: Managing Your Project - How to Make Your Research Reproducible - Library Gu Category: #Type/Highlights/Article URL: https://guides.lib.berkeley.edu/c.php?g=652220&p=4575532 Highlights \u00b6 Put code and data in separate subdirectories. Plan to separate raw data from processed data. Always apply the the 5 Cs: be Clear, Concise, Consistent, Correct, and Conformant. Pick a scheme for organizing data Tools that capture the experimental environment, such as Docker, ReproZIP, and CDE. Tools that capture the sequence of the computations such as Jupyter Notebook. Backup your data files every while. Use GNU Make to automate the research process. For writing your manuscript use latex and Bibtex. Use version control system such as Git Deposit your data in a repository for long-term preservation. Tags: [[favorite]]","title":"Managing Your Project - How to Make Your Research Reproducible - Library Gu"},{"location":"Highlights/Readwise/Articles/Managing%20Your%20Project%20-%20How%20to%20Make%20Your%20Research%20Reproducible%20-%20Library%20Gu/#managing-your-project-how-to-make-your-research-reproducible-library-gu","text":"","title":"Managing Your Project - How to Make Your Research Reproducible - Library Gu"},{"location":"Highlights/Readwise/Articles/Managing%20Your%20Project%20-%20How%20to%20Make%20Your%20Research%20Reproducible%20-%20Library%20Gu/#metadata","text":"Author: [[Anna Sackmann]] Full Title: Managing Your Project - How to Make Your Research Reproducible - Library Gu Category: #Type/Highlights/Article URL: https://guides.lib.berkeley.edu/c.php?g=652220&p=4575532","title":"Metadata"},{"location":"Highlights/Readwise/Articles/Managing%20Your%20Project%20-%20How%20to%20Make%20Your%20Research%20Reproducible%20-%20Library%20Gu/#highlights","text":"Put code and data in separate subdirectories. Plan to separate raw data from processed data. Always apply the the 5 Cs: be Clear, Concise, Consistent, Correct, and Conformant. Pick a scheme for organizing data Tools that capture the experimental environment, such as Docker, ReproZIP, and CDE. Tools that capture the sequence of the computations such as Jupyter Notebook. Backup your data files every while. Use GNU Make to automate the research process. For writing your manuscript use latex and Bibtex. Use version control system such as Git Deposit your data in a repository for long-term preservation. Tags: [[favorite]]","title":"Highlights"},{"location":"Highlights/Readwise/Articles/Managing%20Yourself%20Extreme%20Productivity/","text":"Managing Yourself: Extreme Productivity \u00b6 Metadata \u00b6 Author: [[hbr.org]] Full Title: Managing Yourself: Extreme Productivity Category: #Type/Highlights/Article URL: https://hbr.org/2011/05/managing-yourself-extreme-productivity Highlights \u00b6 Principle 1: Know Your Comparative Advantage Principle 2: It\u2019s Not the Time You Spend but the Results You Produce Principle 3: Think First, Read or Write Second Many people feel overwhelmed by the huge volume of reading and writing they have to do for their business. They don\u2019t realize that the key to faster and more effective reading and writing is more-rigorous thinking in advance. To be a speed reader, you have to be very clear in your own mind about why you are reading. When you get to the exam in a month or two, what do you want to remember from this chapter?\u201d Then I\u2019d say, \u201cAfter reading this chapter, please write no more than the one or two paragraphs you want to remember for the exam. Then go back and see how you could read more efficiently to obtain that paragraph or two With e-mails, the first thing to do is to decide which ones need to be read. Second, if any of them are important, I try to answer them right away. If I can\u2019t, or they have lengthy attachments, I have them printed out. The next morning I have hard copies of them on my desk and know what I need to respond to. When it comes to writing something longer than an e-mail, the key is to first figure out your argument. If I don\u2019t fully understand my line of argument, I cannot write even a paragraph. To do this, compose an outline before writing. For an article or a memorandum, that means just four or five key points with a few subpoints under each. I\u2019ve seen many executives realize what they wanted to say only after they had written a lengthy draft. That is unfortunate. You should know where you will end up before you start. Try this: After composing an outline, write the concluding paragraph. That will tell you whether you really know where your article or memo is going. Principle 4: Prepare Your Plan, but Be Ready to Change It Exercise With exercise, the key is actually doing it. Many successful people have a daily routine that involves running, biking, swimming, or fitness machines. I am bored by such activities, so I play doubles tennis two or three times a week. It\u2019s easy to skip your workouts when traveling. The facilities may not be good, or your schedule may be too tight. But those are the days when you need exercise the most. Healthful Eating Similarly, it\u2019s easy to break healthful eating habits when you\u2019re on the road. I know a private equity executive who puts on 10 or 15 pounds every time his firm raises a new fund. Here are three tips for avoiding this fate: Follow your normal breakfast menu even at breakfast meetings. Avoid all desserts at lunch or dinner events. And try to limit alcohol, which is quite caloric, to one glass of wine. Sleep Finally, let me give a sermon on the importance of sleep. Some executives say they can get along on four or five hours a night, but I doubt they are as mentally sharp as they could be. Seven or eight hours a night, plus a brief nap during the day, will make your waking hours far more productive. Again, it can be challenging to stick to this routine when on the road. Evening flights from the East Coast of the United States to Europe last only six or seven hours, so I eat before getting on the plane and go right to sleep as soon as I\u2019m in my seat. The key to sleeping on planes is a blindfold and earplugs, which create the sense of being in a cocoon, cut off from the rest of the world. This feeling is easier to create in a window seat than in an aisle seat, where it\u2019s hard to avoid the commotion of the plane\u2019s staff. Read more Principle 6: Keep Things Short and Simple On a daily basis, I try to keep the material aspects of life as simple as possible in order to maximize productivity.","title":"Managing Yourself: Extreme Productivity"},{"location":"Highlights/Readwise/Articles/Managing%20Yourself%20Extreme%20Productivity/#managing-yourself-extreme-productivity","text":"","title":"Managing Yourself: Extreme Productivity"},{"location":"Highlights/Readwise/Articles/Managing%20Yourself%20Extreme%20Productivity/#metadata","text":"Author: [[hbr.org]] Full Title: Managing Yourself: Extreme Productivity Category: #Type/Highlights/Article URL: https://hbr.org/2011/05/managing-yourself-extreme-productivity","title":"Metadata"},{"location":"Highlights/Readwise/Articles/Managing%20Yourself%20Extreme%20Productivity/#highlights","text":"Principle 1: Know Your Comparative Advantage Principle 2: It\u2019s Not the Time You Spend but the Results You Produce Principle 3: Think First, Read or Write Second Many people feel overwhelmed by the huge volume of reading and writing they have to do for their business. They don\u2019t realize that the key to faster and more effective reading and writing is more-rigorous thinking in advance. To be a speed reader, you have to be very clear in your own mind about why you are reading. When you get to the exam in a month or two, what do you want to remember from this chapter?\u201d Then I\u2019d say, \u201cAfter reading this chapter, please write no more than the one or two paragraphs you want to remember for the exam. Then go back and see how you could read more efficiently to obtain that paragraph or two With e-mails, the first thing to do is to decide which ones need to be read. Second, if any of them are important, I try to answer them right away. If I can\u2019t, or they have lengthy attachments, I have them printed out. The next morning I have hard copies of them on my desk and know what I need to respond to. When it comes to writing something longer than an e-mail, the key is to first figure out your argument. If I don\u2019t fully understand my line of argument, I cannot write even a paragraph. To do this, compose an outline before writing. For an article or a memorandum, that means just four or five key points with a few subpoints under each. I\u2019ve seen many executives realize what they wanted to say only after they had written a lengthy draft. That is unfortunate. You should know where you will end up before you start. Try this: After composing an outline, write the concluding paragraph. That will tell you whether you really know where your article or memo is going. Principle 4: Prepare Your Plan, but Be Ready to Change It Exercise With exercise, the key is actually doing it. Many successful people have a daily routine that involves running, biking, swimming, or fitness machines. I am bored by such activities, so I play doubles tennis two or three times a week. It\u2019s easy to skip your workouts when traveling. The facilities may not be good, or your schedule may be too tight. But those are the days when you need exercise the most. Healthful Eating Similarly, it\u2019s easy to break healthful eating habits when you\u2019re on the road. I know a private equity executive who puts on 10 or 15 pounds every time his firm raises a new fund. Here are three tips for avoiding this fate: Follow your normal breakfast menu even at breakfast meetings. Avoid all desserts at lunch or dinner events. And try to limit alcohol, which is quite caloric, to one glass of wine. Sleep Finally, let me give a sermon on the importance of sleep. Some executives say they can get along on four or five hours a night, but I doubt they are as mentally sharp as they could be. Seven or eight hours a night, plus a brief nap during the day, will make your waking hours far more productive. Again, it can be challenging to stick to this routine when on the road. Evening flights from the East Coast of the United States to Europe last only six or seven hours, so I eat before getting on the plane and go right to sleep as soon as I\u2019m in my seat. The key to sleeping on planes is a blindfold and earplugs, which create the sense of being in a cocoon, cut off from the rest of the world. This feeling is easier to create in a window seat than in an aisle seat, where it\u2019s hard to avoid the commotion of the plane\u2019s staff. Read more Principle 6: Keep Things Short and Simple On a daily basis, I try to keep the material aspects of life as simple as possible in order to maximize productivity.","title":"Highlights"},{"location":"Highlights/Readwise/Articles/Methods%20Bites/","text":"Methods Bites \u00b6 Metadata \u00b6 Author: [[Mzes Social Science Data Lab]] Full Title: Methods Bites Category: #Type/Highlights/Article URL: https://www.mzes.uni-mannheim.de/socialsciencedatalab Highlights \u00b6 Workflow for a Reproducible Data Project Even the setup of a reproducible data project should follow reproducible steps. And since we need to repeat these steps every time we start a new data project, it is a good idea to keep everything simple and to automate what can be automated. For the following steps to work you need three things: A github.com account. A current installation of R and RStudio on the computer you want to work on. An installation of git on the computer you want to work on. If you struggle with any of those three prerequisites, happygitwithr.com is an excellent resource that includes a step-by-step guide of how to setup git with R. It will also give you are more in-depth introduction to what git and github actually are and why it is worthwhile including them in any data project right from the start! Let\u2019s start a new project: Start a new project on GitHub: Login to your GitHub account. Click on New on the left side where your repositories are displayed. Give your project repository a meaningful name. For this course you could name it: efficient-data-management. Click Create repository. Copy the URL to the repository, it will look something like this: https://github.com/ /efficient-data-management.git Open the project in RStudio: Open RStudio. Click on File > New Project.... Create a new project from Version Control. Choose Git. Paste the URL to the repository in Repository URL. Choose a folder on your computer where the project will be stored locally. And finally click on Create. Initializing the project with a .Rprofile. Now you have a new Rproject that is linked with GitHub. Before start coding, we want to have an efficient folder structure. Ideally, we want to use the same structure for all of our projects. This way, it is easier to focus on the things that really matter \u2013 like producing interesting research. To that end, we initialize our Rproject with a .Rprofile that automates the process of setting up our project structure. Initialize your Rproject with a .Rprofile: If you follow these steps for the very first time, install the renv package in R. In RStudio, with your new Rproject open, open a new Text File. Paste the following code and save it as .Rprofile. Now close RStudio and re-open your project from your project folder. .First <- function() { dir.create(paste0(getwd(), \"/figures\"), showWarnings = F) dir.create(paste0(getwd(), \"/processed-data\"), showWarnings = F) dir.create(paste0(getwd(), \"/raw-data\"), showWarnings = F) dir.create(paste0(getwd(), \"/scripts\"), showWarnings = F) dir.create(paste0(getwd(), \"/manuscript\"), showWarnings = F) if (!(\"renv\" %in% list.files())) { renv::init() } else { source(\"renv/activate.R\") } cat(\"\\nWelcome to your R-Project:\", basename(getwd()), \"\\n\") } R will automatically source the .Rprofile at startup. Here, we first create some folders with dir.create(). Don\u2019t worry, folders will not be created if they already exist, so this will not overwrite existing files. We then display a nice welcome message with cat() and activate the renv package. After re-opening the Rproject, you should now see the project setup in your folder. What is renv? In the past, sharing your project with someone else and getting R to show the exact same behavior on different machines could be a pain. The renv package makes this super easy. It creates a local package directory for your project. This means that it keeps track of all the packages and package versions that you use in your project. If someone else wants to work with the exact same package environment to reproduce your data project, they can easily restore it from your renv package directory. To learn more about renv, check out its documentation here. Leveraging git and renv at the end of a working session Now that we have our nice project setup, we should not forget to leverage it. At the end of a working session you should follow the following steps: Create a renv::snapshot() to save all the packages you used to your local package directory. Commit all your changes to git. This can be easily done by using the Git pane in RStudio. Push everything to GitHub.","title":"Methods Bites"},{"location":"Highlights/Readwise/Articles/Methods%20Bites/#methods-bites","text":"","title":"Methods Bites"},{"location":"Highlights/Readwise/Articles/Methods%20Bites/#metadata","text":"Author: [[Mzes Social Science Data Lab]] Full Title: Methods Bites Category: #Type/Highlights/Article URL: https://www.mzes.uni-mannheim.de/socialsciencedatalab","title":"Metadata"},{"location":"Highlights/Readwise/Articles/Methods%20Bites/#highlights","text":"Workflow for a Reproducible Data Project Even the setup of a reproducible data project should follow reproducible steps. And since we need to repeat these steps every time we start a new data project, it is a good idea to keep everything simple and to automate what can be automated. For the following steps to work you need three things: A github.com account. A current installation of R and RStudio on the computer you want to work on. An installation of git on the computer you want to work on. If you struggle with any of those three prerequisites, happygitwithr.com is an excellent resource that includes a step-by-step guide of how to setup git with R. It will also give you are more in-depth introduction to what git and github actually are and why it is worthwhile including them in any data project right from the start! Let\u2019s start a new project: Start a new project on GitHub: Login to your GitHub account. Click on New on the left side where your repositories are displayed. Give your project repository a meaningful name. For this course you could name it: efficient-data-management. Click Create repository. Copy the URL to the repository, it will look something like this: https://github.com/ /efficient-data-management.git Open the project in RStudio: Open RStudio. Click on File > New Project.... Create a new project from Version Control. Choose Git. Paste the URL to the repository in Repository URL. Choose a folder on your computer where the project will be stored locally. And finally click on Create. Initializing the project with a .Rprofile. Now you have a new Rproject that is linked with GitHub. Before start coding, we want to have an efficient folder structure. Ideally, we want to use the same structure for all of our projects. This way, it is easier to focus on the things that really matter \u2013 like producing interesting research. To that end, we initialize our Rproject with a .Rprofile that automates the process of setting up our project structure. Initialize your Rproject with a .Rprofile: If you follow these steps for the very first time, install the renv package in R. In RStudio, with your new Rproject open, open a new Text File. Paste the following code and save it as .Rprofile. Now close RStudio and re-open your project from your project folder. .First <- function() { dir.create(paste0(getwd(), \"/figures\"), showWarnings = F) dir.create(paste0(getwd(), \"/processed-data\"), showWarnings = F) dir.create(paste0(getwd(), \"/raw-data\"), showWarnings = F) dir.create(paste0(getwd(), \"/scripts\"), showWarnings = F) dir.create(paste0(getwd(), \"/manuscript\"), showWarnings = F) if (!(\"renv\" %in% list.files())) { renv::init() } else { source(\"renv/activate.R\") } cat(\"\\nWelcome to your R-Project:\", basename(getwd()), \"\\n\") } R will automatically source the .Rprofile at startup. Here, we first create some folders with dir.create(). Don\u2019t worry, folders will not be created if they already exist, so this will not overwrite existing files. We then display a nice welcome message with cat() and activate the renv package. After re-opening the Rproject, you should now see the project setup in your folder. What is renv? In the past, sharing your project with someone else and getting R to show the exact same behavior on different machines could be a pain. The renv package makes this super easy. It creates a local package directory for your project. This means that it keeps track of all the packages and package versions that you use in your project. If someone else wants to work with the exact same package environment to reproduce your data project, they can easily restore it from your renv package directory. To learn more about renv, check out its documentation here. Leveraging git and renv at the end of a working session Now that we have our nice project setup, we should not forget to leverage it. At the end of a working session you should follow the following steps: Create a renv::snapshot() to save all the packages you used to your local package directory. Commit all your changes to git. This can be easily done by using the Git pane in RStudio. Push everything to GitHub.","title":"Highlights"},{"location":"Highlights/Readwise/Articles/More%20Solutions%20for%20Taking%20Podcast%20Notes%20An%20App%20Overview/","text":"More Solutions for Taking Podcast Notes: An App Overview \u00b6 Metadata \u00b6 Author: Full Title: More Solutions for Taking Podcast Notes: An App Overview Category: #Type/Highlights/Article URL: https://mentalpivot.com/more-solutions-for-taking-podcast-notes-a-survey-of-the-apps/ Highlights \u00b6 podcast note-taking apps: Airr and Notepal. Given the release of these apps, it seemed like a good time to survey the landscape once more and see how much progress has been made in the podcast annotation space (since I\u2019m an iPhone user, this article is focused on iOS apps but I do indicate which apps are also available for Android). After exploring the App Store, I found a mixed bag. The bad news is that the available solutions are limited both in number and in functionality; it\u2019s clear that this remains a niche feature. The biggest bummer is that none of the popular podcast players currently offer any note-taking capabilities. Apps with in-app note-taking capabilities Apps are listed in alphabetical order. Airr (free, iOS) Airr is an interesting podcast player with tremendous potential. Airr lets you create short audio highlights from podcast episodes called \u201cAirrQuotes.\u201d When you create an AirrQuote, you can add your own comments or notes to the audio-clip. AirrQuotes can then be shared with other Airr users. Friends who don't have the app can view the AirrQuotes with a share link (viewable via web browser); it\u2019s a nifty podcast discovery feature. Of course, you can always elect to keep the audio clip private if you prefer. Some podcasts offer written transcripts which are also made available when you create a new AirrQuote. Having a text transcription greatly aids note-taking. The discovery angle of shared audio clips is neat, but without a thriving user community, this aspect of the tool is more promising than useful (if Airr gains traction, this will become a major selling-point of the service). I\u2019d also love to see broader coverage of their transcription feature, but I imagine that is constrained by the number of podcasts that offer full-text transcripts and the expense of generating in-house transcripts. [Update: The Airr founder kindly reached out to me and informed me that it is possible to share AirrQuotes with non-Airr users via links that can be viewed in-browser. I've updated the entry above with this new information. Airr also plans to release more new features very soon (more transcripts and hands-free AirrQuotes), so be sure to keep an eye on this app in the coming weeks.] Notepal (free, iOS) Notepal is a bare-bones app that is designed to do one thing well: take notes for podcasts. If you\u2019re looking for a podcast player that provides a polished user interface for discovery and podcast playback, this isn\u2019t the app for you. However, if you simply want an app that lets you write short notes for podcast episodes, this is a decent solution. While listening to a podcast you click on an \u201cadd note\u201d button and record a short comment (the app automatically records the timestamp). Notepal does a good job of organizing your notes for later review. Notepal offers export integration with Evernote which is a nice touch. The biggest knock on Notepal right now is that the export function is limited to Evernote. On the other hand, this is the only app I encountered that even offers this feature, so props to them. Being able to use notes as bookmarks to jump to an episode playback position would also be nice. As this app is only one month old, I expect future releases will bring significant improvements. RadioPublic (free, iOS & Android) While there are a handful of solutions making progress in this space, I haven\u2019t yet found one that will replace my current method of taking a screenshot and emailing myself a short annotation that I can later turn into a proper note for my note-taking system (I use a zettelkasten, which I\u2019ll write about at some future date). The overall package I\u2019m still looking for: A single app for discovery, playback and podcast annotations. A fully-featured and professional-looking podcast player with good user-experience. Note-taking is a small, but important feature in the app. It's well-integrated into the overall experience (rather than a standalone solution). The Audible app is a decent example for how this is done in an audiobook app. Notes should be exportable as a plaintext or markdown file. I need my notes to be portable from one app to another. Full-text transcripts. I know it's still a challenge to generate the transcripts from a cost, quality, and automation standpoint, but text transcripts are critical to better podcast note-taking. I hope hope others will follow the lead of Airr and Notecast to expand on this feature. In the words of U2, \u201cI still haven\u2019t found what I\u2019m looking for.\u201d That\u2019s ok; I recognize this is a niche feature. Nevertheless, I appreciate the efforts of the developers highlighted above and am looking forward to how this feature evolves in the future podcast app ecosystem.","title":"More Solutions for Taking Podcast Notes: An App Overview"},{"location":"Highlights/Readwise/Articles/More%20Solutions%20for%20Taking%20Podcast%20Notes%20An%20App%20Overview/#more-solutions-for-taking-podcast-notes-an-app-overview","text":"","title":"More Solutions for Taking Podcast Notes: An App Overview"},{"location":"Highlights/Readwise/Articles/More%20Solutions%20for%20Taking%20Podcast%20Notes%20An%20App%20Overview/#metadata","text":"Author: Full Title: More Solutions for Taking Podcast Notes: An App Overview Category: #Type/Highlights/Article URL: https://mentalpivot.com/more-solutions-for-taking-podcast-notes-a-survey-of-the-apps/","title":"Metadata"},{"location":"Highlights/Readwise/Articles/More%20Solutions%20for%20Taking%20Podcast%20Notes%20An%20App%20Overview/#highlights","text":"podcast note-taking apps: Airr and Notepal. Given the release of these apps, it seemed like a good time to survey the landscape once more and see how much progress has been made in the podcast annotation space (since I\u2019m an iPhone user, this article is focused on iOS apps but I do indicate which apps are also available for Android). After exploring the App Store, I found a mixed bag. The bad news is that the available solutions are limited both in number and in functionality; it\u2019s clear that this remains a niche feature. The biggest bummer is that none of the popular podcast players currently offer any note-taking capabilities. Apps with in-app note-taking capabilities Apps are listed in alphabetical order. Airr (free, iOS) Airr is an interesting podcast player with tremendous potential. Airr lets you create short audio highlights from podcast episodes called \u201cAirrQuotes.\u201d When you create an AirrQuote, you can add your own comments or notes to the audio-clip. AirrQuotes can then be shared with other Airr users. Friends who don't have the app can view the AirrQuotes with a share link (viewable via web browser); it\u2019s a nifty podcast discovery feature. Of course, you can always elect to keep the audio clip private if you prefer. Some podcasts offer written transcripts which are also made available when you create a new AirrQuote. Having a text transcription greatly aids note-taking. The discovery angle of shared audio clips is neat, but without a thriving user community, this aspect of the tool is more promising than useful (if Airr gains traction, this will become a major selling-point of the service). I\u2019d also love to see broader coverage of their transcription feature, but I imagine that is constrained by the number of podcasts that offer full-text transcripts and the expense of generating in-house transcripts. [Update: The Airr founder kindly reached out to me and informed me that it is possible to share AirrQuotes with non-Airr users via links that can be viewed in-browser. I've updated the entry above with this new information. Airr also plans to release more new features very soon (more transcripts and hands-free AirrQuotes), so be sure to keep an eye on this app in the coming weeks.] Notepal (free, iOS) Notepal is a bare-bones app that is designed to do one thing well: take notes for podcasts. If you\u2019re looking for a podcast player that provides a polished user interface for discovery and podcast playback, this isn\u2019t the app for you. However, if you simply want an app that lets you write short notes for podcast episodes, this is a decent solution. While listening to a podcast you click on an \u201cadd note\u201d button and record a short comment (the app automatically records the timestamp). Notepal does a good job of organizing your notes for later review. Notepal offers export integration with Evernote which is a nice touch. The biggest knock on Notepal right now is that the export function is limited to Evernote. On the other hand, this is the only app I encountered that even offers this feature, so props to them. Being able to use notes as bookmarks to jump to an episode playback position would also be nice. As this app is only one month old, I expect future releases will bring significant improvements. RadioPublic (free, iOS & Android) While there are a handful of solutions making progress in this space, I haven\u2019t yet found one that will replace my current method of taking a screenshot and emailing myself a short annotation that I can later turn into a proper note for my note-taking system (I use a zettelkasten, which I\u2019ll write about at some future date). The overall package I\u2019m still looking for: A single app for discovery, playback and podcast annotations. A fully-featured and professional-looking podcast player with good user-experience. Note-taking is a small, but important feature in the app. It's well-integrated into the overall experience (rather than a standalone solution). The Audible app is a decent example for how this is done in an audiobook app. Notes should be exportable as a plaintext or markdown file. I need my notes to be portable from one app to another. Full-text transcripts. I know it's still a challenge to generate the transcripts from a cost, quality, and automation standpoint, but text transcripts are critical to better podcast note-taking. I hope hope others will follow the lead of Airr and Notecast to expand on this feature. In the words of U2, \u201cI still haven\u2019t found what I\u2019m looking for.\u201d That\u2019s ok; I recognize this is a niche feature. Nevertheless, I appreciate the efforts of the developers highlighted above and am looking forward to how this feature evolves in the future podcast app ecosystem.","title":"Highlights"},{"location":"Highlights/Readwise/Articles/My%20Focus-Centric%20Work%20Day%20-%20Study%20Hacks%20-%20Cal%20Newport/","text":"My Focus-Centric Work Day - Study Hacks - Cal Newport \u00b6 Metadata \u00b6 Author: Full Title: My Focus-Centric Work Day - Study Hacks - Cal Newport Category: #Type/Highlights/Article URL: https://www.calnewport.com/blog/2009/05/13/my-focus-centric-work-day/ Highlights \u00b6 The first thing I do when I arrive at my office is write. Next, during the MIT #1 block, I tackle graduate student work. This description is purposefully vague because this work varies. These days, this block is often dedicated to thesis writing. But it also frequently includes reviews, thinking about new problems, and working on other research papers. The midday block is chaotic. This is when I first check my e-mail. It\u2019s also when I surf the web and browse my RSS feeds. I eat lunch during this time and often also go for a run. Finally, it\u2019s when I take care of the annoying small tasks that tend to pile up. Once the blessedly distracting midday block is complete I continue with MIT #2, which is the same as MIT #1. Finally, if it\u2019s not too late, I end the day with my shoulder block which is when I write blog posts. On a good week, I have time for this block 3 days out of 5. Focusing on Focus Why did I add this extra structure to my day? I was worried that I was increasingly losing my ability to focus on hard thinking for extended periods of time. Too much of my day would be interrupted by small tasks and inexplicably frantic inbox checking. I know, of course, that\u2019s it\u2019s fashionable to describe our current fixation on taking in huge amounts of simultaneous information as some sort of evolution of the human mind. Maybe this is true. But for the two fields I\u2019ve devoted my young life to \u2014 academic research and writing \u2014 the ability to focus is everything. It\u2019s also, I\u2019ve discovered, incredibly rewarding. I\u2019m not recommending that you adopt my exact structure. It evolved, over time, to fit the particular demands of my particular situation. But you might want to consider the broader point and reflect on the role focus plays in your life. Ask yourself what efforts you\u2019re making to keep this ability from whithering into vestigial disuse.","title":"My Focus-Centric Work Day - Study Hacks - Cal Newport"},{"location":"Highlights/Readwise/Articles/My%20Focus-Centric%20Work%20Day%20-%20Study%20Hacks%20-%20Cal%20Newport/#my-focus-centric-work-day-study-hacks-cal-newport","text":"","title":"My Focus-Centric Work Day - Study Hacks - Cal Newport"},{"location":"Highlights/Readwise/Articles/My%20Focus-Centric%20Work%20Day%20-%20Study%20Hacks%20-%20Cal%20Newport/#metadata","text":"Author: Full Title: My Focus-Centric Work Day - Study Hacks - Cal Newport Category: #Type/Highlights/Article URL: https://www.calnewport.com/blog/2009/05/13/my-focus-centric-work-day/","title":"Metadata"},{"location":"Highlights/Readwise/Articles/My%20Focus-Centric%20Work%20Day%20-%20Study%20Hacks%20-%20Cal%20Newport/#highlights","text":"The first thing I do when I arrive at my office is write. Next, during the MIT #1 block, I tackle graduate student work. This description is purposefully vague because this work varies. These days, this block is often dedicated to thesis writing. But it also frequently includes reviews, thinking about new problems, and working on other research papers. The midday block is chaotic. This is when I first check my e-mail. It\u2019s also when I surf the web and browse my RSS feeds. I eat lunch during this time and often also go for a run. Finally, it\u2019s when I take care of the annoying small tasks that tend to pile up. Once the blessedly distracting midday block is complete I continue with MIT #2, which is the same as MIT #1. Finally, if it\u2019s not too late, I end the day with my shoulder block which is when I write blog posts. On a good week, I have time for this block 3 days out of 5. Focusing on Focus Why did I add this extra structure to my day? I was worried that I was increasingly losing my ability to focus on hard thinking for extended periods of time. Too much of my day would be interrupted by small tasks and inexplicably frantic inbox checking. I know, of course, that\u2019s it\u2019s fashionable to describe our current fixation on taking in huge amounts of simultaneous information as some sort of evolution of the human mind. Maybe this is true. But for the two fields I\u2019ve devoted my young life to \u2014 academic research and writing \u2014 the ability to focus is everything. It\u2019s also, I\u2019ve discovered, incredibly rewarding. I\u2019m not recommending that you adopt my exact structure. It evolved, over time, to fit the particular demands of my particular situation. But you might want to consider the broader point and reflect on the role focus plays in your life. Ask yourself what efforts you\u2019re making to keep this ability from whithering into vestigial disuse.","title":"Highlights"},{"location":"Highlights/Readwise/Articles/My%20Personal%20Knowledge%20Management%20System%20%E2%80%94%20Moby%20Diction/","text":"My Personal Knowledge Management System \u2014 Moby Diction \u00b6 Metadata \u00b6 Author: [[mobydiction.ca]] Full Title: My Personal Knowledge Management System \u2014 Moby Diction Category: #Type/Highlights/Article URL: https://mobydiction.ca/blog/my-personal-knowledge-management-system Highlights \u00b6 Creating evergreen notes So far, what I have described is a fairly by-the-book implementation of Tiago Forte's PARA method. However, I found that one of the limitations of PARA is that I was still losing ideas. That is, I would read something, get some hunch or seed of an idea, but didn't have a good place to keep it. PARA's based heavily on Getting Things Done, which means it is heavily focused on a well-defined next action; however, an idea I have today might not really have the legs to become a full-blown project (of any size) until much later. I needed a way to incubate ideas a bit better. As well, I am a firm believer that writing is a way to master information. Translating my highlights and summaries into my own words, sentences, and paragraphs doesn't just help me better capture knowledge; it facilitates the generation of new knowledge. For this purpose, I've added an additional layer to Forte's progressive summarization: a zettelkasten. In the zettelkasten, I try to capture those hunches or original ideas that come up as I am reading. As I read more, these connect with new ideas, hopefully (though not always) blooming into paragraphs. Then, those paragraphs connect with other notes in the zettelkasten to form constellations of ideas that can may develop into essays or blog posts. These notes either represent strong opinions or strong facts. I've taken inspiration from Andy Matuschak's idea of evergreen notes. I see them as the place in which I develop my personal perspective on the kinds of things I read. I try to write these in something approaching final copy, including extensive links to other evergreen notes. I'll also sometimes compile Maps of Content (MOC) notes, which curate and comment on relationships between notes on a related topic. They often start as a hypothetical outline that will help guide my future self. Per Ahrens' advice, I keep my zettelkasten notes separate from the fleeting notes I take in Evernote. For now, I am using Obsidian. One of Evernote's weaknesses is how it handles linking. You can create links to individual notes, but it's quite effortful compared to markdown or wiki-based approaches like Obsidian or Bear. And, Obsidian offers the additional ability to quickly see what notes link to one another. This can help to identify unexpected connections and foster serendipitous discovery of new ideas.","title":"My Personal Knowledge Management System \u2014 Moby Diction"},{"location":"Highlights/Readwise/Articles/My%20Personal%20Knowledge%20Management%20System%20%E2%80%94%20Moby%20Diction/#my-personal-knowledge-management-system-moby-diction","text":"","title":"My Personal Knowledge Management System \u2014 Moby Diction"},{"location":"Highlights/Readwise/Articles/My%20Personal%20Knowledge%20Management%20System%20%E2%80%94%20Moby%20Diction/#metadata","text":"Author: [[mobydiction.ca]] Full Title: My Personal Knowledge Management System \u2014 Moby Diction Category: #Type/Highlights/Article URL: https://mobydiction.ca/blog/my-personal-knowledge-management-system","title":"Metadata"},{"location":"Highlights/Readwise/Articles/My%20Personal%20Knowledge%20Management%20System%20%E2%80%94%20Moby%20Diction/#highlights","text":"Creating evergreen notes So far, what I have described is a fairly by-the-book implementation of Tiago Forte's PARA method. However, I found that one of the limitations of PARA is that I was still losing ideas. That is, I would read something, get some hunch or seed of an idea, but didn't have a good place to keep it. PARA's based heavily on Getting Things Done, which means it is heavily focused on a well-defined next action; however, an idea I have today might not really have the legs to become a full-blown project (of any size) until much later. I needed a way to incubate ideas a bit better. As well, I am a firm believer that writing is a way to master information. Translating my highlights and summaries into my own words, sentences, and paragraphs doesn't just help me better capture knowledge; it facilitates the generation of new knowledge. For this purpose, I've added an additional layer to Forte's progressive summarization: a zettelkasten. In the zettelkasten, I try to capture those hunches or original ideas that come up as I am reading. As I read more, these connect with new ideas, hopefully (though not always) blooming into paragraphs. Then, those paragraphs connect with other notes in the zettelkasten to form constellations of ideas that can may develop into essays or blog posts. These notes either represent strong opinions or strong facts. I've taken inspiration from Andy Matuschak's idea of evergreen notes. I see them as the place in which I develop my personal perspective on the kinds of things I read. I try to write these in something approaching final copy, including extensive links to other evergreen notes. I'll also sometimes compile Maps of Content (MOC) notes, which curate and comment on relationships between notes on a related topic. They often start as a hypothetical outline that will help guide my future self. Per Ahrens' advice, I keep my zettelkasten notes separate from the fleeting notes I take in Evernote. For now, I am using Obsidian. One of Evernote's weaknesses is how it handles linking. You can create links to individual notes, but it's quite effortful compared to markdown or wiki-based approaches like Obsidian or Bear. And, Obsidian offers the additional ability to quickly see what notes link to one another. This can help to identify unexpected connections and foster serendipitous discovery of new ideas.","title":"Highlights"},{"location":"Highlights/Readwise/Articles/New%20Project%20Checklist/","text":"New Project Checklist \u00b6 Metadata \u00b6 Author: Full Title: New Project Checklist Category: #Type/Highlights/Article URL: https://amihaiemil.com/2019/05/12/new-project-checklist.html Highlights \u00b6 Repo Creation Licence! Depending on your goals, you might need a different type of licence. At the moment, I am only interested in the \u201cauthor recognition\u201d and \u201cno liability\u201d clauses. For that, I use the BSD-3 Clause licence everywhere. Be sure to also copy the licence text at the beginning of all the source code files. .gitignore: Be sure to ignore all the project\u2019s meta-files like IDE-specific settings, build directories and so on. My projects are all Java so I specify there everything that has to do with Eclipse, Netbeans, IntelliJ, Maven etc. README: Write an elegant \u201creadme\u201d from the start. It will help you see the goals more clearly and give you a boost of confidence even if the project is still just in your head! CI/CD The very next thing I do is set up the CI/CD pipeline. This consists of two products: Travis CI: Travis is a well-known product, you probably know about it. After linking the repo via Travis\u2019 UI, I always create the .travis.yml file, specifying exactly what the build commands will look like (example here). Then, Travis will just trigger a build with any new Pull Request (and subsequent commits) always telling me if the new changes are breaking the project or not. Rultor: I use rultor in all my projects. Nobody writes in the master branch, ever, and nobody merges any PR manually. Rultor will merge it for us when we tell it to. Before merging it, it will also build the project inside a dedicated Docker container \u2013 it acts as a second layer of CI, if you will. It also helps me automate the releasing and versioning of all my projects. All my deliverables are published to Maven Central (which is quite a complex process) and this great product makes sure that weight is not on my shoulders! Here are more posts about it, if you are curious. Quality Gates Besides the manual code-review made for each Pull Request, there are 2 instruments I use for automated quality check: Checkstyle: Checkstyle is a static code analyzer. It runs as part of each build via a Maven Plugin (see here) and enforces some rules in the code. They can go from stuff as simple as line length to stuff such as class coupling. All the rules are specified in the checkstyle.xml file present in all my projects. Code Coverage: I always check to see if the PR doesn\u2019t decrease the code coverage. Usually, I don\u2019t accept PR\u2019s that are decreasing the coverage. I use Jacoco for generating the coverage report and Coveralls for reading and displaying it as a repo badge. The Coveralls bot will usually comment right in the PR indicating the latest status. It all happens via a Maven plugins as well (see here). Turn TODOs Into Actual Tasks As you probably know, I like to break my tasks into small chunks (30min each). This is a methodology called Puzzle-Driven-Development of which I made a short analysis a while back. Basically, after I finish part of the task and make sure the codebase works fine, I will leave a TODO in the code, which we call a \u201cpuzzle\u201d. This TODO is actually the next task in the project and we should have a new Github Issue opened as soon as it reaches the master branch. For this automation, I use 0pdd, a bot that will scan my codebase at each push to master and open/close Github Issue when it finds that a puzzle has been added or removed from the code. See an example here.","title":"New Project Checklist"},{"location":"Highlights/Readwise/Articles/New%20Project%20Checklist/#new-project-checklist","text":"","title":"New Project Checklist"},{"location":"Highlights/Readwise/Articles/New%20Project%20Checklist/#metadata","text":"Author: Full Title: New Project Checklist Category: #Type/Highlights/Article URL: https://amihaiemil.com/2019/05/12/new-project-checklist.html","title":"Metadata"},{"location":"Highlights/Readwise/Articles/New%20Project%20Checklist/#highlights","text":"Repo Creation Licence! Depending on your goals, you might need a different type of licence. At the moment, I am only interested in the \u201cauthor recognition\u201d and \u201cno liability\u201d clauses. For that, I use the BSD-3 Clause licence everywhere. Be sure to also copy the licence text at the beginning of all the source code files. .gitignore: Be sure to ignore all the project\u2019s meta-files like IDE-specific settings, build directories and so on. My projects are all Java so I specify there everything that has to do with Eclipse, Netbeans, IntelliJ, Maven etc. README: Write an elegant \u201creadme\u201d from the start. It will help you see the goals more clearly and give you a boost of confidence even if the project is still just in your head! CI/CD The very next thing I do is set up the CI/CD pipeline. This consists of two products: Travis CI: Travis is a well-known product, you probably know about it. After linking the repo via Travis\u2019 UI, I always create the .travis.yml file, specifying exactly what the build commands will look like (example here). Then, Travis will just trigger a build with any new Pull Request (and subsequent commits) always telling me if the new changes are breaking the project or not. Rultor: I use rultor in all my projects. Nobody writes in the master branch, ever, and nobody merges any PR manually. Rultor will merge it for us when we tell it to. Before merging it, it will also build the project inside a dedicated Docker container \u2013 it acts as a second layer of CI, if you will. It also helps me automate the releasing and versioning of all my projects. All my deliverables are published to Maven Central (which is quite a complex process) and this great product makes sure that weight is not on my shoulders! Here are more posts about it, if you are curious. Quality Gates Besides the manual code-review made for each Pull Request, there are 2 instruments I use for automated quality check: Checkstyle: Checkstyle is a static code analyzer. It runs as part of each build via a Maven Plugin (see here) and enforces some rules in the code. They can go from stuff as simple as line length to stuff such as class coupling. All the rules are specified in the checkstyle.xml file present in all my projects. Code Coverage: I always check to see if the PR doesn\u2019t decrease the code coverage. Usually, I don\u2019t accept PR\u2019s that are decreasing the coverage. I use Jacoco for generating the coverage report and Coveralls for reading and displaying it as a repo badge. The Coveralls bot will usually comment right in the PR indicating the latest status. It all happens via a Maven plugins as well (see here). Turn TODOs Into Actual Tasks As you probably know, I like to break my tasks into small chunks (30min each). This is a methodology called Puzzle-Driven-Development of which I made a short analysis a while back. Basically, after I finish part of the task and make sure the codebase works fine, I will leave a TODO in the code, which we call a \u201cpuzzle\u201d. This TODO is actually the next task in the project and we should have a new Github Issue opened as soon as it reaches the master branch. For this automation, I use 0pdd, a bot that will scan my codebase at each push to master and open/close Github Issue when it finds that a puzzle has been added or removed from the code. See an example here.","title":"Highlights"},{"location":"Highlights/Readwise/Articles/Obsidian%20My%20New%20Knowledge%20Base%20or%20Base%20for%20Knowledge/","text":"Obsidian: My New Knowledge Base or Base for Knowledge \u00b6 Metadata \u00b6 Author: [[niklasblog.com]] Full Title: Obsidian: My New Knowledge Base or Base for Knowledge Category: #Type/Highlights/Article URL: https://niklasblog.com/?p=25043 Highlights \u00b6 At its easiest, Obsidian is software: a place where you dump and search data. It can be pastebin with a bow on it. The bow can be Obsidian\u2019s search functionality, which works fast. ( View Highlight ) Using Obsidian can be hard. Or it can be very easy. That\u2019s up to how far you want to take it. ( View Highlight ) Obsidian, to me, is more of building a process to handle information. It\u2019s a lot like Getting Things Done, which is a productivity methodology: you don\u2019t have to learn every little thing but, rather, it\u2019s about how you want to use and what you want to gain from information. ( View Highlight ) At its best, Obsidian is where I go to store, find, and relate all kinds of knowledge: all my research word and term definitions, in order to create a glossary book reviews, where I link authors and themes together, creating a knowledge graph that allows me to see visual maps from vast amounts of text daily notes (which are actually created with just the touch of a button) reports that I\u2019m writing Microsoft Writing Style Guide which is simply snatched from GitHub temporary notes (that later could become permanent) food recipes, linked and tagged blog ideas relating philosophy ideas and concepts (God, I long for the day when a constantly-evolving Obsidian vault regarding philosophy drops!) diagrams and flowcharts that are composed from text (yes, really) music reviews that I\u2019ve written a list of all the stuff I\u2019ve got insured my collection of fountain pens all the stuff that I\u2019m keen to try out once I get my Pinebook Pro a list of all music that I\u2019ve been listening to for the past year music that I\u2019m trying to learn to play embedding music into files drag-and-dropping image files into notes which embeds them films I\u2019m going to see ( View Highlight ) And all of this is instantly indexed and searchable. And it\u2019s all stored on my computer; I\u2019ve used Resilio Sync to sync my Obsidian vaults to another computer that is backed up. No Google, no Amazon, no nothing to capitalise off my personal experiences. ( View Highlight ) I can also use iA Writer or Typora and hack away at my Markdown files that are in an Obsidian vault and then return to Obsidian to link them. Straight up. Try doing that with Microsoft OneNote or something similar: you\u2019re fucked. ( View Highlight ) a folder-and-file list an editor where you see Markdown in effect a preview pane of my Markdown ( View Highlight ) What you write in Obsidian is a note. Every note is a Markdown file. Obsidian allows embedding of certain files in notes and more advanced stuff will follow, e.g. creation of diagrams and flowcharts in Mermaid. All of your changes are made in folders and files in real-time (and you can undo actions). ( View Highlight ) OK, time for a side note: I don\u2019t create diagrams and flowcharts that often, but this application of Mermaid is very cool. Type this code into Obsidian: sequenceDiagram participant Alice participant Bob Alice->>John: Hello John, how are you? loop Healthcheck John->>John: Fight against hypochondria end Note right of John: Rational thoughts prevail! John-->>Alice: Great! John->>Bob: How about you? Bob-->>John: Jolly good! ( View Highlight ) One example of the power of backlinking is this: I\u2019ve imported every quote from all of the books that I\u2019ve read. (I use Readwise for collecting all of my book quotes via my ebook reader, by the way.) Then, I linked stuff together. One of the key features of Obsidian is Unlinked mentions; I show the feature quickly here and it\u2019s used to let you\u2014with solely one select\u2014create links in existing text. If a reference appears in the Unlinked mentions, and you want to link it, hovering over the text will bring up a Link button. Clicking this will automatically surround the highlighted text in the referenced note with brackets, making it into an explicit link. Text from Obsidian\u2019s built-in help vault ( View Highlight ) Obsidian isn\u2019t shimmering where mobile is concerned. When I started out, I installed a sync client\u2014Resilio Sync, if you\u2019re wondering, although I hear Syncthing and FreeFileSync are also sweet\u2014to make sure that changes I make in my mobile are synced with my desktop computers. Then, I installed an Android Markdown client, e.g. Markor or iA Writer. I then edited a Markdown file, saved it, and it synced to my computer. The file was updated in Obsidian without issues. Simple. It\u2019s not as simple as most cloud-based clients, though, and it\u2019s not as straightforward. ( View Highlight ) I\u2019ve always loved Workflowy, which has suited my mind to a t. Obsidian allows me to build beyond Workflowy\u2019s borders (and bear in mind that they\u2019re different products; Obsidian isn\u2019t an improvement of Workflowy). ( View Highlight ) I love to add formatting and build large notes. Linking allows me to create structure not only in text but pushes me to consider how to better structure projects. Due to its linking nature, Obsidian helps me to create topic-based documentation via the Every Page Is Page One approach. ( View Highlight ) visit the Forum often and why not? They provide inspiration. Where else would I go to find somebody\u2019s written a Python script to auto link text? Or to see how others use knowledge systems? If push comes to shove and I suddenly must use another system than Obsidian, I\u2019ll use Zettlr, foam, Joplin, or Roam. I\u2019ll just open my folder-and-file structure in one of those\u2014or import my Markdown files\u2014thank you very much. I sure as fuck won\u2019t be going back to OneNote at any point. I\u2019m very happy right now. ( View Highlight ) One more thing Don\u2019t forget the web-browser extension MarkDownload \u2013 Markdown Web Clipper that allows you to visit a web page, think \u2018I want this in my Obsidian\u2019, select a button, copy the resulting test, and paste it into Obsidian: voil\u00e1, Markdown applied, good to go. Reckless fucking abandon. ( View Highlight )","title":"Obsidian: My New Knowledge Base or Base for Knowledge"},{"location":"Highlights/Readwise/Articles/Obsidian%20My%20New%20Knowledge%20Base%20or%20Base%20for%20Knowledge/#obsidian-my-new-knowledge-base-or-base-for-knowledge","text":"","title":"Obsidian: My New Knowledge Base or Base for Knowledge"},{"location":"Highlights/Readwise/Articles/Obsidian%20My%20New%20Knowledge%20Base%20or%20Base%20for%20Knowledge/#metadata","text":"Author: [[niklasblog.com]] Full Title: Obsidian: My New Knowledge Base or Base for Knowledge Category: #Type/Highlights/Article URL: https://niklasblog.com/?p=25043","title":"Metadata"},{"location":"Highlights/Readwise/Articles/Obsidian%20My%20New%20Knowledge%20Base%20or%20Base%20for%20Knowledge/#highlights","text":"At its easiest, Obsidian is software: a place where you dump and search data. It can be pastebin with a bow on it. The bow can be Obsidian\u2019s search functionality, which works fast. ( View Highlight ) Using Obsidian can be hard. Or it can be very easy. That\u2019s up to how far you want to take it. ( View Highlight ) Obsidian, to me, is more of building a process to handle information. It\u2019s a lot like Getting Things Done, which is a productivity methodology: you don\u2019t have to learn every little thing but, rather, it\u2019s about how you want to use and what you want to gain from information. ( View Highlight ) At its best, Obsidian is where I go to store, find, and relate all kinds of knowledge: all my research word and term definitions, in order to create a glossary book reviews, where I link authors and themes together, creating a knowledge graph that allows me to see visual maps from vast amounts of text daily notes (which are actually created with just the touch of a button) reports that I\u2019m writing Microsoft Writing Style Guide which is simply snatched from GitHub temporary notes (that later could become permanent) food recipes, linked and tagged blog ideas relating philosophy ideas and concepts (God, I long for the day when a constantly-evolving Obsidian vault regarding philosophy drops!) diagrams and flowcharts that are composed from text (yes, really) music reviews that I\u2019ve written a list of all the stuff I\u2019ve got insured my collection of fountain pens all the stuff that I\u2019m keen to try out once I get my Pinebook Pro a list of all music that I\u2019ve been listening to for the past year music that I\u2019m trying to learn to play embedding music into files drag-and-dropping image files into notes which embeds them films I\u2019m going to see ( View Highlight ) And all of this is instantly indexed and searchable. And it\u2019s all stored on my computer; I\u2019ve used Resilio Sync to sync my Obsidian vaults to another computer that is backed up. No Google, no Amazon, no nothing to capitalise off my personal experiences. ( View Highlight ) I can also use iA Writer or Typora and hack away at my Markdown files that are in an Obsidian vault and then return to Obsidian to link them. Straight up. Try doing that with Microsoft OneNote or something similar: you\u2019re fucked. ( View Highlight ) a folder-and-file list an editor where you see Markdown in effect a preview pane of my Markdown ( View Highlight ) What you write in Obsidian is a note. Every note is a Markdown file. Obsidian allows embedding of certain files in notes and more advanced stuff will follow, e.g. creation of diagrams and flowcharts in Mermaid. All of your changes are made in folders and files in real-time (and you can undo actions). ( View Highlight ) OK, time for a side note: I don\u2019t create diagrams and flowcharts that often, but this application of Mermaid is very cool. Type this code into Obsidian: sequenceDiagram participant Alice participant Bob Alice->>John: Hello John, how are you? loop Healthcheck John->>John: Fight against hypochondria end Note right of John: Rational thoughts prevail! John-->>Alice: Great! John->>Bob: How about you? Bob-->>John: Jolly good! ( View Highlight ) One example of the power of backlinking is this: I\u2019ve imported every quote from all of the books that I\u2019ve read. (I use Readwise for collecting all of my book quotes via my ebook reader, by the way.) Then, I linked stuff together. One of the key features of Obsidian is Unlinked mentions; I show the feature quickly here and it\u2019s used to let you\u2014with solely one select\u2014create links in existing text. If a reference appears in the Unlinked mentions, and you want to link it, hovering over the text will bring up a Link button. Clicking this will automatically surround the highlighted text in the referenced note with brackets, making it into an explicit link. Text from Obsidian\u2019s built-in help vault ( View Highlight ) Obsidian isn\u2019t shimmering where mobile is concerned. When I started out, I installed a sync client\u2014Resilio Sync, if you\u2019re wondering, although I hear Syncthing and FreeFileSync are also sweet\u2014to make sure that changes I make in my mobile are synced with my desktop computers. Then, I installed an Android Markdown client, e.g. Markor or iA Writer. I then edited a Markdown file, saved it, and it synced to my computer. The file was updated in Obsidian without issues. Simple. It\u2019s not as simple as most cloud-based clients, though, and it\u2019s not as straightforward. ( View Highlight ) I\u2019ve always loved Workflowy, which has suited my mind to a t. Obsidian allows me to build beyond Workflowy\u2019s borders (and bear in mind that they\u2019re different products; Obsidian isn\u2019t an improvement of Workflowy). ( View Highlight ) I love to add formatting and build large notes. Linking allows me to create structure not only in text but pushes me to consider how to better structure projects. Due to its linking nature, Obsidian helps me to create topic-based documentation via the Every Page Is Page One approach. ( View Highlight ) visit the Forum often and why not? They provide inspiration. Where else would I go to find somebody\u2019s written a Python script to auto link text? Or to see how others use knowledge systems? If push comes to shove and I suddenly must use another system than Obsidian, I\u2019ll use Zettlr, foam, Joplin, or Roam. I\u2019ll just open my folder-and-file structure in one of those\u2014or import my Markdown files\u2014thank you very much. I sure as fuck won\u2019t be going back to OneNote at any point. I\u2019m very happy right now. ( View Highlight ) One more thing Don\u2019t forget the web-browser extension MarkDownload \u2013 Markdown Web Clipper that allows you to visit a web page, think \u2018I want this in my Obsidian\u2019, select a button, copy the resulting test, and paste it into Obsidian: voil\u00e1, Markdown applied, good to go. Reckless fucking abandon. ( View Highlight )","title":"Highlights"},{"location":"Highlights/Readwise/Articles/On%20Confronting%20the%20Productivity%20Dragon/","text":"On Confronting the Productivity Dragon \u00b6 Metadata \u00b6 Author: [[calnewport.com]] Full Title: On Confronting the Productivity Dragon Category: #Type/Highlights/Article URL: https://www.calnewport.com/blog/2020/07/23/on-confronting-the-productivity-dragon-take-2/ Highlights \u00b6 The temptation in such moments is to curl up as the onslaught engulfs you; perhaps answering the most recent emails to arrive, or tackling a sampling of tasks that seem particularly urgent, but otherwise just hoping the rest will dissipate. In the mythology of your professional life, in other words, you decline to confront the dragon, and instead put up a half-hearted warning sign, or rage to anyone in earshot about the unfairness of the dragon\u2019s existence in the first place. I told the listener to instead confront the dragon. Jot down every loop that opens; whether it comes via email, or a phone call, or a Zoom meeting, or Slack. Because these loops might emerge rapidly, use a minimalist tool with incredibly low friction. I recommended a simple plain text file on your computer in which you can record incoming obligations at the speed of typing (a strategy I elaborate in this vintage post). Then, at the beginning of each day, before the next onslaught begins, process these tasks into your permanent system. In doing so, as David Allen recommends, clarify them: what exactly is the \u201cnext action\u201d this task requires? Stare at this collection before getting started with your work. It\u2019s quite possible that the list will be terrifying \u2014 way more assignments and activities than you can ever hope to accomplish in time. But you should still confront it. Quantify the impossibility of your load. Visualize its contours. Walk into the cave, shield raised, prepared to face what lurks. Tags: [[favorite]] I can offer three justifications for this recommendation: As David Allen argues, obligations that are kept only in your head cause stress and drain mental resources. An overwhelming number of tasks captured in a system that you regularly review will generate a fraction of the angst spawned by trying to instead pretend that those same tasks don\u2019t exist. Quantifying the impossibility of your assignments makes it much easier to argue for change. When you instead just battle your inbox all day, switching haphazardly between the easy and unavoidably urgent, you can convince yourself that you\u2019re simply busy and need to hustle harder. Enumerating the absurd quantity of these demands will sharpen your conviction that something has to give. You can optimize. If you have 400 tasks on your list, there\u2019s no way you can accomplish them all in a single day. But if you can see all 400 obligations in one place, then you can choose the five or six that will have the biggest impact. This is almost certainly better than just jumping on whatever caught your attention most recently. In summary, I told this podcast listener not to confuse the systems with which he organizes his work for the actual quantity of work with which he has been burdened. Abandoning the former won\u2019t reduce the latter, it will only make its metaphorical fiery breath burn all the hotter.","title":"On Confronting the Productivity Dragon"},{"location":"Highlights/Readwise/Articles/On%20Confronting%20the%20Productivity%20Dragon/#on-confronting-the-productivity-dragon","text":"","title":"On Confronting the Productivity Dragon"},{"location":"Highlights/Readwise/Articles/On%20Confronting%20the%20Productivity%20Dragon/#metadata","text":"Author: [[calnewport.com]] Full Title: On Confronting the Productivity Dragon Category: #Type/Highlights/Article URL: https://www.calnewport.com/blog/2020/07/23/on-confronting-the-productivity-dragon-take-2/","title":"Metadata"},{"location":"Highlights/Readwise/Articles/On%20Confronting%20the%20Productivity%20Dragon/#highlights","text":"The temptation in such moments is to curl up as the onslaught engulfs you; perhaps answering the most recent emails to arrive, or tackling a sampling of tasks that seem particularly urgent, but otherwise just hoping the rest will dissipate. In the mythology of your professional life, in other words, you decline to confront the dragon, and instead put up a half-hearted warning sign, or rage to anyone in earshot about the unfairness of the dragon\u2019s existence in the first place. I told the listener to instead confront the dragon. Jot down every loop that opens; whether it comes via email, or a phone call, or a Zoom meeting, or Slack. Because these loops might emerge rapidly, use a minimalist tool with incredibly low friction. I recommended a simple plain text file on your computer in which you can record incoming obligations at the speed of typing (a strategy I elaborate in this vintage post). Then, at the beginning of each day, before the next onslaught begins, process these tasks into your permanent system. In doing so, as David Allen recommends, clarify them: what exactly is the \u201cnext action\u201d this task requires? Stare at this collection before getting started with your work. It\u2019s quite possible that the list will be terrifying \u2014 way more assignments and activities than you can ever hope to accomplish in time. But you should still confront it. Quantify the impossibility of your load. Visualize its contours. Walk into the cave, shield raised, prepared to face what lurks. Tags: [[favorite]] I can offer three justifications for this recommendation: As David Allen argues, obligations that are kept only in your head cause stress and drain mental resources. An overwhelming number of tasks captured in a system that you regularly review will generate a fraction of the angst spawned by trying to instead pretend that those same tasks don\u2019t exist. Quantifying the impossibility of your assignments makes it much easier to argue for change. When you instead just battle your inbox all day, switching haphazardly between the easy and unavoidably urgent, you can convince yourself that you\u2019re simply busy and need to hustle harder. Enumerating the absurd quantity of these demands will sharpen your conviction that something has to give. You can optimize. If you have 400 tasks on your list, there\u2019s no way you can accomplish them all in a single day. But if you can see all 400 obligations in one place, then you can choose the five or six that will have the biggest impact. This is almost certainly better than just jumping on whatever caught your attention most recently. In summary, I told this podcast listener not to confuse the systems with which he organizes his work for the actual quantity of work with which he has been burdened. Abandoning the former won\u2019t reduce the latter, it will only make its metaphorical fiery breath burn all the hotter.","title":"Highlights"},{"location":"Highlights/Readwise/Articles/Onboarding%20New%20Developers/","text":"Onboarding New Developers \u00b6 Metadata \u00b6 Author: Full Title: Onboarding New Developers Category: #Type/Highlights/Article URL: https://dev.to/codemouse92/onboarding-new-developers Highlights \u00b6 Formalize The Training We also needed to set a clear time frame for how long the training period lasts. At the start of this year, I worked with my Assistant Lead Developers to create an Internship Checklist, which outlines 20 specific tasks to complete. For each, we detailed the expectations and the learning goals. Formal training should fit into the normal workload, never replace it. Spreading it out over a longer time period (perhaps a month) allows the training to organically fit into the employee's new, regular responsibilities. For example, some of our Internship Checklist assignments are... Create five tasks on the task/bug tracker for your project. Review someone else's code using the pre-commit review tools. Make three meaningful contributions (at least 5 sentences changed/added per contribution) to the company wiki. In short, training should be standardized and organically integrated into 'normal' work. Validate The Training The First Two Weeks the newcomer is invariably going through culture shock. We have five very specific assignments to complete: Read the Internship Introduction article. Set up your development environment. Read the Community Rules (since we have an open source community). Read the official Standards. Read and sign the wiki's \"Getting Started\" page. That first item is particulary notable. I created a tutorial that walks a new employee through the entire process of setting up and getting comfortable with their regular tools and workflow. Throw 'Em In The Deep End Document Your Tools To save time, and ensure everyone had access to the same knowledge of our tools and methods, I actually wrote documentation for our development network. No kidding: real prose documentation, hand-written in Sphinx, tracked in a repository, and published on our server. In it, I detail literally everything: How to create and manage tasks, How to submit code for review, How to build from a repository, How to set up a development environment from scratch on a computer, How to use our IRC room bot, I should mention that clearly documenting the tools leaves no excuse for employees not using them. Proper and regular use of development tools is a key component of successful collaboration. Make that expectation clear to every member of your team! Meanwhile, leave room for employees to give feedback on the tools and processes they're using. Methodologies exist for the developers, not the other way around! I've put a lot of time into our Development Documentation, and I know I'll put a lot more time into it in the future. It's worth the investment to have a canonical, up-to-date guide for every tool, every method, and every workflow in your company. Wait For The Questions I learned to give my interns the room to make their own mistakes, and for me to only get involved when asked. It is far easier for an employee to climb out of a hole THEY dug, rather than out of a hole YOU dug. If they mess up, graciously point out what they can learn from the situation, and encourage them to try again. Conversely, when an employee does ask for help, respond to the call by teaching them how to solve the problem themselves. Share your own experiences, point them to documentation and existing code, but let them own the solution. Summary Create a formal training program that fits into and complements a normal work load. Dedicate the first two weeks to initial acclimation - getting to know the team, becoming familiar with the tools, and exploring the company's projects. Give every employee the right to ask questions and seek out help from you and the rest of their co-workers. After the first two weeks, don't \"ease\" the newcomer into their job; drop them in the deep end with their new normal work load, and teach them to swim. Maintain clear, friendly, and exhaustive written documentation for all of your company's tools and common workflows. Wait until employees ask you for help before stepping in (unless you have a managerial reason to get involved). Let them make their own mistakes.","title":"Onboarding New Developers"},{"location":"Highlights/Readwise/Articles/Onboarding%20New%20Developers/#onboarding-new-developers","text":"","title":"Onboarding New Developers"},{"location":"Highlights/Readwise/Articles/Onboarding%20New%20Developers/#metadata","text":"Author: Full Title: Onboarding New Developers Category: #Type/Highlights/Article URL: https://dev.to/codemouse92/onboarding-new-developers","title":"Metadata"},{"location":"Highlights/Readwise/Articles/Onboarding%20New%20Developers/#highlights","text":"Formalize The Training We also needed to set a clear time frame for how long the training period lasts. At the start of this year, I worked with my Assistant Lead Developers to create an Internship Checklist, which outlines 20 specific tasks to complete. For each, we detailed the expectations and the learning goals. Formal training should fit into the normal workload, never replace it. Spreading it out over a longer time period (perhaps a month) allows the training to organically fit into the employee's new, regular responsibilities. For example, some of our Internship Checklist assignments are... Create five tasks on the task/bug tracker for your project. Review someone else's code using the pre-commit review tools. Make three meaningful contributions (at least 5 sentences changed/added per contribution) to the company wiki. In short, training should be standardized and organically integrated into 'normal' work. Validate The Training The First Two Weeks the newcomer is invariably going through culture shock. We have five very specific assignments to complete: Read the Internship Introduction article. Set up your development environment. Read the Community Rules (since we have an open source community). Read the official Standards. Read and sign the wiki's \"Getting Started\" page. That first item is particulary notable. I created a tutorial that walks a new employee through the entire process of setting up and getting comfortable with their regular tools and workflow. Throw 'Em In The Deep End Document Your Tools To save time, and ensure everyone had access to the same knowledge of our tools and methods, I actually wrote documentation for our development network. No kidding: real prose documentation, hand-written in Sphinx, tracked in a repository, and published on our server. In it, I detail literally everything: How to create and manage tasks, How to submit code for review, How to build from a repository, How to set up a development environment from scratch on a computer, How to use our IRC room bot, I should mention that clearly documenting the tools leaves no excuse for employees not using them. Proper and regular use of development tools is a key component of successful collaboration. Make that expectation clear to every member of your team! Meanwhile, leave room for employees to give feedback on the tools and processes they're using. Methodologies exist for the developers, not the other way around! I've put a lot of time into our Development Documentation, and I know I'll put a lot more time into it in the future. It's worth the investment to have a canonical, up-to-date guide for every tool, every method, and every workflow in your company. Wait For The Questions I learned to give my interns the room to make their own mistakes, and for me to only get involved when asked. It is far easier for an employee to climb out of a hole THEY dug, rather than out of a hole YOU dug. If they mess up, graciously point out what they can learn from the situation, and encourage them to try again. Conversely, when an employee does ask for help, respond to the call by teaching them how to solve the problem themselves. Share your own experiences, point them to documentation and existing code, but let them own the solution. Summary Create a formal training program that fits into and complements a normal work load. Dedicate the first two weeks to initial acclimation - getting to know the team, becoming familiar with the tools, and exploring the company's projects. Give every employee the right to ask questions and seek out help from you and the rest of their co-workers. After the first two weeks, don't \"ease\" the newcomer into their job; drop them in the deep end with their new normal work load, and teach them to swim. Maintain clear, friendly, and exhaustive written documentation for all of your company's tools and common workflows. Wait until employees ask you for help before stepping in (unless you have a managerial reason to get involved). Let them make their own mistakes.","title":"Highlights"},{"location":"Highlights/Readwise/Articles/One%20Observer%20for%20All%20Buttons%20in%20Shiny%20Using%20JavaScript%20%20jQuery/","text":"One Observer for All Buttons in Shiny Using JavaScript / jQuery \u00b6 Metadata \u00b6 Author: Full Title: One Observer for All Buttons in Shiny Using JavaScript / jQuery Category: #Type/Highlights/Article URL: http://www.open-meta.org/technology/one-observer-for-all-buttons-in-shiny-using-javascriptjquery/ Highlights \u00b6 As an alternative to actionButton(), however, it\u2019s pretty simple to have a JavaScript / jQuery function that watches for clicks and uses Shiny.onInputChange() to let R and Shiny know the id of the button that was clicked. Next let\u2019s look at Shiny.onInputChange() in the final line. It sends the button\u2019s id to an observer inside Shiny called js.button_clicked. It appends the BUTTON_CLICK_COUNT onto the button\u2019s id. So, if the button id is view_1 (in this example, view means a View Project button, 1 indicates the the row the button is in), what the js.button_clicked observer would receive is something like view_1_1. The BUTTON_CLICK_COUNT is just a trick to make sure Shiny thinks the input has changed . Without that, sometimes a button will go dead because although Shiny.onInputChange() sees the click, it doesn\u2019t think anything has changed, so it doesn\u2019t send the id back to the server. All of the other code in the embedded function does nothing but come up with that number. Once back in Shiny on the server, the click count is meaningless. For each type of button you have, you include code in this observer that reacts to the type of button (in this example, View Project or Join Project) and the exact row the button was in (in n). And that\u2019s how you can have any number of buttons and just one observer in Shiny server. This method can be extended to include other HTML elements. In the next post, Adding anchors to our Shiny button observer, the JavaScript / jQuery event handler also deals with menus that have href-less anchors. I figured out this trick after reading JavaScript & jQuery while traveling over spring break. This is the most readable programming book I\u2019ve ever encountered.","title":"One Observer for All Buttons in Shiny Using JavaScript / jQuery"},{"location":"Highlights/Readwise/Articles/One%20Observer%20for%20All%20Buttons%20in%20Shiny%20Using%20JavaScript%20%20jQuery/#one-observer-for-all-buttons-in-shiny-using-javascript-jquery","text":"","title":"One Observer for All Buttons in Shiny Using JavaScript / jQuery"},{"location":"Highlights/Readwise/Articles/One%20Observer%20for%20All%20Buttons%20in%20Shiny%20Using%20JavaScript%20%20jQuery/#metadata","text":"Author: Full Title: One Observer for All Buttons in Shiny Using JavaScript / jQuery Category: #Type/Highlights/Article URL: http://www.open-meta.org/technology/one-observer-for-all-buttons-in-shiny-using-javascriptjquery/","title":"Metadata"},{"location":"Highlights/Readwise/Articles/One%20Observer%20for%20All%20Buttons%20in%20Shiny%20Using%20JavaScript%20%20jQuery/#highlights","text":"As an alternative to actionButton(), however, it\u2019s pretty simple to have a JavaScript / jQuery function that watches for clicks and uses Shiny.onInputChange() to let R and Shiny know the id of the button that was clicked. Next let\u2019s look at Shiny.onInputChange() in the final line. It sends the button\u2019s id to an observer inside Shiny called js.button_clicked. It appends the BUTTON_CLICK_COUNT onto the button\u2019s id. So, if the button id is view_1 (in this example, view means a View Project button, 1 indicates the the row the button is in), what the js.button_clicked observer would receive is something like view_1_1. The BUTTON_CLICK_COUNT is just a trick to make sure Shiny thinks the input has changed . Without that, sometimes a button will go dead because although Shiny.onInputChange() sees the click, it doesn\u2019t think anything has changed, so it doesn\u2019t send the id back to the server. All of the other code in the embedded function does nothing but come up with that number. Once back in Shiny on the server, the click count is meaningless. For each type of button you have, you include code in this observer that reacts to the type of button (in this example, View Project or Join Project) and the exact row the button was in (in n). And that\u2019s how you can have any number of buttons and just one observer in Shiny server. This method can be extended to include other HTML elements. In the next post, Adding anchors to our Shiny button observer, the JavaScript / jQuery event handler also deals with menus that have href-less anchors. I figured out this trick after reading JavaScript & jQuery while traveling over spring break. This is the most readable programming book I\u2019ve ever encountered.","title":"Highlights"},{"location":"Highlights/Readwise/Articles/One%20Productivity%20System%20to%20Rule%20Them%20All/","text":"One Productivity System to Rule Them All \u00b6 Metadata \u00b6 Author: [[Arturo R\u00edos]] Full Title: One Productivity System to Rule Them All Category: #Type/Highlights/Article URL: https://medium.com/p/4405154f0ae7 Highlights \u00b6 When I am wrapping up my day, I want to feel a sense of accomplishment that I did what was important, so I don\u2019t need to work extra hours or have ruminating thoughts after work. When I am dealing with multiple projects and initiatives, I want to feel I am capturing every single task so I don\u2019t miss any agreement I committed to. When I am deciding what to work on, I want to be able to prioritize tasks so I don\u2019t spend too much time on initiatives that are not as important. When I am evaluating my work-life balance, I want to feel the productivity system is helping me keep work on check, so I avoid burnout. When I am exercising the productivity system, I want to be able to repeat it in a simple and scalable way, so the productivity system works for me and not the other way around. The system consists on three sub-systems: modes, tools, and activities. There are three possible modes you can engage through this system: signaling, executing, and reflecting. Signaling means being aware of potential new tasks or work you need to take ownership of. Whether it\u2019s through meetings, slack threads, or emails, you will need to translate requests into tasks you can track and prioritize","title":"One Productivity System to Rule Them All"},{"location":"Highlights/Readwise/Articles/One%20Productivity%20System%20to%20Rule%20Them%20All/#one-productivity-system-to-rule-them-all","text":"","title":"One Productivity System to Rule Them All"},{"location":"Highlights/Readwise/Articles/One%20Productivity%20System%20to%20Rule%20Them%20All/#metadata","text":"Author: [[Arturo R\u00edos]] Full Title: One Productivity System to Rule Them All Category: #Type/Highlights/Article URL: https://medium.com/p/4405154f0ae7","title":"Metadata"},{"location":"Highlights/Readwise/Articles/One%20Productivity%20System%20to%20Rule%20Them%20All/#highlights","text":"When I am wrapping up my day, I want to feel a sense of accomplishment that I did what was important, so I don\u2019t need to work extra hours or have ruminating thoughts after work. When I am dealing with multiple projects and initiatives, I want to feel I am capturing every single task so I don\u2019t miss any agreement I committed to. When I am deciding what to work on, I want to be able to prioritize tasks so I don\u2019t spend too much time on initiatives that are not as important. When I am evaluating my work-life balance, I want to feel the productivity system is helping me keep work on check, so I avoid burnout. When I am exercising the productivity system, I want to be able to repeat it in a simple and scalable way, so the productivity system works for me and not the other way around. The system consists on three sub-systems: modes, tools, and activities. There are three possible modes you can engage through this system: signaling, executing, and reflecting. Signaling means being aware of potential new tasks or work you need to take ownership of. Whether it\u2019s through meetings, slack threads, or emails, you will need to translate requests into tasks you can track and prioritize","title":"Highlights"},{"location":"Highlights/Readwise/Articles/One-Touch%20to%20Inbox%20Zero%20How%20I%20Spend%2017%20Minutes%20Per%20Day%20on%20Email%20-%20Forte%20Labs/","text":"One-Touch to Inbox Zero: How I Spend 17 Minutes Per Day on Email - Forte Labs \u00b6 Metadata \u00b6 Author: [[fortelabs.co]] Full Title: One-Touch to Inbox Zero: How I Spend 17 Minutes Per Day on Email - Forte Labs Category: #Type/Highlights/Article URL: https://fortelabs.co/blog/one-touch-to-inbox-zero/ Highlights \u00b6 Unsubscribe from every newsletter, notification list, and broadcast list that isn\u2019t absolutely essential (using a service like Unroll.me if necessary) Forward all your email accounts to Gmail, or whatever service you have to use for work. Use Mailstrom to batch delete hundreds (or thousands) of unimportant emails at a time, and then move all remaining emails from your inbox to a specially marked folder. When you\u2019re able to One-Touch emails at a rate of one every few seconds, having multiple inboxes only multiplies the effort. It\u2019s weird\u200a\u2014\u200aonce your email workflow gains economies of scale, you actually benefit from greater volume. Tags: [[favorite]] Turn off all \u201csmart\u201d features Turn off all chat and social media apps Email is like a black hole: once it reaches critical mass, it sucks up everything it comes into contact with. You spend so much time in email that all other work activities have to be integrated into it, causing you to spend even more time in email, and so on ad infinitum. The event horizon expands to the point you start thinking that answering emails is your job. But it\u2019s not\u200a\u2014\u200ait\u2019s something you have to get out of the way so that you can do your job. Tags: [[favorite]] Turn off all notifications Your email inbox is someone else\u2019s To Do list. The key is to set up a workflow that allows for One-Touch\u200a\u2014\u200amaking a decisive decision about what needs to be done about each email, WITHOUT ACTUALLY DOING IT, and then immediately sending each email to an appropriate place where it will be dealt with at the right time. Archive (\u201ce\u201d shortcut) immediately This will be probably 60\u201370% of all messages, as they are basically notifications that just need a quick glance. Reply (\u201cr\u201d), then archive You can also optionally create a reminder as in #4 below, in case it falls through the cracks and you need to follow up. Add to calendar, then archive You can paste the link to the email in the calendar entry if needed, but this is unnecessary with Google invites, and a quick search will turn up the original email if needed anyway. Create a task (\u201cadd task\u201d shortcut), then archive Hit the keyboard shortcut for the task manager you\u2019re using, write out the task associated with the message (with a link back to this email generated automatically), and then archive the email. Note that timely, Very Important Emails get treated the exact same way as any other email, because you\u2019re not in reacting mode, you\u2019re in processing mode. Send to Reference app, then archive You can either forward the email (with accompanying attachments) to your Reference app directly, or you can open links in your browser and save the page from there. Send to Read Later app (\u201cf\u201d), then archive The easiest way to do this with Instapaper is to right-click any link you find interesting, and then click \u201cAdd to Instapaper.\u201d But you can also forward it using only keyboard shortcuts. These are the rules that govern where \u201cstuff\u201d flows to. Follow these steps until you\u2019ve cleared your inbox. We can use negative feedback loops to try and restore balance\u200a\u2014\u200adigital detoxes, work-life balance seminars, meditation retreats, goal-setting and values exercises, New Year\u2019s Resolutions\u2014 but none of these will be enough if we keep pouring the fuel of reactivity on the fire of runaway positive feedback loops. That is our real goal\u200a\u2014\u200alowering our reactivity is an end in itself, because anything that forces you to react controls you. And you will need this new low reactivity superpower, because if you learn to focus your energy instead of dissipating it, and begin offloading the mundane work to tools and habits and systems, and eventually assistants and employees and maybe even someday, intelligent machines, the inevitable result will be that your remaining work will be more intellectually and creatively dense\u200a\u2014\u200ait will be much, MUCH harder","title":"One-Touch to Inbox Zero: How I Spend 17 Minutes Per Day on Email - Forte Labs"},{"location":"Highlights/Readwise/Articles/One-Touch%20to%20Inbox%20Zero%20How%20I%20Spend%2017%20Minutes%20Per%20Day%20on%20Email%20-%20Forte%20Labs/#one-touch-to-inbox-zero-how-i-spend-17-minutes-per-day-on-email-forte-labs","text":"","title":"One-Touch to Inbox Zero: How I Spend 17 Minutes Per Day on Email - Forte Labs"},{"location":"Highlights/Readwise/Articles/One-Touch%20to%20Inbox%20Zero%20How%20I%20Spend%2017%20Minutes%20Per%20Day%20on%20Email%20-%20Forte%20Labs/#metadata","text":"Author: [[fortelabs.co]] Full Title: One-Touch to Inbox Zero: How I Spend 17 Minutes Per Day on Email - Forte Labs Category: #Type/Highlights/Article URL: https://fortelabs.co/blog/one-touch-to-inbox-zero/","title":"Metadata"},{"location":"Highlights/Readwise/Articles/One-Touch%20to%20Inbox%20Zero%20How%20I%20Spend%2017%20Minutes%20Per%20Day%20on%20Email%20-%20Forte%20Labs/#highlights","text":"Unsubscribe from every newsletter, notification list, and broadcast list that isn\u2019t absolutely essential (using a service like Unroll.me if necessary) Forward all your email accounts to Gmail, or whatever service you have to use for work. Use Mailstrom to batch delete hundreds (or thousands) of unimportant emails at a time, and then move all remaining emails from your inbox to a specially marked folder. When you\u2019re able to One-Touch emails at a rate of one every few seconds, having multiple inboxes only multiplies the effort. It\u2019s weird\u200a\u2014\u200aonce your email workflow gains economies of scale, you actually benefit from greater volume. Tags: [[favorite]] Turn off all \u201csmart\u201d features Turn off all chat and social media apps Email is like a black hole: once it reaches critical mass, it sucks up everything it comes into contact with. You spend so much time in email that all other work activities have to be integrated into it, causing you to spend even more time in email, and so on ad infinitum. The event horizon expands to the point you start thinking that answering emails is your job. But it\u2019s not\u200a\u2014\u200ait\u2019s something you have to get out of the way so that you can do your job. Tags: [[favorite]] Turn off all notifications Your email inbox is someone else\u2019s To Do list. The key is to set up a workflow that allows for One-Touch\u200a\u2014\u200amaking a decisive decision about what needs to be done about each email, WITHOUT ACTUALLY DOING IT, and then immediately sending each email to an appropriate place where it will be dealt with at the right time. Archive (\u201ce\u201d shortcut) immediately This will be probably 60\u201370% of all messages, as they are basically notifications that just need a quick glance. Reply (\u201cr\u201d), then archive You can also optionally create a reminder as in #4 below, in case it falls through the cracks and you need to follow up. Add to calendar, then archive You can paste the link to the email in the calendar entry if needed, but this is unnecessary with Google invites, and a quick search will turn up the original email if needed anyway. Create a task (\u201cadd task\u201d shortcut), then archive Hit the keyboard shortcut for the task manager you\u2019re using, write out the task associated with the message (with a link back to this email generated automatically), and then archive the email. Note that timely, Very Important Emails get treated the exact same way as any other email, because you\u2019re not in reacting mode, you\u2019re in processing mode. Send to Reference app, then archive You can either forward the email (with accompanying attachments) to your Reference app directly, or you can open links in your browser and save the page from there. Send to Read Later app (\u201cf\u201d), then archive The easiest way to do this with Instapaper is to right-click any link you find interesting, and then click \u201cAdd to Instapaper.\u201d But you can also forward it using only keyboard shortcuts. These are the rules that govern where \u201cstuff\u201d flows to. Follow these steps until you\u2019ve cleared your inbox. We can use negative feedback loops to try and restore balance\u200a\u2014\u200adigital detoxes, work-life balance seminars, meditation retreats, goal-setting and values exercises, New Year\u2019s Resolutions\u2014 but none of these will be enough if we keep pouring the fuel of reactivity on the fire of runaway positive feedback loops. That is our real goal\u200a\u2014\u200alowering our reactivity is an end in itself, because anything that forces you to react controls you. And you will need this new low reactivity superpower, because if you learn to focus your energy instead of dissipating it, and begin offloading the mundane work to tools and habits and systems, and eventually assistants and employees and maybe even someday, intelligent machines, the inevitable result will be that your remaining work will be more intellectually and creatively dense\u200a\u2014\u200ait will be much, MUCH harder","title":"Highlights"},{"location":"Highlights/Readwise/Articles/Optimized%20Workflow/","text":"Optimized Workflow \u00b6 Metadata \u00b6 Author: [[Lucas Soares]] Full Title: Optimized Workflow Category: #Type/Highlights/Article URL: https://medium.com/p/bde3011b604a Highlights \u00b6 I tend to think that everything we do should be integrated in some way that gives us a feeling of connectedness with our own routine. It is possible to join projects, learning ventures as well as work tasks, as part of a bigger and more integrated process that constitutes our workflow. This principle, which I first heard about on this paper by Francis Heylighen and Cl\u00e9ment Vidal discussing the famous Get Things Done method by David Allen, relates to the idea of exploiting opportunities rather than relying on tight schedules. The authors, while attempting to provide a scientific backing to the ideas present in Allen\u2019s book, argue that, because our brain developed to adapt quickly to the environment, our perception is tuned for recognizing disturbances and affordances - opportunities to solve problems.","title":"Optimized Workflow"},{"location":"Highlights/Readwise/Articles/Optimized%20Workflow/#optimized-workflow","text":"","title":"Optimized Workflow"},{"location":"Highlights/Readwise/Articles/Optimized%20Workflow/#metadata","text":"Author: [[Lucas Soares]] Full Title: Optimized Workflow Category: #Type/Highlights/Article URL: https://medium.com/p/bde3011b604a","title":"Metadata"},{"location":"Highlights/Readwise/Articles/Optimized%20Workflow/#highlights","text":"I tend to think that everything we do should be integrated in some way that gives us a feeling of connectedness with our own routine. It is possible to join projects, learning ventures as well as work tasks, as part of a bigger and more integrated process that constitutes our workflow. This principle, which I first heard about on this paper by Francis Heylighen and Cl\u00e9ment Vidal discussing the famous Get Things Done method by David Allen, relates to the idea of exploiting opportunities rather than relying on tight schedules. The authors, while attempting to provide a scientific backing to the ideas present in Allen\u2019s book, argue that, because our brain developed to adapt quickly to the environment, our perception is tuned for recognizing disturbances and affordances - opportunities to solve problems.","title":"Highlights"},{"location":"Highlights/Readwise/Articles/PARA%20Part%205%20The%20Project%20List%20Mindsweep%20-%20Forte%20Labs/","text":"PARA Part 5: The Project List Mindsweep - Forte Labs \u00b6 Metadata \u00b6 Author: [[fortelabs.co]] Full Title: PARA Part 5: The Project List Mindsweep - Forte Labs Category: #Type/Highlights/Article URL: https://fortelabs.co/blog/p-a-r-a-v-the-project-list-mindsweep/ Highlights \u00b6 identify every project in your work and life.","title":"PARA Part 5: The Project List Mindsweep - Forte Labs"},{"location":"Highlights/Readwise/Articles/PARA%20Part%205%20The%20Project%20List%20Mindsweep%20-%20Forte%20Labs/#para-part-5-the-project-list-mindsweep-forte-labs","text":"","title":"PARA Part 5: The Project List Mindsweep - Forte Labs"},{"location":"Highlights/Readwise/Articles/PARA%20Part%205%20The%20Project%20List%20Mindsweep%20-%20Forte%20Labs/#metadata","text":"Author: [[fortelabs.co]] Full Title: PARA Part 5: The Project List Mindsweep - Forte Labs Category: #Type/Highlights/Article URL: https://fortelabs.co/blog/p-a-r-a-v-the-project-list-mindsweep/","title":"Metadata"},{"location":"Highlights/Readwise/Articles/PARA%20Part%205%20The%20Project%20List%20Mindsweep%20-%20Forte%20Labs/#highlights","text":"identify every project in your work and life.","title":"Highlights"},{"location":"Highlights/Readwise/Articles/PARA%20Part%208%20Core%20Principles%20of%20Digital%20Organization%20-%20Forte%20Labs/","text":"PARA Part 8: Core Principles of Digital Organization - Forte Labs \u00b6 Metadata \u00b6 Author: [[fortelabs.co]] Full Title: PARA Part 8: Core Principles of Digital Organization - Forte Labs Category: #Type/Highlights/Article URL: https://fortelabs.co/blog/p-a-r-a-viii-core-principles/ Highlights \u00b6 Organize by actionability Organize opportunistically Move quickly, touch lightly Controlled randomness Complex systems have to be grown, not made Focus on outcomes Fail gracefully Shallow hierarchies Complex systems have to be grown, not made Focus on outcomes everything is similarly centered around the outcome of a finished plate. Envisioning the moment of delivery and walking backward, the method seeks to eliminate everything that doesn\u2019t advance the dish, for example: tying up tasks in a state that is easy to pick up again scheduling complex tasks and fitting others around them communicating progress to everyone who is depending on it always unblocking what is keeping you or others from moving forward Starting over is magical At some point I started thinking, \u201cWhat would it look like to design an organizational system completely around the feeling of starting over?\u201d The ideal time to \u201cstart over\u201d seemed to be when completing a project, so I made projects the basic unit of organization. Areas and Resources quickly emerged as I realized there were ongoing responsibilities and interests that I wanted to remain consistent over time. The only downside to starting over, of course, was that I lost the work I\u2019d already done. Slowly, I realized that this could be turned to my advantage. I began finishing every project by exporting or publishing one tangible artifact as a takeaway. Here\u2019s a thought experiment: what would you do if all your digital files were automatically erased every year? No matter which backup solutions you employed, it would all be gone when the clock struck midnight on December 31. I think you would start putting a lot more effort into showing your work. You would spend the absolute minimum amount of time gathering research and raw material, and more time sharing your knowledge and helping people solve real problems. I think you would get a lot less particular about your organizational hierarchies, which note-taking app you use, or the endless debates about plain text versus rich text. I think the world would be a much better place if all these things came to pass. And I can hardly think of a downside. It sure seems like our perfect digital memory is both a blessing and a curse. It frees us from the burden of forgetfulness, only to imprison us with perfectionism. The promise of P.A.R.A. is that it makes \u201cgetting organized\u201d a straightforward affair to get over with as quickly as possible. My wish is that the smart, creative people of the world spend less time behind their computer screens, and more time taking direct action in the world. We need people who are empowered and propelled forward by their creative process, not consumed by it. Our talents and knowledge are sorely needed in the real world.","title":"PARA Part 8: Core Principles of Digital Organization - Forte Labs"},{"location":"Highlights/Readwise/Articles/PARA%20Part%208%20Core%20Principles%20of%20Digital%20Organization%20-%20Forte%20Labs/#para-part-8-core-principles-of-digital-organization-forte-labs","text":"","title":"PARA Part 8: Core Principles of Digital Organization - Forte Labs"},{"location":"Highlights/Readwise/Articles/PARA%20Part%208%20Core%20Principles%20of%20Digital%20Organization%20-%20Forte%20Labs/#metadata","text":"Author: [[fortelabs.co]] Full Title: PARA Part 8: Core Principles of Digital Organization - Forte Labs Category: #Type/Highlights/Article URL: https://fortelabs.co/blog/p-a-r-a-viii-core-principles/","title":"Metadata"},{"location":"Highlights/Readwise/Articles/PARA%20Part%208%20Core%20Principles%20of%20Digital%20Organization%20-%20Forte%20Labs/#highlights","text":"Organize by actionability Organize opportunistically Move quickly, touch lightly Controlled randomness Complex systems have to be grown, not made Focus on outcomes Fail gracefully Shallow hierarchies Complex systems have to be grown, not made Focus on outcomes everything is similarly centered around the outcome of a finished plate. Envisioning the moment of delivery and walking backward, the method seeks to eliminate everything that doesn\u2019t advance the dish, for example: tying up tasks in a state that is easy to pick up again scheduling complex tasks and fitting others around them communicating progress to everyone who is depending on it always unblocking what is keeping you or others from moving forward Starting over is magical At some point I started thinking, \u201cWhat would it look like to design an organizational system completely around the feeling of starting over?\u201d The ideal time to \u201cstart over\u201d seemed to be when completing a project, so I made projects the basic unit of organization. Areas and Resources quickly emerged as I realized there were ongoing responsibilities and interests that I wanted to remain consistent over time. The only downside to starting over, of course, was that I lost the work I\u2019d already done. Slowly, I realized that this could be turned to my advantage. I began finishing every project by exporting or publishing one tangible artifact as a takeaway. Here\u2019s a thought experiment: what would you do if all your digital files were automatically erased every year? No matter which backup solutions you employed, it would all be gone when the clock struck midnight on December 31. I think you would start putting a lot more effort into showing your work. You would spend the absolute minimum amount of time gathering research and raw material, and more time sharing your knowledge and helping people solve real problems. I think you would get a lot less particular about your organizational hierarchies, which note-taking app you use, or the endless debates about plain text versus rich text. I think the world would be a much better place if all these things came to pass. And I can hardly think of a downside. It sure seems like our perfect digital memory is both a blessing and a curse. It frees us from the burden of forgetfulness, only to imprison us with perfectionism. The promise of P.A.R.A. is that it makes \u201cgetting organized\u201d a straightforward affair to get over with as quickly as possible. My wish is that the smart, creative people of the world spend less time behind their computer screens, and more time taking direct action in the world. We need people who are empowered and propelled forward by their creative process, not consumed by it. Our talents and knowledge are sorely needed in the real world.","title":"Highlights"},{"location":"Highlights/Readwise/Articles/Paperless%20The%20One%20Notebook%20and%20Pen%20I%E2%80%99m%20Never%20Giving%20Up/","text":"Paperless: The One Notebook and Pen I\u2019m Never Giving Up \u00b6 Metadata \u00b6 Author: [[Ellane W]] Full Title: Paperless: The One Notebook and Pen I\u2019m Never Giving Up Category: #Type/Highlights/Article URL: https://medium.com/p/9537b2a7cd72 Highlights \u00b6 My notebook is the inbox, the capture tool I turn to when using a device doesn\u2019t feel quite right. Once I\u2019m back at whatever device I pick up next, I transfer information worth keeping into my plain text system via the Drafts app.","title":"Paperless: The One Notebook and Pen I\u2019m Never Giving Up"},{"location":"Highlights/Readwise/Articles/Paperless%20The%20One%20Notebook%20and%20Pen%20I%E2%80%99m%20Never%20Giving%20Up/#paperless-the-one-notebook-and-pen-im-never-giving-up","text":"","title":"Paperless: The One Notebook and Pen I\u2019m Never Giving Up"},{"location":"Highlights/Readwise/Articles/Paperless%20The%20One%20Notebook%20and%20Pen%20I%E2%80%99m%20Never%20Giving%20Up/#metadata","text":"Author: [[Ellane W]] Full Title: Paperless: The One Notebook and Pen I\u2019m Never Giving Up Category: #Type/Highlights/Article URL: https://medium.com/p/9537b2a7cd72","title":"Metadata"},{"location":"Highlights/Readwise/Articles/Paperless%20The%20One%20Notebook%20and%20Pen%20I%E2%80%99m%20Never%20Giving%20Up/#highlights","text":"My notebook is the inbox, the capture tool I turn to when using a device doesn\u2019t feel quite right. Once I\u2019m back at whatever device I pick up next, I transfer information worth keeping into my plain text system via the Drafts app.","title":"Highlights"},{"location":"Highlights/Readwise/Articles/Pay%20Off%20Your%20Debt%20Tools%20and%20Tips/","text":"Pay Off Your Debt: Tools and Tips \u00b6 Metadata \u00b6 Author: [[nerdwallet.com]] Full Title: Pay Off Your Debt: Tools and Tips Category: #Type/Highlights/Article Document Tags: [[Liked]] URL: https://www.nerdwallet.com/blog/pay-off-debt/ Highlights \u00b6 How to pay off debt ( View Highlight ) Know your debt strategy ( View Highlight ) Here are some common strategies to boost your payoff speed: Debt snowball: You focus on paying off your smallest debt first (while paying minimums on the others), then roll the amount you had been paying on it into payments on the next largest. Debt avalanche: You pay off your debt with the highest interest rate first (while paying minimums on the others), then the next highest rate, and so on. It may save you time and money over the course of your debt payoff. Debt consolidation: Combine multiple old debts into a single new one, ideally at a lower interest rate, making payments more manageable or the payoff period shorter. There are a few ways to consolidate debt, including balance transfer cards and personal loans. Debt management plan: If you\u2019re facing a mountain of credit card debt and not making much progress, a nonprofit credit counseling agency can set up a debt management plan to cut your interest rate and put you on a repayment plan. ( View Highlight ) Stay on top of your budget ( View Highlight ) You likely don't qualify right now for balance-transfer credit cards, and if you can get a personal loan for debt consolidation the interest rate will be high. But you still have options: There are a number of ways to consolidate debt; the best one for you depends in large part on your credit. Balance transfer credit cards with an introductory 0% APR mostly go to people with good to excellent credit. They're best when you have $15,000 or less in debt and can pay it off in 21 months or less. ( View Highlight ) Consider a personal loan to consolidate several debts into one at a lower interest rate. For people with good or excellent credit, these loans often have lower interest rates than credit cards. You might be able to get a personal loan to consolidate several debts into one at a lower interest rate. These loans often have lower interest rates than credit cards. If you can\u2019t qualify for a personal loan at the interest rate you\u2019d like \u2014 or if you just need some outside structure to be successful \u2014 consider a debt management plan. ( View Highlight ) 5 tips for paying off debt Really know your budget: Making the most of each dollar coming in and going out will help you stay focused as you pay off your debt. Lower your bills: By cutting what you\u2019re paying toward bills every month, you\u2019ll have more cash to put toward your debt payoff. Make more money: Pick up a side hustle or two and increase your earning power. Some can be done online and have flexible hours. Consider consolidation: Debt consolidation, with a personal loan or a credit card, can lower your interest rate so you\u2019re putting more money toward your balance. Don\u2019t be afraid of debt relief: If you\u2019re not making any progress on your debts, you might want to get some help in the form of debt relief. ( View Highlight )","title":"Pay Off Your Debt: Tools and Tips"},{"location":"Highlights/Readwise/Articles/Pay%20Off%20Your%20Debt%20Tools%20and%20Tips/#pay-off-your-debt-tools-and-tips","text":"","title":"Pay Off Your Debt: Tools and Tips"},{"location":"Highlights/Readwise/Articles/Pay%20Off%20Your%20Debt%20Tools%20and%20Tips/#metadata","text":"Author: [[nerdwallet.com]] Full Title: Pay Off Your Debt: Tools and Tips Category: #Type/Highlights/Article Document Tags: [[Liked]] URL: https://www.nerdwallet.com/blog/pay-off-debt/","title":"Metadata"},{"location":"Highlights/Readwise/Articles/Pay%20Off%20Your%20Debt%20Tools%20and%20Tips/#highlights","text":"How to pay off debt ( View Highlight ) Know your debt strategy ( View Highlight ) Here are some common strategies to boost your payoff speed: Debt snowball: You focus on paying off your smallest debt first (while paying minimums on the others), then roll the amount you had been paying on it into payments on the next largest. Debt avalanche: You pay off your debt with the highest interest rate first (while paying minimums on the others), then the next highest rate, and so on. It may save you time and money over the course of your debt payoff. Debt consolidation: Combine multiple old debts into a single new one, ideally at a lower interest rate, making payments more manageable or the payoff period shorter. There are a few ways to consolidate debt, including balance transfer cards and personal loans. Debt management plan: If you\u2019re facing a mountain of credit card debt and not making much progress, a nonprofit credit counseling agency can set up a debt management plan to cut your interest rate and put you on a repayment plan. ( View Highlight ) Stay on top of your budget ( View Highlight ) You likely don't qualify right now for balance-transfer credit cards, and if you can get a personal loan for debt consolidation the interest rate will be high. But you still have options: There are a number of ways to consolidate debt; the best one for you depends in large part on your credit. Balance transfer credit cards with an introductory 0% APR mostly go to people with good to excellent credit. They're best when you have $15,000 or less in debt and can pay it off in 21 months or less. ( View Highlight ) Consider a personal loan to consolidate several debts into one at a lower interest rate. For people with good or excellent credit, these loans often have lower interest rates than credit cards. You might be able to get a personal loan to consolidate several debts into one at a lower interest rate. These loans often have lower interest rates than credit cards. If you can\u2019t qualify for a personal loan at the interest rate you\u2019d like \u2014 or if you just need some outside structure to be successful \u2014 consider a debt management plan. ( View Highlight ) 5 tips for paying off debt Really know your budget: Making the most of each dollar coming in and going out will help you stay focused as you pay off your debt. Lower your bills: By cutting what you\u2019re paying toward bills every month, you\u2019ll have more cash to put toward your debt payoff. Make more money: Pick up a side hustle or two and increase your earning power. Some can be done online and have flexible hours. Consider consolidation: Debt consolidation, with a personal loan or a credit card, can lower your interest rate so you\u2019re putting more money toward your balance. Don\u2019t be afraid of debt relief: If you\u2019re not making any progress on your debts, you might want to get some help in the form of debt relief. ( View Highlight )","title":"Highlights"},{"location":"Highlights/Readwise/Articles/Persistent%20Config%20and%20Data%20for%20R%20Packages%20-%20R-Hub%20Blog/","text":"Persistent Config and Data for R Packages - R-Hub Blog \u00b6 Metadata \u00b6 Author: Full Title: Persistent Config and Data for R Packages - R-Hub Blog Category: #Type/Highlights/Article URL: https://blog.r-hub.io/2020/03/12/user-preferences/ Highlights \u00b6 Does your R package work best with some configuration? You probably want it to be easily found by your package. Does your R package download huge datasets that don\u2019t change much on the provider side? Maybe you want to save the corresponding data somewhere persistent so that things will go faster during the next R session. In this blog post we shall explain how an R package developer can go about using and setting persistent configuration and data on the user\u2019s machine. \u201cApplications can actually store user level configuration information, cached data, logs, etc. in the user\u2019s home directory, and there is a standard way to do this [depending on the operating system].\" R packages that are on CRAN cannot write to the home directory without getting confirmation from the user, but they can and should use standard locations. To find where those are, package developers can use the rappdirs package. Tags: [[favorite]] On top of these non-R specific standard locations, we\u2019ll also mention the standard homes of R options and environment variables, .Rprofile and .Renviron options allow the user to set and examine a variety of global options which affect the way in which R computes and displays its results For more startup tweaks, the user could adopt the startup package As a package developer in your code you can retrieve options by using getOption() whose second argument is a fallback for when the option hasn\u2019t been set by the user. Note that an option can be any R object. Tags: [[favorite]] Environment variables, found via Sys.getenv() rather than getOption(), are often used for storing secrets (like GITHUB_PAT for the gh package) or the path to secrets on disk (like TWITTER_PAT for rtweet), or not secrets (e.g. the browser to use for chromote). Tags: [[r]] [[favorite]] the user could use Sys.setenv(). Obviously, secrets should not be written at the top of a script that\u2019s public. To make environment variables persistent they need to be stored in a startup file, .Renviron. .Renviron does not contain R code like .Rprofile, but rather key-value pairs that are only called via Sys.getenv(). The keyring package allows to interact with such credential stores. You could either take it on as a dependency like e.g. gh, or recommend the user of your package to use keyring and to add a line like Sys.setenv(SUPERSECRETKEY = keyring::key_get(\"myservice\")) Using a config file The batchtools package expect its users to setup a config file somewhere if they don\u2019t want to use the defaults. That somewhere can be several locations, as explained in the batchtools::findConfFile() manual page. Two of the possibilities are rappdirs::user_config_dir(\"batchtools\", expand = FALSE) and rappdirs::site_config_dir(\"batchtools\") which refer to standard locations that are different depending on the operating system. the gert package can find and return Git\u2019s preferences via gert::git_config_global() Tags: [[r]] [[favorite]] recommend using such standard locations when caching data. Persist as much relevant and fresh data as possible. A package that exemplifies doing so is getlandsat that downloads \u201cLandsat 8 data from AWS public data sets\u201d from the web. The first time the user downloads an image, the result is cached so next time no query needs to be made. A very nice aspect of getlandsat is its providing cache management functions If you hesitate to use e.g. rappdirs::user_cache_dir() vs rappdirs::user_data_dir(), use a GitHub code search. Package developers might also like the hoardr package that basically creates an R6 object building on rappdirs with a few more methods (directory creation, deletion). Tags: [[favorite]] R-devel \u201cjust gained support for OS-agile user-specific #rstats cache/config/data folders\u201d which is big (but if you use the base R implementation available after R 4.x.y, unless your package depends on R above that version you\u2019ll need to backport the functionality ). Caching results within an R session To cache results within an R session, you could use a temporary directory for data. For any function call you could use memoise that supports, well memoization which is best explained with an example. Only the first call to time() actually calls Sys.time(), after that the results is saved for the entire session unless memoise::forget() is called. It is great for speeding up code, and for not abusing internet resources which is why the polite package wraps memoise. Providing a ready-to-use dataset in a non-CRAN package If your package depends on the use of a huge dataset, the same for all users, that is by definition too huge for CRAN, you can use a setup like the one presented by Brooke Anderson and Dirk Eddelbuettel in which the data is packaged up in a separate package not on CRAN, that the user will install therefore saving the data on disk somewhere where you can find it easily. Conclusion In this blog post we presented ways of saving configuration options and data in a not so temporary way in R packages. We mentioned R startup files (options in .Rprofile and secrets in .Renviron, the startup package); the rappdirs and hoardr packages as well as an exciting similar feature in R devel; the keyring package. Writing in the user home directory can be viewed as invasive (and can trigger CRAN archival), hence there is a need for a good package design (asking for confirmation; providing cache management functions like getlandsat does) and documentation for transparency. Do you use any form of caching on disk with a default location in one of your packages? Do you know where your rhub email token lives? \ud83d\ude09","title":"Persistent Config and Data for R Packages - R-Hub Blog"},{"location":"Highlights/Readwise/Articles/Persistent%20Config%20and%20Data%20for%20R%20Packages%20-%20R-Hub%20Blog/#persistent-config-and-data-for-r-packages-r-hub-blog","text":"","title":"Persistent Config and Data for R Packages - R-Hub Blog"},{"location":"Highlights/Readwise/Articles/Persistent%20Config%20and%20Data%20for%20R%20Packages%20-%20R-Hub%20Blog/#metadata","text":"Author: Full Title: Persistent Config and Data for R Packages - R-Hub Blog Category: #Type/Highlights/Article URL: https://blog.r-hub.io/2020/03/12/user-preferences/","title":"Metadata"},{"location":"Highlights/Readwise/Articles/Persistent%20Config%20and%20Data%20for%20R%20Packages%20-%20R-Hub%20Blog/#highlights","text":"Does your R package work best with some configuration? You probably want it to be easily found by your package. Does your R package download huge datasets that don\u2019t change much on the provider side? Maybe you want to save the corresponding data somewhere persistent so that things will go faster during the next R session. In this blog post we shall explain how an R package developer can go about using and setting persistent configuration and data on the user\u2019s machine. \u201cApplications can actually store user level configuration information, cached data, logs, etc. in the user\u2019s home directory, and there is a standard way to do this [depending on the operating system].\" R packages that are on CRAN cannot write to the home directory without getting confirmation from the user, but they can and should use standard locations. To find where those are, package developers can use the rappdirs package. Tags: [[favorite]] On top of these non-R specific standard locations, we\u2019ll also mention the standard homes of R options and environment variables, .Rprofile and .Renviron options allow the user to set and examine a variety of global options which affect the way in which R computes and displays its results For more startup tweaks, the user could adopt the startup package As a package developer in your code you can retrieve options by using getOption() whose second argument is a fallback for when the option hasn\u2019t been set by the user. Note that an option can be any R object. Tags: [[favorite]] Environment variables, found via Sys.getenv() rather than getOption(), are often used for storing secrets (like GITHUB_PAT for the gh package) or the path to secrets on disk (like TWITTER_PAT for rtweet), or not secrets (e.g. the browser to use for chromote). Tags: [[r]] [[favorite]] the user could use Sys.setenv(). Obviously, secrets should not be written at the top of a script that\u2019s public. To make environment variables persistent they need to be stored in a startup file, .Renviron. .Renviron does not contain R code like .Rprofile, but rather key-value pairs that are only called via Sys.getenv(). The keyring package allows to interact with such credential stores. You could either take it on as a dependency like e.g. gh, or recommend the user of your package to use keyring and to add a line like Sys.setenv(SUPERSECRETKEY = keyring::key_get(\"myservice\")) Using a config file The batchtools package expect its users to setup a config file somewhere if they don\u2019t want to use the defaults. That somewhere can be several locations, as explained in the batchtools::findConfFile() manual page. Two of the possibilities are rappdirs::user_config_dir(\"batchtools\", expand = FALSE) and rappdirs::site_config_dir(\"batchtools\") which refer to standard locations that are different depending on the operating system. the gert package can find and return Git\u2019s preferences via gert::git_config_global() Tags: [[r]] [[favorite]] recommend using such standard locations when caching data. Persist as much relevant and fresh data as possible. A package that exemplifies doing so is getlandsat that downloads \u201cLandsat 8 data from AWS public data sets\u201d from the web. The first time the user downloads an image, the result is cached so next time no query needs to be made. A very nice aspect of getlandsat is its providing cache management functions If you hesitate to use e.g. rappdirs::user_cache_dir() vs rappdirs::user_data_dir(), use a GitHub code search. Package developers might also like the hoardr package that basically creates an R6 object building on rappdirs with a few more methods (directory creation, deletion). Tags: [[favorite]] R-devel \u201cjust gained support for OS-agile user-specific #rstats cache/config/data folders\u201d which is big (but if you use the base R implementation available after R 4.x.y, unless your package depends on R above that version you\u2019ll need to backport the functionality ). Caching results within an R session To cache results within an R session, you could use a temporary directory for data. For any function call you could use memoise that supports, well memoization which is best explained with an example. Only the first call to time() actually calls Sys.time(), after that the results is saved for the entire session unless memoise::forget() is called. It is great for speeding up code, and for not abusing internet resources which is why the polite package wraps memoise. Providing a ready-to-use dataset in a non-CRAN package If your package depends on the use of a huge dataset, the same for all users, that is by definition too huge for CRAN, you can use a setup like the one presented by Brooke Anderson and Dirk Eddelbuettel in which the data is packaged up in a separate package not on CRAN, that the user will install therefore saving the data on disk somewhere where you can find it easily. Conclusion In this blog post we presented ways of saving configuration options and data in a not so temporary way in R packages. We mentioned R startup files (options in .Rprofile and secrets in .Renviron, the startup package); the rappdirs and hoardr packages as well as an exciting similar feature in R devel; the keyring package. Writing in the user home directory can be viewed as invasive (and can trigger CRAN archival), hence there is a need for a good package design (asking for confirmation; providing cache management functions like getlandsat does) and documentation for transparency. Do you use any form of caching on disk with a default location in one of your packages? Do you know where your rhub email token lives? \ud83d\ude09","title":"Highlights"},{"location":"Highlights/Readwise/Articles/Planning%20a%20Lot%20%20Yujun%20Zhou%27s%20Website/","text":"Planning a Lot | Yujun Zhou's Website \u00b6 Metadata \u00b6 Author: [[Yujun Zhou]] Full Title: Planning a Lot | Yujun Zhou's Website Category: #Type/Highlights/Article URL: https://www.yujun.org/post/planning-a-lot/ Highlights \u00b6 The number one reason for procrastinating is perhaps the task at hand is too hard to accomplish, and the mind would prefer more manageable tasks. As is mentioned in my previous post, the key to get things done involves one crucial step: planning. Planning doesn\u2019t solve problems itself, but it lays out a clear picture of what you want to achieve through work, the necessary resources that you will need and when you are going to do it. The important thing here is to break things done into small tasks and assign each the exact time that you will need to tackle them. This may sound easy enough, but you won\u2019t bother to do it unless planning has become second nature to you. The book getting things done introduced two notions that will help you with planning and build your system to manage things at hand. \u201cVertical focus\u201d is sort of a top-down approach, where you start to think about what you want to achieve in your project, what resource/people you need and what specific steps you need to do to make it. This overview planning requires a chunk of time to do whenever you start a project on your own, and it would be a great idea to walk through this with your colleagues and advisors. The end form of this would be two things: a project proposal, including descriptions, motivations, and steps; a calendar marked with tasks with deadlines on every single job. It would also be a great idea to review this top-down plan now and then and see if you are still on track with what you set out to do in the first place. But then again, even those reviews need to get down on paper or system calendar instead of just thinking about doing them in the future. Horizontal focus\u201d is essentially the day-to-day task assignment. For example, you might get a message on Slack from your advisor, saying \u201chey, can you send me a quick summary stats about the price data ?\u201d Or an email on the deadline for submitting your paper to a conference in July. Instead of stockpiling them onto an existing to-do list and forget about them until the deadline is coming up. The tasks need to be put into the system under different projects and assign the time, priorities, and its linkages to other jobs. I use a free software called freedcamp and below is a picture of one week on my calendar: tasks are divided into different projects, highlighted by priorities and deadlines. The weekly overview gives a clear view of every single step that you need to do every day, and you can start off your day without wondering about what to do today. Tags: [[favorite]]","title":"Planning a Lot | Yujun Zhou's Website"},{"location":"Highlights/Readwise/Articles/Planning%20a%20Lot%20%20Yujun%20Zhou%27s%20Website/#planning-a-lot-yujun-zhous-website","text":"","title":"Planning a Lot | Yujun Zhou's Website"},{"location":"Highlights/Readwise/Articles/Planning%20a%20Lot%20%20Yujun%20Zhou%27s%20Website/#metadata","text":"Author: [[Yujun Zhou]] Full Title: Planning a Lot | Yujun Zhou's Website Category: #Type/Highlights/Article URL: https://www.yujun.org/post/planning-a-lot/","title":"Metadata"},{"location":"Highlights/Readwise/Articles/Planning%20a%20Lot%20%20Yujun%20Zhou%27s%20Website/#highlights","text":"The number one reason for procrastinating is perhaps the task at hand is too hard to accomplish, and the mind would prefer more manageable tasks. As is mentioned in my previous post, the key to get things done involves one crucial step: planning. Planning doesn\u2019t solve problems itself, but it lays out a clear picture of what you want to achieve through work, the necessary resources that you will need and when you are going to do it. The important thing here is to break things done into small tasks and assign each the exact time that you will need to tackle them. This may sound easy enough, but you won\u2019t bother to do it unless planning has become second nature to you. The book getting things done introduced two notions that will help you with planning and build your system to manage things at hand. \u201cVertical focus\u201d is sort of a top-down approach, where you start to think about what you want to achieve in your project, what resource/people you need and what specific steps you need to do to make it. This overview planning requires a chunk of time to do whenever you start a project on your own, and it would be a great idea to walk through this with your colleagues and advisors. The end form of this would be two things: a project proposal, including descriptions, motivations, and steps; a calendar marked with tasks with deadlines on every single job. It would also be a great idea to review this top-down plan now and then and see if you are still on track with what you set out to do in the first place. But then again, even those reviews need to get down on paper or system calendar instead of just thinking about doing them in the future. Horizontal focus\u201d is essentially the day-to-day task assignment. For example, you might get a message on Slack from your advisor, saying \u201chey, can you send me a quick summary stats about the price data ?\u201d Or an email on the deadline for submitting your paper to a conference in July. Instead of stockpiling them onto an existing to-do list and forget about them until the deadline is coming up. The tasks need to be put into the system under different projects and assign the time, priorities, and its linkages to other jobs. I use a free software called freedcamp and below is a picture of one week on my calendar: tasks are divided into different projects, highlighted by priorities and deadlines. The weekly overview gives a clear view of every single step that you need to do every day, and you can start off your day without wondering about what to do today. Tags: [[favorite]]","title":"Highlights"},{"location":"Highlights/Readwise/Articles/Powerful%20Time%20Management%20Strategies%20to%20Do%20More%20With%20Your%20Day/","text":"Powerful Time Management Strategies to Do More With Your Day \u00b6 Metadata \u00b6 Author: [[quickbooost.com]] Full Title: Powerful Time Management Strategies to Do More With Your Day Category: #Type/Highlights/Article URL: https://quickbooost.com/essential-time-management-strategies/ Highlights \u00b6 You\u2019re lucky. Lucky that you\u2019re driven. Lucky that you\u2019re determined. You\u2019re lucky because if you\u2019re reading this, you\u2019re the type of person that wants more out of life. And that\u2019s exciting! But one problem that you\u2019re going to run into is how to manage all of those wonderful things. How to squeeze that extra design in, how to make time for that spin class. It can be hard to get everything done. Up for the challenge Essential Time Management Strategies To Make Life More Effective When you\u2019re overwhelmed, you have a lot on your plate. You have a lot to do and a lot to achieve. And just like when running, if you let one thing slip, the whole thing falls apart. If you spend too much time at your desk, you\u2019ll start to feel burnt out. If you start to feel burnt out, you\u2019ll start to call in sick more often. And if you continue to do that, you\u2019ll start to lose some of your responsibilities and things you care about. Like running, it\u2019s all connected. Time management strategies \u2013 Prioritize The first time management strategy that you should try is prioritization. Prioritization is a skill that, when done properly, allows you to work on what is actually important (like your goals) as opposed to whatever is next on your list. In order to effectively prioritize your tasks, you first need to understand the difference between tasks that are urgent, important, both, or neither. This is sometimes referred to as the Eisenhower Matrix. Go through your to-do list and rank whether tasks are urgent or non-urgent, and then important or not important. This will help you better understand what needs to be worked on first. Once you know what needs to be worked on (and what doesn\u2019t), you can remove the excess from your plate and work on only what matters. Time management strategies \u2013 Plan ahead In order to get the right stuff done, you need to look into the future. No, you don\u2019t need to be a psychic. You do need to have a sense of time though. Because when you don\u2019t properly plan ahead, things can slip by without your paying attention. Maybe you have too many meetings lined up. Or maybe you have way too many tasks on your agenda for the day. Or worse yet, maybe you\u2019re working on things that aren\u2019t moving you forward. Do this simple activity and actually plan out your day. Sit down, take note of everything you need to do, and create a plan for your time. I know you\u2019re busy. I know you have a lot going on and don\u2019t want to spend time planning out how to spend your other blocks of time. But planning is important. So give it a try. Even when you\u2019re busy. Time management strategies \u2013 Make time for calm Stillness can be found in many forms, like: Taking a walk Eating a meal slowly Becoming aware of your surroundings Meditating Time management strategies \u2013 Don\u2019t entertain distraction You have a lot going on. You\u2019re busy. You don\u2019t need to burn through whatever excess time you have by scrolling through Instagram on your phone. Look, taking breaks throughout the day isn\u2019t a bad thing. In fact, it\u2019s great! But a problem arises when those breaks start becoming more and more frequent. Maybe you find yourself spending extra time on YouTube. Or reading irrelevant HuffPost articles. These little distractions end up taking huge chunks out of your day! So delete your most distracting apps. Remove the bookmarks for your favorite sites. Do whatever you can to eliminate distraction so that you can focus on the work in front of you. Time management strategies \u2013 Learn to say no Saying yes is fun. It opens you up to new people, places, and experiences. It also opens you up to doing other peoples work for them. Knowing when to say yes and when to say no is critical to better managing your time. After all, your time is a limited resource. Once you use it up, it\u2019s gone. So this is one time management strategy that you need to learn to adopt. Say no to things that don\u2019t align with your goals. It may feel uncomfortable at first. However, it will get easier with practice. Especially as you begin to notice the benefits of controlling your time once again. And if it helps, also recognize that saying no is not a sign of weakness but rather one of strength. It tells the other person that you are strong and know exactly what you are looking to do, and more importantly what you are not. Time management strategies \u2013 Delegate If you want something done right, do it yourself. That is a fine expression that may work in some circumstances, but when it comes to managing your time it\u2019s not all that helpful. What you need instead is to delegate. Now, if you\u2019re looking for time management strategies for work, this is a great one. Because while you may want to handle everything on your own, trusting others with responsibility is a great way to free up your time to work on more important things. So when going through your to-do list, check to see if there\u2019s anything that could be delegated out to someone else. Time management strategies \u2013 Get started This is one of my favorite time management strategies because it forces you to take action. To get out of your seat and start moving towards your goals. Because if you don\u2019t start, you\u2019ll never finish. And not starting a task (aka procrastinating) is one of the best ways to waste your time. So instead of procrastinating, begin each day by tackling your hardest tasks first. Pick your most daunting, stressful task, and start your day with it. That\u2019s right. Start your day with it so that you use the bulk of your motivation on this task before you start burning it on the easy stuff. Time management strategies \u2013 Be proactive, not reactive Being reactive is reacting to the past. Being proactive is anticipating, planning for, and acting with the future in mind. Acting reactively forces you to handle tasks once they\u2019ve already become a problem. Acting proactively allows you to take care of tasks before they get out of control. If you find yourself constantly putting out fires, you are likely being reactive \u2013 tackling the problem once it\u2019s already started causing issues. In the future, try to be more proactive. Address problems ahead of time so that you can spend less time managing chaos and more time working towards your goals. It\u2019s an easy tip that when done right can benefit you greatly. Time management strategies \u2013 Reduce clutter When my desk is disorganized, I can\u2019t focus. And when I can\u2019t focus, I can\u2019t get anything done. It\u2019s not until everything gets put into the correct place that I can start to get real work done. And you\u2019re probably the same way too. So don\u2019t let clutter waste your time. Follow the time management strategy of organization and stop wasting time on things that aren\u2019t important. It\u2019s one of those time management strategies that seems obvious, but not enough people actually do. Again, if clutter clutters your mind (like it does mine), you\u2019re better off spending a few minutes organizing your workspace. Personally, I keep my desk as minimal as possible. Opting for Google Docs instead of paper. Time management strategies \u2013 Don\u2019t do too much One of the final time management strategies is also one of the most important \u2013 don\u2019t do too much. In other words, don\u2019t spread yourself too thin. Instead, focus on what matters most. Recognize that being busy does not mean being productive. There are normally countless tasks that you could be doing at any given moment \u2013 they won\u2019t necessarily add value to your life or help you achieve your goals though. Much of it is probably unimportant busy work. So get your priorities in order and determine how your time should be best spent. Remove unimportant items from your to-do list and work towards something that matters.","title":"Powerful Time Management Strategies to Do More With Your Day"},{"location":"Highlights/Readwise/Articles/Powerful%20Time%20Management%20Strategies%20to%20Do%20More%20With%20Your%20Day/#powerful-time-management-strategies-to-do-more-with-your-day","text":"","title":"Powerful Time Management Strategies to Do More With Your Day"},{"location":"Highlights/Readwise/Articles/Powerful%20Time%20Management%20Strategies%20to%20Do%20More%20With%20Your%20Day/#metadata","text":"Author: [[quickbooost.com]] Full Title: Powerful Time Management Strategies to Do More With Your Day Category: #Type/Highlights/Article URL: https://quickbooost.com/essential-time-management-strategies/","title":"Metadata"},{"location":"Highlights/Readwise/Articles/Powerful%20Time%20Management%20Strategies%20to%20Do%20More%20With%20Your%20Day/#highlights","text":"You\u2019re lucky. Lucky that you\u2019re driven. Lucky that you\u2019re determined. You\u2019re lucky because if you\u2019re reading this, you\u2019re the type of person that wants more out of life. And that\u2019s exciting! But one problem that you\u2019re going to run into is how to manage all of those wonderful things. How to squeeze that extra design in, how to make time for that spin class. It can be hard to get everything done. Up for the challenge Essential Time Management Strategies To Make Life More Effective When you\u2019re overwhelmed, you have a lot on your plate. You have a lot to do and a lot to achieve. And just like when running, if you let one thing slip, the whole thing falls apart. If you spend too much time at your desk, you\u2019ll start to feel burnt out. If you start to feel burnt out, you\u2019ll start to call in sick more often. And if you continue to do that, you\u2019ll start to lose some of your responsibilities and things you care about. Like running, it\u2019s all connected. Time management strategies \u2013 Prioritize The first time management strategy that you should try is prioritization. Prioritization is a skill that, when done properly, allows you to work on what is actually important (like your goals) as opposed to whatever is next on your list. In order to effectively prioritize your tasks, you first need to understand the difference between tasks that are urgent, important, both, or neither. This is sometimes referred to as the Eisenhower Matrix. Go through your to-do list and rank whether tasks are urgent or non-urgent, and then important or not important. This will help you better understand what needs to be worked on first. Once you know what needs to be worked on (and what doesn\u2019t), you can remove the excess from your plate and work on only what matters. Time management strategies \u2013 Plan ahead In order to get the right stuff done, you need to look into the future. No, you don\u2019t need to be a psychic. You do need to have a sense of time though. Because when you don\u2019t properly plan ahead, things can slip by without your paying attention. Maybe you have too many meetings lined up. Or maybe you have way too many tasks on your agenda for the day. Or worse yet, maybe you\u2019re working on things that aren\u2019t moving you forward. Do this simple activity and actually plan out your day. Sit down, take note of everything you need to do, and create a plan for your time. I know you\u2019re busy. I know you have a lot going on and don\u2019t want to spend time planning out how to spend your other blocks of time. But planning is important. So give it a try. Even when you\u2019re busy. Time management strategies \u2013 Make time for calm Stillness can be found in many forms, like: Taking a walk Eating a meal slowly Becoming aware of your surroundings Meditating Time management strategies \u2013 Don\u2019t entertain distraction You have a lot going on. You\u2019re busy. You don\u2019t need to burn through whatever excess time you have by scrolling through Instagram on your phone. Look, taking breaks throughout the day isn\u2019t a bad thing. In fact, it\u2019s great! But a problem arises when those breaks start becoming more and more frequent. Maybe you find yourself spending extra time on YouTube. Or reading irrelevant HuffPost articles. These little distractions end up taking huge chunks out of your day! So delete your most distracting apps. Remove the bookmarks for your favorite sites. Do whatever you can to eliminate distraction so that you can focus on the work in front of you. Time management strategies \u2013 Learn to say no Saying yes is fun. It opens you up to new people, places, and experiences. It also opens you up to doing other peoples work for them. Knowing when to say yes and when to say no is critical to better managing your time. After all, your time is a limited resource. Once you use it up, it\u2019s gone. So this is one time management strategy that you need to learn to adopt. Say no to things that don\u2019t align with your goals. It may feel uncomfortable at first. However, it will get easier with practice. Especially as you begin to notice the benefits of controlling your time once again. And if it helps, also recognize that saying no is not a sign of weakness but rather one of strength. It tells the other person that you are strong and know exactly what you are looking to do, and more importantly what you are not. Time management strategies \u2013 Delegate If you want something done right, do it yourself. That is a fine expression that may work in some circumstances, but when it comes to managing your time it\u2019s not all that helpful. What you need instead is to delegate. Now, if you\u2019re looking for time management strategies for work, this is a great one. Because while you may want to handle everything on your own, trusting others with responsibility is a great way to free up your time to work on more important things. So when going through your to-do list, check to see if there\u2019s anything that could be delegated out to someone else. Time management strategies \u2013 Get started This is one of my favorite time management strategies because it forces you to take action. To get out of your seat and start moving towards your goals. Because if you don\u2019t start, you\u2019ll never finish. And not starting a task (aka procrastinating) is one of the best ways to waste your time. So instead of procrastinating, begin each day by tackling your hardest tasks first. Pick your most daunting, stressful task, and start your day with it. That\u2019s right. Start your day with it so that you use the bulk of your motivation on this task before you start burning it on the easy stuff. Time management strategies \u2013 Be proactive, not reactive Being reactive is reacting to the past. Being proactive is anticipating, planning for, and acting with the future in mind. Acting reactively forces you to handle tasks once they\u2019ve already become a problem. Acting proactively allows you to take care of tasks before they get out of control. If you find yourself constantly putting out fires, you are likely being reactive \u2013 tackling the problem once it\u2019s already started causing issues. In the future, try to be more proactive. Address problems ahead of time so that you can spend less time managing chaos and more time working towards your goals. It\u2019s an easy tip that when done right can benefit you greatly. Time management strategies \u2013 Reduce clutter When my desk is disorganized, I can\u2019t focus. And when I can\u2019t focus, I can\u2019t get anything done. It\u2019s not until everything gets put into the correct place that I can start to get real work done. And you\u2019re probably the same way too. So don\u2019t let clutter waste your time. Follow the time management strategy of organization and stop wasting time on things that aren\u2019t important. It\u2019s one of those time management strategies that seems obvious, but not enough people actually do. Again, if clutter clutters your mind (like it does mine), you\u2019re better off spending a few minutes organizing your workspace. Personally, I keep my desk as minimal as possible. Opting for Google Docs instead of paper. Time management strategies \u2013 Don\u2019t do too much One of the final time management strategies is also one of the most important \u2013 don\u2019t do too much. In other words, don\u2019t spread yourself too thin. Instead, focus on what matters most. Recognize that being busy does not mean being productive. There are normally countless tasks that you could be doing at any given moment \u2013 they won\u2019t necessarily add value to your life or help you achieve your goals though. Much of it is probably unimportant busy work. So get your priorities in order and determine how your time should be best spent. Remove unimportant items from your to-do list and work towards something that matters.","title":"Highlights"},{"location":"Highlights/Readwise/Articles/Powershell%20-%20Scripting%20-%20Tutorialspoint/","text":"Powershell - Scripting - Tutorialspoint \u00b6 Metadata \u00b6 Author: [[tutorialspoint.com]] Full Title: Powershell - Scripting - Tutorialspoint Category: #Type/Highlights/Article URL: https://www.tutorialspoint.com/powershell/powershell_scripting.htm Highlights \u00b6 Windows PowerShell is a command-line shell and scripting language designed especially for system administration. Its analogue in Linux is called as Bash Scripting. Built on the .NET Framework, Windows PowerShell helps IT professionals to control and automate the administration of the Windows operating system and applications that run on Windows Server environment. Windows PowerShell commands, called cmdlets, let you manage the computers from the command line. Windows PowerShell providers let you access data stores, such as the Registry and Certificate Store, as easily as you access the file system. In addition, Windows PowerShell has a rich expression parser and a fully developed scripting language. So in simple words you can complete all the tasks that you do with GUI and much more. Windows PowerShell Scripting is a fully developed scripting language and has a rich expression parser Features Cmdlets \u2212 Cmdlets perform common system administration tasks, for example managing the registry, services, processes, event logs, and using Windows Management Instrumentation (WMI). Task oriented \u2212 PowerShell scripting language is task based and provide supports for existing scripts and command-line tools. Consistent design \u2212 As cmdlets and system data stores use common syntax and have common naming conventions, data sharing is easy. The output from one cmdlet can be pipelined to another cmdlet without any manipulation. Simple to Use \u2212 Simplified, command-based navigation lets users navigate the registry and other data stores similar to the file system navigation. Object based \u2212 PowerShell possesses powerful object manipulation capabilities. Objects can be sent to other tools or databases directly. Extensible interface. \u2212 PowerShell is customizable as independent software vendors and enterprise developers can build custom tools and utilities using PowerShell to administer their software. Variables PowerShell variables are named objects. As PowerShell works with objects, these variables are used to work with objects. Creating variable Variable name should start with $ and can contain alphanumeric characters and underscore in their names. A variable can be created by typing a valid variable name. Type the following command in PowerShell ISE Console. Assuming you are in D:\\test folder. $location = Get-Location Here we've created a variable $location and assigned it the output of Get-Location cmdlet. It now contains the current location. Using variable Type the following command in PowerShell ISE Console. $location Output You can see following output in PowerShell console. Path D:\\test - Getting information of variable Get-Member cmdlet can tell the type of variable being used. See the example below. $location | Get-Member","title":"Powershell - Scripting - Tutorialspoint"},{"location":"Highlights/Readwise/Articles/Powershell%20-%20Scripting%20-%20Tutorialspoint/#powershell-scripting-tutorialspoint","text":"","title":"Powershell - Scripting - Tutorialspoint"},{"location":"Highlights/Readwise/Articles/Powershell%20-%20Scripting%20-%20Tutorialspoint/#metadata","text":"Author: [[tutorialspoint.com]] Full Title: Powershell - Scripting - Tutorialspoint Category: #Type/Highlights/Article URL: https://www.tutorialspoint.com/powershell/powershell_scripting.htm","title":"Metadata"},{"location":"Highlights/Readwise/Articles/Powershell%20-%20Scripting%20-%20Tutorialspoint/#highlights","text":"Windows PowerShell is a command-line shell and scripting language designed especially for system administration. Its analogue in Linux is called as Bash Scripting. Built on the .NET Framework, Windows PowerShell helps IT professionals to control and automate the administration of the Windows operating system and applications that run on Windows Server environment. Windows PowerShell commands, called cmdlets, let you manage the computers from the command line. Windows PowerShell providers let you access data stores, such as the Registry and Certificate Store, as easily as you access the file system. In addition, Windows PowerShell has a rich expression parser and a fully developed scripting language. So in simple words you can complete all the tasks that you do with GUI and much more. Windows PowerShell Scripting is a fully developed scripting language and has a rich expression parser Features Cmdlets \u2212 Cmdlets perform common system administration tasks, for example managing the registry, services, processes, event logs, and using Windows Management Instrumentation (WMI). Task oriented \u2212 PowerShell scripting language is task based and provide supports for existing scripts and command-line tools. Consistent design \u2212 As cmdlets and system data stores use common syntax and have common naming conventions, data sharing is easy. The output from one cmdlet can be pipelined to another cmdlet without any manipulation. Simple to Use \u2212 Simplified, command-based navigation lets users navigate the registry and other data stores similar to the file system navigation. Object based \u2212 PowerShell possesses powerful object manipulation capabilities. Objects can be sent to other tools or databases directly. Extensible interface. \u2212 PowerShell is customizable as independent software vendors and enterprise developers can build custom tools and utilities using PowerShell to administer their software. Variables PowerShell variables are named objects. As PowerShell works with objects, these variables are used to work with objects. Creating variable Variable name should start with $ and can contain alphanumeric characters and underscore in their names. A variable can be created by typing a valid variable name. Type the following command in PowerShell ISE Console. Assuming you are in D:\\test folder. $location = Get-Location Here we've created a variable $location and assigned it the output of Get-Location cmdlet. It now contains the current location. Using variable Type the following command in PowerShell ISE Console. $location Output You can see following output in PowerShell console. Path D:\\test - Getting information of variable Get-Member cmdlet can tell the type of variable being used. See the example below. $location | Get-Member","title":"Highlights"},{"location":"Highlights/Readwise/Articles/Productivity%20Overwhelm/","text":"Productivity Overwhelm \u00b6 Metadata \u00b6 Author: [[James Stuber]] Full Title: Productivity Overwhelm Category: #Type/Highlights/Article URL: https://jamesstuber.com/overwhelm/ Highlights \u00b6 Productivity Overwhelm If you read enough \u2018self-help\u2019 or \u2018productivity\u2019 blogs, it\u2019s easy to get bogged down with things you \u2018should be\u2019 doing. And if you really want these tasks to make an impact you\u2019d better do them everyday, and turn them into habits. It\u2019s easy to read blogs. Every article you read turns into another \u2018actionable takeaway\u2019 that you add to your list. But it\u2019s hard to actually implement new habits. So you end up with a list of tasks so long it doesn\u2019t even fit on your laptop screen. You feel like you \u2018should\u2019 be doing all of these, but there\u2019s a lot of things to do, and you\u2019re busy, and now you\u2019ve been putting off all of them for weeks. Your \u2018to-do\u2019 list becomes your \u2018should-do\u2019 list. Tags: [[favorite]] When you read an article, and find an interesting action item, don\u2019t do it. If the new action is really compelling, put it in a \u2018maybe / someday\u2019 list. A few weeks or months down the road, you\u2019ll look at your \u2018maybe / someday\u2019 list and realize most of the tasks aren\u2019t useful. If a new action compels you week after week, then you can think about adding it in. Say no to adding tasks to your day. Read fewer productivity blogs Saying no includes saying no to \u201cproductivity porn\u201d. Reading short articles about productivity feels good. You don\u2019t have to work very hard to read \u2018Improve Your Productivity With These 8 Unbelievable Hacks!\u2019, even though you think you\u2019re being useful. If you\u2019re putting off real work to read articles, there\u2019s something wrong. If you\u2019re reading about hacks for 1-2% improvements (\u2018Speed up your mouse cursor!\u2019) but failing to hit the fundamentals[], you\u2019re wasting your time. I\u2019m not saying read zero productivity articles, there\u2019s a lot of great information out there []. Just make sure you aren\u2019t spending more time reading about productivity than actually being productive. Any Benefit Mindset: [Thinking that] you\u2019re justified in using a\u2026tool if you can identify any possible benefit to its use, or anything you might possibly miss out on if you don\u2019t use it. - Cal Newport Add One thing at a time When you do add new daily habits, make it one at a time. Even if you feel like you\u2019ve got the extra bandwidth to handle more today, remember that you may not have that bandwidth tomorrow. Keep it simple, one thing at a time. Chunking Ask a runner what their daily exercise routine is like. You\u2019ll get a response like, \u201cOh I just run for 3 to 5 miles, then stretch.\u201d Ask someone who hates running how they\u2019d go for a jog. \u201cWell, first I have to change into running clothes, then I have to put on running shoes, then I have to figure out how far I should run, then I have to figure out a path to run around my neighborhood, then I have to run and convince myself not to stop, then\u2026, then\u2026., then\u2026\u201d Why is the process for the runner so much simpler? The runner has \u2018chunked\u2019 the whole process into one straight-forward task. Here\u2019s a few ways to \u2018chunk\u2019 productivity tasks: Have a morning routine Use a pre-formatted journal Use an existing habit to trigger a new one (\u2018brush teeth\u2019 becomes \u2018brush teeth and floss\u2019) Fundamentals you must establish before looking for small wins: Sleep 8 hours a night Eat real foods 90% of the time or more Turn off phone and computer notifications for everything Productivity blogs with high signal-to-noise ratio: James Clear Tiago Forte Sebastian Marshall Taylor Pearson Zenhabits Further Reading Work in Serial","title":"Productivity Overwhelm"},{"location":"Highlights/Readwise/Articles/Productivity%20Overwhelm/#productivity-overwhelm","text":"","title":"Productivity Overwhelm"},{"location":"Highlights/Readwise/Articles/Productivity%20Overwhelm/#metadata","text":"Author: [[James Stuber]] Full Title: Productivity Overwhelm Category: #Type/Highlights/Article URL: https://jamesstuber.com/overwhelm/","title":"Metadata"},{"location":"Highlights/Readwise/Articles/Productivity%20Overwhelm/#highlights","text":"Productivity Overwhelm If you read enough \u2018self-help\u2019 or \u2018productivity\u2019 blogs, it\u2019s easy to get bogged down with things you \u2018should be\u2019 doing. And if you really want these tasks to make an impact you\u2019d better do them everyday, and turn them into habits. It\u2019s easy to read blogs. Every article you read turns into another \u2018actionable takeaway\u2019 that you add to your list. But it\u2019s hard to actually implement new habits. So you end up with a list of tasks so long it doesn\u2019t even fit on your laptop screen. You feel like you \u2018should\u2019 be doing all of these, but there\u2019s a lot of things to do, and you\u2019re busy, and now you\u2019ve been putting off all of them for weeks. Your \u2018to-do\u2019 list becomes your \u2018should-do\u2019 list. Tags: [[favorite]] When you read an article, and find an interesting action item, don\u2019t do it. If the new action is really compelling, put it in a \u2018maybe / someday\u2019 list. A few weeks or months down the road, you\u2019ll look at your \u2018maybe / someday\u2019 list and realize most of the tasks aren\u2019t useful. If a new action compels you week after week, then you can think about adding it in. Say no to adding tasks to your day. Read fewer productivity blogs Saying no includes saying no to \u201cproductivity porn\u201d. Reading short articles about productivity feels good. You don\u2019t have to work very hard to read \u2018Improve Your Productivity With These 8 Unbelievable Hacks!\u2019, even though you think you\u2019re being useful. If you\u2019re putting off real work to read articles, there\u2019s something wrong. If you\u2019re reading about hacks for 1-2% improvements (\u2018Speed up your mouse cursor!\u2019) but failing to hit the fundamentals[], you\u2019re wasting your time. I\u2019m not saying read zero productivity articles, there\u2019s a lot of great information out there []. Just make sure you aren\u2019t spending more time reading about productivity than actually being productive. Any Benefit Mindset: [Thinking that] you\u2019re justified in using a\u2026tool if you can identify any possible benefit to its use, or anything you might possibly miss out on if you don\u2019t use it. - Cal Newport Add One thing at a time When you do add new daily habits, make it one at a time. Even if you feel like you\u2019ve got the extra bandwidth to handle more today, remember that you may not have that bandwidth tomorrow. Keep it simple, one thing at a time. Chunking Ask a runner what their daily exercise routine is like. You\u2019ll get a response like, \u201cOh I just run for 3 to 5 miles, then stretch.\u201d Ask someone who hates running how they\u2019d go for a jog. \u201cWell, first I have to change into running clothes, then I have to put on running shoes, then I have to figure out how far I should run, then I have to figure out a path to run around my neighborhood, then I have to run and convince myself not to stop, then\u2026, then\u2026., then\u2026\u201d Why is the process for the runner so much simpler? The runner has \u2018chunked\u2019 the whole process into one straight-forward task. Here\u2019s a few ways to \u2018chunk\u2019 productivity tasks: Have a morning routine Use a pre-formatted journal Use an existing habit to trigger a new one (\u2018brush teeth\u2019 becomes \u2018brush teeth and floss\u2019) Fundamentals you must establish before looking for small wins: Sleep 8 hours a night Eat real foods 90% of the time or more Turn off phone and computer notifications for everything Productivity blogs with high signal-to-noise ratio: James Clear Tiago Forte Sebastian Marshall Taylor Pearson Zenhabits Further Reading Work in Serial","title":"Highlights"},{"location":"Highlights/Readwise/Articles/Productivity%20System%20Archives%20%E2%80%A2%20Paul%20Jacobson/","text":"Productivity System Archives \u2022 Paul Jacobson \u00b6 Metadata \u00b6 Author: [[pauljacobson.me]] Full Title: Productivity System Archives \u2022 Paul Jacobson Category: #Type/Highlights/Article URL: https://pauljacobson.me/tag/productivity-system/ Highlights \u00b6 My point is \u2026 What prompted to start this little verbal foray into productivity systems was a post by Shawn Blanc titled \u201cA System That Works (for You)\u201d which begins with this truism: Everyone wants a time management system that works. One they can stick with. One that\u2019s not a pain in the butt. He goes on to explain what such a system looks like: It empowers you to do the things you want and need to do. It aligns with your personality. ( View Highlight ) The reason I use a pen and paper is because I enjoy it. The analog aspect adds a bit of joy, which, in and of itself, is enough grease for the skids to keep me on track with using my system. ( View Highlight )","title":"Productivity System Archives \u2022 Paul Jacobson"},{"location":"Highlights/Readwise/Articles/Productivity%20System%20Archives%20%E2%80%A2%20Paul%20Jacobson/#productivity-system-archives-paul-jacobson","text":"","title":"Productivity System Archives \u2022 Paul Jacobson"},{"location":"Highlights/Readwise/Articles/Productivity%20System%20Archives%20%E2%80%A2%20Paul%20Jacobson/#metadata","text":"Author: [[pauljacobson.me]] Full Title: Productivity System Archives \u2022 Paul Jacobson Category: #Type/Highlights/Article URL: https://pauljacobson.me/tag/productivity-system/","title":"Metadata"},{"location":"Highlights/Readwise/Articles/Productivity%20System%20Archives%20%E2%80%A2%20Paul%20Jacobson/#highlights","text":"My point is \u2026 What prompted to start this little verbal foray into productivity systems was a post by Shawn Blanc titled \u201cA System That Works (for You)\u201d which begins with this truism: Everyone wants a time management system that works. One they can stick with. One that\u2019s not a pain in the butt. He goes on to explain what such a system looks like: It empowers you to do the things you want and need to do. It aligns with your personality. ( View Highlight ) The reason I use a pen and paper is because I enjoy it. The analog aspect adds a bit of joy, which, in and of itself, is enough grease for the skids to keep me on track with using my system. ( View Highlight )","title":"Highlights"},{"location":"Highlights/Readwise/Articles/Productivity%20System%20The%20Definitive%20Guide%20%282020%29%20-%20THEZEROED/","text":"Productivity System: The Definitive Guide (2020) - THEZEROED \u00b6 Metadata \u00b6 Author: Full Title: Productivity System: The Definitive Guide (2020) - THEZEROED Category: #Type/Highlights/Article URL: https://thezeroed.com/productivity-system-the-definitive-guide-2019/ Highlights \u00b6 Productivity System Basics What is a Productivity System? Productivity system is a series of methods and resources that people use in their daily routine with the goal of getting organized so that you spend less time doing things the things you have to do and spend more time doing the things you want to do. Why is productivity system so important? To put it simply, they help you to organize your to-dos, priorities, and schedule in a way that it is easy for you to manage. The biggest benefits is that it makes it easy for you to see all the activities you need to do at a point in time and choose what to do next. The system helps you organize in such a way that you have less mental distractions and thus keeps you working efficiently. This system doesn\u2019t give you a set of rules that shows you how to actually work. Instead it focuses on how you see the work, organize and then choose what needs your attention the most. How you organize your system is up to you, but remember not to over hack the method. It is the small things that makes it work. How Productivity Systems Helped My Growth A lot of my friends believe that I don\u2019t have any thing tangible doing because they think I have a lot of time on my hands. I think this is partly because I always happy to lend a helping hand. R. Emory Williamson Lundberg calls this the productivity paradox. I do not rush to answer every email. I am very happy. I do not accept every meeting or hangout invites. I am not working until very late in the night. I am not stressed and anxious most of the day. So therefore, I am slacking off or do not have enough tasks on my plate. What they don\u2019t know is that I have a system that works for me. The systems helps relieve stress and anxiety from my psyche making me so calm that my friends who do not have my amazing workflow believe that I am doing nothing. Productive system for you Now is the time to get more personalized. Specifically, it is time to see what system would work best for you. And in this chapter, I would show you various systems that would suit your lifestyle. Let\u2019s dive right in. It doesn\u2019t matter if you are an entrepreneur, business owner or a freelancer, there are a lot of things that demands your attention at the same time. You have new products to tests, customers satisfaction to worry about and finishing tasks before their deadline. All these tasks on their own aren\u2019t an issue. The problem is that you have convinced yourself that you have to do everything now. Trying to track all these tasks with your head can be very stressful and you would end up missing a lot of things. That\u2019s why you are reading this article right now. There is always a better way. You need a system that is suited specifically for you. A good system would help you understand what needs to be done, bring order and saves you a lot of time and stress. Getting Things Done \u2013 A Serious Productivity System The Basic Concepts Collate every single thing that you have to do in every aspect of your life. Place all these things in a system that you can track and manage. Break the huge task into smaller ones that are easy to manage While creating your tasks, ask this question : \u201cwhat is the next step after this? \u201c Make use of a calendar Create a context for your tasks, i.e how and where you are going to perform them. Review your progress and next course of action weekly. The GTD system can be a bit much for beginners, but when started it can be very dependable. All it requires is a lot of discipline on your part. GTD is suited for: Individuals who don\u2019t mind learning a new system and have enough discipline to see it through. GTD is not suited for: Individuals who don\u2019t have enough discipline and are not ready to commit to the system. You can find more resources to GTD here: A Primer to Getting Things Done A Pramatic Guide to GTD Kanban \u2013 A Visual Productivity System This is a visual system that was made popular by the Agile project development framework. The tool is perfect for managing team projects. It allows a team to collaborate very easily and manage their workflow. You can also use it for personal management. (A good example of an app using the Kanban system is Trello). Kanban is suited for: people who work in a team, prefer a visual representation and want to see how things are going at a glance. Kanban is not suited for: people who like a rigid amount of planning and strict control. Don\u2019t break the chain \u2013 an OCD productivity system The most popular user of these system is Jerry Seinfeld. Majority of people love this system because of its simplicity. The Basic Concepts Decide on the thing that you want to improve over time (it could be a skill you want to learn). Make use of a calendar. It could be a physical calendar or an online calendar app. Do something each day that would get you closer to achieving your goal. Whenever you have done something to achieve your goals, tick an X on your calendar. Continue to tick an X as you go on. It is very simple to do and can motivate you easily. Don\u2019t break the chain is suited for: People who have long term goals or want to reach their goals gradually. Don\u2019t break the chain is not suited for: Day-to-day tasks and activities, project planning and listed activities. Pomodoro Technique- productivity system for the super focused The beauty of Pomodoro technique is that you can use it alongside any other system. The system revolves around concentrating your work on certain periods then taking short breaks between them. It is a very effective way to get your tasks done. The Basic Concepts Make use of timer.(The name Pomodoro was gotten from kitchen timers that were shaped like a tomato) Choose the task you want to engage in. Set your timer for 20-25 minutes. Work only on the task that you have selected for the time duration \u2013 stay away from any form of distractions. After the end of the time, take a brief break. Go back and repeat the third After performing the Pomodoro technique 3-4 times, take a longer break. Pomodoro is suited for: Individuals who get easily distracted and want to see fast progress. Pomodoro is not suited for: People who are very disciplined. The \u201cto-do\u201d list \u2013 doing the bare minimum technique This is the simplest and fastest way to improve your productivity. It is the backbone of most of the systems of productivity above. The Basic Concepts Write everything you need to do down in a list. Prioritize the items in your list Make sure you do the most important things first When new things come up, add to the list. When you complete the task, cross it off. To-do list is suited for: People who are looking for a simple yet effective way to improve their productivity. To-do list is not suited for: projects that involve multi-tasking, complex tasks or doing different tasks at once. Build Your Own System This chapter is all about tools you need to build a functioning system. This chapter would make the whole process easier. Having proper understanding on how you can improve your productivity puts you a step above everyone else. Let\u2019s dive into how you can build your productivity system so that you can be able to manage time and organize your life efficiently. Eliminate before Optimizing One of the biggest mistakes that majority of us make is that we go straight into optimizing without eliminating the mountains of rubbish that would hinder our progress. Follow the amazing time management principle called the 80/20 rule. This principle in simple terms means that 80% of the results should come from 20% of the action our output. in most languages, the most frequently used 20% of the words account for 80% of the word occurrences The little things would account for the majority of your results and how successful it would turn out. Taking all your resources and then optimizing is a classic rookie mistake. Before optimizing reflect on your set goals and activities. Write on a paper while you ask yourself this question, \u201cIs this task contributing to my goal?\u201d You should eliminate anything that would not help in the progress of your goal before you start the process of optimizing. Follow the Principles There are certain principles you need to follow before you can effectively increase your productivity. Easy to Learn If it takes you more than an hour to learn a productivity system, you are either doing something wrong or it isn\u2019t the best for you. Fast to set up It shouldn\u2019t take you up to an hour before you get set up your system. in a matter of minutes, you should be done. Low maintenance A good system would require minimal time for you to use it and help you work faster also. The less time you spend maintaining the system, the better for you. Adaptable The system should be easily tweaked depending on the preference of the individual using it. It should be relevant enough that it could be used by anybody or team. Easy to scale Your system should be good enough that it can be scaled for use from a single user to a thousand. Not All Tasks Are Equal Even after you have eliminated the tasks that do not add to the progress of your goals, you have to realize that some are still more important than the others. Evaluate your tasks according to the order of their importance and then prioritize. To find out which tasks are important and the ones that are not, make use of the Eisenhower Matrix. Insert your tasks into the boxes that they fit in. Productivity tips and hacks Now that you know all about systems for optimizing productivity, let\u2019s us check out tips and hacks that can assist you. These tips would improve your time management skills, self-improvement ,relieve stress and improve general health. Do not use email as a task manager. Your email should be used strictly as a communication tool. Build reasonable and regular rituals, they help you save time. You should always have a pen and paper with you at all times. Technology can fail at times. Don\u2019t multitask. Work on one thing at a time. Always close the door and put on headphones to avoid distractions. Open the window. You need fresh air to stay focused. Take breaks. Give your brain time to rest and re-energize. Eat your lunch away from your work area. Drink plenty of water. The recommended amount of water vary according to person. Check out this article by Mayo clinic. Focus on the task at hand and not the time. Be flexible. Rigidity kills productivity. Get plenty of rest. Exercise regularly. Eat healthy Laugh. It relieves stress and boost productivity. Learn new things. Read regularly Write regularly Have a vision of where you want to be. It motivates you to work harder. Plan ahead Check your email less often. Listen to podcasts. Have a budget Create long term and short term goals. Keep track of your goals.","title":"Productivity System: The Definitive Guide (2020) - THEZEROED"},{"location":"Highlights/Readwise/Articles/Productivity%20System%20The%20Definitive%20Guide%20%282020%29%20-%20THEZEROED/#productivity-system-the-definitive-guide-2020-thezeroed","text":"","title":"Productivity System: The Definitive Guide (2020) - THEZEROED"},{"location":"Highlights/Readwise/Articles/Productivity%20System%20The%20Definitive%20Guide%20%282020%29%20-%20THEZEROED/#metadata","text":"Author: Full Title: Productivity System: The Definitive Guide (2020) - THEZEROED Category: #Type/Highlights/Article URL: https://thezeroed.com/productivity-system-the-definitive-guide-2019/","title":"Metadata"},{"location":"Highlights/Readwise/Articles/Productivity%20System%20The%20Definitive%20Guide%20%282020%29%20-%20THEZEROED/#highlights","text":"Productivity System Basics What is a Productivity System? Productivity system is a series of methods and resources that people use in their daily routine with the goal of getting organized so that you spend less time doing things the things you have to do and spend more time doing the things you want to do. Why is productivity system so important? To put it simply, they help you to organize your to-dos, priorities, and schedule in a way that it is easy for you to manage. The biggest benefits is that it makes it easy for you to see all the activities you need to do at a point in time and choose what to do next. The system helps you organize in such a way that you have less mental distractions and thus keeps you working efficiently. This system doesn\u2019t give you a set of rules that shows you how to actually work. Instead it focuses on how you see the work, organize and then choose what needs your attention the most. How you organize your system is up to you, but remember not to over hack the method. It is the small things that makes it work. How Productivity Systems Helped My Growth A lot of my friends believe that I don\u2019t have any thing tangible doing because they think I have a lot of time on my hands. I think this is partly because I always happy to lend a helping hand. R. Emory Williamson Lundberg calls this the productivity paradox. I do not rush to answer every email. I am very happy. I do not accept every meeting or hangout invites. I am not working until very late in the night. I am not stressed and anxious most of the day. So therefore, I am slacking off or do not have enough tasks on my plate. What they don\u2019t know is that I have a system that works for me. The systems helps relieve stress and anxiety from my psyche making me so calm that my friends who do not have my amazing workflow believe that I am doing nothing. Productive system for you Now is the time to get more personalized. Specifically, it is time to see what system would work best for you. And in this chapter, I would show you various systems that would suit your lifestyle. Let\u2019s dive right in. It doesn\u2019t matter if you are an entrepreneur, business owner or a freelancer, there are a lot of things that demands your attention at the same time. You have new products to tests, customers satisfaction to worry about and finishing tasks before their deadline. All these tasks on their own aren\u2019t an issue. The problem is that you have convinced yourself that you have to do everything now. Trying to track all these tasks with your head can be very stressful and you would end up missing a lot of things. That\u2019s why you are reading this article right now. There is always a better way. You need a system that is suited specifically for you. A good system would help you understand what needs to be done, bring order and saves you a lot of time and stress. Getting Things Done \u2013 A Serious Productivity System The Basic Concepts Collate every single thing that you have to do in every aspect of your life. Place all these things in a system that you can track and manage. Break the huge task into smaller ones that are easy to manage While creating your tasks, ask this question : \u201cwhat is the next step after this? \u201c Make use of a calendar Create a context for your tasks, i.e how and where you are going to perform them. Review your progress and next course of action weekly. The GTD system can be a bit much for beginners, but when started it can be very dependable. All it requires is a lot of discipline on your part. GTD is suited for: Individuals who don\u2019t mind learning a new system and have enough discipline to see it through. GTD is not suited for: Individuals who don\u2019t have enough discipline and are not ready to commit to the system. You can find more resources to GTD here: A Primer to Getting Things Done A Pramatic Guide to GTD Kanban \u2013 A Visual Productivity System This is a visual system that was made popular by the Agile project development framework. The tool is perfect for managing team projects. It allows a team to collaborate very easily and manage their workflow. You can also use it for personal management. (A good example of an app using the Kanban system is Trello). Kanban is suited for: people who work in a team, prefer a visual representation and want to see how things are going at a glance. Kanban is not suited for: people who like a rigid amount of planning and strict control. Don\u2019t break the chain \u2013 an OCD productivity system The most popular user of these system is Jerry Seinfeld. Majority of people love this system because of its simplicity. The Basic Concepts Decide on the thing that you want to improve over time (it could be a skill you want to learn). Make use of a calendar. It could be a physical calendar or an online calendar app. Do something each day that would get you closer to achieving your goal. Whenever you have done something to achieve your goals, tick an X on your calendar. Continue to tick an X as you go on. It is very simple to do and can motivate you easily. Don\u2019t break the chain is suited for: People who have long term goals or want to reach their goals gradually. Don\u2019t break the chain is not suited for: Day-to-day tasks and activities, project planning and listed activities. Pomodoro Technique- productivity system for the super focused The beauty of Pomodoro technique is that you can use it alongside any other system. The system revolves around concentrating your work on certain periods then taking short breaks between them. It is a very effective way to get your tasks done. The Basic Concepts Make use of timer.(The name Pomodoro was gotten from kitchen timers that were shaped like a tomato) Choose the task you want to engage in. Set your timer for 20-25 minutes. Work only on the task that you have selected for the time duration \u2013 stay away from any form of distractions. After the end of the time, take a brief break. Go back and repeat the third After performing the Pomodoro technique 3-4 times, take a longer break. Pomodoro is suited for: Individuals who get easily distracted and want to see fast progress. Pomodoro is not suited for: People who are very disciplined. The \u201cto-do\u201d list \u2013 doing the bare minimum technique This is the simplest and fastest way to improve your productivity. It is the backbone of most of the systems of productivity above. The Basic Concepts Write everything you need to do down in a list. Prioritize the items in your list Make sure you do the most important things first When new things come up, add to the list. When you complete the task, cross it off. To-do list is suited for: People who are looking for a simple yet effective way to improve their productivity. To-do list is not suited for: projects that involve multi-tasking, complex tasks or doing different tasks at once. Build Your Own System This chapter is all about tools you need to build a functioning system. This chapter would make the whole process easier. Having proper understanding on how you can improve your productivity puts you a step above everyone else. Let\u2019s dive into how you can build your productivity system so that you can be able to manage time and organize your life efficiently. Eliminate before Optimizing One of the biggest mistakes that majority of us make is that we go straight into optimizing without eliminating the mountains of rubbish that would hinder our progress. Follow the amazing time management principle called the 80/20 rule. This principle in simple terms means that 80% of the results should come from 20% of the action our output. in most languages, the most frequently used 20% of the words account for 80% of the word occurrences The little things would account for the majority of your results and how successful it would turn out. Taking all your resources and then optimizing is a classic rookie mistake. Before optimizing reflect on your set goals and activities. Write on a paper while you ask yourself this question, \u201cIs this task contributing to my goal?\u201d You should eliminate anything that would not help in the progress of your goal before you start the process of optimizing. Follow the Principles There are certain principles you need to follow before you can effectively increase your productivity. Easy to Learn If it takes you more than an hour to learn a productivity system, you are either doing something wrong or it isn\u2019t the best for you. Fast to set up It shouldn\u2019t take you up to an hour before you get set up your system. in a matter of minutes, you should be done. Low maintenance A good system would require minimal time for you to use it and help you work faster also. The less time you spend maintaining the system, the better for you. Adaptable The system should be easily tweaked depending on the preference of the individual using it. It should be relevant enough that it could be used by anybody or team. Easy to scale Your system should be good enough that it can be scaled for use from a single user to a thousand. Not All Tasks Are Equal Even after you have eliminated the tasks that do not add to the progress of your goals, you have to realize that some are still more important than the others. Evaluate your tasks according to the order of their importance and then prioritize. To find out which tasks are important and the ones that are not, make use of the Eisenhower Matrix. Insert your tasks into the boxes that they fit in. Productivity tips and hacks Now that you know all about systems for optimizing productivity, let\u2019s us check out tips and hacks that can assist you. These tips would improve your time management skills, self-improvement ,relieve stress and improve general health. Do not use email as a task manager. Your email should be used strictly as a communication tool. Build reasonable and regular rituals, they help you save time. You should always have a pen and paper with you at all times. Technology can fail at times. Don\u2019t multitask. Work on one thing at a time. Always close the door and put on headphones to avoid distractions. Open the window. You need fresh air to stay focused. Take breaks. Give your brain time to rest and re-energize. Eat your lunch away from your work area. Drink plenty of water. The recommended amount of water vary according to person. Check out this article by Mayo clinic. Focus on the task at hand and not the time. Be flexible. Rigidity kills productivity. Get plenty of rest. Exercise regularly. Eat healthy Laugh. It relieves stress and boost productivity. Learn new things. Read regularly Write regularly Have a vision of where you want to be. It motivates you to work harder. Plan ahead Check your email less often. Listen to podcasts. Have a budget Create long term and short term goals. Keep track of your goals.","title":"Highlights"},{"location":"Highlights/Readwise/Articles/Programming%20Productivity%20-%20Wikipedia/","text":"Programming Productivity - Wikipedia \u00b6 Metadata \u00b6 Author: Full Title: Programming Productivity - Wikipedia Category: #Type/Highlights/Article URL: https://en.wikipedia.org/wiki/Programming_productivity Highlights \u00b6 Productivity = Output / Input The 20 factors whose quantified impacts on software projects have been determined from historical data are the following: Programming language used Program size The experience of programmers and design personnel The novelty of requirements The complexity of the program and its data The use of structured programming methods Program class or the distribution method Program type of the application area Tools and environmental conditions Enhancing existing programs or systems Maintaining existing programs or systems Reusing existing modules and standard designs Program generators Fourth-generation languages Geographic separation of development locations Defect potentials and removal methods (Existing) Documentation Prototyping before main development begins Project teams and organization structures Morale and compensation of staff","title":"Programming Productivity - Wikipedia"},{"location":"Highlights/Readwise/Articles/Programming%20Productivity%20-%20Wikipedia/#programming-productivity-wikipedia","text":"","title":"Programming Productivity - Wikipedia"},{"location":"Highlights/Readwise/Articles/Programming%20Productivity%20-%20Wikipedia/#metadata","text":"Author: Full Title: Programming Productivity - Wikipedia Category: #Type/Highlights/Article URL: https://en.wikipedia.org/wiki/Programming_productivity","title":"Metadata"},{"location":"Highlights/Readwise/Articles/Programming%20Productivity%20-%20Wikipedia/#highlights","text":"Productivity = Output / Input The 20 factors whose quantified impacts on software projects have been determined from historical data are the following: Programming language used Program size The experience of programmers and design personnel The novelty of requirements The complexity of the program and its data The use of structured programming methods Program class or the distribution method Program type of the application area Tools and environmental conditions Enhancing existing programs or systems Maintaining existing programs or systems Reusing existing modules and standard designs Program generators Fourth-generation languages Geographic separation of development locations Defect potentials and removal methods (Existing) Documentation Prototyping before main development begins Project teams and organization structures Morale and compensation of staff","title":"Highlights"},{"location":"Highlights/Readwise/Articles/Project%20Based%20Learning/","text":"Project Based Learning \u00b6 Metadata \u00b6 Author: [[Nikita Voloboev]] Full Title: Project Based Learning Category: #Type/Highlights/Article URL: https://medium.com/@nikitavoloboev/project-based-learning-e511641869ca Highlights \u00b6 I find it very inefficient, trying to learn things, \u2018for the sake of learning\u2019. You try to consume information with no goal in sight of how you will use it. I have adopted a very serious mind set switch to project based learning. Since I am a big fan of mind maps, I have a personal mind map just for that. A mind map named projects that I can very quickly open with just a single keystroke. In there I outline the projects that I want to work on and complete. Projects is the root mind map of all that I do and everything stems from it in my world. For example \u2018learning\u2019 and \u2018books that I want to read\u2019 are two projects that I love doing and allocate quite a lot of my time towards but they are still projects and since they are projects, I have to manage them smartly and allocate the correct time for these projects given the context of what I want to achieve and do. Learning how much time to allocate and more importantly to which projects to allocate this time is an art. An art that pays very high dividends if you do it right. I am still learning this art.","title":"Project Based Learning"},{"location":"Highlights/Readwise/Articles/Project%20Based%20Learning/#project-based-learning","text":"","title":"Project Based Learning"},{"location":"Highlights/Readwise/Articles/Project%20Based%20Learning/#metadata","text":"Author: [[Nikita Voloboev]] Full Title: Project Based Learning Category: #Type/Highlights/Article URL: https://medium.com/@nikitavoloboev/project-based-learning-e511641869ca","title":"Metadata"},{"location":"Highlights/Readwise/Articles/Project%20Based%20Learning/#highlights","text":"I find it very inefficient, trying to learn things, \u2018for the sake of learning\u2019. You try to consume information with no goal in sight of how you will use it. I have adopted a very serious mind set switch to project based learning. Since I am a big fan of mind maps, I have a personal mind map just for that. A mind map named projects that I can very quickly open with just a single keystroke. In there I outline the projects that I want to work on and complete. Projects is the root mind map of all that I do and everything stems from it in my world. For example \u2018learning\u2019 and \u2018books that I want to read\u2019 are two projects that I love doing and allocate quite a lot of my time towards but they are still projects and since they are projects, I have to manage them smartly and allocate the correct time for these projects given the context of what I want to achieve and do. Learning how much time to allocate and more importantly to which projects to allocate this time is an art. An art that pays very high dividends if you do it right. I am still learning this art.","title":"Highlights"},{"location":"Highlights/Readwise/Articles/Project%20Management%20With%20RStudio%20and%20Github%20%20Yujun%20Zhou%27s%20Website/","text":"Project Management With RStudio and Github | Yujun Zhou's Website \u00b6 Metadata \u00b6 Author: [[Yujun Zhou]] Full Title: Project Management With RStudio and Github | Yujun Zhou's Website Category: #Type/Highlights/Article URL: https://www.yujun.org/post/project/ Highlights \u00b6 Build good practices instead of taking the time to clean things up You will NEVER find the time! There will always more urgent and vital tasks than the tedious organizing files, commenting code. Tags: [[favorite]] Progress management It is important always to keep the big picture in mind. Even if you are doing tedious data cleaning work, you are one step closer towards something great. To form the big picture and keep track on your progress, you should start a project by planning as the project lead. I discussed the importance of preparing in enhancing productivity and preventing procrastination in my other post . To start, define the project objectives with measurable outcomes and specific deadlines. For example, a presentable paper draft in a year. To prepare for that, a conference presentation in six months, a paper proposal in one month, etc. After defining the big objectives, break them down into smaller tasks and even smaller jobs, then add them to your daily to-do lists. One great tool to keep track of progress and prioritize between projects is the Gantt Chart. Below is an excel template. Separate raw and processed data Separate cleaning and analysis scripts So that you don\u2019t have to go through the cleaning process again and start directly from your processed data.","title":"Project Management With RStudio and Github | Yujun Zhou's Website"},{"location":"Highlights/Readwise/Articles/Project%20Management%20With%20RStudio%20and%20Github%20%20Yujun%20Zhou%27s%20Website/#project-management-with-rstudio-and-github-yujun-zhous-website","text":"","title":"Project Management With RStudio and Github | Yujun Zhou's Website"},{"location":"Highlights/Readwise/Articles/Project%20Management%20With%20RStudio%20and%20Github%20%20Yujun%20Zhou%27s%20Website/#metadata","text":"Author: [[Yujun Zhou]] Full Title: Project Management With RStudio and Github | Yujun Zhou's Website Category: #Type/Highlights/Article URL: https://www.yujun.org/post/project/","title":"Metadata"},{"location":"Highlights/Readwise/Articles/Project%20Management%20With%20RStudio%20and%20Github%20%20Yujun%20Zhou%27s%20Website/#highlights","text":"Build good practices instead of taking the time to clean things up You will NEVER find the time! There will always more urgent and vital tasks than the tedious organizing files, commenting code. Tags: [[favorite]] Progress management It is important always to keep the big picture in mind. Even if you are doing tedious data cleaning work, you are one step closer towards something great. To form the big picture and keep track on your progress, you should start a project by planning as the project lead. I discussed the importance of preparing in enhancing productivity and preventing procrastination in my other post . To start, define the project objectives with measurable outcomes and specific deadlines. For example, a presentable paper draft in a year. To prepare for that, a conference presentation in six months, a paper proposal in one month, etc. After defining the big objectives, break them down into smaller tasks and even smaller jobs, then add them to your daily to-do lists. One great tool to keep track of progress and prioritize between projects is the Gantt Chart. Below is an excel template. Separate raw and processed data Separate cleaning and analysis scripts So that you don\u2019t have to go through the cleaning process again and start directly from your processed data.","title":"Highlights"},{"location":"Highlights/Readwise/Articles/Projmgr%20Managing%20the%20Human%20Dependencies%20of%20Your%20Projects%20%20Emily%20Riederer/","text":"Projmgr: Managing the Human Dependencies of Your Projects | Emily Riederer \u00b6 Metadata \u00b6 Author: [[Emily Riederer]] Full Title: Projmgr: Managing the Human Dependencies of Your Projects | Emily Riederer Category: #Type/Highlights/Article URL: https://emilyriederer.netlify.app/post/projmgr/ Highlights \u00b6 Making a Plan The first step to project management is making a plan and getting buy-in from all relevant stakeholders, including target piees of work to deliver on different timelines. projmgr allows you to easily articulate a project plan in human-readable YAML and then seamlessly bulk-upload a set of GitHub issues and milestones.","title":"Projmgr: Managing the Human Dependencies of Your Projects | Emily Riederer"},{"location":"Highlights/Readwise/Articles/Projmgr%20Managing%20the%20Human%20Dependencies%20of%20Your%20Projects%20%20Emily%20Riederer/#projmgr-managing-the-human-dependencies-of-your-projects-emily-riederer","text":"","title":"Projmgr: Managing the Human Dependencies of Your Projects | Emily Riederer"},{"location":"Highlights/Readwise/Articles/Projmgr%20Managing%20the%20Human%20Dependencies%20of%20Your%20Projects%20%20Emily%20Riederer/#metadata","text":"Author: [[Emily Riederer]] Full Title: Projmgr: Managing the Human Dependencies of Your Projects | Emily Riederer Category: #Type/Highlights/Article URL: https://emilyriederer.netlify.app/post/projmgr/","title":"Metadata"},{"location":"Highlights/Readwise/Articles/Projmgr%20Managing%20the%20Human%20Dependencies%20of%20Your%20Projects%20%20Emily%20Riederer/#highlights","text":"Making a Plan The first step to project management is making a plan and getting buy-in from all relevant stakeholders, including target piees of work to deliver on different timelines. projmgr allows you to easily articulate a project plan in human-readable YAML and then seamlessly bulk-upload a set of GitHub issues and milestones.","title":"Highlights"},{"location":"Highlights/Readwise/Articles/R%20%26%20RStudio%20%E2%80%93%20The%20Interoperability%20Environment%20for%20Data%20Analytics/","text":"R & RStudio \u2013 The Interoperability Environment for Data Analytics \u00b6 Metadata \u00b6 Author: Full Title: R & RStudio \u2013 The Interoperability Environment for Data Analytics Category: #Type/Highlights/Article URL: https://www.r-bloggers.com/r-rstudio-the-interoperability-environment-for-data-analytics/ Highlights \u00b6 On the RStudio Developer Blog we\u2019ve recently written a series on interoperability and R, including why enterprises should embrace workflows that are open to diverse toolsets. The ecosystem around R has striven to strike the right balance between a domain specific environment optimized for data science workflows and output, and a general programming environment. For example CRAN, Bioconductor, rOpenSci, and GitHub provide collections of packages written with data science in mind, which extend core R\u2019s functionality, letting you tap into (and share) statistical methods and field-specific tools \u2014 when and only when you need them. RStudio \u2013 design philosophy and development priorities Our mission at RStudio is to create free and open source software for data science, scientific research, and technical communication. R is a wonderful environment for data analysis, and we\u2019ve focused on making it easier to use. We do this through our IDE and open sources packages, such as the tidyverse. We also do this by making data science easier to learn through RStudio Cloud and our support for data science education. And we help make R easier to manage and scale out across an organization through our our professional products, supporting best practices for data science in the enterprise through our solutions team.","title":"R & RStudio \u2013 The Interoperability Environment for Data Analytics"},{"location":"Highlights/Readwise/Articles/R%20%26%20RStudio%20%E2%80%93%20The%20Interoperability%20Environment%20for%20Data%20Analytics/#r-rstudio-the-interoperability-environment-for-data-analytics","text":"","title":"R &amp; RStudio \u2013 The Interoperability Environment for Data Analytics"},{"location":"Highlights/Readwise/Articles/R%20%26%20RStudio%20%E2%80%93%20The%20Interoperability%20Environment%20for%20Data%20Analytics/#metadata","text":"Author: Full Title: R & RStudio \u2013 The Interoperability Environment for Data Analytics Category: #Type/Highlights/Article URL: https://www.r-bloggers.com/r-rstudio-the-interoperability-environment-for-data-analytics/","title":"Metadata"},{"location":"Highlights/Readwise/Articles/R%20%26%20RStudio%20%E2%80%93%20The%20Interoperability%20Environment%20for%20Data%20Analytics/#highlights","text":"On the RStudio Developer Blog we\u2019ve recently written a series on interoperability and R, including why enterprises should embrace workflows that are open to diverse toolsets. The ecosystem around R has striven to strike the right balance between a domain specific environment optimized for data science workflows and output, and a general programming environment. For example CRAN, Bioconductor, rOpenSci, and GitHub provide collections of packages written with data science in mind, which extend core R\u2019s functionality, letting you tap into (and share) statistical methods and field-specific tools \u2014 when and only when you need them. RStudio \u2013 design philosophy and development priorities Our mission at RStudio is to create free and open source software for data science, scientific research, and technical communication. R is a wonderful environment for data analysis, and we\u2019ve focused on making it easier to use. We do this through our IDE and open sources packages, such as the tidyverse. We also do this by making data science easier to learn through RStudio Cloud and our support for data science education. And we help make R easier to manage and scale out across an organization through our our professional products, supporting best practices for data science in the enterprise through our solutions team.","title":"Highlights"},{"location":"Highlights/Readwise/Articles/R%20Tips%20and%20Tricks%20%E2%80%93%20Utilities/","text":"R Tips and Tricks \u2013 Utilities \u00b6 Metadata \u00b6 Author: Full Title: R Tips and Tricks \u2013 Utilities Category: #Type/Highlights/Article URL: https://eranraviv.com/r-tips-tricks-utilities/ Highlights \u00b6 Methods are functions which are specifically written for particular class Have a look at the sloop package, maintained by Hadley Wickham (that alone is a reason). Use the function s3_methods_generic to get a nice table with some relevant information: Percent formatting In the code snippet above I used the scales package\u2019s percent function, which spares the formatting annoyance. Get your object\u2019s size When I load a data, I often want to know how big is it. There is the basic object.size function but it\u2019s ummm, ugly. Use the aptly named object_size function from the pryr package. Memory management Use the gc function; gc stands for garbage collection. It frees up memory by, well, collecting garbage objects from your workspace and trashing them. I at least, need to do this often. heta function I use the head and tail functions a lot, often as the first thing I do. Just eyeballing few lines helps to get a feel for the data. Default printing parameter for those function is 6 (lines) which is too much in my opinion. heta <- function(x, k= 3){ cat(\"Head -- \",\"\\n\", \"~~~~~\", \"\\n\") print(head(x, k)) cat(\"Tail -- \",\"\\n\", \"~~~~~\", \"\\n\") print(tail(x, k)) } Sound the alarm If you stretch your model enough, you will have to wait until computation is done with. It is nice to get a sound notification for when you can continue working. A terrific way to do that is using the beepr package.","title":"R Tips and Tricks \u2013 Utilities"},{"location":"Highlights/Readwise/Articles/R%20Tips%20and%20Tricks%20%E2%80%93%20Utilities/#r-tips-and-tricks-utilities","text":"","title":"R Tips and Tricks \u2013 Utilities"},{"location":"Highlights/Readwise/Articles/R%20Tips%20and%20Tricks%20%E2%80%93%20Utilities/#metadata","text":"Author: Full Title: R Tips and Tricks \u2013 Utilities Category: #Type/Highlights/Article URL: https://eranraviv.com/r-tips-tricks-utilities/","title":"Metadata"},{"location":"Highlights/Readwise/Articles/R%20Tips%20and%20Tricks%20%E2%80%93%20Utilities/#highlights","text":"Methods are functions which are specifically written for particular class Have a look at the sloop package, maintained by Hadley Wickham (that alone is a reason). Use the function s3_methods_generic to get a nice table with some relevant information: Percent formatting In the code snippet above I used the scales package\u2019s percent function, which spares the formatting annoyance. Get your object\u2019s size When I load a data, I often want to know how big is it. There is the basic object.size function but it\u2019s ummm, ugly. Use the aptly named object_size function from the pryr package. Memory management Use the gc function; gc stands for garbage collection. It frees up memory by, well, collecting garbage objects from your workspace and trashing them. I at least, need to do this often. heta function I use the head and tail functions a lot, often as the first thing I do. Just eyeballing few lines helps to get a feel for the data. Default printing parameter for those function is 6 (lines) which is too much in my opinion. heta <- function(x, k= 3){ cat(\"Head -- \",\"\\n\", \"~~~~~\", \"\\n\") print(head(x, k)) cat(\"Tail -- \",\"\\n\", \"~~~~~\", \"\\n\") print(tail(x, k)) } Sound the alarm If you stretch your model enough, you will have to wait until computation is done with. It is nice to get a sound notification for when you can continue working. A terrific way to do that is using the beepr package.","title":"Highlights"},{"location":"Highlights/Readwise/Articles/R%20Treasures%20modifyList%28%29%20%E2%80%BA%20Petermeissner/","text":"R Treasures: modifyList() \u203a Petermeissner \u00b6 Metadata \u00b6 Author: [[Peter Meissner]] Full Title: R Treasures: modifyList() \u203a Petermeissner Category: #Type/Highlights/Article URL: https://petermeissner.de/blog/2020/09/03/utils-treasures-moifyList/ Highlights \u00b6 Sometimes, more precisely quite often, the standard libraries hold treasures that we are not aware of. Maybe they have obscure names, have been reinvented and shadowed by the newest cutting edge convenience package or one simply does not expect those treasures to be there so they are hidden in plain sight. The modifyList() function is one of those treasures. Its part of the {utils} packages so it ships with every R version ready to use without further dependencies. The function offers a way to merge two lists into one similar to c(), the concatenate function. But other than with using c() items with the same keys will be updated instead of simply added. Thus modifyList() presents the answer to the question: In R, how to update items of a list with the values of another list? Caveats There are some caveats to note however. First, let us have a look at the function documentation: A modified version of x, with the modifications determined as follows (here, list elements are identified by their names). Elements in val which are missing from x are added to x. For elements that are common to both but are not both lists themselves, the component in x is replaced (or possibly deleted, depending on the value of keep.null) by the one in val. For common elements that are in both lists, x[[name]] is replaced by modifyList(x[[name]], val[[name]]) The documentation basically describes the behavior we have already observed in our example but it also mentions the keep.null parameter that per default is set to FALSE. This parameter emulates the behavior we are used to when deleting items from a list by assigning NULL to that item, e.g.: list['key_1'] <- NULL. If we want to update a list with another list that has embedded NULL values that we want to keep, the deletion of those items might come unexpected (on the other hand the value of a none existent item will always be NULL anyways, e.g.: list()$a, list()[['a']]). The second caveat is that modifyList() will not update unnamed items of a list. This makes sense if you think of modifyList() as unnamed having no name to match values upon. Again, its mostly just a good idea to know, that\u2019s that the way the function works. Use Cases Now what is this useful for? I myself often use modifyList() when I want to pass around whole sets of information which (1) which have a default set of values and (2) might get extended in the future. That way I can always add options while older versions of options will still work by extending the default options and later on updating the default values with those values I specifiacally want to differ from the defaults. Note: This is tight. Can have say a default config represented in a list + a more specific config and utilize modifyList to overwrite default with specific scenario.","title":"R Treasures: modifyList() \u203a Petermeissner"},{"location":"Highlights/Readwise/Articles/R%20Treasures%20modifyList%28%29%20%E2%80%BA%20Petermeissner/#r-treasures-modifylist-petermeissner","text":"","title":"R Treasures: modifyList() \u203a Petermeissner"},{"location":"Highlights/Readwise/Articles/R%20Treasures%20modifyList%28%29%20%E2%80%BA%20Petermeissner/#metadata","text":"Author: [[Peter Meissner]] Full Title: R Treasures: modifyList() \u203a Petermeissner Category: #Type/Highlights/Article URL: https://petermeissner.de/blog/2020/09/03/utils-treasures-moifyList/","title":"Metadata"},{"location":"Highlights/Readwise/Articles/R%20Treasures%20modifyList%28%29%20%E2%80%BA%20Petermeissner/#highlights","text":"Sometimes, more precisely quite often, the standard libraries hold treasures that we are not aware of. Maybe they have obscure names, have been reinvented and shadowed by the newest cutting edge convenience package or one simply does not expect those treasures to be there so they are hidden in plain sight. The modifyList() function is one of those treasures. Its part of the {utils} packages so it ships with every R version ready to use without further dependencies. The function offers a way to merge two lists into one similar to c(), the concatenate function. But other than with using c() items with the same keys will be updated instead of simply added. Thus modifyList() presents the answer to the question: In R, how to update items of a list with the values of another list? Caveats There are some caveats to note however. First, let us have a look at the function documentation: A modified version of x, with the modifications determined as follows (here, list elements are identified by their names). Elements in val which are missing from x are added to x. For elements that are common to both but are not both lists themselves, the component in x is replaced (or possibly deleted, depending on the value of keep.null) by the one in val. For common elements that are in both lists, x[[name]] is replaced by modifyList(x[[name]], val[[name]]) The documentation basically describes the behavior we have already observed in our example but it also mentions the keep.null parameter that per default is set to FALSE. This parameter emulates the behavior we are used to when deleting items from a list by assigning NULL to that item, e.g.: list['key_1'] <- NULL. If we want to update a list with another list that has embedded NULL values that we want to keep, the deletion of those items might come unexpected (on the other hand the value of a none existent item will always be NULL anyways, e.g.: list()$a, list()[['a']]). The second caveat is that modifyList() will not update unnamed items of a list. This makes sense if you think of modifyList() as unnamed having no name to match values upon. Again, its mostly just a good idea to know, that\u2019s that the way the function works. Use Cases Now what is this useful for? I myself often use modifyList() when I want to pass around whole sets of information which (1) which have a default set of values and (2) might get extended in the future. That way I can always add options while older versions of options will still work by extending the default options and later on updating the default values with those values I specifiacally want to differ from the defaults. Note: This is tight. Can have say a default config represented in a list + a more specific config and utilize modifyList to overwrite default with specific scenario.","title":"Highlights"},{"location":"Highlights/Readwise/Articles/R%20at%20Scale%20on%20the%20Google%20Cloud%20Platform/","text":"R at Scale on the Google Cloud Platform \u00b6 Metadata \u00b6 Author: [[Mark Edmondson]] Full Title: R at Scale on the Google Cloud Platform Category: #Type/Highlights/Article URL: https://code.markedmondson.me/r-at-scale-on-google-cloud-platform/ Highlights \u00b6 This post covers my current thinking on what I consider the optimal way to work with R on the Google Cloud Platform (GCP). It seems this has developed into my niche, and I get questions about it so would like to be able to point to a URL. ( View Highlight ) Both R and the GCP rapidly evolve, so this will have to be updated I guess at some point in the future, but even as things stand now you can do some wonderful things with R, and can multiply those out to potentially billions of users with GCP. The only limit is ambition. ( View Highlight ) The common scenarios I want to cover are: Scaling a standalone R script Scaling Shiny apps and R APIs ( View Highlight ) It always starts with Docker Docker is the main mechanism to achieve scale on GCP. ( View Highlight ) It encapsulates code into a unit of computation that can be built on top of, one which doesn\u2019t care which language or system that code needs to run. This means that a lot of the techniques described are not specific to R - you could have components running Python, Java, Rust, Node, whatever is easiest for you. I do think that Docker\u2019s strengths seems to cover R\u2019s weaknesses particularly well, but having Docker skills is going to be useful whatever you are doing, and is a good investment in the future. There is growing support for Docker in R, of which I\u2019ll mention: The Rocker Project is where it all flows from, providing useful R Docker images containerit is helpful to quickly generate a Dockerfile from an R script or project steveadore is a Docker client written in R ( View Highlight ) Within GCP containers are fundamental and once you have a Docker image, you will be able to use many of GCP\u2019s services both now and in the future, as well as on other cloud providers. The tools I use day to day with my Docker workflows are: Build Triggers - I never build Docker on my machine, I always commit the Dockerfiles to GitHub and then this service builds them for me. Container registry - Once built images are available from here. They are by default private, and over time I\u2019ve built a library of useful images. Some of these are available publically at this repo (you do need to login though) The above are used within googleComputeEngineR\u2019s templates, so as RStudio, Shiny and R APIs can be launched quickly. This basically constitutes a continuous delivery (CD) basis, so to deploy new code I need but push to GitHub and my script, Shiny app, R API or model are updated automatically. ( View Highlight ) Scaling R applications ( View Highlight ) First - Dockerise your app ( View Highlight ) The Dockerfiles are relatively simple, thanks to rocker/shiny: ( View Highlight ) FROM rocker/shiny MAINTAINER Mark Edmondson (r@sunholo.com) # install R package dependencies RUN apt-get update && apt-get install -y \\ libssl-dev \\ ## clean up && apt-get clean \\ && rm -rf /var/lib/apt/lists/ \\ && rm -rf /tmp/downloaded_packages/ /tmp/ .rds ## Install packages from CRAN needed for your app RUN install2.r --error \\ -r 'http://cran.rstudio.com' \\ googleAuthR \\ && Rscript -e \"devtools::install_github(c('MarkEdmondson1234/googleAnalyticsR')\" \\ ## clean up && rm -rf /tmp/downloaded_packages/ /tmp/ .rds ## assume shiny app is in build folder /shiny COPY ./shiny/ /srv/shiny-server/myapp/ ( View Highlight ) When deploying Shiny apps, the biggest stumbling block I have found is that Shiny requires websocket support. Check your solution first to see if it can deal with websockets before deployment. For instance, App Engine Flexible or Cloud Functions would be a better serverless solutions if websockets were supported, as it would give you a more managed service. ( View Highlight ) If deploying an R API via plumber, the Dockerfile is largely the same thanks to trestletech/plumber taking care of the defaults for you, including serving on port 8000. ( View Highlight ) R APIs on Cloud Run ( View Highlight ) Now Google has released Cloud Run! And with that release, I modify my original recommendation for R APIs to be deployed on Kubernetes, to instead use Cloud Run. Why? Its so simple. After you have made your Docker container for your plumber API, you simply point the Cloud run service at the image and you are done. Hosting, scaling and the rest is all taken care of. ( View Highlight ) The only trick to it really is to allow Cloud Run to set the port plumber listens on, which is done via this Dockerfile: ( View Highlight ) FROM trestletech/plumber LABEL maintainer=\"mark\" COPY [\".\", \"./\"] ENTRYPOINT [\"R\", \"-e\", \"pr <- plumber::plumb(commandArgs()[4]); pr$run(host='0.0.0.0', port=as.numeric(Sys.getenv('PORT')))\"] CMD [\"api.R\"] Once the Cloud Build has finished it will give you a Docker URI such as gcr.io/mark-edmondson-gde/cloudrunr:939c04dfe80a1eefed28f9dd59aae5dff5dc1e1e. ( View Highlight ) Create a new service, name it something cool Put the Docker URI into the Cloud Run field. Select public endpoint, and limit concurrency to what your app is configured to handle per instance (I chose 8) And thats it. A deployed R API. ( View Highlight ) R apps on Kubernetes ( View Highlight ) Kubernetes will take care of deploying the right number of pods to scale your traffic, and starts to make savings once you are past 3 VMs. You may already have a kubernetes cluster deployed for other things at your company (its getting very popular with IT teams), in which case you can hitch onto an existing cluster. Its mainly due to the need of websockets that I recommend going straight to Kubernetes once you have need for more than a couple of Shiny apps, rather than say App Engine flexible. I have an example of deploying plumber on App Engine flexible that you may favour, but these days since I have a kubernetes cluster already deployed for other things I find it easier to deploy it all on that. ( View Highlight ) Once setup, deployment is quick via the CLI: kubectl run shiny1 --image gcr.io/gcer-public/shiny-googleauthrdemo:latest --port 3838 kubectl expose deployment shiny1 --target-port=3838 --type=NodePort The trickest thing is the ingress, but once grokked works by uploading some boilerplate yaml: apiVersion: extensions/v1beta1 kind: Ingress metadata: name: r-ingress-nginx annotations: kubernetes.io/ingress.class: nginx nginx.ingress.kubernetes.io/rewrite-target: / nginx.ingress.kubernetes.io/ssl-redirect: \"false\" spec: rules: http: paths: path: /gar/ # app deployed to /gar/shiny/ backend: serviceName: shiny1 servicePort: 3838 ( View Highlight ) With the introduction of Cloud Run, the options get simpler for R APIs, although in all circumstances the first suggestion is \u201cUse Docker!\u201d. Cloud Run is a level of service built on top of Kubernetes, but if you can\u2019t use that then \u201cUse Kubernetes!\u201d is the next byword for scale. In all cases, having that Docker container gives you the flexibility to swap once the new services comes along. Cloud Functions and App Engine in particular are the next step in managed services, and perhaps in the future you won\u2019t even need to create the Docker image - just upload your code, it builds the Dockerfile for you then deploys. ( View Highlight )","title":"R at Scale on the Google Cloud Platform"},{"location":"Highlights/Readwise/Articles/R%20at%20Scale%20on%20the%20Google%20Cloud%20Platform/#r-at-scale-on-the-google-cloud-platform","text":"","title":"R at Scale on the Google Cloud Platform"},{"location":"Highlights/Readwise/Articles/R%20at%20Scale%20on%20the%20Google%20Cloud%20Platform/#metadata","text":"Author: [[Mark Edmondson]] Full Title: R at Scale on the Google Cloud Platform Category: #Type/Highlights/Article URL: https://code.markedmondson.me/r-at-scale-on-google-cloud-platform/","title":"Metadata"},{"location":"Highlights/Readwise/Articles/R%20at%20Scale%20on%20the%20Google%20Cloud%20Platform/#highlights","text":"This post covers my current thinking on what I consider the optimal way to work with R on the Google Cloud Platform (GCP). It seems this has developed into my niche, and I get questions about it so would like to be able to point to a URL. ( View Highlight ) Both R and the GCP rapidly evolve, so this will have to be updated I guess at some point in the future, but even as things stand now you can do some wonderful things with R, and can multiply those out to potentially billions of users with GCP. The only limit is ambition. ( View Highlight ) The common scenarios I want to cover are: Scaling a standalone R script Scaling Shiny apps and R APIs ( View Highlight ) It always starts with Docker Docker is the main mechanism to achieve scale on GCP. ( View Highlight ) It encapsulates code into a unit of computation that can be built on top of, one which doesn\u2019t care which language or system that code needs to run. This means that a lot of the techniques described are not specific to R - you could have components running Python, Java, Rust, Node, whatever is easiest for you. I do think that Docker\u2019s strengths seems to cover R\u2019s weaknesses particularly well, but having Docker skills is going to be useful whatever you are doing, and is a good investment in the future. There is growing support for Docker in R, of which I\u2019ll mention: The Rocker Project is where it all flows from, providing useful R Docker images containerit is helpful to quickly generate a Dockerfile from an R script or project steveadore is a Docker client written in R ( View Highlight ) Within GCP containers are fundamental and once you have a Docker image, you will be able to use many of GCP\u2019s services both now and in the future, as well as on other cloud providers. The tools I use day to day with my Docker workflows are: Build Triggers - I never build Docker on my machine, I always commit the Dockerfiles to GitHub and then this service builds them for me. Container registry - Once built images are available from here. They are by default private, and over time I\u2019ve built a library of useful images. Some of these are available publically at this repo (you do need to login though) The above are used within googleComputeEngineR\u2019s templates, so as RStudio, Shiny and R APIs can be launched quickly. This basically constitutes a continuous delivery (CD) basis, so to deploy new code I need but push to GitHub and my script, Shiny app, R API or model are updated automatically. ( View Highlight ) Scaling R applications ( View Highlight ) First - Dockerise your app ( View Highlight ) The Dockerfiles are relatively simple, thanks to rocker/shiny: ( View Highlight ) FROM rocker/shiny MAINTAINER Mark Edmondson (r@sunholo.com) # install R package dependencies RUN apt-get update && apt-get install -y \\ libssl-dev \\ ## clean up && apt-get clean \\ && rm -rf /var/lib/apt/lists/ \\ && rm -rf /tmp/downloaded_packages/ /tmp/ .rds ## Install packages from CRAN needed for your app RUN install2.r --error \\ -r 'http://cran.rstudio.com' \\ googleAuthR \\ && Rscript -e \"devtools::install_github(c('MarkEdmondson1234/googleAnalyticsR')\" \\ ## clean up && rm -rf /tmp/downloaded_packages/ /tmp/ .rds ## assume shiny app is in build folder /shiny COPY ./shiny/ /srv/shiny-server/myapp/ ( View Highlight ) When deploying Shiny apps, the biggest stumbling block I have found is that Shiny requires websocket support. Check your solution first to see if it can deal with websockets before deployment. For instance, App Engine Flexible or Cloud Functions would be a better serverless solutions if websockets were supported, as it would give you a more managed service. ( View Highlight ) If deploying an R API via plumber, the Dockerfile is largely the same thanks to trestletech/plumber taking care of the defaults for you, including serving on port 8000. ( View Highlight ) R APIs on Cloud Run ( View Highlight ) Now Google has released Cloud Run! And with that release, I modify my original recommendation for R APIs to be deployed on Kubernetes, to instead use Cloud Run. Why? Its so simple. After you have made your Docker container for your plumber API, you simply point the Cloud run service at the image and you are done. Hosting, scaling and the rest is all taken care of. ( View Highlight ) The only trick to it really is to allow Cloud Run to set the port plumber listens on, which is done via this Dockerfile: ( View Highlight ) FROM trestletech/plumber LABEL maintainer=\"mark\" COPY [\".\", \"./\"] ENTRYPOINT [\"R\", \"-e\", \"pr <- plumber::plumb(commandArgs()[4]); pr$run(host='0.0.0.0', port=as.numeric(Sys.getenv('PORT')))\"] CMD [\"api.R\"] Once the Cloud Build has finished it will give you a Docker URI such as gcr.io/mark-edmondson-gde/cloudrunr:939c04dfe80a1eefed28f9dd59aae5dff5dc1e1e. ( View Highlight ) Create a new service, name it something cool Put the Docker URI into the Cloud Run field. Select public endpoint, and limit concurrency to what your app is configured to handle per instance (I chose 8) And thats it. A deployed R API. ( View Highlight ) R apps on Kubernetes ( View Highlight ) Kubernetes will take care of deploying the right number of pods to scale your traffic, and starts to make savings once you are past 3 VMs. You may already have a kubernetes cluster deployed for other things at your company (its getting very popular with IT teams), in which case you can hitch onto an existing cluster. Its mainly due to the need of websockets that I recommend going straight to Kubernetes once you have need for more than a couple of Shiny apps, rather than say App Engine flexible. I have an example of deploying plumber on App Engine flexible that you may favour, but these days since I have a kubernetes cluster already deployed for other things I find it easier to deploy it all on that. ( View Highlight ) Once setup, deployment is quick via the CLI: kubectl run shiny1 --image gcr.io/gcer-public/shiny-googleauthrdemo:latest --port 3838 kubectl expose deployment shiny1 --target-port=3838 --type=NodePort The trickest thing is the ingress, but once grokked works by uploading some boilerplate yaml: apiVersion: extensions/v1beta1 kind: Ingress metadata: name: r-ingress-nginx annotations: kubernetes.io/ingress.class: nginx nginx.ingress.kubernetes.io/rewrite-target: / nginx.ingress.kubernetes.io/ssl-redirect: \"false\" spec: rules: http: paths: path: /gar/ # app deployed to /gar/shiny/ backend: serviceName: shiny1 servicePort: 3838 ( View Highlight ) With the introduction of Cloud Run, the options get simpler for R APIs, although in all circumstances the first suggestion is \u201cUse Docker!\u201d. Cloud Run is a level of service built on top of Kubernetes, but if you can\u2019t use that then \u201cUse Kubernetes!\u201d is the next byword for scale. In all cases, having that Docker container gives you the flexibility to swap once the new services comes along. Cloud Functions and App Engine in particular are the next step in managed services, and perhaps in the future you won\u2019t even need to create the Docker image - just upload your code, it builds the Dockerfile for you then deploys. ( View Highlight )","title":"Highlights"},{"location":"Highlights/Readwise/Articles/R%20in%20Production%2C%20DevOps%2C%20and%20the%20Importance%20of%20Empathetic%20Witnesses/","text":"R in Production, DevOps, and the Importance of Empathetic Witnesses \u00b6 Metadata \u00b6 Author: [[Kelly O'Briant]] Full Title: R in Production, DevOps, and the Importance of Empathetic Witnesses Category: #Type/Highlights/Article URL: https://medium.com/p/78ecf4430e36 Highlights \u00b6 I\u2019ve found that most R users don\u2019t spend a lot of time thinking about DevOps. But the more I learn about it as a philosophy and discipline, the more I\u2019m compelled to socialize it. So I want to introduce you to \u201cThe First Ideal\u201d, and try to convince you that all these concepts may be handy when navigating your R in Production goals. I\u2019ve found that most R users don\u2019t spend a lot of time thinking about DevOps. But the more I learn about it as a philosophy and discipline, the more I\u2019m compelled to socialize it. So I want to introduce you to \u201cThe First Ideal\u201d, and try to convince you that all these concepts may be handy when navigating your R in Production goals.","title":"R in Production, DevOps, and the Importance of Empathetic Witnesses"},{"location":"Highlights/Readwise/Articles/R%20in%20Production%2C%20DevOps%2C%20and%20the%20Importance%20of%20Empathetic%20Witnesses/#r-in-production-devops-and-the-importance-of-empathetic-witnesses","text":"","title":"R in Production, DevOps, and the Importance of Empathetic Witnesses"},{"location":"Highlights/Readwise/Articles/R%20in%20Production%2C%20DevOps%2C%20and%20the%20Importance%20of%20Empathetic%20Witnesses/#metadata","text":"Author: [[Kelly O'Briant]] Full Title: R in Production, DevOps, and the Importance of Empathetic Witnesses Category: #Type/Highlights/Article URL: https://medium.com/p/78ecf4430e36","title":"Metadata"},{"location":"Highlights/Readwise/Articles/R%20in%20Production%2C%20DevOps%2C%20and%20the%20Importance%20of%20Empathetic%20Witnesses/#highlights","text":"I\u2019ve found that most R users don\u2019t spend a lot of time thinking about DevOps. But the more I learn about it as a philosophy and discipline, the more I\u2019m compelled to socialize it. So I want to introduce you to \u201cThe First Ideal\u201d, and try to convince you that all these concepts may be handy when navigating your R in Production goals. I\u2019ve found that most R users don\u2019t spend a lot of time thinking about DevOps. But the more I learn about it as a philosophy and discipline, the more I\u2019m compelled to socialize it. So I want to introduce you to \u201cThe First Ideal\u201d, and try to convince you that all these concepts may be handy when navigating your R in Production goals.","title":"Highlights"},{"location":"Highlights/Readwise/Articles/RDatascience%20-%20Career%20Tips%20From%20an%20Old%20Timer/","text":"R/Datascience - Career Tips From an Old Timer \u00b6 Metadata \u00b6 Author: Full Title: R/Datascience - Career Tips From an Old Timer Category: #Type/Highlights/Article URL: https://www.reddit.com/r/datascience/comments/howrzj/career_tips_from_an_old_timer/?utm_content=body&utm_medium=post_embed&utm_name=aa1cc514de924595ae1b3b72e5a846f8&utm_source=embedly&utm_term=howrzj Highlights \u00b6 Impact not method: Unless you\u2019re working in the research arm of tech companies (MSR, Google Brain, FAIR), or in Academia, your boss\u2019s boss likely doesn\u2019t care about what method you used to solve the problem. Just what the impact to the company was. So stop focusing on methodology and start focusing on how you\u2019re helping the business. Remember that you\u2019ve not been hired to write SQL and Python, you\u2019ve been hired to help do one of: (a) make more money for the company, (b) cut costs for the company - which also includes helping others in the company be more effective by building internal tools. over time, the expectation is for you to become more and more independent. Which would require you to constantly learn new things and adapt to change. Keep in mind that this doesn't mean you should stop paying attention to using the right methodology for the right problem, but that when you're telling your story, focus on the impact. Getting promoted: Unless you\u2019re exceptionally talented or exceptionally lucky, promotions won\u2019t happen without asking for it. Have open and honest conversations with your manager about the expectations for the next level and chart a course to get there. Ask for feedback and continuously improve. As you grow in your career, especially past the Senior level, your ability to influence your peers, and leaders matters a lot more than your technical competency. So identify areas where you can exercise that muscle. It\u2019s very different muscle from being a technically capable data scientist. A mistake I see a lot of young Data Scientists making is relying on the idea that more work will get you promoted. It won\u2019t, at least after a point. What it takes to go from L3 (entry level) DS to L4 (the very next level) is very different from what it takes to get to L5 (Senior) and above. Find a mentor, then mentor others: If your company has many Data Scientists, find someone who you look up to and ask them to be your mentor. Go prepared to your mentorship sessions, ask pointed questions and ask for their advice. More importantly follow-up with them and show how their advice helped you. Once you're comfortable enough, pass on the favor to those who come after you. If you're the only DS in a company - which I've seen cases of, find industry mentors. I've seen many forums for you to find DS mentors. If nothing works, reach out to people in the industry on LinkedIn asking for mentorship. More than half the time, they will accept. Strike a balance between technical skills and soft skills: As I mentioned above, the further you get in your career, the less important your technical ability becomes. That doesn\u2019t mean you can afford not to know the basics, it just means you\u2019re valued more for your ability to influence your peers, stakeholders, and leaders than your ability to write beautiful code. So learning after a point has to span both the (almost orthogonal) axes of technical ability and soft skills. You cannot afford to be lax on learning new techniques because the world around us is changing. I started my job knowing only SQL and SAS. Then my toolkit was SQL, SAS and R. I only picked up Python ~2-3 years ago. I\u2019m sure it\u2019s not gonna end here. Learning is a lifelong endeavor in a field like this. At the same time, I was also learning to be a better negotiator, and a better leader. Focus on quality of life: Remember that I have had over 12 years to do this, and I\u2019m not even half-way into my career. Careers span 30+ years. Learn to take a breather, take vacations, take breaks and disconnect from it all once in a while. An endless rat-race will leave you burned out and unable to focus. It happened to me 5-6 years into my career where I felt overwhelmed everyday. It\u2019s not good for you in the long run. I know this point sounds contradictory to everything I\u2019ve said above about constantly having to learn, but it really isn\u2019t if you put it into a 30+ year time-span. You don\u2019t have to be the best analyst, best machine learning engineer, the best story teller, and the best leader in year 2. You can pick and choose what you want to learn based on your environment and what\u2019s needed immediately. Note: Yup. Thats me 5-6 years in. Don\u2019t gatekeep, don\u2019t look down on others, help those who ask: Nothing bothers me more than seeing young Data Scientists/ML Engineers looking down on Data Analysts, calling them SQL monkeys. A lot of them also look down on people who do sales and marketing.","title":"R/Datascience - Career Tips From an Old Timer"},{"location":"Highlights/Readwise/Articles/RDatascience%20-%20Career%20Tips%20From%20an%20Old%20Timer/#rdatascience-career-tips-from-an-old-timer","text":"","title":"R/Datascience - Career Tips From an Old Timer"},{"location":"Highlights/Readwise/Articles/RDatascience%20-%20Career%20Tips%20From%20an%20Old%20Timer/#metadata","text":"Author: Full Title: R/Datascience - Career Tips From an Old Timer Category: #Type/Highlights/Article URL: https://www.reddit.com/r/datascience/comments/howrzj/career_tips_from_an_old_timer/?utm_content=body&utm_medium=post_embed&utm_name=aa1cc514de924595ae1b3b72e5a846f8&utm_source=embedly&utm_term=howrzj","title":"Metadata"},{"location":"Highlights/Readwise/Articles/RDatascience%20-%20Career%20Tips%20From%20an%20Old%20Timer/#highlights","text":"Impact not method: Unless you\u2019re working in the research arm of tech companies (MSR, Google Brain, FAIR), or in Academia, your boss\u2019s boss likely doesn\u2019t care about what method you used to solve the problem. Just what the impact to the company was. So stop focusing on methodology and start focusing on how you\u2019re helping the business. Remember that you\u2019ve not been hired to write SQL and Python, you\u2019ve been hired to help do one of: (a) make more money for the company, (b) cut costs for the company - which also includes helping others in the company be more effective by building internal tools. over time, the expectation is for you to become more and more independent. Which would require you to constantly learn new things and adapt to change. Keep in mind that this doesn't mean you should stop paying attention to using the right methodology for the right problem, but that when you're telling your story, focus on the impact. Getting promoted: Unless you\u2019re exceptionally talented or exceptionally lucky, promotions won\u2019t happen without asking for it. Have open and honest conversations with your manager about the expectations for the next level and chart a course to get there. Ask for feedback and continuously improve. As you grow in your career, especially past the Senior level, your ability to influence your peers, and leaders matters a lot more than your technical competency. So identify areas where you can exercise that muscle. It\u2019s very different muscle from being a technically capable data scientist. A mistake I see a lot of young Data Scientists making is relying on the idea that more work will get you promoted. It won\u2019t, at least after a point. What it takes to go from L3 (entry level) DS to L4 (the very next level) is very different from what it takes to get to L5 (Senior) and above. Find a mentor, then mentor others: If your company has many Data Scientists, find someone who you look up to and ask them to be your mentor. Go prepared to your mentorship sessions, ask pointed questions and ask for their advice. More importantly follow-up with them and show how their advice helped you. Once you're comfortable enough, pass on the favor to those who come after you. If you're the only DS in a company - which I've seen cases of, find industry mentors. I've seen many forums for you to find DS mentors. If nothing works, reach out to people in the industry on LinkedIn asking for mentorship. More than half the time, they will accept. Strike a balance between technical skills and soft skills: As I mentioned above, the further you get in your career, the less important your technical ability becomes. That doesn\u2019t mean you can afford not to know the basics, it just means you\u2019re valued more for your ability to influence your peers, stakeholders, and leaders than your ability to write beautiful code. So learning after a point has to span both the (almost orthogonal) axes of technical ability and soft skills. You cannot afford to be lax on learning new techniques because the world around us is changing. I started my job knowing only SQL and SAS. Then my toolkit was SQL, SAS and R. I only picked up Python ~2-3 years ago. I\u2019m sure it\u2019s not gonna end here. Learning is a lifelong endeavor in a field like this. At the same time, I was also learning to be a better negotiator, and a better leader. Focus on quality of life: Remember that I have had over 12 years to do this, and I\u2019m not even half-way into my career. Careers span 30+ years. Learn to take a breather, take vacations, take breaks and disconnect from it all once in a while. An endless rat-race will leave you burned out and unable to focus. It happened to me 5-6 years into my career where I felt overwhelmed everyday. It\u2019s not good for you in the long run. I know this point sounds contradictory to everything I\u2019ve said above about constantly having to learn, but it really isn\u2019t if you put it into a 30+ year time-span. You don\u2019t have to be the best analyst, best machine learning engineer, the best story teller, and the best leader in year 2. You can pick and choose what you want to learn based on your environment and what\u2019s needed immediately. Note: Yup. Thats me 5-6 years in. Don\u2019t gatekeep, don\u2019t look down on others, help those who ask: Nothing bothers me more than seeing young Data Scientists/ML Engineers looking down on Data Analysts, calling them SQL monkeys. A lot of them also look down on people who do sales and marketing.","title":"Highlights"},{"location":"Highlights/Readwise/Articles/RESTful%20API%20Design%20%E2%80%94%20Step%20by%20Step%20Guide/","text":"RESTful API Design \u2014 Step by Step Guide \u00b6 Metadata \u00b6 Author: [[Tanmay Deshpande]] Full Title: RESTful API Design \u2014 Step by Step Guide Category: #Type/Highlights/Article URL: https://medium.com/p/2f2c9f9fcdbf Highlights \u00b6 All teams will henceforth expose their data and functionality through service interfaces Teams must communicate with each other through these interfaces There will be no other form of interprocess communication allowed \u2014 no direct linking, no direct reads of another team\u2019s data store, no shared-memory model, no back doors whatsoever. The only communication allowed is via service interface calls over the network.","title":"RESTful API Design \u2014 Step by Step Guide"},{"location":"Highlights/Readwise/Articles/RESTful%20API%20Design%20%E2%80%94%20Step%20by%20Step%20Guide/#restful-api-design-step-by-step-guide","text":"","title":"RESTful API Design \u2014 Step by Step Guide"},{"location":"Highlights/Readwise/Articles/RESTful%20API%20Design%20%E2%80%94%20Step%20by%20Step%20Guide/#metadata","text":"Author: [[Tanmay Deshpande]] Full Title: RESTful API Design \u2014 Step by Step Guide Category: #Type/Highlights/Article URL: https://medium.com/p/2f2c9f9fcdbf","title":"Metadata"},{"location":"Highlights/Readwise/Articles/RESTful%20API%20Design%20%E2%80%94%20Step%20by%20Step%20Guide/#highlights","text":"All teams will henceforth expose their data and functionality through service interfaces Teams must communicate with each other through these interfaces There will be no other form of interprocess communication allowed \u2014 no direct linking, no direct reads of another team\u2019s data store, no shared-memory model, no back doors whatsoever. The only communication allowed is via service interface calls over the network.","title":"Highlights"},{"location":"Highlights/Readwise/Articles/RShiny%20Authentication%20With%20Polished%20on%20AWS%20Kubernetes/","text":"RShiny Authentication With Polished on AWS Kubernetes \u00b6 Metadata \u00b6 Author: [[Jillian Rowe]] Full Title: RShiny Authentication With Polished on AWS Kubernetes Category: #Type/Highlights/Article URL: https://medium.com/p/358baff9a61c Highlights \u00b6 This same AWS IAM user must have permission to create an EKS cluster. You can use this role, or a user with administrator privileges. If you want to deploy to AWS you\u2019ll need an AWS IAM User, and that user\u2019s API keys. For more information see the AWS docs.","title":"RShiny Authentication With Polished on AWS Kubernetes"},{"location":"Highlights/Readwise/Articles/RShiny%20Authentication%20With%20Polished%20on%20AWS%20Kubernetes/#rshiny-authentication-with-polished-on-aws-kubernetes","text":"","title":"RShiny Authentication With Polished on AWS Kubernetes"},{"location":"Highlights/Readwise/Articles/RShiny%20Authentication%20With%20Polished%20on%20AWS%20Kubernetes/#metadata","text":"Author: [[Jillian Rowe]] Full Title: RShiny Authentication With Polished on AWS Kubernetes Category: #Type/Highlights/Article URL: https://medium.com/p/358baff9a61c","title":"Metadata"},{"location":"Highlights/Readwise/Articles/RShiny%20Authentication%20With%20Polished%20on%20AWS%20Kubernetes/#highlights","text":"This same AWS IAM user must have permission to create an EKS cluster. You can use this role, or a user with administrator privileges. If you want to deploy to AWS you\u2019ll need an AWS IAM User, and that user\u2019s API keys. For more information see the AWS docs.","title":"Highlights"},{"location":"Highlights/Readwise/Articles/RStudio%20%20Open%20Source%20%26%20Professional%20Software%20for%20Data%20Science%20Teams/","text":"RStudio | Open Source & Professional Software for Data Science Teams \u00b6 Metadata \u00b6 Author: Full Title: RStudio | Open Source & Professional Software for Data Science Teams Category: #Type/Highlights/Article URL: https://rstudio.com/ Highlights \u00b6 Open Source RStudio Desktop RStudio Server Shiny Server R Packages Hosted Services RStudio Cloud shinyapps.io Additional Websites Analyse & Explore Tidyverse ggplot2 dplyr tidyr purrr Communicate & Interact Shiny rmarkdown flexdashboard Connect & Integrate Professional Drivers Databases Environments Sparklyr Plumber Reticulate Ursa Labs Model & Predict Tensorflow Tidymodels Spark MLib","title":"RStudio | Open Source & Professional Software for Data Science Teams"},{"location":"Highlights/Readwise/Articles/RStudio%20%20Open%20Source%20%26%20Professional%20Software%20for%20Data%20Science%20Teams/#rstudio-open-source-professional-software-for-data-science-teams","text":"","title":"RStudio | Open Source &amp; Professional Software for Data Science Teams"},{"location":"Highlights/Readwise/Articles/RStudio%20%20Open%20Source%20%26%20Professional%20Software%20for%20Data%20Science%20Teams/#metadata","text":"Author: Full Title: RStudio | Open Source & Professional Software for Data Science Teams Category: #Type/Highlights/Article URL: https://rstudio.com/","title":"Metadata"},{"location":"Highlights/Readwise/Articles/RStudio%20%20Open%20Source%20%26%20Professional%20Software%20for%20Data%20Science%20Teams/#highlights","text":"Open Source RStudio Desktop RStudio Server Shiny Server R Packages Hosted Services RStudio Cloud shinyapps.io Additional Websites Analyse & Explore Tidyverse ggplot2 dplyr tidyr purrr Communicate & Interact Shiny rmarkdown flexdashboard Connect & Integrate Professional Drivers Databases Environments Sparklyr Plumber Reticulate Ursa Labs Model & Predict Tensorflow Tidymodels Spark MLib","title":"Highlights"},{"location":"Highlights/Readwise/Articles/Rd%20Formatting/","text":"Rd Formatting \u00b6 Metadata \u00b6 Author: [[roxygen2.r-lib.org]] Full Title: Rd Formatting Category: #Type/Highlights/Article URL: https://roxygen2.r-lib.org/articles/rd-formatting.html Highlights \u00b6 To turn on markdown for the whole package, insert this entry into the DESCRIPTION file of the package: Roxygen: list(markdown = TRUE) ( View Highlight ) Alternatively, you can use the @md tag to turn on markdown support for a single documentation chunk. This is a good option to write any new documentation for existing packages in markdown. There is also a new @noMd tag. Use this if you turned on markdown parsing globally, but need to avoid it for a single chunk. This tag is handy if the markdown parser interferes with more complex Rd syntax. Here is an example roxygen chunk that uses markdown. #' Use roxygen to document a package #' #' This function is a wrapper for the [roxygen2::roxygenize()] function from #' the roxygen2 package. See the documentation and vignettes of #' that package to learn how to use roxygen. #' #' @param pkg package description, can be path or package name. See #' [as.package()] for more information #' @param clean,reload Deprecated. #' @inheritParams roxygen2::roxygenise #' @seealso [roxygen2::roxygenize()], browseVignettes(\"roxygen2\") #' @export #' @md ( View Highlight ) The R code is evaluated in a new environment that is the child of the package environment of the package you are documenting. This means that you can call (internal or exported) functions of the package. packageName() will also report the name of the package: ( View Highlight ) Links To other documentation: \\code{\\link{function}}: function in this package \\code{\\link[MASS]{abbey}}: function in another package \\link[=dest]{name}: link to dest, but show name \\code{\\link[MASS:abbey]{name}}: link to function in another package, but show name. \\linkS4class{abc}: link to an S4 class To the web: \\url{http://rstudio.com} \\href{http://rstudio.com}{Rstudio} \\email{hadley@@rstudio.com} (note the doubled @) ( View Highlight )","title":"Rd Formatting"},{"location":"Highlights/Readwise/Articles/Rd%20Formatting/#rd-formatting","text":"","title":"Rd Formatting"},{"location":"Highlights/Readwise/Articles/Rd%20Formatting/#metadata","text":"Author: [[roxygen2.r-lib.org]] Full Title: Rd Formatting Category: #Type/Highlights/Article URL: https://roxygen2.r-lib.org/articles/rd-formatting.html","title":"Metadata"},{"location":"Highlights/Readwise/Articles/Rd%20Formatting/#highlights","text":"To turn on markdown for the whole package, insert this entry into the DESCRIPTION file of the package: Roxygen: list(markdown = TRUE) ( View Highlight ) Alternatively, you can use the @md tag to turn on markdown support for a single documentation chunk. This is a good option to write any new documentation for existing packages in markdown. There is also a new @noMd tag. Use this if you turned on markdown parsing globally, but need to avoid it for a single chunk. This tag is handy if the markdown parser interferes with more complex Rd syntax. Here is an example roxygen chunk that uses markdown. #' Use roxygen to document a package #' #' This function is a wrapper for the [roxygen2::roxygenize()] function from #' the roxygen2 package. See the documentation and vignettes of #' that package to learn how to use roxygen. #' #' @param pkg package description, can be path or package name. See #' [as.package()] for more information #' @param clean,reload Deprecated. #' @inheritParams roxygen2::roxygenise #' @seealso [roxygen2::roxygenize()], browseVignettes(\"roxygen2\") #' @export #' @md ( View Highlight ) The R code is evaluated in a new environment that is the child of the package environment of the package you are documenting. This means that you can call (internal or exported) functions of the package. packageName() will also report the name of the package: ( View Highlight ) Links To other documentation: \\code{\\link{function}}: function in this package \\code{\\link[MASS]{abbey}}: function in another package \\link[=dest]{name}: link to dest, but show name \\code{\\link[MASS:abbey]{name}}: link to function in another package, but show name. \\linkS4class{abc}: link to an S4 class To the web: \\url{http://rstudio.com} \\href{http://rstudio.com}{Rstudio} \\email{hadley@@rstudio.com} (note the doubled @) ( View Highlight )","title":"Highlights"},{"location":"Highlights/Readwise/Articles/Re-Exporting%20the%20Magrittr%20Pipe%20Operator%20%E2%80%BA%20Petermeissner/","text":"Re-Exporting the Magrittr Pipe Operator \u203a Petermeissner \u00b6 Metadata \u00b6 Author: [[Peter Meissner]] Full Title: Re-Exporting the Magrittr Pipe Operator \u203a Petermeissner Category: #Type/Highlights/Article URL: https://petermeissner.de/blog/2018/04/27/re-exporting-the-pipe/ Highlights \u00b6 Magrittr\u2019s pipe operator is one of those newish R-universe features that I really want to have around whenever I put some lines into an R-console. This is even TRUE when writing a package. So the first thing I do is put magrittr into the DESCRIPTION file and add an __imports.R file to the packages R/-directory with the following lines: Note: R/_imports.R #' re-export magrittr pipe operator #' #' @importFrom magrittr %>% #' @name %>% #' @rdname pipe #' @export NULL","title":"Re-Exporting the Magrittr Pipe Operator \u203a Petermeissner"},{"location":"Highlights/Readwise/Articles/Re-Exporting%20the%20Magrittr%20Pipe%20Operator%20%E2%80%BA%20Petermeissner/#re-exporting-the-magrittr-pipe-operator-petermeissner","text":"","title":"Re-Exporting the Magrittr Pipe Operator \u203a Petermeissner"},{"location":"Highlights/Readwise/Articles/Re-Exporting%20the%20Magrittr%20Pipe%20Operator%20%E2%80%BA%20Petermeissner/#metadata","text":"Author: [[Peter Meissner]] Full Title: Re-Exporting the Magrittr Pipe Operator \u203a Petermeissner Category: #Type/Highlights/Article URL: https://petermeissner.de/blog/2018/04/27/re-exporting-the-pipe/","title":"Metadata"},{"location":"Highlights/Readwise/Articles/Re-Exporting%20the%20Magrittr%20Pipe%20Operator%20%E2%80%BA%20Petermeissner/#highlights","text":"Magrittr\u2019s pipe operator is one of those newish R-universe features that I really want to have around whenever I put some lines into an R-console. This is even TRUE when writing a package. So the first thing I do is put magrittr into the DESCRIPTION file and add an __imports.R file to the packages R/-directory with the following lines: Note: R/_imports.R #' re-export magrittr pipe operator #' #' @importFrom magrittr %>% #' @name %>% #' @rdname pipe #' @export NULL","title":"Highlights"},{"location":"Highlights/Readwise/Articles/Re-Share%20Vtreat%20Data%20Preparation%20Documentation%20and%20Video%20%E2%80%93%20Win-Vector%20Blog/","text":"Re-Share: Vtreat Data Preparation Documentation and Video \u2013 Win-Vector Blog \u00b6 Metadata \u00b6 Author: Full Title: Re-Share: Vtreat Data Preparation Documentation and Video \u2013 Win-Vector Blog Category: #Type/Highlights/Article URL: http://www.win-vector.com/blog/2020/03/re-share-vtreat-data-preparation-documentation-and-video/ Highlights \u00b6 vtreat is a system for preparing messy real world data for predictive modeling tasks (classification, regression, and so on). In particular it is very good at re-coding high-cardinality string-valued (or categorical) variables for later use.","title":"Re-Share: Vtreat Data Preparation Documentation and Video \u2013 Win-Vector Blog"},{"location":"Highlights/Readwise/Articles/Re-Share%20Vtreat%20Data%20Preparation%20Documentation%20and%20Video%20%E2%80%93%20Win-Vector%20Blog/#re-share-vtreat-data-preparation-documentation-and-video-win-vector-blog","text":"","title":"Re-Share: Vtreat Data Preparation Documentation and Video \u2013 Win-Vector Blog"},{"location":"Highlights/Readwise/Articles/Re-Share%20Vtreat%20Data%20Preparation%20Documentation%20and%20Video%20%E2%80%93%20Win-Vector%20Blog/#metadata","text":"Author: Full Title: Re-Share: Vtreat Data Preparation Documentation and Video \u2013 Win-Vector Blog Category: #Type/Highlights/Article URL: http://www.win-vector.com/blog/2020/03/re-share-vtreat-data-preparation-documentation-and-video/","title":"Metadata"},{"location":"Highlights/Readwise/Articles/Re-Share%20Vtreat%20Data%20Preparation%20Documentation%20and%20Video%20%E2%80%93%20Win-Vector%20Blog/#highlights","text":"vtreat is a system for preparing messy real world data for predictive modeling tasks (classification, regression, and so on). In particular it is very good at re-coding high-cardinality string-valued (or categorical) variables for later use.","title":"Highlights"},{"location":"Highlights/Readwise/Articles/Rebooting%20Your%20Productivity%20System/","text":"Rebooting Your Productivity System \u00b6 Metadata \u00b6 Author: Full Title: Rebooting Your Productivity System Category: #Type/Highlights/Article URL: https://longleafsys.com/rebooting-your-productivity-system/ Highlights \u00b6 The better approach is to step back, take a deep breath, and reboot, just like you do with your PC when it starts acting weird Here\u2019s the reboot routine I use, and that I recommend my colleagues use when they\u2019re feeling overwhelmed or finally coming up for air after a rough week. You\u2019ll need to turn off the world for an hour, but the time always pays off in increased control when you turn it back on again. So let your boss and teammates know that you\u2019re going dark for an hour, or come in early/stay late to get some quiet time. This doesn\u2019t mean you actually do whatever tasks are unearthed, unless they\u2019re shorter than 2 minutes in duration. But you do wrap your brain around what needs doing. Capture the actions you need to take, and file any resource material in the place you\u2019d naturally look for it when it comes time to do it. The most important part of this step is to communicate these decisions. It\u2019s OK to renegotiate ahead of time. What is not OK is to stay silent and just hope they don\u2019t notice when you miss the deadline. That\u2019s a breach of your commitment. And you want to be someone who is trusted to follow through, in all the areas of your life. What condition is your brain in? If you\u2019re fresh and feeling creative, or if you\u2019re brain-dead and exhausted, pick a Next Action that you can be successful with. There\u2019s little point in starting a strategic planning session if your brain is only capable of doing some filing and calling it a day. Urgency and importance. How timely and high-stakes are the Next Actions on your list? If you can\u2019t tell definitively which task is most important, then they\u2019re about equal, so don\u2019t agonize over it. Just pick the oldest one. When you\u2019re done working on that first task, update its Next Action description. Either you\u2019re done and can mark it complete, or there will be a next step. In that case, you\u2019ll relabel it with the very next, physical action you need to take to move it forward Don\u2019t leave it as it was when you started \u2013 that description probably isn\u2019t accurate anymore. The task isn\u2019t \u201cRead about B2B marketing best practices.\u201d You\u2019ve done that, so the task is now, \u201cWrite a B2B marketing plan outline based on the best practices you just read about.\u201d By doing these two things \u2014 keeping your Next Actions up to date and making a daily routine of getting \u201cin\u201d to empty \u2014 you can stay on top of your system most of the time. And when things do go off the rails, and they will, you don\u2019t throw up your hands in defeat. No need for dramatics. Just take a minute, reboot, and then get back to work.","title":"Rebooting Your Productivity System"},{"location":"Highlights/Readwise/Articles/Rebooting%20Your%20Productivity%20System/#rebooting-your-productivity-system","text":"","title":"Rebooting Your Productivity System"},{"location":"Highlights/Readwise/Articles/Rebooting%20Your%20Productivity%20System/#metadata","text":"Author: Full Title: Rebooting Your Productivity System Category: #Type/Highlights/Article URL: https://longleafsys.com/rebooting-your-productivity-system/","title":"Metadata"},{"location":"Highlights/Readwise/Articles/Rebooting%20Your%20Productivity%20System/#highlights","text":"The better approach is to step back, take a deep breath, and reboot, just like you do with your PC when it starts acting weird Here\u2019s the reboot routine I use, and that I recommend my colleagues use when they\u2019re feeling overwhelmed or finally coming up for air after a rough week. You\u2019ll need to turn off the world for an hour, but the time always pays off in increased control when you turn it back on again. So let your boss and teammates know that you\u2019re going dark for an hour, or come in early/stay late to get some quiet time. This doesn\u2019t mean you actually do whatever tasks are unearthed, unless they\u2019re shorter than 2 minutes in duration. But you do wrap your brain around what needs doing. Capture the actions you need to take, and file any resource material in the place you\u2019d naturally look for it when it comes time to do it. The most important part of this step is to communicate these decisions. It\u2019s OK to renegotiate ahead of time. What is not OK is to stay silent and just hope they don\u2019t notice when you miss the deadline. That\u2019s a breach of your commitment. And you want to be someone who is trusted to follow through, in all the areas of your life. What condition is your brain in? If you\u2019re fresh and feeling creative, or if you\u2019re brain-dead and exhausted, pick a Next Action that you can be successful with. There\u2019s little point in starting a strategic planning session if your brain is only capable of doing some filing and calling it a day. Urgency and importance. How timely and high-stakes are the Next Actions on your list? If you can\u2019t tell definitively which task is most important, then they\u2019re about equal, so don\u2019t agonize over it. Just pick the oldest one. When you\u2019re done working on that first task, update its Next Action description. Either you\u2019re done and can mark it complete, or there will be a next step. In that case, you\u2019ll relabel it with the very next, physical action you need to take to move it forward Don\u2019t leave it as it was when you started \u2013 that description probably isn\u2019t accurate anymore. The task isn\u2019t \u201cRead about B2B marketing best practices.\u201d You\u2019ve done that, so the task is now, \u201cWrite a B2B marketing plan outline based on the best practices you just read about.\u201d By doing these two things \u2014 keeping your Next Actions up to date and making a daily routine of getting \u201cin\u201d to empty \u2014 you can stay on top of your system most of the time. And when things do go off the rails, and they will, you don\u2019t throw up your hands in defeat. No need for dramatics. Just take a minute, reboot, and then get back to work.","title":"Highlights"},{"location":"Highlights/Readwise/Articles/Reflect%2C%20Recover%2C%20Reset%20%E2%80%93%20Your%20Life%20Plan%202021/","text":"Reflect, Recover, Reset \u2013 Your Life Plan 2021 \u00b6 Metadata \u00b6 Author: [[Claire Minnis]] Full Title: Reflect, Recover, Reset \u2013 Your Life Plan 2021 Category: #Type/Highlights/Article URL: https://www.mindtools.com/blog/reflect-recover-reset-life-plan-2021/ Highlights \u00b6 Think first about your values and the things that make you truly happy. Have they changed over the past year, or remained exactly the same? Take a moment \u2013 several moments \u2013 and think about the kind of life you want, and why.","title":"Reflect, Recover, Reset \u2013 Your Life Plan 2021"},{"location":"Highlights/Readwise/Articles/Reflect%2C%20Recover%2C%20Reset%20%E2%80%93%20Your%20Life%20Plan%202021/#reflect-recover-reset-your-life-plan-2021","text":"","title":"Reflect, Recover, Reset \u2013 Your Life Plan 2021"},{"location":"Highlights/Readwise/Articles/Reflect%2C%20Recover%2C%20Reset%20%E2%80%93%20Your%20Life%20Plan%202021/#metadata","text":"Author: [[Claire Minnis]] Full Title: Reflect, Recover, Reset \u2013 Your Life Plan 2021 Category: #Type/Highlights/Article URL: https://www.mindtools.com/blog/reflect-recover-reset-life-plan-2021/","title":"Metadata"},{"location":"Highlights/Readwise/Articles/Reflect%2C%20Recover%2C%20Reset%20%E2%80%93%20Your%20Life%20Plan%202021/#highlights","text":"Think first about your values and the things that make you truly happy. Have they changed over the past year, or remained exactly the same? Take a moment \u2013 several moments \u2013 and think about the kind of life you want, and why.","title":"Highlights"},{"location":"Highlights/Readwise/Articles/Robert%20Myles%20McDonnell/","text":"Robert Myles McDonnell \u00b6 Metadata \u00b6 Author: [[robertmylesmcdonnell.com]] Full Title: Robert Myles McDonnell Category: #Type/Highlights/Article URL: http://robertmylesmcdonnell.com Highlights \u00b6 This post details how I use Gatsby.js to blog about R stuff. My site is deployed by Netlify, which builds it after any merges into the master branch repo on GitHub. I use a little tool I wrote called writeMDX to help me out. The workflow is quite simple: write something -> commit, upload to GiHub -> Netlify builds and deploys. This post is about when that 'write something' part is about R and written in RMarkdown. If you're an R user and you have a blog, there's a fair chance you use blogdown. I used to, it's very handy. (I'm not suggesting ditching blogdown btw, I think it's fantastic. If that works for you, great.) What if you want to continue to write about R, use RMarkdown etc., but build your site using something like Gatsby? For a data scientist, that's quite interesting -- it's like a SQL query to get all the MDX files, count them, extract some fields and an excerpt. Pretty cool, eh However, there are some other benefits. First of all, I use VS Code to work on any non-RMarkdown stuff for the site. VS Code for R is not great in my opinion, at least it doesn't compare to RStudio. But for JavaScript, it's fantastic. Secondly, since there is such a ginormous JS/web developer community, there are lots of little tools to help with developing sites. For example, I use Merge Schedule to automatically merge Pull Requests into the master branch of my site (although not particularly a JS-specific tool). This allows me to schedule blog posts, as I simply create a branch, write whatever I'm going to post, and push to the branch on GitHub. Using schedule / - - in the PR description schedules it for merging. I've only been using this for a short while, but it's working well. This helps me to blog when I'm feeling productive and not have to do it when I'm not, so I hope to have a more regular blog schedule now, in terms of when the post appear on the site. Another one is Dependabot, which updates my JS packages for me. (While I'm here, using NPM has highlighted the amazingness of CRAN -- often I've been left with something breaking because of a package -- that doesn't happen often with R. Goooo CRAN! \ud83e\udd73) Thirdly, I use MDX for a flavour of Markdown that allows you to embed React components in the Markdown. This is quite similar to how you can run R code in RMarkdown. Where this gets useful is when you create a D3 chart as a React component. It can then be used whenever you like in your MDX-Markdown posts, by importing it at the top of the post, under the YAML header. I've written about this before, it's a nice way to do such things. my workflow is quite simple: I open up a new RMarkdown document in RStudio; I write whatever I'm going to write; I use writeMDX to write the .Rmd file to .mdx format; I take the .mdx file and put it in the directory I'm using for blog posts and Gatsby renders it as part of the site. What's writeMDX? It's just a little helper I wrote to take RMarkdown and change it to MDX. If you have an RMarkdown document with the following YAML header: title: \"MDXtest\" author: \"Robert McDonnell\" date: \"2/29/2020\" output: html_document featuredImage: \"image/png.png\" writeMDX will change it to: title: \"MDXtest date: \"2020-02-29\" featuredImage: \"images/some_image.png\" There are a couple of things that need to be done differently. For equations, RMarkdown has lovely simple syntax: simply put your equation between $ or $$ and RMarkdown takes care of it. With MDX, I do the following. First, import these components from react-katex: import { InlineMath, BlockMath } from \"react-katex\" InlineMath is like RMarkdown's $ and BlockMath is like $$. Then you just use it as you would use any other React component: Which gives: y_{ij} = \\beta_j\\bf{x_i} - \\alpha_jyij\u200b=\u03b2j\u200bxi\u200b\u2212\u03b1j There are a couple of things that need to be done differently. For equations, RMarkdown has lovely simple syntax: simply put your equation between $ or $$ and RMarkdown takes care of it. With MDX, I do the following. First, import these components from react-katex: import { InlineMath, BlockMath } from \"react-katex\" InlineMath is like RMarkdown's $ and BlockMath is like $$. Then you just use it as you would use any other React component: Which gives: y_{ij} = \\beta_j\\bf{x_i} - \\alpha_jyij\u200b=\u03b2j\u200bxi\u200b\u2212\u03b1j Like I mentioned above, you might need to change the paths to any images, depending on your setup. Images created from code chunks have a specific way of being in organised in RMarkdown. I source images in blog posts from a subfolder named, surprisingly, images/. So if I make something with ggplot2 in a code chunk, this will need to go into images/ so the .mdx will find it. So that's how you can use Gatsby for writing about R-related stuff if you're interested. I haven't written about the actual Gatsby/React/JS side of things and how it was for a data scientist to learn all that, but I might do that in the future.","title":"Robert Myles McDonnell"},{"location":"Highlights/Readwise/Articles/Robert%20Myles%20McDonnell/#robert-myles-mcdonnell","text":"","title":"Robert Myles McDonnell"},{"location":"Highlights/Readwise/Articles/Robert%20Myles%20McDonnell/#metadata","text":"Author: [[robertmylesmcdonnell.com]] Full Title: Robert Myles McDonnell Category: #Type/Highlights/Article URL: http://robertmylesmcdonnell.com","title":"Metadata"},{"location":"Highlights/Readwise/Articles/Robert%20Myles%20McDonnell/#highlights","text":"This post details how I use Gatsby.js to blog about R stuff. My site is deployed by Netlify, which builds it after any merges into the master branch repo on GitHub. I use a little tool I wrote called writeMDX to help me out. The workflow is quite simple: write something -> commit, upload to GiHub -> Netlify builds and deploys. This post is about when that 'write something' part is about R and written in RMarkdown. If you're an R user and you have a blog, there's a fair chance you use blogdown. I used to, it's very handy. (I'm not suggesting ditching blogdown btw, I think it's fantastic. If that works for you, great.) What if you want to continue to write about R, use RMarkdown etc., but build your site using something like Gatsby? For a data scientist, that's quite interesting -- it's like a SQL query to get all the MDX files, count them, extract some fields and an excerpt. Pretty cool, eh However, there are some other benefits. First of all, I use VS Code to work on any non-RMarkdown stuff for the site. VS Code for R is not great in my opinion, at least it doesn't compare to RStudio. But for JavaScript, it's fantastic. Secondly, since there is such a ginormous JS/web developer community, there are lots of little tools to help with developing sites. For example, I use Merge Schedule to automatically merge Pull Requests into the master branch of my site (although not particularly a JS-specific tool). This allows me to schedule blog posts, as I simply create a branch, write whatever I'm going to post, and push to the branch on GitHub. Using schedule / - - in the PR description schedules it for merging. I've only been using this for a short while, but it's working well. This helps me to blog when I'm feeling productive and not have to do it when I'm not, so I hope to have a more regular blog schedule now, in terms of when the post appear on the site. Another one is Dependabot, which updates my JS packages for me. (While I'm here, using NPM has highlighted the amazingness of CRAN -- often I've been left with something breaking because of a package -- that doesn't happen often with R. Goooo CRAN! \ud83e\udd73) Thirdly, I use MDX for a flavour of Markdown that allows you to embed React components in the Markdown. This is quite similar to how you can run R code in RMarkdown. Where this gets useful is when you create a D3 chart as a React component. It can then be used whenever you like in your MDX-Markdown posts, by importing it at the top of the post, under the YAML header. I've written about this before, it's a nice way to do such things. my workflow is quite simple: I open up a new RMarkdown document in RStudio; I write whatever I'm going to write; I use writeMDX to write the .Rmd file to .mdx format; I take the .mdx file and put it in the directory I'm using for blog posts and Gatsby renders it as part of the site. What's writeMDX? It's just a little helper I wrote to take RMarkdown and change it to MDX. If you have an RMarkdown document with the following YAML header: title: \"MDXtest\" author: \"Robert McDonnell\" date: \"2/29/2020\" output: html_document featuredImage: \"image/png.png\" writeMDX will change it to: title: \"MDXtest date: \"2020-02-29\" featuredImage: \"images/some_image.png\" There are a couple of things that need to be done differently. For equations, RMarkdown has lovely simple syntax: simply put your equation between $ or $$ and RMarkdown takes care of it. With MDX, I do the following. First, import these components from react-katex: import { InlineMath, BlockMath } from \"react-katex\" InlineMath is like RMarkdown's $ and BlockMath is like $$. Then you just use it as you would use any other React component: Which gives: y_{ij} = \\beta_j\\bf{x_i} - \\alpha_jyij\u200b=\u03b2j\u200bxi\u200b\u2212\u03b1j There are a couple of things that need to be done differently. For equations, RMarkdown has lovely simple syntax: simply put your equation between $ or $$ and RMarkdown takes care of it. With MDX, I do the following. First, import these components from react-katex: import { InlineMath, BlockMath } from \"react-katex\" InlineMath is like RMarkdown's $ and BlockMath is like $$. Then you just use it as you would use any other React component: Which gives: y_{ij} = \\beta_j\\bf{x_i} - \\alpha_jyij\u200b=\u03b2j\u200bxi\u200b\u2212\u03b1j Like I mentioned above, you might need to change the paths to any images, depending on your setup. Images created from code chunks have a specific way of being in organised in RMarkdown. I source images in blog posts from a subfolder named, surprisingly, images/. So if I make something with ggplot2 in a code chunk, this will need to go into images/ so the .mdx will find it. So that's how you can use Gatsby for writing about R-related stuff if you're interested. I haven't written about the actual Gatsby/React/JS side of things and how it was for a data scientist to learn all that, but I might do that in the future.","title":"Highlights"},{"location":"Highlights/Readwise/Articles/RopenscilabsDataspice%20Create%20Lightweight%20schema.org%20Descriptions%20of%20Datas/","text":"Ropenscilabs/Dataspice: Create Lightweight schema.org Descriptions of Datas \u00b6 Metadata \u00b6 Author: Full Title: Ropenscilabs/Dataspice: Create Lightweight schema.org Descriptions of Datas Category: #Type/Highlights/Article URL: https://github.com/ropenscilabs/dataspice Highlights \u00b6 The goal of dataspice is to make it easier for researchers to create basic, lightweight, and concise metadata files for their datasets by editing the kind of files they\u2019re probably most familiar with: CSVs. These metadata files can then be used to: Make useful information available during analysis. Create a helpful dataset README webpage for your data similar to how pkgdown creates websites for R packages. Produce more complex metadata formats for richer description of your datasets and to aid dataset discovery. Workflow create_spice() # Then fill in template CSV files write_spice() build_site() # Optional Create spice create_spice() creates template metadata spreadsheets in a folder (by default created in the data folder in the current working directory). The template files are: biblio.csv - for title, abstract, spatial and temporal coverage, etc. creators.csv - for data authors attributes.csv - explains each of the variables in the dataset access.csv - for files, file types, and download URLs (if appropriate) Fill in templates The user needs to fill in the details of the four template files. These csv files can be directly modified, or they can be edited using either the associated helper function and/or Shiny app. Helper functions prep_attributes() populates the fileName and variableName columns of the attributes.csv file using the header row of the data files. prep_access() populates the fileName, name and encodingFormat columns of the access.csv file from the files in the folder containing the data. This function assumes that the metadata templates are in a folder called metadata within a data folder. Using purrr::map(), this function can be applied over multiple files to populate the header names data_files %>% purrr::map(~ prep_attributes(.x, attributes_path), attributes_path = attributes_path) Build website build_site() creates a bare-bones index.html file in the repository docs folder with a simple view of the dataset with the metadata and an interactive map. For example, this repository results in this website Contributors This package was developed at rOpenSci\u2019s 2018 unconf by (in alphabetical order): Carl Boettiger Scott Chamberlain Auriel Fournier Kelly Hondula Anna Krystalli Bryce Mecum Ma\u00eblle Salmon Kate Webbink Kara Woo","title":"Ropenscilabs/Dataspice: Create Lightweight schema.org Descriptions of Datas"},{"location":"Highlights/Readwise/Articles/RopenscilabsDataspice%20Create%20Lightweight%20schema.org%20Descriptions%20of%20Datas/#ropenscilabsdataspice-create-lightweight-schemaorg-descriptions-of-datas","text":"","title":"Ropenscilabs/Dataspice: Create Lightweight schema.org Descriptions of Datas"},{"location":"Highlights/Readwise/Articles/RopenscilabsDataspice%20Create%20Lightweight%20schema.org%20Descriptions%20of%20Datas/#metadata","text":"Author: Full Title: Ropenscilabs/Dataspice: Create Lightweight schema.org Descriptions of Datas Category: #Type/Highlights/Article URL: https://github.com/ropenscilabs/dataspice","title":"Metadata"},{"location":"Highlights/Readwise/Articles/RopenscilabsDataspice%20Create%20Lightweight%20schema.org%20Descriptions%20of%20Datas/#highlights","text":"The goal of dataspice is to make it easier for researchers to create basic, lightweight, and concise metadata files for their datasets by editing the kind of files they\u2019re probably most familiar with: CSVs. These metadata files can then be used to: Make useful information available during analysis. Create a helpful dataset README webpage for your data similar to how pkgdown creates websites for R packages. Produce more complex metadata formats for richer description of your datasets and to aid dataset discovery. Workflow create_spice() # Then fill in template CSV files write_spice() build_site() # Optional Create spice create_spice() creates template metadata spreadsheets in a folder (by default created in the data folder in the current working directory). The template files are: biblio.csv - for title, abstract, spatial and temporal coverage, etc. creators.csv - for data authors attributes.csv - explains each of the variables in the dataset access.csv - for files, file types, and download URLs (if appropriate) Fill in templates The user needs to fill in the details of the four template files. These csv files can be directly modified, or they can be edited using either the associated helper function and/or Shiny app. Helper functions prep_attributes() populates the fileName and variableName columns of the attributes.csv file using the header row of the data files. prep_access() populates the fileName, name and encodingFormat columns of the access.csv file from the files in the folder containing the data. This function assumes that the metadata templates are in a folder called metadata within a data folder. Using purrr::map(), this function can be applied over multiple files to populate the header names data_files %>% purrr::map(~ prep_attributes(.x, attributes_path), attributes_path = attributes_path) Build website build_site() creates a bare-bones index.html file in the repository docs folder with a simple view of the dataset with the metadata and an interactive map. For example, this repository results in this website Contributors This package was developed at rOpenSci\u2019s 2018 unconf by (in alphabetical order): Carl Boettiger Scott Chamberlain Auriel Fournier Kelly Hondula Anna Krystalli Bryce Mecum Ma\u00eblle Salmon Kate Webbink Kara Woo","title":"Highlights"},{"location":"Highlights/Readwise/Articles/Rstudio%20-%20Use%20Internal%20Links%20in%20RMarkdown%20HTML%20Output%20-%20Stack%20Overflow/","text":"Rstudio - Use Internal Links in RMarkdown HTML Output - Stack Overflow \u00b6 Metadata \u00b6 Author: Full Title: Rstudio - Use Internal Links in RMarkdown HTML Output - Stack Overflow Category: #Type/Highlights/Article URL: https://stackoverflow.com/questions/39281266/use-internal-links-in-rmarkdown-html-output Highlights \u00b6 Pandoc supports explicit and implicit section references for headers; see the pandoc manual. explicit: you give a custom name to a header ## Test {#test} and later refer to it with a link syntax: see the relevant section . implicit: headers where you don't set a custom name, like ## Test, can still be refered to: See the section called [Test].","title":"Rstudio - Use Internal Links in RMarkdown HTML Output - Stack Overflow"},{"location":"Highlights/Readwise/Articles/Rstudio%20-%20Use%20Internal%20Links%20in%20RMarkdown%20HTML%20Output%20-%20Stack%20Overflow/#rstudio-use-internal-links-in-rmarkdown-html-output-stack-overflow","text":"","title":"Rstudio - Use Internal Links in RMarkdown HTML Output - Stack Overflow"},{"location":"Highlights/Readwise/Articles/Rstudio%20-%20Use%20Internal%20Links%20in%20RMarkdown%20HTML%20Output%20-%20Stack%20Overflow/#metadata","text":"Author: Full Title: Rstudio - Use Internal Links in RMarkdown HTML Output - Stack Overflow Category: #Type/Highlights/Article URL: https://stackoverflow.com/questions/39281266/use-internal-links-in-rmarkdown-html-output","title":"Metadata"},{"location":"Highlights/Readwise/Articles/Rstudio%20-%20Use%20Internal%20Links%20in%20RMarkdown%20HTML%20Output%20-%20Stack%20Overflow/#highlights","text":"Pandoc supports explicit and implicit section references for headers; see the pandoc manual. explicit: you give a custom name to a header ## Test {#test} and later refer to it with a link syntax: see the relevant section . implicit: headers where you don't set a custom name, like ## Test, can still be refered to: See the section called [Test].","title":"Highlights"},{"location":"Highlights/Readwise/Articles/SSH%20Key%20Best%20Practices/","text":"SSH Key Best Practices \u00b6 Metadata \u00b6 Author: [[dev.to]] Full Title: SSH Key Best Practices Category: #Type/Highlights/Article URL: https://dev.to/paulmicheli/ssh-key-best-practices-2cb7 Highlights \u00b6 Ensure SSH Keys Are Associated With a Single Services ( View Highlight ) Tie SSH keys back to an individual services, rather than just a generic key that is associated with multiple services github / acquia /aws etc . This will provide an effective SSH audit trail and more direct oversight. ( View Highlight ) Use a separate key per client you SSH from ( View Highlight ) So don\u2019t copy the private key from your laptop to another laptop for use in parallel. Each client system should have only one key, so in case a key leaks, you know which client system was compromised. If you stop using your old laptop and start using a new one it is naturally another case and then you can copy the key. ( View Highlight ) Adding comments to keys can allow you to organize your keys more easily. The comments are stored in end of the public key file and can be viewed in clear text. For example: cat ~/.ssh/{keyservice}_rsa.pub ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQDG..........qiaWxRUdk0UKU0c5ZqQYHRCw== username@hostname ( View Highlight )","title":"SSH Key Best Practices"},{"location":"Highlights/Readwise/Articles/SSH%20Key%20Best%20Practices/#ssh-key-best-practices","text":"","title":"SSH Key Best Practices"},{"location":"Highlights/Readwise/Articles/SSH%20Key%20Best%20Practices/#metadata","text":"Author: [[dev.to]] Full Title: SSH Key Best Practices Category: #Type/Highlights/Article URL: https://dev.to/paulmicheli/ssh-key-best-practices-2cb7","title":"Metadata"},{"location":"Highlights/Readwise/Articles/SSH%20Key%20Best%20Practices/#highlights","text":"Ensure SSH Keys Are Associated With a Single Services ( View Highlight ) Tie SSH keys back to an individual services, rather than just a generic key that is associated with multiple services github / acquia /aws etc . This will provide an effective SSH audit trail and more direct oversight. ( View Highlight ) Use a separate key per client you SSH from ( View Highlight ) So don\u2019t copy the private key from your laptop to another laptop for use in parallel. Each client system should have only one key, so in case a key leaks, you know which client system was compromised. If you stop using your old laptop and start using a new one it is naturally another case and then you can copy the key. ( View Highlight ) Adding comments to keys can allow you to organize your keys more easily. The comments are stored in end of the public key file and can be viewed in clear text. For example: cat ~/.ssh/{keyservice}_rsa.pub ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQDG..........qiaWxRUdk0UKU0c5ZqQYHRCw== username@hostname ( View Highlight )","title":"Highlights"},{"location":"Highlights/Readwise/Articles/Scaling%20R%20Shiny%20Applications/","text":"Scaling R Shiny Applications: \u00b6 Metadata \u00b6 Author: [[Siva Anne]] Full Title: Scaling R Shiny Applications: Category: #Type/Highlights/Article URL: https://medium.com/p/b32d56b24f03 Highlights \u00b6 R and Shiny are popular tools to analyze data and visualize insights quickly. The single-threaded implementation of open-source R kernel constrains the scalability of R Shiny applications. Scaling R Shiny applications with commercial offerings may incur high licensing costs. The cloud-native implementation offers a cost-efficient solution to scale R Shiny applications. The R Shiny application can be scaled using a cloud-native architecture. Typically the nexts step are: Package the application code, its dependencies, and R Shiny Server for runtime into a Linux Docker image. Tags: [[favorite]] Deploy the containerized application to a Kubernetes cluster and configure to run multiple replica instances. Configure a load balancer service to distribute the incoming requests across the collection of pods","title":"Scaling R Shiny Applications:"},{"location":"Highlights/Readwise/Articles/Scaling%20R%20Shiny%20Applications/#scaling-r-shiny-applications","text":"","title":"Scaling R Shiny Applications:"},{"location":"Highlights/Readwise/Articles/Scaling%20R%20Shiny%20Applications/#metadata","text":"Author: [[Siva Anne]] Full Title: Scaling R Shiny Applications: Category: #Type/Highlights/Article URL: https://medium.com/p/b32d56b24f03","title":"Metadata"},{"location":"Highlights/Readwise/Articles/Scaling%20R%20Shiny%20Applications/#highlights","text":"R and Shiny are popular tools to analyze data and visualize insights quickly. The single-threaded implementation of open-source R kernel constrains the scalability of R Shiny applications. Scaling R Shiny applications with commercial offerings may incur high licensing costs. The cloud-native implementation offers a cost-efficient solution to scale R Shiny applications. The R Shiny application can be scaled using a cloud-native architecture. Typically the nexts step are: Package the application code, its dependencies, and R Shiny Server for runtime into a Linux Docker image. Tags: [[favorite]] Deploy the containerized application to a Kubernetes cluster and configure to run multiple replica instances. Configure a load balancer service to distribute the incoming requests across the collection of pods","title":"Highlights"},{"location":"Highlights/Readwise/Articles/Services%20in%20Systemd%20In-Depth%20Tutorial/","text":"Services in Systemd: In-Depth Tutorial \u00b6 Metadata \u00b6 Author: [[Michael Krasnov]] Full Title: Services in Systemd: In-Depth Tutorial Category: #Type/Highlights/Article URL: https://medium.com/p/7e47c485edbf Highlights \u00b6 systemd is a suite of computer programs aimed to manage and interconnect different parts of a system. It is designed as a replacement for SystemV and LSB-style startup scripts, which have been prevalent since the 1980s. systemd consists of these components: systemd is the glue that holds Linux systems together. systemd is a collection of building blocks, which handle services, processes, logging, network connectivity, and even authentication. In this article, I will show you how to work with services in systemd.","title":"Services in Systemd: In-Depth Tutorial"},{"location":"Highlights/Readwise/Articles/Services%20in%20Systemd%20In-Depth%20Tutorial/#services-in-systemd-in-depth-tutorial","text":"","title":"Services in Systemd: In-Depth Tutorial"},{"location":"Highlights/Readwise/Articles/Services%20in%20Systemd%20In-Depth%20Tutorial/#metadata","text":"Author: [[Michael Krasnov]] Full Title: Services in Systemd: In-Depth Tutorial Category: #Type/Highlights/Article URL: https://medium.com/p/7e47c485edbf","title":"Metadata"},{"location":"Highlights/Readwise/Articles/Services%20in%20Systemd%20In-Depth%20Tutorial/#highlights","text":"systemd is a suite of computer programs aimed to manage and interconnect different parts of a system. It is designed as a replacement for SystemV and LSB-style startup scripts, which have been prevalent since the 1980s. systemd consists of these components: systemd is the glue that holds Linux systems together. systemd is a collection of building blocks, which handle services, processes, logging, network connectivity, and even authentication. In this article, I will show you how to work with services in systemd.","title":"Highlights"},{"location":"Highlights/Readwise/Articles/Seth%20Godin%27s%207-Point%20Guide%20to%20Bootstrap%20Your%20Personal%20Brand%20-%20Personal%20Bran/","text":"Seth Godin's 7-Point Guide to Bootstrap Your Personal Brand - Personal Bran \u00b6 Metadata \u00b6 Author: Full Title: Seth Godin's 7-Point Guide to Bootstrap Your Personal Brand - Personal Bran Category: #Type/Highlights/Article URL: https://www.personalbrandingblog.com/seth-godins-7-point-guide-to-bootstrap-your-personal-brand/ Highlights \u00b6 Stop planning and start doing. Get out there and do it. The more you do, the more you do. Doors will open. Opportunities will appear. Your model will change, your reputation will increase, you will become a magnet for smart people. But none of this will happen if you stay inside and keep planning. Pick something on your list and just do it. Be freakishly persistent. It\u2019s not about what you know or even what you do. Success is about persistence. Set realistic expectations and don\u2019t give up. Never take no for an answer but be respectfully persistent.","title":"Seth Godin's 7-Point Guide to Bootstrap Your Personal Brand - Personal Bran"},{"location":"Highlights/Readwise/Articles/Seth%20Godin%27s%207-Point%20Guide%20to%20Bootstrap%20Your%20Personal%20Brand%20-%20Personal%20Bran/#seth-godins-7-point-guide-to-bootstrap-your-personal-brand-personal-bran","text":"","title":"Seth Godin's 7-Point Guide to Bootstrap Your Personal Brand - Personal Bran"},{"location":"Highlights/Readwise/Articles/Seth%20Godin%27s%207-Point%20Guide%20to%20Bootstrap%20Your%20Personal%20Brand%20-%20Personal%20Bran/#metadata","text":"Author: Full Title: Seth Godin's 7-Point Guide to Bootstrap Your Personal Brand - Personal Bran Category: #Type/Highlights/Article URL: https://www.personalbrandingblog.com/seth-godins-7-point-guide-to-bootstrap-your-personal-brand/","title":"Metadata"},{"location":"Highlights/Readwise/Articles/Seth%20Godin%27s%207-Point%20Guide%20to%20Bootstrap%20Your%20Personal%20Brand%20-%20Personal%20Bran/#highlights","text":"Stop planning and start doing. Get out there and do it. The more you do, the more you do. Doors will open. Opportunities will appear. Your model will change, your reputation will increase, you will become a magnet for smart people. But none of this will happen if you stay inside and keep planning. Pick something on your list and just do it. Be freakishly persistent. It\u2019s not about what you know or even what you do. Success is about persistence. Set realistic expectations and don\u2019t give up. Never take no for an answer but be respectfully persistent.","title":"Highlights"},{"location":"Highlights/Readwise/Articles/Shiny%20Load%20Testing%20and%20Horizontal%20Scaling/","text":"Shiny: Load Testing and Horizontal Scaling \u00b6 Metadata \u00b6 Author: [[Eoda Gmbh]] Full Title: Shiny: Load Testing and Horizontal Scaling Category: #Type/Highlights/Article URL: https://eoda.de/en/wissen/blog/shiny-load-testing-und-horizontale-skalierung Highlights \u00b6 We use the R package shinyloadtest provided by RStudio and the associated Java application shinycannon as load testing tools. The functionality of the tools can be explained by the figure above: The package shinyloadtest offers the possibility to open a shiny application and record a user session of any length. The recorded session can then be used for load testing by providing a link to the shinycannon application. A fixed number of users (so called \u201eworkers\u201c) is specified, who try to execute the recorded session on the server as often as possible within a selected time period. Finally, a report can be generated from the collected data of the load test, which will be discussed in the next paragraph.","title":"Shiny: Load Testing and Horizontal Scaling"},{"location":"Highlights/Readwise/Articles/Shiny%20Load%20Testing%20and%20Horizontal%20Scaling/#shiny-load-testing-and-horizontal-scaling","text":"","title":"Shiny: Load Testing and Horizontal Scaling"},{"location":"Highlights/Readwise/Articles/Shiny%20Load%20Testing%20and%20Horizontal%20Scaling/#metadata","text":"Author: [[Eoda Gmbh]] Full Title: Shiny: Load Testing and Horizontal Scaling Category: #Type/Highlights/Article URL: https://eoda.de/en/wissen/blog/shiny-load-testing-und-horizontale-skalierung","title":"Metadata"},{"location":"Highlights/Readwise/Articles/Shiny%20Load%20Testing%20and%20Horizontal%20Scaling/#highlights","text":"We use the R package shinyloadtest provided by RStudio and the associated Java application shinycannon as load testing tools. The functionality of the tools can be explained by the figure above: The package shinyloadtest offers the possibility to open a shiny application and record a user session of any length. The recorded session can then be used for load testing by providing a link to the shinycannon application. A fixed number of users (so called \u201eworkers\u201c) is specified, who try to execute the recorded session on the server as often as possible within a selected time period. Finally, a report can be generated from the collected data of the load test, which will be discussed in the next paragraph.","title":"Highlights"},{"location":"Highlights/Readwise/Articles/Shiny%20on%20Google%20Cloud%20Run%20-%20Scale-To-Zero%20R%20Web%20Apps/","text":"Shiny on Google Cloud Run - Scale-To-Zero R Web Apps \u00b6 Metadata \u00b6 Author: [[Mark Edmondson]] Full Title: Shiny on Google Cloud Run - Scale-To-Zero R Web Apps Category: #Type/Highlights/Article URL: https://code.markedmondson.me/shiny-cloudrun/ Highlights \u00b6 Cloud Run is a container-as-a-service which lets you deploy Docker containers to the web without needing to worry about the infrastructure. One of its most attractive features is the scaling, as you pay zero when your app has no visits, but as demand increases it can flexibly serve up your app to billions of users. ( View Highlight ) I favour Cloud Run over Kubernetes clusters, since its simpler to deploy and maintain apps, and you don\u2019t need to pay at least $100 a month for a Kubernetes cluster. ( View Highlight ) Why Not Shiny on Cloud Run ( View Highlight ) The limitations that affect Shiny are around support for websockets and the fact that Shiny is a stateful service, whereas Cloud Run is meant for stateless services. This means that for Cloud Run each HTTP request should not depend on previous HTTP requests, or is stateless. This is the case for an API, but Shiny is inherently a session based system: a user\u2019s past actions affect the current Shiny state. If a subsequent request to Shiny is directed to a different Shiny app than the one the user is in then we have problems. ( View Highlight ) As a newly launched service, for a long while Cloud Run did not support websockets. That support is now enabled in some limited fashion, and so with a little configuration you can have a Shiny app running. Thanks to randy3k the limitations above where navigated in the following ways: ( View Highlight ) Limit the number of instances to 1 - this means there is only one instance to route requests too Disable some websocket protocols to only leave those that work with Cloud Run - namely disable_protocols websocket xdr-streaming xhr-streaming iframe-eventsource iframe-htmlfile xdr-polling iframe-xhr-polling; ( View Highlight ) The above means that your Shiny app is limited: the number of concurrent requests you can have to one container in Cloud Run is 80 connections. This means you lose the \u201cscale-to-a-billion\u201d feature, as on concurrent request 81 no container will be available to serve it. It also means the app won\u2019t autoscale as the normal Cloud Run setups would - for normal applications, Cloud Run allows 1000 containers with up to 80 requests each e.g. 80,000 concurrent requests. Having only one container means that you need to worry about the footprint of your Shiny app. Whereas if autoscaling was available, high CPU/RAM load would trigger another container, as we will have only one container the max limit may be 80 but the real limit will be how much traffic your Shiny app can handle, which depends on how much CPU/RAM your Shiny app uses. Also remember as R is single-threaded, all users will be waiting to use a single R process - see this nice article by Appsilon for an overview on scaling shiny. This then is much like a traditional Shiny server running on say googleComputeEngineR ( View Highlight ) However, the above still leaves some use cases where Shiny on Cloud Run is useful: If your peak traffic is below 80 concurrent users e.g. 80 people browsing at the same time And your app load on CPU/RAM is small enough to support your expected amount of concurrent users. For APIs the above limitations would be a problem as they can be queried thousands of times an hour, but since Shiny is usually a dashboard option for a select group of users, I think this leaves a lot of room for Shiny on Cloud Run being viable, plus you also get the killer feature of scaling to 0 in the downtime between user sessions, which gives it the advantage over other solutions such as running your own Shiny server. ( View Highlight ) Another big plus for me is that as its running on Google infrastructure, this means OAuth2 workflows are automatically on the accepted list of domains leading to setup for OAuth2 buttons using say googleAuthR::googleAuth_js as simpler and not needing to validate a domain. If your Shiny app expects big peaks of traffic however, or is a big heavy app in terms of resources, then you are probably best looking at other options. For me, this is keeping the existing Shiny deployments running on Google Kubernetes Engine. ( View Highlight ) client.id and GCP setup ( View Highlight ) The client.json was a web client json from my project: {\"web\":{\"client_id\":\"10XXX\",\"project_id\":\"XXXX\",\"auth_uri\":\"https://accounts.google.com/o/oauth2/auth\",\"token_uri\":\"https://accounts.google.com/o/oauth2/token\",\"auth_provider_x509_cert_url\":\"https://www.googleapis.com/oauth2/v1/certs\",\"client_secret\":\"XXXXX\",\"redirect_uris\":[\"http://localhost\"],\"javascript_origins\":[\"https://www.example.com\",\"http://localhost:1221\"]}} You need to add the domain of where the Cloud Run is running in the JavaScript origins within the GCP console, that you get after deploying the app. (GCP console > APIs & Services > Credentials > Click on the Web Client ID you are using > Add URL to Authorised JavaScript origins). ( View Highlight ) shiny-customized.config This is the configuration file for Shiny that will overwrite the default one - its main purpose is turning off the websocket functionality that is not supported on Cloud Run disable_protocols websocket xdr-streaming xhr-streaming iframe-eventsource iframe-htmlfile xdr-polling iframe-xhr-polling; run_as shiny; server { listen 8080; location / { site_dir /srv/shiny-server; log_dir /var/log/shiny-server; directory_index off; } } ( View Highlight )","title":"Shiny on Google Cloud Run - Scale-To-Zero R Web Apps"},{"location":"Highlights/Readwise/Articles/Shiny%20on%20Google%20Cloud%20Run%20-%20Scale-To-Zero%20R%20Web%20Apps/#shiny-on-google-cloud-run-scale-to-zero-r-web-apps","text":"","title":"Shiny on Google Cloud Run - Scale-To-Zero R Web Apps"},{"location":"Highlights/Readwise/Articles/Shiny%20on%20Google%20Cloud%20Run%20-%20Scale-To-Zero%20R%20Web%20Apps/#metadata","text":"Author: [[Mark Edmondson]] Full Title: Shiny on Google Cloud Run - Scale-To-Zero R Web Apps Category: #Type/Highlights/Article URL: https://code.markedmondson.me/shiny-cloudrun/","title":"Metadata"},{"location":"Highlights/Readwise/Articles/Shiny%20on%20Google%20Cloud%20Run%20-%20Scale-To-Zero%20R%20Web%20Apps/#highlights","text":"Cloud Run is a container-as-a-service which lets you deploy Docker containers to the web without needing to worry about the infrastructure. One of its most attractive features is the scaling, as you pay zero when your app has no visits, but as demand increases it can flexibly serve up your app to billions of users. ( View Highlight ) I favour Cloud Run over Kubernetes clusters, since its simpler to deploy and maintain apps, and you don\u2019t need to pay at least $100 a month for a Kubernetes cluster. ( View Highlight ) Why Not Shiny on Cloud Run ( View Highlight ) The limitations that affect Shiny are around support for websockets and the fact that Shiny is a stateful service, whereas Cloud Run is meant for stateless services. This means that for Cloud Run each HTTP request should not depend on previous HTTP requests, or is stateless. This is the case for an API, but Shiny is inherently a session based system: a user\u2019s past actions affect the current Shiny state. If a subsequent request to Shiny is directed to a different Shiny app than the one the user is in then we have problems. ( View Highlight ) As a newly launched service, for a long while Cloud Run did not support websockets. That support is now enabled in some limited fashion, and so with a little configuration you can have a Shiny app running. Thanks to randy3k the limitations above where navigated in the following ways: ( View Highlight ) Limit the number of instances to 1 - this means there is only one instance to route requests too Disable some websocket protocols to only leave those that work with Cloud Run - namely disable_protocols websocket xdr-streaming xhr-streaming iframe-eventsource iframe-htmlfile xdr-polling iframe-xhr-polling; ( View Highlight ) The above means that your Shiny app is limited: the number of concurrent requests you can have to one container in Cloud Run is 80 connections. This means you lose the \u201cscale-to-a-billion\u201d feature, as on concurrent request 81 no container will be available to serve it. It also means the app won\u2019t autoscale as the normal Cloud Run setups would - for normal applications, Cloud Run allows 1000 containers with up to 80 requests each e.g. 80,000 concurrent requests. Having only one container means that you need to worry about the footprint of your Shiny app. Whereas if autoscaling was available, high CPU/RAM load would trigger another container, as we will have only one container the max limit may be 80 but the real limit will be how much traffic your Shiny app can handle, which depends on how much CPU/RAM your Shiny app uses. Also remember as R is single-threaded, all users will be waiting to use a single R process - see this nice article by Appsilon for an overview on scaling shiny. This then is much like a traditional Shiny server running on say googleComputeEngineR ( View Highlight ) However, the above still leaves some use cases where Shiny on Cloud Run is useful: If your peak traffic is below 80 concurrent users e.g. 80 people browsing at the same time And your app load on CPU/RAM is small enough to support your expected amount of concurrent users. For APIs the above limitations would be a problem as they can be queried thousands of times an hour, but since Shiny is usually a dashboard option for a select group of users, I think this leaves a lot of room for Shiny on Cloud Run being viable, plus you also get the killer feature of scaling to 0 in the downtime between user sessions, which gives it the advantage over other solutions such as running your own Shiny server. ( View Highlight ) Another big plus for me is that as its running on Google infrastructure, this means OAuth2 workflows are automatically on the accepted list of domains leading to setup for OAuth2 buttons using say googleAuthR::googleAuth_js as simpler and not needing to validate a domain. If your Shiny app expects big peaks of traffic however, or is a big heavy app in terms of resources, then you are probably best looking at other options. For me, this is keeping the existing Shiny deployments running on Google Kubernetes Engine. ( View Highlight ) client.id and GCP setup ( View Highlight ) The client.json was a web client json from my project: {\"web\":{\"client_id\":\"10XXX\",\"project_id\":\"XXXX\",\"auth_uri\":\"https://accounts.google.com/o/oauth2/auth\",\"token_uri\":\"https://accounts.google.com/o/oauth2/token\",\"auth_provider_x509_cert_url\":\"https://www.googleapis.com/oauth2/v1/certs\",\"client_secret\":\"XXXXX\",\"redirect_uris\":[\"http://localhost\"],\"javascript_origins\":[\"https://www.example.com\",\"http://localhost:1221\"]}} You need to add the domain of where the Cloud Run is running in the JavaScript origins within the GCP console, that you get after deploying the app. (GCP console > APIs & Services > Credentials > Click on the Web Client ID you are using > Add URL to Authorised JavaScript origins). ( View Highlight ) shiny-customized.config This is the configuration file for Shiny that will overwrite the default one - its main purpose is turning off the websocket functionality that is not supported on Cloud Run disable_protocols websocket xdr-streaming xhr-streaming iframe-eventsource iframe-htmlfile xdr-polling iframe-xhr-polling; run_as shiny; server { listen 8080; location / { site_dir /srv/shiny-server; log_dir /var/log/shiny-server; directory_index off; } } ( View Highlight )","title":"Highlights"},{"location":"Highlights/Readwise/Articles/Software%20Roles%20and%20Titles/","text":"Software Roles and Titles \u00b6 Metadata \u00b6 Author: [[Eric Elliott]] Full Title: Software Roles and Titles Category: #Type/Highlights/Article URL: https://medium.com/p/e3f0b69c410c Highlights \u00b6 I\u2019ve noticed a lot of confusion in the industry about various software roles and titles, even among founders, hiring managers, and team builders. What are the various roles and responsibilities on a software team, and which job titles tend to cover which roles? Skills over titles Continuous delivery over deadlines Support over blame Collaboration over competition I like to reward initiative with increased responsibility, and if somebody has the skills and initiative to take on and outgrow the title they\u2019re hired for, I like to promote rather than risk losing a rising star to another company or team. Tags: [[favorite]]","title":"Software Roles and Titles"},{"location":"Highlights/Readwise/Articles/Software%20Roles%20and%20Titles/#software-roles-and-titles","text":"","title":"Software Roles and Titles"},{"location":"Highlights/Readwise/Articles/Software%20Roles%20and%20Titles/#metadata","text":"Author: [[Eric Elliott]] Full Title: Software Roles and Titles Category: #Type/Highlights/Article URL: https://medium.com/p/e3f0b69c410c","title":"Metadata"},{"location":"Highlights/Readwise/Articles/Software%20Roles%20and%20Titles/#highlights","text":"I\u2019ve noticed a lot of confusion in the industry about various software roles and titles, even among founders, hiring managers, and team builders. What are the various roles and responsibilities on a software team, and which job titles tend to cover which roles? Skills over titles Continuous delivery over deadlines Support over blame Collaboration over competition I like to reward initiative with increased responsibility, and if somebody has the skills and initiative to take on and outgrow the title they\u2019re hired for, I like to promote rather than risk losing a rising star to another company or team. Tags: [[favorite]]","title":"Highlights"},{"location":"Highlights/Readwise/Articles/Solutions%20for%20Taking%20Notes%20When%20Listening%20to%20Podcasts/","text":"Solutions for Taking Notes When Listening to Podcasts \u00b6 Metadata \u00b6 Author: [[Joshua Dance]] Full Title: Solutions for Taking Notes When Listening to Podcasts Category: #Type/Highlights/Article URL: https://mentalpivot.com/solutions-for-taking-notes-when-listening-to-podcasts/ Highlights \u00b6 Here\u2019s the workflow I\u2019m currently using. It uses the Pocket Casts app and an email utility called Mail Notes. Mail Notes lets you setup a single email address that you will send messages to. This speeds up the emailing process because you don\u2019t need to enter a target email when sending a message. I also have a dedicated gmail address for all the notes I mail to myself. I do this so I don\u2019t have to wade through extraneous emails in my inbox. I treat this as a holding pen for jotting quick ideas to myself that I will later flesh out and organize. Here are the steps: Pause the podcast. Display the \u201cNow Playing\u201d screen. This screen shows the podcast name, podcast episode and time location in the episode. Take a screenshot. Click on the onscreen screenshot thumbnail. Click on the sharing button and select Mail Notes (which has been set as a favorite sharing option so I don\u2019t have to scroll). This opens a modal window you can type a short note into and send to a predesignated email address (no need to enter the destination email with the Mail Notes app since it only sends messages to a single location). Delete the screenshot. Cumbersome? Yes, especially when exercising. But, it\u2019s better than listening to a podcast, hearing something really interesting and then wracking my brain later desperately trying to recall it. What all of this really points to is how nascent the podcasting space still is. The tooling is still underdeveloped. I\u2019ve already highlighted the issues with podcast discovery in another post, but annotations are another (don\u2019t get me started on podcast community and user dialogue, that\u2019s a third area that is woefully untapped). Hopefully these shortcoming will be addressed someday by clever entrepreneurs. In the meantime, enthusiasts like me will employ our suboptimal, but practical workarounds. Update: I have posted a new article on this topic that looks at iOS apps with podcast note-taking capabilities: More Solutions for Taking Podcast Notes: An App Overview.","title":"Solutions for Taking Notes When Listening to Podcasts"},{"location":"Highlights/Readwise/Articles/Solutions%20for%20Taking%20Notes%20When%20Listening%20to%20Podcasts/#solutions-for-taking-notes-when-listening-to-podcasts","text":"","title":"Solutions for Taking Notes When Listening to Podcasts"},{"location":"Highlights/Readwise/Articles/Solutions%20for%20Taking%20Notes%20When%20Listening%20to%20Podcasts/#metadata","text":"Author: [[Joshua Dance]] Full Title: Solutions for Taking Notes When Listening to Podcasts Category: #Type/Highlights/Article URL: https://mentalpivot.com/solutions-for-taking-notes-when-listening-to-podcasts/","title":"Metadata"},{"location":"Highlights/Readwise/Articles/Solutions%20for%20Taking%20Notes%20When%20Listening%20to%20Podcasts/#highlights","text":"Here\u2019s the workflow I\u2019m currently using. It uses the Pocket Casts app and an email utility called Mail Notes. Mail Notes lets you setup a single email address that you will send messages to. This speeds up the emailing process because you don\u2019t need to enter a target email when sending a message. I also have a dedicated gmail address for all the notes I mail to myself. I do this so I don\u2019t have to wade through extraneous emails in my inbox. I treat this as a holding pen for jotting quick ideas to myself that I will later flesh out and organize. Here are the steps: Pause the podcast. Display the \u201cNow Playing\u201d screen. This screen shows the podcast name, podcast episode and time location in the episode. Take a screenshot. Click on the onscreen screenshot thumbnail. Click on the sharing button and select Mail Notes (which has been set as a favorite sharing option so I don\u2019t have to scroll). This opens a modal window you can type a short note into and send to a predesignated email address (no need to enter the destination email with the Mail Notes app since it only sends messages to a single location). Delete the screenshot. Cumbersome? Yes, especially when exercising. But, it\u2019s better than listening to a podcast, hearing something really interesting and then wracking my brain later desperately trying to recall it. What all of this really points to is how nascent the podcasting space still is. The tooling is still underdeveloped. I\u2019ve already highlighted the issues with podcast discovery in another post, but annotations are another (don\u2019t get me started on podcast community and user dialogue, that\u2019s a third area that is woefully untapped). Hopefully these shortcoming will be addressed someday by clever entrepreneurs. In the meantime, enthusiasts like me will employ our suboptimal, but practical workarounds. Update: I have posted a new article on this topic that looks at iOS apps with podcast note-taking capabilities: More Solutions for Taking Podcast Notes: An App Overview.","title":"Highlights"},{"location":"Highlights/Readwise/Articles/State%20of%20R%20Packages%20in%20Your%20Library%20-%20R-Hub%20Blog/","text":"State of R Packages in Your Library - R-Hub Blog \u00b6 Metadata \u00b6 Author: [[blog.r-hub.io]] Full Title: State of R Packages in Your Library - R-Hub Blog Category: #Type/Highlights/Article URL: https://blog.r-hub.io/2020/09/03/keep.source/ Highlights \u00b6 Where do installed packages live? Packages are installed at the path you give as lib argument to install.packages() (or to any remotes::install_ function, that will pass them on to install.packages()); most often since you won\u2019t give any, at the first path returned by .libPaths() that exists and for which the user has the right permissions. Now at library loading, the important argument is called lib.loc, not lib. As an user installing packages, you need to look into the keep.source.pkgs option in options() that influences the behavior of package installation, or for a specific package you\u2019d write install.packages(\"rhub\", INSTALL_opts = \"--with-keep.source\", type = \"source\"). If you use Windows or Mac and don\u2019t write type = \"source\", binaries might be use in which case the keep.source.pkgs option is ignored. As a developer working interactively on a package (with e.g. devtools::load_all()), you need to make sure the source is kept as is when loading the package, and when loading it (lucky you, the relevant keep.source option is TRUE by default in interactive sessions \ud83c\udf89). As a developer you might also encounter the case where R CMD check will tell you about another switch, in an environment variable. It is a switch related to package installation, since R CMD check will install your package for checking it . See the lines below from the R source mirror:","title":"State of R Packages in Your Library - R-Hub Blog"},{"location":"Highlights/Readwise/Articles/State%20of%20R%20Packages%20in%20Your%20Library%20-%20R-Hub%20Blog/#state-of-r-packages-in-your-library-r-hub-blog","text":"","title":"State of R Packages in Your Library - R-Hub Blog"},{"location":"Highlights/Readwise/Articles/State%20of%20R%20Packages%20in%20Your%20Library%20-%20R-Hub%20Blog/#metadata","text":"Author: [[blog.r-hub.io]] Full Title: State of R Packages in Your Library - R-Hub Blog Category: #Type/Highlights/Article URL: https://blog.r-hub.io/2020/09/03/keep.source/","title":"Metadata"},{"location":"Highlights/Readwise/Articles/State%20of%20R%20Packages%20in%20Your%20Library%20-%20R-Hub%20Blog/#highlights","text":"Where do installed packages live? Packages are installed at the path you give as lib argument to install.packages() (or to any remotes::install_ function, that will pass them on to install.packages()); most often since you won\u2019t give any, at the first path returned by .libPaths() that exists and for which the user has the right permissions. Now at library loading, the important argument is called lib.loc, not lib. As an user installing packages, you need to look into the keep.source.pkgs option in options() that influences the behavior of package installation, or for a specific package you\u2019d write install.packages(\"rhub\", INSTALL_opts = \"--with-keep.source\", type = \"source\"). If you use Windows or Mac and don\u2019t write type = \"source\", binaries might be use in which case the keep.source.pkgs option is ignored. As a developer working interactively on a package (with e.g. devtools::load_all()), you need to make sure the source is kept as is when loading the package, and when loading it (lucky you, the relevant keep.source option is TRUE by default in interactive sessions \ud83c\udf89). As a developer you might also encounter the case where R CMD check will tell you about another switch, in an environment variable. It is a switch related to package installation, since R CMD check will install your package for checking it . See the lines below from the R source mirror:","title":"Highlights"},{"location":"Highlights/Readwise/Articles/Strategically%20Constrained%20How%20to%20Turn%20Limitations%20Into%20Opportunities%20-%20Forte%20Labs/","text":"Strategically Constrained: How to Turn Limitations Into Opportunities - Forte Labs \u00b6 Metadata \u00b6 Author: Full Title: Strategically Constrained: How to Turn Limitations Into Opportunities - Forte Labs Category: #Type/Highlights/Article URL: https://fortelabs.co/blog/strategically-constrained-how-to-turn-limitations-into-opportunities/ Highlights \u00b6 the very best place to look for breakthrough capabilities is right behind your biggest constraint.","title":"Strategically Constrained: How to Turn Limitations Into Opportunities - Forte Labs"},{"location":"Highlights/Readwise/Articles/Strategically%20Constrained%20How%20to%20Turn%20Limitations%20Into%20Opportunities%20-%20Forte%20Labs/#strategically-constrained-how-to-turn-limitations-into-opportunities-forte-labs","text":"","title":"Strategically Constrained: How to Turn Limitations Into Opportunities - Forte Labs"},{"location":"Highlights/Readwise/Articles/Strategically%20Constrained%20How%20to%20Turn%20Limitations%20Into%20Opportunities%20-%20Forte%20Labs/#metadata","text":"Author: Full Title: Strategically Constrained: How to Turn Limitations Into Opportunities - Forte Labs Category: #Type/Highlights/Article URL: https://fortelabs.co/blog/strategically-constrained-how-to-turn-limitations-into-opportunities/","title":"Metadata"},{"location":"Highlights/Readwise/Articles/Strategically%20Constrained%20How%20to%20Turn%20Limitations%20Into%20Opportunities%20-%20Forte%20Labs/#highlights","text":"the very best place to look for breakthrough capabilities is right behind your biggest constraint.","title":"Highlights"},{"location":"Highlights/Readwise/Articles/Structure%20and%20Automated%20Workflow%20for%20a%20Machine%20Learning%20Project%E2%80%8A%E2%80%94%E2%80%8Apart%201/","text":"Structure and Automated Workflow for a Machine Learning Project\u200a\u2014\u200apart 1 \u00b6 Metadata \u00b6 Author: [[Mateusz Bednarski]] Full Title: Structure and Automated Workflow for a Machine Learning Project\u200a\u2014\u200apart 1 Category: #Type/Highlights/Article URL: https://towardsdatascience.com/structure-and-automated-workflow-for-a-machine-learning-project-2fa30d661c1e Highlights \u00b6 Let\u2019s start with creating reproducible environment. Create file called environment.yml We can start with following content: Note: environment.yml - do this: dependencies: R=4.0.2 Package1= Package2= ... external libs Downloading data First step is to download the data. But we will not do it by copying from Downloads directory . Instead: we can create python script in src/data/download.py So let\u2019s start fixing this issues. At the beginning create directory structure for data. There would be three of them: data/raw - here all raw data exists. This directory should be considered as read only - just leave what we got as it is. data/processed - data after whole preprocessing, merging, cleaning, feature engineering etc. data/interim - intermediate format between raw and processed. Not raw and also not ready yet. data/external - any data we consider as being external. E.g dictionaries, synonyms. Git does not store empty directories. By creating an empty .gitkeep file we can enforce directory persistence. By default, data should not be stored in git repository \u2014 so that we need to adjust .gitignore: Workflow OK, we solved issue with directories. Let\u2019s move on to workflow. Downloading is very first step and should be written correctly. But what does it mean? Parameters should be possible to pass by command line arguments. For that we will use click library. Add to environment.yml Make Now we are ready to automate workflow. We will use \u2026 GNU Make. No. I\u2019m not joking. This tool suits very well for our needs. Also writing Makefiles is not as scary as you might think. Interesting fact: in practice this is very portable solution between Linux, Mac and Windows. Our first workflow will consist of three steps. clean - will remove all generated output all - will run whole pipeline from beginning to the end download - will download the data OK, so what are benefits of presented approach? You will be able to perform whole process from grabbing the data to generate reports by one command You will be able to reproduce your work You will thank yourself after a year when come back to project Others will be able to understand your code (also potential employers) Tags: [[favorite]]","title":"Structure and Automated Workflow for a Machine Learning Project\u200a\u2014\u200apart 1"},{"location":"Highlights/Readwise/Articles/Structure%20and%20Automated%20Workflow%20for%20a%20Machine%20Learning%20Project%E2%80%8A%E2%80%94%E2%80%8Apart%201/#structure-and-automated-workflow-for-a-machine-learning-project-part-1","text":"","title":"Structure and Automated Workflow for a Machine Learning Project\u200a\u2014\u200apart 1"},{"location":"Highlights/Readwise/Articles/Structure%20and%20Automated%20Workflow%20for%20a%20Machine%20Learning%20Project%E2%80%8A%E2%80%94%E2%80%8Apart%201/#metadata","text":"Author: [[Mateusz Bednarski]] Full Title: Structure and Automated Workflow for a Machine Learning Project\u200a\u2014\u200apart 1 Category: #Type/Highlights/Article URL: https://towardsdatascience.com/structure-and-automated-workflow-for-a-machine-learning-project-2fa30d661c1e","title":"Metadata"},{"location":"Highlights/Readwise/Articles/Structure%20and%20Automated%20Workflow%20for%20a%20Machine%20Learning%20Project%E2%80%8A%E2%80%94%E2%80%8Apart%201/#highlights","text":"Let\u2019s start with creating reproducible environment. Create file called environment.yml We can start with following content: Note: environment.yml - do this: dependencies: R=4.0.2 Package1= Package2= ... external libs Downloading data First step is to download the data. But we will not do it by copying from Downloads directory . Instead: we can create python script in src/data/download.py So let\u2019s start fixing this issues. At the beginning create directory structure for data. There would be three of them: data/raw - here all raw data exists. This directory should be considered as read only - just leave what we got as it is. data/processed - data after whole preprocessing, merging, cleaning, feature engineering etc. data/interim - intermediate format between raw and processed. Not raw and also not ready yet. data/external - any data we consider as being external. E.g dictionaries, synonyms. Git does not store empty directories. By creating an empty .gitkeep file we can enforce directory persistence. By default, data should not be stored in git repository \u2014 so that we need to adjust .gitignore: Workflow OK, we solved issue with directories. Let\u2019s move on to workflow. Downloading is very first step and should be written correctly. But what does it mean? Parameters should be possible to pass by command line arguments. For that we will use click library. Add to environment.yml Make Now we are ready to automate workflow. We will use \u2026 GNU Make. No. I\u2019m not joking. This tool suits very well for our needs. Also writing Makefiles is not as scary as you might think. Interesting fact: in practice this is very portable solution between Linux, Mac and Windows. Our first workflow will consist of three steps. clean - will remove all generated output all - will run whole pipeline from beginning to the end download - will download the data OK, so what are benefits of presented approach? You will be able to perform whole process from grabbing the data to generate reports by one command You will be able to reproduce your work You will thank yourself after a year when come back to project Others will be able to understand your code (also potential employers) Tags: [[favorite]]","title":"Highlights"},{"location":"Highlights/Readwise/Articles/Supersizing%20the%20Mind%20The%20Science%20of%20Cognitive%20Extension%20-%20Forte%20Labs/","text":"Supersizing the Mind: The Science of Cognitive Extension - Forte Labs \u00b6 Metadata \u00b6 Author: Full Title: Supersizing the Mind: The Science of Cognitive Extension - Forte Labs Category: #Type/Highlights/Article URL: https://fortelabs.co/blog/supersizing-the-mind-the-science-of-cognitive-extension/ Highlights \u00b6 2 Principle of Cognitive Impartiality \u00b6 The second principle states that our brain doesn\u2019t care whether a piece of information is internal (stored in memory) or external (stored in the environment). It will access whichever source is more reliable, even at the cost of accuracy. Some experiments suggest that, all else being equal, the brain actually prefers external sources, because they take no energy to maintain. 1 Principle of Ecological Assembly \u00b6 The first principle states that our minds are ecological control systems. We are natural-born environmental engineers. We achieve goals not by micromanaging every detail, but by relying on existing structures in the environment around us. Consider what makes a fish an incredibly efficient swimming machine. The fish is not a good swimmer in isolation. It has evolved to adapt its swimming behaviors to the pools of kinetic energy found in its environment: swirls, eddies, vortices, currents, tides, waves, etc. The reason this is environmental engineering, not just adaptation, is that it includes both external events (an unexpected swirl or rock in the river) and self-generated ones (a well-timed flap of the tail). It is the environment and the fish together that make up the swimming machine. Self-engineering What all these principles suggest is that it isn\u2019t the quality or quantity of our knowledge that matters. Nor even our raw intellectual ability. All these pale in comparison to the problem-solving capabilities of our environment. The bottleneck on human performance is our context. Think of a bartender preparing drinks. Taking a list of drink orders, she could easily remember who ordered what if she wanted to. Instead, she positions the glasses in the correct order on the bar, using their location in space to \u201cremember\u201d the orders. This lightweight offloading strategy is less error-prone, makes her actions more efficient, and allows her to dedicate thinking to other things. Our brain \u201coutsources\u201d memory to the external environment, retrieving it back \u201cjust-in-time\u201d only when needed. It will do this even when it takes substantial physical effort to do so.","title":"Supersizing the Mind: The Science of Cognitive Extension - Forte Labs"},{"location":"Highlights/Readwise/Articles/Supersizing%20the%20Mind%20The%20Science%20of%20Cognitive%20Extension%20-%20Forte%20Labs/#supersizing-the-mind-the-science-of-cognitive-extension-forte-labs","text":"","title":"Supersizing the Mind: The Science of Cognitive Extension - Forte Labs"},{"location":"Highlights/Readwise/Articles/Supersizing%20the%20Mind%20The%20Science%20of%20Cognitive%20Extension%20-%20Forte%20Labs/#metadata","text":"Author: Full Title: Supersizing the Mind: The Science of Cognitive Extension - Forte Labs Category: #Type/Highlights/Article URL: https://fortelabs.co/blog/supersizing-the-mind-the-science-of-cognitive-extension/","title":"Metadata"},{"location":"Highlights/Readwise/Articles/Supersizing%20the%20Mind%20The%20Science%20of%20Cognitive%20Extension%20-%20Forte%20Labs/#highlights","text":"","title":"Highlights"},{"location":"Highlights/Readwise/Articles/Supersizing%20the%20Mind%20The%20Science%20of%20Cognitive%20Extension%20-%20Forte%20Labs/#2-principle-of-cognitive-impartiality","text":"The second principle states that our brain doesn\u2019t care whether a piece of information is internal (stored in memory) or external (stored in the environment). It will access whichever source is more reliable, even at the cost of accuracy. Some experiments suggest that, all else being equal, the brain actually prefers external sources, because they take no energy to maintain.","title":"2 Principle of Cognitive Impartiality"},{"location":"Highlights/Readwise/Articles/Supersizing%20the%20Mind%20The%20Science%20of%20Cognitive%20Extension%20-%20Forte%20Labs/#1-principle-of-ecological-assembly","text":"The first principle states that our minds are ecological control systems. We are natural-born environmental engineers. We achieve goals not by micromanaging every detail, but by relying on existing structures in the environment around us. Consider what makes a fish an incredibly efficient swimming machine. The fish is not a good swimmer in isolation. It has evolved to adapt its swimming behaviors to the pools of kinetic energy found in its environment: swirls, eddies, vortices, currents, tides, waves, etc. The reason this is environmental engineering, not just adaptation, is that it includes both external events (an unexpected swirl or rock in the river) and self-generated ones (a well-timed flap of the tail). It is the environment and the fish together that make up the swimming machine. Self-engineering What all these principles suggest is that it isn\u2019t the quality or quantity of our knowledge that matters. Nor even our raw intellectual ability. All these pale in comparison to the problem-solving capabilities of our environment. The bottleneck on human performance is our context. Think of a bartender preparing drinks. Taking a list of drink orders, she could easily remember who ordered what if she wanted to. Instead, she positions the glasses in the correct order on the bar, using their location in space to \u201cremember\u201d the orders. This lightweight offloading strategy is less error-prone, makes her actions more efficient, and allows her to dedicate thinking to other things. Our brain \u201coutsources\u201d memory to the external environment, retrieving it back \u201cjust-in-time\u201d only when needed. It will do this even when it takes substantial physical effort to do so.","title":"1 Principle of Ecological Assembly"},{"location":"Highlights/Readwise/Articles/Symlinks%20in%20Windows%2C%20MinGW%2C%20Git%2C%20and%20Cygwin%20%C2%B7%20Josh%20Kelley/","text":"Symlinks in Windows, MinGW, Git, and Cygwin \u00b7 Josh Kelley \u00b6 Metadata \u00b6 Author: [[joshkel.com]] Full Title: Symlinks in Windows, MinGW, Git, and Cygwin \u00b7 Josh Kelley Category: #Type/Highlights/Article URL: https://www.joshkel.com/2018/01/18/symlinks-in-windows/ Highlights \u00b6 Symlinks in Windows, MinGW, Git, and Cygwin 19 Jan 2018 ( View Highlight ) Symlinks are a commonly used feature in Linux and macOS, but Windows traditionally either hasn\u2019t supported them (prior to Windows Vista) or has strictly limited their use. As a result, many cross-platform development tools, like Git for Windows, either didn\u2019t support or didn\u2019t enable symlink support on Windows. ( View Highlight ) Configuring Windows ( View Highlight ) Enable developer mode: Go under Settings, under Update & Security, under For developers, and set \u201cUse developer features\u201d to \u201cDeveloper mode.\u201d This is how you enable the Windows 10 Creators Update option of allowing users to create symlinks without UAC elevation. ( View Highlight ) As described in the Git for Windows documentation, you\u2019ll also need to edit Windows\u2019 local security policy to grant permissions to create symlinks. My personal preference is to use gpedit.msc, since that\u2019s a standard Windows tool. ( View Highlight ) Incidentally, in case you\u2019re wondering why all of this is necessary, the concern was that symlinks could be a security risk: Symbolic links (symlinks) can expose security vulnerabilities in applications that aren\u2019t designed to handle symbolic links. - Microsoft TechNet ( View Highlight ) Configuring MinGW, Cygwin, and Git ( View Highlight ) For MSYS / MinGW (this includes the command-line utilities that used in the git-bash shell), add an environment variable, MSYS, and make sure it contains winsymlinks:nativestrict. (If you don\u2019t do this, then symlinks are \u201cemulated\u201d by copying files and directories. This can be surprising, to say the least.) ( View Highlight ) For Cygwin, add an environment variable, CYGWIN, and make sure it contains winsymlinks:nativestrict. See the Cygwin manual for details. (If you don\u2019t do this, then Cygwin defaults to emulating symlinks by using special file contents that it understands but non-Cygwin software doesn\u2019t.) ( View Highlight ) For Git for Windows, make sure that the core.symlinks config option is true. In a normal Git system, this would be done at the system level (git config --system core.symlinks true). However, Git for Windows adds an additional \u201csuper-system\u201d configuration file, c:\\ProgramData\\Git\\config; this was where I had to update core.symlinks on my system. (This Stack Overflow answer describes c:\\ProgramData\\Git\\config better.) ( View Highlight ) For Git for Windows, make sure that the core.symlinks config option is true. In a normal Git system, this would be done at the system level (git config --system core.symlinks true). However, Git for Windows adds an additional \u201csuper-system\u201d configuration file, c:\\ProgramData\\Git\\config; ( View Highlight ) For Git for Windows, make sure that the core.symlinks config option is true. In a normal Git system, this would ( View Highlight ) be done at the system level (git config --system core.symlinks true). However, Git for Windows adds an additional \u201csuper-system\u201d configuration file, c:\\ProgramData\\Git\\config; this was where I had to update core.symlinks on my system. (This Stack Overflow answer describes c:\\ProgramData\\Git\\config better.) ( View Highlight ) be done at the system level (git config --system core.symlinks true). However, Git for Windows adds an additional \u201csuper-system\u201d configuration file, ( View Highlight ) Update: If you\u2019re looking for a Windows GUI to help you manage all of these symlinks, the Link Shell Extension is very useful. It allows you to create symlinks, junction points, and more by right-dragging items in Explorer. ( View Highlight )","title":"Symlinks in Windows, MinGW, Git, and Cygwin \u00b7 Josh Kelley"},{"location":"Highlights/Readwise/Articles/Symlinks%20in%20Windows%2C%20MinGW%2C%20Git%2C%20and%20Cygwin%20%C2%B7%20Josh%20Kelley/#symlinks-in-windows-mingw-git-and-cygwin-josh-kelley","text":"","title":"Symlinks in Windows, MinGW, Git, and Cygwin \u00b7 Josh Kelley"},{"location":"Highlights/Readwise/Articles/Symlinks%20in%20Windows%2C%20MinGW%2C%20Git%2C%20and%20Cygwin%20%C2%B7%20Josh%20Kelley/#metadata","text":"Author: [[joshkel.com]] Full Title: Symlinks in Windows, MinGW, Git, and Cygwin \u00b7 Josh Kelley Category: #Type/Highlights/Article URL: https://www.joshkel.com/2018/01/18/symlinks-in-windows/","title":"Metadata"},{"location":"Highlights/Readwise/Articles/Symlinks%20in%20Windows%2C%20MinGW%2C%20Git%2C%20and%20Cygwin%20%C2%B7%20Josh%20Kelley/#highlights","text":"Symlinks in Windows, MinGW, Git, and Cygwin 19 Jan 2018 ( View Highlight ) Symlinks are a commonly used feature in Linux and macOS, but Windows traditionally either hasn\u2019t supported them (prior to Windows Vista) or has strictly limited their use. As a result, many cross-platform development tools, like Git for Windows, either didn\u2019t support or didn\u2019t enable symlink support on Windows. ( View Highlight ) Configuring Windows ( View Highlight ) Enable developer mode: Go under Settings, under Update & Security, under For developers, and set \u201cUse developer features\u201d to \u201cDeveloper mode.\u201d This is how you enable the Windows 10 Creators Update option of allowing users to create symlinks without UAC elevation. ( View Highlight ) As described in the Git for Windows documentation, you\u2019ll also need to edit Windows\u2019 local security policy to grant permissions to create symlinks. My personal preference is to use gpedit.msc, since that\u2019s a standard Windows tool. ( View Highlight ) Incidentally, in case you\u2019re wondering why all of this is necessary, the concern was that symlinks could be a security risk: Symbolic links (symlinks) can expose security vulnerabilities in applications that aren\u2019t designed to handle symbolic links. - Microsoft TechNet ( View Highlight ) Configuring MinGW, Cygwin, and Git ( View Highlight ) For MSYS / MinGW (this includes the command-line utilities that used in the git-bash shell), add an environment variable, MSYS, and make sure it contains winsymlinks:nativestrict. (If you don\u2019t do this, then symlinks are \u201cemulated\u201d by copying files and directories. This can be surprising, to say the least.) ( View Highlight ) For Cygwin, add an environment variable, CYGWIN, and make sure it contains winsymlinks:nativestrict. See the Cygwin manual for details. (If you don\u2019t do this, then Cygwin defaults to emulating symlinks by using special file contents that it understands but non-Cygwin software doesn\u2019t.) ( View Highlight ) For Git for Windows, make sure that the core.symlinks config option is true. In a normal Git system, this would be done at the system level (git config --system core.symlinks true). However, Git for Windows adds an additional \u201csuper-system\u201d configuration file, c:\\ProgramData\\Git\\config; this was where I had to update core.symlinks on my system. (This Stack Overflow answer describes c:\\ProgramData\\Git\\config better.) ( View Highlight ) For Git for Windows, make sure that the core.symlinks config option is true. In a normal Git system, this would be done at the system level (git config --system core.symlinks true). However, Git for Windows adds an additional \u201csuper-system\u201d configuration file, c:\\ProgramData\\Git\\config; ( View Highlight ) For Git for Windows, make sure that the core.symlinks config option is true. In a normal Git system, this would ( View Highlight ) be done at the system level (git config --system core.symlinks true). However, Git for Windows adds an additional \u201csuper-system\u201d configuration file, c:\\ProgramData\\Git\\config; this was where I had to update core.symlinks on my system. (This Stack Overflow answer describes c:\\ProgramData\\Git\\config better.) ( View Highlight ) be done at the system level (git config --system core.symlinks true). However, Git for Windows adds an additional \u201csuper-system\u201d configuration file, ( View Highlight ) Update: If you\u2019re looking for a Windows GUI to help you manage all of these symlinks, the Link Shell Extension is very useful. It allows you to create symlinks, junction points, and more by right-dragging items in Explorer. ( View Highlight )","title":"Highlights"},{"location":"Highlights/Readwise/Articles/System%20Design%20Basics%20Load%20Balancer%20101/","text":"System Design Basics: Load Balancer 101 \u00b6 Metadata \u00b6 Author: [[Ashis Chakraborty]] Full Title: System Design Basics: Load Balancer 101 Category: #Type/Highlights/Article URL: https://medium.com/p/adc4f602d08f Highlights \u00b6 Round Robin: This is one of the most common load balancing methods. It\u2019s a method where the LB redirects incoming traffic between a set of servers in a certain order. Check figure 2; there is a list of five servers; the first request goes to server 1, the second one goes to server 2, and so on. When LB reaches the end of the list, it starts over at the beginning, from server number 1 again. It almost evenly balances the traffic between the servers. But in this method, server specifications are not considered. The servers need to be of equal specification for this method to be useful. Otherwise, a low processing powered server may have the same load as a high processing capacity server. Random selection: In this method, the servers are selected randomly. There are no other factors calculated in the selection of the server. There might be a problem with some of the servers sitting idle, and some are overloaded with requests in this technique. The load balancer is a server that usually sits between client devices and a set of servers and distributes client requests across servers. Load balancers can be placed in various places of a system. The loads on the servers need to be distributed in a balanced way; that\u2019s why they are called a load balancer According to Wikipedia, \u201cLoad balancing refers to the process of distributing a set of tasks over a set of resources.\u201d Its primary purpose is to optimize the response time of each task. Now let\u2019s assume a system has one server that is overloaded with the request of clients. The server has a limit of serving requests per second. So, we need to add more servers to handle large amounts of requests. But we may need a load balancer to balance the loads between the servers.","title":"System Design Basics: Load Balancer 101"},{"location":"Highlights/Readwise/Articles/System%20Design%20Basics%20Load%20Balancer%20101/#system-design-basics-load-balancer-101","text":"","title":"System Design Basics: Load Balancer 101"},{"location":"Highlights/Readwise/Articles/System%20Design%20Basics%20Load%20Balancer%20101/#metadata","text":"Author: [[Ashis Chakraborty]] Full Title: System Design Basics: Load Balancer 101 Category: #Type/Highlights/Article URL: https://medium.com/p/adc4f602d08f","title":"Metadata"},{"location":"Highlights/Readwise/Articles/System%20Design%20Basics%20Load%20Balancer%20101/#highlights","text":"Round Robin: This is one of the most common load balancing methods. It\u2019s a method where the LB redirects incoming traffic between a set of servers in a certain order. Check figure 2; there is a list of five servers; the first request goes to server 1, the second one goes to server 2, and so on. When LB reaches the end of the list, it starts over at the beginning, from server number 1 again. It almost evenly balances the traffic between the servers. But in this method, server specifications are not considered. The servers need to be of equal specification for this method to be useful. Otherwise, a low processing powered server may have the same load as a high processing capacity server. Random selection: In this method, the servers are selected randomly. There are no other factors calculated in the selection of the server. There might be a problem with some of the servers sitting idle, and some are overloaded with requests in this technique. The load balancer is a server that usually sits between client devices and a set of servers and distributes client requests across servers. Load balancers can be placed in various places of a system. The loads on the servers need to be distributed in a balanced way; that\u2019s why they are called a load balancer According to Wikipedia, \u201cLoad balancing refers to the process of distributing a set of tasks over a set of resources.\u201d Its primary purpose is to optimize the response time of each task. Now let\u2019s assume a system has one server that is overloaded with the request of clients. The server has a limit of serving requests per second. So, we need to add more servers to handle large amounts of requests. But we may need a load balancer to balance the loads between the servers.","title":"Highlights"},{"location":"Highlights/Readwise/Articles/System%20Design%20Paradigm%20Caching/","text":"System Design Paradigm: Caching \u00b6 Metadata \u00b6 Author: [[Abracadabra]] Full Title: System Design Paradigm: Caching Category: #Type/Highlights/Article URL: https://medium.com/p/e57a25ab2f0a Highlights \u00b6 The solution is a lease. The first cache miss will grant the app server a lease token. Only the app server having the token for a key can query DB and fill the cache. After a token is issued, all subsequent requests to the cache will be asked to retry after a period. The lease expires after a while to avoid deadlock","title":"System Design Paradigm: Caching"},{"location":"Highlights/Readwise/Articles/System%20Design%20Paradigm%20Caching/#system-design-paradigm-caching","text":"","title":"System Design Paradigm: Caching"},{"location":"Highlights/Readwise/Articles/System%20Design%20Paradigm%20Caching/#metadata","text":"Author: [[Abracadabra]] Full Title: System Design Paradigm: Caching Category: #Type/Highlights/Article URL: https://medium.com/p/e57a25ab2f0a","title":"Metadata"},{"location":"Highlights/Readwise/Articles/System%20Design%20Paradigm%20Caching/#highlights","text":"The solution is a lease. The first cache miss will grant the app server a lease token. Only the app server having the token for a key can query DB and fill the cache. After a token is issued, all subsequent requests to the cache will be asked to retry after a period. The lease expires after a while to avoid deadlock","title":"Highlights"},{"location":"Highlights/Readwise/Articles/Take%20the%20First%20Step/","text":"Take the First Step \u00b6 Metadata \u00b6 Author: [[Francisco S\u00e1ez]] Full Title: Take the First Step Category: #Type/Highlights/Article URL: https://facilethings.com/blog/en/first-step.html Highlights \u00b6 Start by defining the desired outcome. If the goal is too big or too complicated, first define a smaller goal that is easier to achieve. By doing this you prevent your brain from triggering the alarm. Write it down. An accessible and clearly defined goal has a much better chance of being achieved. You have already defined the problem\u2014understanding the problem as a discrepancy between the real state of things and the desired one\u2014. Now, what\u2019s the first action you can take to achieve the goal? What might be the first step to take? Several things will come to mind, but only one is the true next step on which you must focus. That\u2019s your next action. Write down the rest of the things on a list that you\u2019ll put on hold, so that you\u2019re not distracted by them. Now you\u2019ve started, you\u2019re on the move. It\u2019s the moment to take advantage of the inertia. Once the action is completed, retrieve that list of tasks and unresolved issues that you had parked, and choose your next action (or define a new \u201cnext action\u201d if none of the ones you see is the right one).","title":"Take the First Step"},{"location":"Highlights/Readwise/Articles/Take%20the%20First%20Step/#take-the-first-step","text":"","title":"Take the First Step"},{"location":"Highlights/Readwise/Articles/Take%20the%20First%20Step/#metadata","text":"Author: [[Francisco S\u00e1ez]] Full Title: Take the First Step Category: #Type/Highlights/Article URL: https://facilethings.com/blog/en/first-step.html","title":"Metadata"},{"location":"Highlights/Readwise/Articles/Take%20the%20First%20Step/#highlights","text":"Start by defining the desired outcome. If the goal is too big or too complicated, first define a smaller goal that is easier to achieve. By doing this you prevent your brain from triggering the alarm. Write it down. An accessible and clearly defined goal has a much better chance of being achieved. You have already defined the problem\u2014understanding the problem as a discrepancy between the real state of things and the desired one\u2014. Now, what\u2019s the first action you can take to achieve the goal? What might be the first step to take? Several things will come to mind, but only one is the true next step on which you must focus. That\u2019s your next action. Write down the rest of the things on a list that you\u2019ll put on hold, so that you\u2019re not distracted by them. Now you\u2019ve started, you\u2019re on the move. It\u2019s the moment to take advantage of the inertia. Once the action is completed, retrieve that list of tasks and unresolved issues that you had parked, and choose your next action (or define a new \u201cnext action\u201d if none of the ones you see is the right one).","title":"Highlights"},{"location":"Highlights/Readwise/Articles/Taking%20Notes%20for%20Yourself%20Best%20Practices%20for%20the%20Personal%20Notebook/","text":"Taking Notes for Yourself: Best Practices for the Personal Notebook \u00b6 Metadata \u00b6 Author: [[zarla ludin]] Full Title: Taking Notes for Yourself: Best Practices for the Personal Notebook Category: #Type/Highlights/Article URL: https://medium.com/p/47a78084c750 Highlights \u00b6 Embrace the physicality of the notebook.","title":"Taking Notes for Yourself: Best Practices for the Personal Notebook"},{"location":"Highlights/Readwise/Articles/Taking%20Notes%20for%20Yourself%20Best%20Practices%20for%20the%20Personal%20Notebook/#taking-notes-for-yourself-best-practices-for-the-personal-notebook","text":"","title":"Taking Notes for Yourself: Best Practices for the Personal Notebook"},{"location":"Highlights/Readwise/Articles/Taking%20Notes%20for%20Yourself%20Best%20Practices%20for%20the%20Personal%20Notebook/#metadata","text":"Author: [[zarla ludin]] Full Title: Taking Notes for Yourself: Best Practices for the Personal Notebook Category: #Type/Highlights/Article URL: https://medium.com/p/47a78084c750","title":"Metadata"},{"location":"Highlights/Readwise/Articles/Taking%20Notes%20for%20Yourself%20Best%20Practices%20for%20the%20Personal%20Notebook/#highlights","text":"Embrace the physicality of the notebook.","title":"Highlights"},{"location":"Highlights/Readwise/Articles/Templates%20for%20R%20Markdown%20%20Jianghao/","text":"Templates for R Markdown | Jianghao \u00b6 Metadata \u00b6 Author: [[Jianghao Wang]] Full Title: Templates for R Markdown | Jianghao Category: #Type/Highlights/Article URL: http://jianghao.wang/post/2017-12-08-rmarkdown-templates/ Highlights \u00b6 markdowntemplates: A collection of alternate R markdown templates https://github.com/hrbrmstr/markdowntemplates R Markdown Custom Formats: https://blog.rstudio.org/2016/03/21/r-markdown-custom-formats/ tufte \u2014 Documents in the style of Edward Tufte rticles \u2014 Formats for creating LaTeX based journal articles rmdformats \u2014 Formats for creating HTML documents thesisdown: An updated R Markdown thesis template using the bookdown package https://github.com/ismayc/thesisdown prettydoc: Creating Pretty HTML From R Markdown http://yixuan.cos.name/prettydoc/ rmdTemplates R package containing a collection of Rmarkdown templates https://github.com/Pakillo/rmdTemplates manuscriptPackage Template for writing manuscripts as an R package https://github.com/jhollist/manuscriptPackage template A template for my research projects, based on the R package structure https://github.com/cboettig/template rmarkdown-website-template: Template for creating your website with R markdown. https://github.com/privefl/rmarkdown-website-template","title":"Templates for R Markdown | Jianghao"},{"location":"Highlights/Readwise/Articles/Templates%20for%20R%20Markdown%20%20Jianghao/#templates-for-r-markdown-jianghao","text":"","title":"Templates for R Markdown | Jianghao"},{"location":"Highlights/Readwise/Articles/Templates%20for%20R%20Markdown%20%20Jianghao/#metadata","text":"Author: [[Jianghao Wang]] Full Title: Templates for R Markdown | Jianghao Category: #Type/Highlights/Article URL: http://jianghao.wang/post/2017-12-08-rmarkdown-templates/","title":"Metadata"},{"location":"Highlights/Readwise/Articles/Templates%20for%20R%20Markdown%20%20Jianghao/#highlights","text":"markdowntemplates: A collection of alternate R markdown templates https://github.com/hrbrmstr/markdowntemplates R Markdown Custom Formats: https://blog.rstudio.org/2016/03/21/r-markdown-custom-formats/ tufte \u2014 Documents in the style of Edward Tufte rticles \u2014 Formats for creating LaTeX based journal articles rmdformats \u2014 Formats for creating HTML documents thesisdown: An updated R Markdown thesis template using the bookdown package https://github.com/ismayc/thesisdown prettydoc: Creating Pretty HTML From R Markdown http://yixuan.cos.name/prettydoc/ rmdTemplates R package containing a collection of Rmarkdown templates https://github.com/Pakillo/rmdTemplates manuscriptPackage Template for writing manuscripts as an R package https://github.com/jhollist/manuscriptPackage template A template for my research projects, based on the R package structure https://github.com/cboettig/template rmarkdown-website-template: Template for creating your website with R markdown. https://github.com/privefl/rmarkdown-website-template","title":"Highlights"},{"location":"Highlights/Readwise/Articles/The%20%27Weekly%20Review%27%20Method%20Will%20Help%20You%20Get%20Things%20Done/","text":"The 'Weekly Review' Method Will Help You Get Things Done \u00b6 Metadata \u00b6 Author: [[Bauce Media Partner]] Full Title: The 'Weekly Review' Method Will Help You Get Things Done Category: #Type/Highlights/Article URL: https://baucemag.com/get-more-things-done-with-the-weekly-review-dan-allen/ Highlights \u00b6 Most of the difficulty in self-improvement is knowing how you actually are performing The two missing links that keep us from completing our goals and sticking to the habits that get us there are visibility and accountability Visibility simply means you have written out exactly what your goal is and the habits or steps that will get you there. They are in your phone\u2019s Notes app, on the fridge, or written on a piece of paper at your desk. Practically speaking, this means your goals can be physically seen and are no longer mere wishes floating around in your brain. Accountability is the more challenging missing link out of the two. While anyone can write out good habits that hopefully result in a completed goal of theirs, it takes guts to share them with those close to you that can motivate you to succeed. It\u2019s proven that when we share a goal with someone we are more likely to stick to that goal and ultimately attain that goal. When no one is there to ask us about our progress or push us to go on that run or stick to that budget, we will tend to make excuses and push it to the next day. The three categories are called Get Clear, Get Current, and Get Creative. Get Clear Getting Clear is exactly what it means. Start the brain-dumping process and organize all of your to-do lists into one written location. This can be handwritten on paper, drawn on a whiteboard, or typed up on a document. The method does not matter as long as it works for you and your to-do list is in one location. Get Current Getting Current is reviewing your action items (goals and habits) and capturing them on your Weekly Review. Review your previous calendar items. Are there events and activities that are preventing you from reaching the goal that is most important to you? Modify it or remove it completely. Review your upcoming calendar items. What weeks are going to be especially challenging to keep your savings or weight loss goals on track? If you\u2019re out of town, make a note and develop a plan that keeps your habits in check. Other items to Get Current on are reviewing your \u201cwaiting for\u201d list. Maybe you\u2019re waiting on a savings goal because you are currently working on paying off student loans. Write this down on your waiting list. Start viewing this section as an excuse ridder. This way you know exactly what is holding you back and when it will be over. Reviewing project (and larger outcome) lists is for reviewing those week or month-long projects like renovating the kitchen. This creates a space for you to write down all the deliverables involved in the project so you don\u2019t miss a vital step. Just in case you missed something in the past sections there is one final \u201cGetting Clear\u201d list you can incorporate into your Weekly Review. It\u2019s called your \u201cTrigger List\u201d. This is a \u201ccatch-all\u201d for you to write any words that will be a \u201ctrigger\u201d for your brain in remembering to add an activity. It could be as simple as \u201cannual review notes for the boss\u201d you can move into your action lists when you have time. Get Creative Lastly, dream big. We are all creative beings, we just need to tap into that source. This process begins with writing all of those \u201cdown the road\u201d or \u201cmaybe someday\u201d items such as adventures, ideas, and dreams you have been putting off. The first step to realizing these dreams is writing them down and visualizing their reality.","title":"The 'Weekly Review' Method Will Help You Get Things Done"},{"location":"Highlights/Readwise/Articles/The%20%27Weekly%20Review%27%20Method%20Will%20Help%20You%20Get%20Things%20Done/#the-weekly-review-method-will-help-you-get-things-done","text":"","title":"The 'Weekly Review' Method Will Help You Get Things Done"},{"location":"Highlights/Readwise/Articles/The%20%27Weekly%20Review%27%20Method%20Will%20Help%20You%20Get%20Things%20Done/#metadata","text":"Author: [[Bauce Media Partner]] Full Title: The 'Weekly Review' Method Will Help You Get Things Done Category: #Type/Highlights/Article URL: https://baucemag.com/get-more-things-done-with-the-weekly-review-dan-allen/","title":"Metadata"},{"location":"Highlights/Readwise/Articles/The%20%27Weekly%20Review%27%20Method%20Will%20Help%20You%20Get%20Things%20Done/#highlights","text":"Most of the difficulty in self-improvement is knowing how you actually are performing The two missing links that keep us from completing our goals and sticking to the habits that get us there are visibility and accountability Visibility simply means you have written out exactly what your goal is and the habits or steps that will get you there. They are in your phone\u2019s Notes app, on the fridge, or written on a piece of paper at your desk. Practically speaking, this means your goals can be physically seen and are no longer mere wishes floating around in your brain. Accountability is the more challenging missing link out of the two. While anyone can write out good habits that hopefully result in a completed goal of theirs, it takes guts to share them with those close to you that can motivate you to succeed. It\u2019s proven that when we share a goal with someone we are more likely to stick to that goal and ultimately attain that goal. When no one is there to ask us about our progress or push us to go on that run or stick to that budget, we will tend to make excuses and push it to the next day. The three categories are called Get Clear, Get Current, and Get Creative. Get Clear Getting Clear is exactly what it means. Start the brain-dumping process and organize all of your to-do lists into one written location. This can be handwritten on paper, drawn on a whiteboard, or typed up on a document. The method does not matter as long as it works for you and your to-do list is in one location. Get Current Getting Current is reviewing your action items (goals and habits) and capturing them on your Weekly Review. Review your previous calendar items. Are there events and activities that are preventing you from reaching the goal that is most important to you? Modify it or remove it completely. Review your upcoming calendar items. What weeks are going to be especially challenging to keep your savings or weight loss goals on track? If you\u2019re out of town, make a note and develop a plan that keeps your habits in check. Other items to Get Current on are reviewing your \u201cwaiting for\u201d list. Maybe you\u2019re waiting on a savings goal because you are currently working on paying off student loans. Write this down on your waiting list. Start viewing this section as an excuse ridder. This way you know exactly what is holding you back and when it will be over. Reviewing project (and larger outcome) lists is for reviewing those week or month-long projects like renovating the kitchen. This creates a space for you to write down all the deliverables involved in the project so you don\u2019t miss a vital step. Just in case you missed something in the past sections there is one final \u201cGetting Clear\u201d list you can incorporate into your Weekly Review. It\u2019s called your \u201cTrigger List\u201d. This is a \u201ccatch-all\u201d for you to write any words that will be a \u201ctrigger\u201d for your brain in remembering to add an activity. It could be as simple as \u201cannual review notes for the boss\u201d you can move into your action lists when you have time. Get Creative Lastly, dream big. We are all creative beings, we just need to tap into that source. This process begins with writing all of those \u201cdown the road\u201d or \u201cmaybe someday\u201d items such as adventures, ideas, and dreams you have been putting off. The first step to realizing these dreams is writing them down and visualizing their reality.","title":"Highlights"},{"location":"Highlights/Readwise/Articles/The%2010%20Best%20Free%20Antivirus%20Software/","text":"The 10 Best Free Antivirus Software \u00b6 Metadata \u00b6 Author: Full Title: The 10 Best Free Antivirus Software Category: #Type/Highlights/Article URL: https://www.makeuseof.com/tag/ten-best-antivirus-programs/ Highlights \u00b6 Avira Bitdefender Malwarebytes Anti-Malware","title":"The 10 Best Free Antivirus Software"},{"location":"Highlights/Readwise/Articles/The%2010%20Best%20Free%20Antivirus%20Software/#the-10-best-free-antivirus-software","text":"","title":"The 10 Best Free Antivirus Software"},{"location":"Highlights/Readwise/Articles/The%2010%20Best%20Free%20Antivirus%20Software/#metadata","text":"Author: Full Title: The 10 Best Free Antivirus Software Category: #Type/Highlights/Article URL: https://www.makeuseof.com/tag/ten-best-antivirus-programs/","title":"Metadata"},{"location":"Highlights/Readwise/Articles/The%2010%20Best%20Free%20Antivirus%20Software/#highlights","text":"Avira Bitdefender Malwarebytes Anti-Malware","title":"Highlights"},{"location":"Highlights/Readwise/Articles/The%2013-Step%20Digital%20Declutter/","text":"The 13-Step Digital Declutter \u00b6 Metadata \u00b6 Author: [[Darien Graham-Smith]] Full Title: The 13-Step Digital Declutter Category: #Type/Highlights/Article URL: http://www.theguardian.com/technology/2017/jul/30/13-step-digital-declutter-clean-up-online Highlights \u00b6 Use free tools to clear out bloat Deactivate unused online accounts Get off unwanted mailing lists Free up space in your Gmail account Clear out browser extensions Track down space-wasting documents Windows users can use a free utility called WinDirStat; Deleting dozens of old accounts individually can be a chore, however. Account Killer is a free service that can help you quit hundreds of popular services with a few clicks. Simply type in the name of a website \u2013 or browse the complete list provided \u2013 and you\u2019ll see a colour-coded button. For \u201cwhite-listed\u201d services, Account Killer provides a link directly to the relevant deletion page. Remove optional Windows features To review and remove installed language packs, open the Start menu and type \u201clpksetup\u201d. Windows 10 also comes with numerous preinstalled Store apps. Clearing these out involves typing in a few commands but it\u2019s easy to do: see here for instructions. For the nuclear option, search the Start menu for \u201cReset this PC\u201d: this will remove all installed apps and revert your PC to a pristine state, while keeping your personal files safe. Prevent programs launching on startup Keep your photos in the cloud Clean up your feeds","title":"The 13-Step Digital Declutter"},{"location":"Highlights/Readwise/Articles/The%2013-Step%20Digital%20Declutter/#the-13-step-digital-declutter","text":"","title":"The 13-Step Digital Declutter"},{"location":"Highlights/Readwise/Articles/The%2013-Step%20Digital%20Declutter/#metadata","text":"Author: [[Darien Graham-Smith]] Full Title: The 13-Step Digital Declutter Category: #Type/Highlights/Article URL: http://www.theguardian.com/technology/2017/jul/30/13-step-digital-declutter-clean-up-online","title":"Metadata"},{"location":"Highlights/Readwise/Articles/The%2013-Step%20Digital%20Declutter/#highlights","text":"Use free tools to clear out bloat Deactivate unused online accounts Get off unwanted mailing lists Free up space in your Gmail account Clear out browser extensions Track down space-wasting documents Windows users can use a free utility called WinDirStat; Deleting dozens of old accounts individually can be a chore, however. Account Killer is a free service that can help you quit hundreds of popular services with a few clicks. Simply type in the name of a website \u2013 or browse the complete list provided \u2013 and you\u2019ll see a colour-coded button. For \u201cwhite-listed\u201d services, Account Killer provides a link directly to the relevant deletion page. Remove optional Windows features To review and remove installed language packs, open the Start menu and type \u201clpksetup\u201d. Windows 10 also comes with numerous preinstalled Store apps. Clearing these out involves typing in a few commands but it\u2019s easy to do: see here for instructions. For the nuclear option, search the Start menu for \u201cReset this PC\u201d: this will remove all installed apps and revert your PC to a pristine state, while keeping your personal files safe. Prevent programs launching on startup Keep your photos in the cloud Clean up your feeds","title":"Highlights"},{"location":"Highlights/Readwise/Articles/The%202%20Types%20of%20Technical%20Documentation%20That%20%20Developers%20Love/","text":"The 2 Types of Technical Documentation That Developers Love \u00b6 Metadata \u00b6 Author: [[Dmytro Khmelenko]] Full Title: The 2 Types of Technical Documentation That Developers Love Category: #Type/Highlights/Article URL: https://medium.com/p/c07db236b367 Highlights \u00b6 API documentation refers to the description of classes and methods in frameworks and libraries. The REST API is another example that\u2019s expected to have well-formulated documentation Now, ask yourself how often do you write documentation for the cases mentioned above. Do you write in the comments what each class does? Do all your REST methods have a place where all possible responses defined? need to know who the end-user of the product is. Documenting the approach or flow helps you to design the final product. It enables sharing the understanding within the team of how the entire system works \u2014 for instance, how the whole payment system works. Otherwise, some important details, like why payment verification is mandatory, could be missing or wrongly interpreted.","title":"The 2 Types of Technical Documentation That  Developers Love"},{"location":"Highlights/Readwise/Articles/The%202%20Types%20of%20Technical%20Documentation%20That%20%20Developers%20Love/#the-2-types-of-technical-documentation-that-developers-love","text":"","title":"The 2 Types of Technical Documentation That  Developers Love"},{"location":"Highlights/Readwise/Articles/The%202%20Types%20of%20Technical%20Documentation%20That%20%20Developers%20Love/#metadata","text":"Author: [[Dmytro Khmelenko]] Full Title: The 2 Types of Technical Documentation That Developers Love Category: #Type/Highlights/Article URL: https://medium.com/p/c07db236b367","title":"Metadata"},{"location":"Highlights/Readwise/Articles/The%202%20Types%20of%20Technical%20Documentation%20That%20%20Developers%20Love/#highlights","text":"API documentation refers to the description of classes and methods in frameworks and libraries. The REST API is another example that\u2019s expected to have well-formulated documentation Now, ask yourself how often do you write documentation for the cases mentioned above. Do you write in the comments what each class does? Do all your REST methods have a place where all possible responses defined? need to know who the end-user of the product is. Documenting the approach or flow helps you to design the final product. It enables sharing the understanding within the team of how the entire system works \u2014 for instance, how the whole payment system works. Otherwise, some important details, like why payment verification is mandatory, could be missing or wrongly interpreted.","title":"Highlights"},{"location":"Highlights/Readwise/Articles/The%2025%2B%20Best%20Productivity%20Apps%20in%202020/","text":"The 25+ Best Productivity Apps in 2020 \u00b6 Metadata \u00b6 Author: Full Title: The 25+ Best Productivity Apps in 2020 Category: #Type/Highlights/Article URL: https://collegeinfogeek.com/productivity-apps/ Highlights \u00b6 Best To-Do List App: Todoist Best Calendar App: Google Calendar Runner-Up: Woven Best Project Management App: Notion We use it to manage everything from our SOPs to ideas for videos and articles. workflow Best Note-Taking App: Evernote Best Writing App: Scrivener If you want to do some serious writing, then Scrivener is the app to get. It\u2019s full of features that are tailor-made for people who do long-form writing. Notable features include the ability to hone in on specific sections, as well as a digital \u201ccorkboard\u201d for playing with the arrangement of scenes/chapters. Runner-Up: Typora If you\u2019re looking for a writing app with a minimalist interface and great support for Markdown, then you should check out Typora. The writing experience is fast and clean, letting you focus on the words instead of the interface. Its organization features aren\u2019t as robust as Scrivener\u2019s, however, which prevents it from being our top pick. Alternatives: Google Docs \u2013 A great app for day-t0-day writing, Google Docs is simple and automatically backs up your work. Microsoft Word \u2013 Word needs no introduction, and it\u2019s still a perfectly good app for most writing tasks (especially if you plan to print your documents). For even more apps to help you focus on, edit, and publish your writing, check out our guide to the best writing apps. Best Grammar-Checking App: Grammarly Best Habit Tracker: Habitica Habitica is not your typical habit tracking app. Instead of giving you a checklist like most other apps, it turns habit building into an RPG. As you complete your habits, you can \u201clevel up\u201d your character and get new gear. And for additional motivation, you can join a party with other Habitica users and fight bosses together. If you fail to do one of your habits, your entire party will suffer, which helps you stay on track even on days when you don\u2019t feel like doing a habit. Runner-Up: Habitify Habitify is easy to use and has a beautiful design. It lets you easily see your habit streaks, your completion rate for your habits in general, and the times of day you do your habits. Best Anti-Distraction Tool: Freedom Freedom is a cross-platform app that blocks whatever you find distracting. You simply give Freedom a list of websites and apps to block, and the app will prevent you from accessing them until you turn it off. You can schedule Freedom to block apps during certain times each day, which is perfect if you have set work or study hours. For serious focus, Freedom even has a \u201cLocked Mode\u201d that prevents you from disabling it until the timer is up. Runner-Up: Forest If your phone is your main source of distraction, then Forest is a great app to keep you focused. Available for both Android and iOS, Forest uses gamification to prevent you from picking up your phone. Once you turn the app on, it will plant a virtual tree. As long as you don\u2019t touch your phone, the tree will grow. But if you touch your phone before the timer is up, you\u2019ll kill the tree. Over time, you\u2019ll grow a \u201cforest\u201d that represents your progress (each tree stands for a block of focused time). Best Email App: Gmail Gmail is already a popular email program, and for good reason. It\u2019s free, and it has great organization tools and keyboard shortcuts for processing email quickly. Plus, if you use Todoist, you can use the Todoist for Gmail extension to turn Gmail messages into Todoist tasks. This way, you don\u2019t have to risk the distraction of your inbox when you need to remind yourself what your boss wanted done by Friday. Runner-Up: Front Front isn\u2019t the right email app for most people. But if you\u2019ve gotten to the point where you need help processing your email, Front is awesome. It lets you create shared inboxes, assign messages to specific people, and even add comments and tag people on individual messages. Of course, all of this comes at a price, so it only makes sense to get Front if you\u2019re running a business and get large volumes of work-related email. Runner-Up: Instapaper Instapaper is what I used before I discovered Pocket, and it\u2019s still an excellent app for saving articles to read offline. I think Pocket does a better job of organizing articles you\u2019ve saved, but Instapaper is nonetheless a solid option. Best Document Scanner App: Scanbot Scanbot is the best scanner app on the market, hands down. It lets you quickly scan any kind of document, whether it\u2019s a receipt, whiteboard, or notebook page. Scanbot automatically crops and optimizes the image (something that desktop scanners still struggle with). And once it\u2019s scanned the image, Scanbot will turn it into a PDF that you can automatically upload to a variety of cloud storage, chat, and to-do list apps. Best Cloud Sync App: Google Drive There are lots of cloud sync apps available, all offering more or less the same features. Google Drive is still our top pick because they give you 15GB of storage for free (more than any of their competitors). And if you need more storage than that, you can upgrade to Google One and get 100GB of storage for just $2 a month. Runner-Up: Dropbox Google Drive is our top cloud sync pick because it offers the most storage for the least money. But if you\u2019re looking for an equally powerful alternative, Dropbox is a great choice. The core features are the same, though you\u2019ll also get to enjoy some fun extras such as Dropbox Paper (a beautiful, cloud-based document editor). The downside is that the free plan only gives you 2GB of storage, though you can upgrade to 2TB of storage for $11.99 a month. Alternatives: Syncthing \u2013 Instead of syncing your data to the cloud, Syncthing keeps it synced across your devices (making it great if you\u2019re concerned about the security or privacy of cloud storage services). OneDrive \u2013 OneDrive offers a solid amount of storage, and your school/work may already provide an account for free. Best Cloud Backup App: Backblaze If you want a backup app that you can set up and forget, then Backblaze is the best option. Once you install it, it automatically backs up your files in the background. There\u2019s no limit to the number, size, or type of files it will back up. And if you ever need to access a file, you can download it from Backblaze for free. If you prefer, Backblaze can also mail you a flash drive or external hard drive with your data (for a fee). And the best part is that you can get all of this for just $6 per month. Runner-Up: CrashPlan If you\u2019re backing up data for your small business, then CrashPlan is worth looking into. It costs $10/month per computer, so it\u2019s reasonably affordable if you have a small office full of computers that you need to back up. However, if you\u2019re just backing up your personal files, Backblaze is a better deal. When you\u2019re brainstorming a project, it\u2019s sometimes easier to organize your thoughts visually. This is where mind-mapping comes in handy. With mind-mapping, you draw a circle (or really any shape you want) with one broad idea or topic. Then, you draw lines to smaller circles with more specific ideas related to the original one. It may sound strange if you\u2019ve never done it, but this is a quick way to come up with new ideas. It\u2019s especially useful if you\u2019re struggling to come up with an idea for an essay or presentation. Best Mind-Mapping Tool: Coggle While you can create a mind map on paper, paper mind maps can get difficult to manage as they get larger. And if you want to collaborate on a mind map with someone else, paper is impractical. Coggle solves these problems. It lets you create flexible, collaborative mind maps and flow charts that are as large and complex as you want. You can even add images to further illustrate particular ideas. Runner-Up: MindMeister MindMeister is fairly similar to Coggle, though it focuses more on people who want to use mind maps to make presentations. If that describes you, you should check it out. Screenshots are essential for explaining ideas and problems that text alone cannot. While all modern operating systems have some kind of built-in screenshot tool, these built-in apps often leave certain features to be desired. Here are our favorite apps for taking screenshots across platforms. Best Screenshot Tool: Monosnap Monosnap is an elegant, unintrusive tool for taking screenshots on both Mac and Windows computers. With just a couple of clicks or keypresses, you can take a screenshot of any part of the screen. The app then lets you edit and annotate the images on the fly before saving them to your computer or uploading them for cloud storage. You can even record screencasts (though see the next section for some better screen recording tools). Runner-Up: Greenshot Greenshot is a simple tool for taking screenshots on Windows. It lets you capture everything from the current window to a selected region of the screen. Once you\u2019ve captured the screenshot, you can easily crop and annotate it. Plus, the program is free and open source. The only reason Greenshot isn\u2019t our top pick is that the Mac version is sorely lacking in features. If the Mac version improves, we\u2019ll let you know. But for the moment, we recommend sticking with Monosnap if you\u2019re on a Mac. Most people are terrible at managing passwords. If you use the same password for everything, you risk compromising all of your accounts if just one of them is hacked. And if the password is something simple like your birthday or pet\u2019s name, it could be easy for someone to guess. The most secure passwords are long, complicated, and unique. But how are you supposed to remember dozens of unique, complex passwords? Luckily, you don\u2019t have to. All you have to do is use a password manager to keep track of passwords for you. Best Password Manager: Dashlane Dashlane makes it easy to create, store, and access complex passwords for every app and website you use. Once you install Dashlane, it can automatically generate strong passwords. After you generate a password, Dashlane will securely store it and automatically input it every time you need to log into an app or website. To keep your passwords secure, Dashlane requires you to create and remember just one password. Whenever you want to access your passwords, all you have to do is enter this master password. In addition to its excellent password management features, Dashlane also includes some nice bonuses such as a VPN for browsing privately on unsecured internet connections and the ability to store other secure information such as credit card details. Runner-Up: LastPass LastPass is what we used before we discovered Dashlane. It\u2019s still an excellent password manager, letting you generate strong passwords and access them with one master password. However, it tends to struggle with form-filling on some websites, and it doesn\u2019t include a VPN. Alternatives: 1Password \u2013 A password manager aimed mainly at businesses, 1Password can also work for personal use (though there\u2019s no free plan available). Roboform \u2013 Roboform is a solid password manager, though the interface is a bit clunky compared to some of the other options on this list. Best Integration Creator: IFTTT IFTTT stands for \u201cIf This, Then That.\u201d This simple phrase sums up all the complex things you can do with the app. IFTTT allows you to trigger an action in one app based on data from another. The result is called an \u201cApplet,\u201d and IFTTT has millions of them to do just about anything you want. For instance, let\u2019s say you want to use Google Calendar, but your office uses Outlook. Instead of having to manually enter all of your Outlook events into Google Calendar, you could use this IFTTT Applet to automatically sync your Outlook events to your Google Calendar. While there\u2019s likely a premade Applet to accomplish your goals, you can also create your own Applets if you need to. Best Windows Clipboard Manager: Clipboard Help+Spell Clipboard Help+Spell creates a database of every image and piece of text you copy to your clipboard. This way, you can easily retrieve items minutes, hours, or even days after you copied them. Tags: [[favorite]] Best Text Expander: aText aText is a simple text expander for Mac and Windows. All you have to do is define abbreviations for phrases that you commonly use, and aText will automatically change the abbreviation to the phrase each time you type it. For instance, if you frequently type the phrase \u201cPixel art llamas are awesome,\u201d you could set up aText to automatically insert that phrase each time you type the abbreviation \u201c;px\u201d. (It\u2019s good practice to begin your abbreviations with a semicolon or another punctuation mark so that you don\u2019t accidentally insert the phrase when typing a word or abbreviation). Note: While the Windows version of aText is free, the Mac version costs $4.99 (with a free 21-day trial). Alternatives: AutoHotKey \u2013 This Windows-only utility gives you a lot of power over the types of text expansions you can create, though it requires some knowledge of scripting and programming concepts to access its full power. Alfred Powerpack \u2013 If you already have Alfred Powerpack, it has a built-in text expander that works great in most situations. Productivity Is About More Than Just Apps We hope this guide has helped you find the productivity apps you need to be more productive at work or school. At the same time, we want to remind you that productivity ultimately isn\u2019t about finding the right app. To truly become a more productive person, you need to work the right way and develop the right habits. To help you do that, we recommend taking our free one-hour course on building habits that last. Learn more about it here: Take my free class on mastering habits Building habits isn\u2019t just about discipline; there are real-world steps you can take to set yourself up for success! In this course, you'll learn how to set realistic goals, handle failure without giving up, and get going on the habits you want in your life.","title":"The 25+ Best Productivity Apps in 2020"},{"location":"Highlights/Readwise/Articles/The%2025%2B%20Best%20Productivity%20Apps%20in%202020/#the-25-best-productivity-apps-in-2020","text":"","title":"The 25+ Best Productivity Apps in 2020"},{"location":"Highlights/Readwise/Articles/The%2025%2B%20Best%20Productivity%20Apps%20in%202020/#metadata","text":"Author: Full Title: The 25+ Best Productivity Apps in 2020 Category: #Type/Highlights/Article URL: https://collegeinfogeek.com/productivity-apps/","title":"Metadata"},{"location":"Highlights/Readwise/Articles/The%2025%2B%20Best%20Productivity%20Apps%20in%202020/#highlights","text":"Best To-Do List App: Todoist Best Calendar App: Google Calendar Runner-Up: Woven Best Project Management App: Notion We use it to manage everything from our SOPs to ideas for videos and articles. workflow Best Note-Taking App: Evernote Best Writing App: Scrivener If you want to do some serious writing, then Scrivener is the app to get. It\u2019s full of features that are tailor-made for people who do long-form writing. Notable features include the ability to hone in on specific sections, as well as a digital \u201ccorkboard\u201d for playing with the arrangement of scenes/chapters. Runner-Up: Typora If you\u2019re looking for a writing app with a minimalist interface and great support for Markdown, then you should check out Typora. The writing experience is fast and clean, letting you focus on the words instead of the interface. Its organization features aren\u2019t as robust as Scrivener\u2019s, however, which prevents it from being our top pick. Alternatives: Google Docs \u2013 A great app for day-t0-day writing, Google Docs is simple and automatically backs up your work. Microsoft Word \u2013 Word needs no introduction, and it\u2019s still a perfectly good app for most writing tasks (especially if you plan to print your documents). For even more apps to help you focus on, edit, and publish your writing, check out our guide to the best writing apps. Best Grammar-Checking App: Grammarly Best Habit Tracker: Habitica Habitica is not your typical habit tracking app. Instead of giving you a checklist like most other apps, it turns habit building into an RPG. As you complete your habits, you can \u201clevel up\u201d your character and get new gear. And for additional motivation, you can join a party with other Habitica users and fight bosses together. If you fail to do one of your habits, your entire party will suffer, which helps you stay on track even on days when you don\u2019t feel like doing a habit. Runner-Up: Habitify Habitify is easy to use and has a beautiful design. It lets you easily see your habit streaks, your completion rate for your habits in general, and the times of day you do your habits. Best Anti-Distraction Tool: Freedom Freedom is a cross-platform app that blocks whatever you find distracting. You simply give Freedom a list of websites and apps to block, and the app will prevent you from accessing them until you turn it off. You can schedule Freedom to block apps during certain times each day, which is perfect if you have set work or study hours. For serious focus, Freedom even has a \u201cLocked Mode\u201d that prevents you from disabling it until the timer is up. Runner-Up: Forest If your phone is your main source of distraction, then Forest is a great app to keep you focused. Available for both Android and iOS, Forest uses gamification to prevent you from picking up your phone. Once you turn the app on, it will plant a virtual tree. As long as you don\u2019t touch your phone, the tree will grow. But if you touch your phone before the timer is up, you\u2019ll kill the tree. Over time, you\u2019ll grow a \u201cforest\u201d that represents your progress (each tree stands for a block of focused time). Best Email App: Gmail Gmail is already a popular email program, and for good reason. It\u2019s free, and it has great organization tools and keyboard shortcuts for processing email quickly. Plus, if you use Todoist, you can use the Todoist for Gmail extension to turn Gmail messages into Todoist tasks. This way, you don\u2019t have to risk the distraction of your inbox when you need to remind yourself what your boss wanted done by Friday. Runner-Up: Front Front isn\u2019t the right email app for most people. But if you\u2019ve gotten to the point where you need help processing your email, Front is awesome. It lets you create shared inboxes, assign messages to specific people, and even add comments and tag people on individual messages. Of course, all of this comes at a price, so it only makes sense to get Front if you\u2019re running a business and get large volumes of work-related email. Runner-Up: Instapaper Instapaper is what I used before I discovered Pocket, and it\u2019s still an excellent app for saving articles to read offline. I think Pocket does a better job of organizing articles you\u2019ve saved, but Instapaper is nonetheless a solid option. Best Document Scanner App: Scanbot Scanbot is the best scanner app on the market, hands down. It lets you quickly scan any kind of document, whether it\u2019s a receipt, whiteboard, or notebook page. Scanbot automatically crops and optimizes the image (something that desktop scanners still struggle with). And once it\u2019s scanned the image, Scanbot will turn it into a PDF that you can automatically upload to a variety of cloud storage, chat, and to-do list apps. Best Cloud Sync App: Google Drive There are lots of cloud sync apps available, all offering more or less the same features. Google Drive is still our top pick because they give you 15GB of storage for free (more than any of their competitors). And if you need more storage than that, you can upgrade to Google One and get 100GB of storage for just $2 a month. Runner-Up: Dropbox Google Drive is our top cloud sync pick because it offers the most storage for the least money. But if you\u2019re looking for an equally powerful alternative, Dropbox is a great choice. The core features are the same, though you\u2019ll also get to enjoy some fun extras such as Dropbox Paper (a beautiful, cloud-based document editor). The downside is that the free plan only gives you 2GB of storage, though you can upgrade to 2TB of storage for $11.99 a month. Alternatives: Syncthing \u2013 Instead of syncing your data to the cloud, Syncthing keeps it synced across your devices (making it great if you\u2019re concerned about the security or privacy of cloud storage services). OneDrive \u2013 OneDrive offers a solid amount of storage, and your school/work may already provide an account for free. Best Cloud Backup App: Backblaze If you want a backup app that you can set up and forget, then Backblaze is the best option. Once you install it, it automatically backs up your files in the background. There\u2019s no limit to the number, size, or type of files it will back up. And if you ever need to access a file, you can download it from Backblaze for free. If you prefer, Backblaze can also mail you a flash drive or external hard drive with your data (for a fee). And the best part is that you can get all of this for just $6 per month. Runner-Up: CrashPlan If you\u2019re backing up data for your small business, then CrashPlan is worth looking into. It costs $10/month per computer, so it\u2019s reasonably affordable if you have a small office full of computers that you need to back up. However, if you\u2019re just backing up your personal files, Backblaze is a better deal. When you\u2019re brainstorming a project, it\u2019s sometimes easier to organize your thoughts visually. This is where mind-mapping comes in handy. With mind-mapping, you draw a circle (or really any shape you want) with one broad idea or topic. Then, you draw lines to smaller circles with more specific ideas related to the original one. It may sound strange if you\u2019ve never done it, but this is a quick way to come up with new ideas. It\u2019s especially useful if you\u2019re struggling to come up with an idea for an essay or presentation. Best Mind-Mapping Tool: Coggle While you can create a mind map on paper, paper mind maps can get difficult to manage as they get larger. And if you want to collaborate on a mind map with someone else, paper is impractical. Coggle solves these problems. It lets you create flexible, collaborative mind maps and flow charts that are as large and complex as you want. You can even add images to further illustrate particular ideas. Runner-Up: MindMeister MindMeister is fairly similar to Coggle, though it focuses more on people who want to use mind maps to make presentations. If that describes you, you should check it out. Screenshots are essential for explaining ideas and problems that text alone cannot. While all modern operating systems have some kind of built-in screenshot tool, these built-in apps often leave certain features to be desired. Here are our favorite apps for taking screenshots across platforms. Best Screenshot Tool: Monosnap Monosnap is an elegant, unintrusive tool for taking screenshots on both Mac and Windows computers. With just a couple of clicks or keypresses, you can take a screenshot of any part of the screen. The app then lets you edit and annotate the images on the fly before saving them to your computer or uploading them for cloud storage. You can even record screencasts (though see the next section for some better screen recording tools). Runner-Up: Greenshot Greenshot is a simple tool for taking screenshots on Windows. It lets you capture everything from the current window to a selected region of the screen. Once you\u2019ve captured the screenshot, you can easily crop and annotate it. Plus, the program is free and open source. The only reason Greenshot isn\u2019t our top pick is that the Mac version is sorely lacking in features. If the Mac version improves, we\u2019ll let you know. But for the moment, we recommend sticking with Monosnap if you\u2019re on a Mac. Most people are terrible at managing passwords. If you use the same password for everything, you risk compromising all of your accounts if just one of them is hacked. And if the password is something simple like your birthday or pet\u2019s name, it could be easy for someone to guess. The most secure passwords are long, complicated, and unique. But how are you supposed to remember dozens of unique, complex passwords? Luckily, you don\u2019t have to. All you have to do is use a password manager to keep track of passwords for you. Best Password Manager: Dashlane Dashlane makes it easy to create, store, and access complex passwords for every app and website you use. Once you install Dashlane, it can automatically generate strong passwords. After you generate a password, Dashlane will securely store it and automatically input it every time you need to log into an app or website. To keep your passwords secure, Dashlane requires you to create and remember just one password. Whenever you want to access your passwords, all you have to do is enter this master password. In addition to its excellent password management features, Dashlane also includes some nice bonuses such as a VPN for browsing privately on unsecured internet connections and the ability to store other secure information such as credit card details. Runner-Up: LastPass LastPass is what we used before we discovered Dashlane. It\u2019s still an excellent password manager, letting you generate strong passwords and access them with one master password. However, it tends to struggle with form-filling on some websites, and it doesn\u2019t include a VPN. Alternatives: 1Password \u2013 A password manager aimed mainly at businesses, 1Password can also work for personal use (though there\u2019s no free plan available). Roboform \u2013 Roboform is a solid password manager, though the interface is a bit clunky compared to some of the other options on this list. Best Integration Creator: IFTTT IFTTT stands for \u201cIf This, Then That.\u201d This simple phrase sums up all the complex things you can do with the app. IFTTT allows you to trigger an action in one app based on data from another. The result is called an \u201cApplet,\u201d and IFTTT has millions of them to do just about anything you want. For instance, let\u2019s say you want to use Google Calendar, but your office uses Outlook. Instead of having to manually enter all of your Outlook events into Google Calendar, you could use this IFTTT Applet to automatically sync your Outlook events to your Google Calendar. While there\u2019s likely a premade Applet to accomplish your goals, you can also create your own Applets if you need to. Best Windows Clipboard Manager: Clipboard Help+Spell Clipboard Help+Spell creates a database of every image and piece of text you copy to your clipboard. This way, you can easily retrieve items minutes, hours, or even days after you copied them. Tags: [[favorite]] Best Text Expander: aText aText is a simple text expander for Mac and Windows. All you have to do is define abbreviations for phrases that you commonly use, and aText will automatically change the abbreviation to the phrase each time you type it. For instance, if you frequently type the phrase \u201cPixel art llamas are awesome,\u201d you could set up aText to automatically insert that phrase each time you type the abbreviation \u201c;px\u201d. (It\u2019s good practice to begin your abbreviations with a semicolon or another punctuation mark so that you don\u2019t accidentally insert the phrase when typing a word or abbreviation). Note: While the Windows version of aText is free, the Mac version costs $4.99 (with a free 21-day trial). Alternatives: AutoHotKey \u2013 This Windows-only utility gives you a lot of power over the types of text expansions you can create, though it requires some knowledge of scripting and programming concepts to access its full power. Alfred Powerpack \u2013 If you already have Alfred Powerpack, it has a built-in text expander that works great in most situations. Productivity Is About More Than Just Apps We hope this guide has helped you find the productivity apps you need to be more productive at work or school. At the same time, we want to remind you that productivity ultimately isn\u2019t about finding the right app. To truly become a more productive person, you need to work the right way and develop the right habits. To help you do that, we recommend taking our free one-hour course on building habits that last. Learn more about it here: Take my free class on mastering habits Building habits isn\u2019t just about discipline; there are real-world steps you can take to set yourself up for success! In this course, you'll learn how to set realistic goals, handle failure without giving up, and get going on the habits you want in your life.","title":"Highlights"},{"location":"Highlights/Readwise/Articles/The%2035%20Best%20Productivity%20Apps%20for%202020/","text":"The 35 Best Productivity Apps for 2020 \u00b6 Metadata \u00b6 Author: Full Title: The 35 Best Productivity Apps for 2020 Category: #Type/Highlights/Article URL: https://doist.com/blog/best-productivity-apps/ Highlights \u00b6 Woven \u2013 For a combined calendar and scheduling app it\u2019s in the integrated scheduling features where Woven really shines. The app lets you create scheduling links to share so others can grab a time slot on your calendar based on your specified availability. You can also create group polls to find a time slot that works for the most people, then simply click to add it to everyone\u2019s calendars. (The people you share links and group polls with don\u2019t have to be Woven users themselves.) There\u2019s no app out there that packs this much scheduling power directly inside a beautifully designed calendar app in it\u2019s own right. Kindle for iPhone/Android \u2013 For reading books instead of browsing social media Audible \u2013 For listening to books Libby \u2013 For reading & listening to library books (for free!) Feedly \u2013 For curating your own newsfeed PocketCasts \u2013 For staying up-to-date on all your podcasts Notion \u2013 For creating your own personal wiki Doist\u2019s Growth Marketer, Hugo, relies on Notion to keep his thoughts, ideas, and projects organized: Notion is my main place for thinking with words, jotting down ideas, consolidating my learnings, and keeping all of that quite organized. I also use it for personal projects like: what I need to think about for my sister\u2019s wedding ceremony, tracking my Doist perks, or keeping an overview of revenues/expenses for finances (with tables), books I read (with a gallery), and sometimes bookmarking things I\u2019ve read for later reference.","title":"The 35 Best Productivity Apps for 2020"},{"location":"Highlights/Readwise/Articles/The%2035%20Best%20Productivity%20Apps%20for%202020/#the-35-best-productivity-apps-for-2020","text":"","title":"The 35 Best Productivity Apps for 2020"},{"location":"Highlights/Readwise/Articles/The%2035%20Best%20Productivity%20Apps%20for%202020/#metadata","text":"Author: Full Title: The 35 Best Productivity Apps for 2020 Category: #Type/Highlights/Article URL: https://doist.com/blog/best-productivity-apps/","title":"Metadata"},{"location":"Highlights/Readwise/Articles/The%2035%20Best%20Productivity%20Apps%20for%202020/#highlights","text":"Woven \u2013 For a combined calendar and scheduling app it\u2019s in the integrated scheduling features where Woven really shines. The app lets you create scheduling links to share so others can grab a time slot on your calendar based on your specified availability. You can also create group polls to find a time slot that works for the most people, then simply click to add it to everyone\u2019s calendars. (The people you share links and group polls with don\u2019t have to be Woven users themselves.) There\u2019s no app out there that packs this much scheduling power directly inside a beautifully designed calendar app in it\u2019s own right. Kindle for iPhone/Android \u2013 For reading books instead of browsing social media Audible \u2013 For listening to books Libby \u2013 For reading & listening to library books (for free!) Feedly \u2013 For curating your own newsfeed PocketCasts \u2013 For staying up-to-date on all your podcasts Notion \u2013 For creating your own personal wiki Doist\u2019s Growth Marketer, Hugo, relies on Notion to keep his thoughts, ideas, and projects organized: Notion is my main place for thinking with words, jotting down ideas, consolidating my learnings, and keeping all of that quite organized. I also use it for personal projects like: what I need to think about for my sister\u2019s wedding ceremony, tracking my Doist perks, or keeping an overview of revenues/expenses for finances (with tables), books I read (with a gallery), and sometimes bookmarking things I\u2019ve read for later reference.","title":"Highlights"},{"location":"Highlights/Readwise/Articles/The%20Best%20Free%20Software%20of%202020/","text":"The Best Free Software of 2020 \u00b6 Metadata \u00b6 Author: Full Title: The Best Free Software of 2020 Category: #Type/Highlights/Article URL: https://www.pcmag.com/news/best-free-software Highlights \u00b6 IDrive You get 5GB free from IDrive to back up files from all your devices. If that's enough, you'll find this service more than up to your needs. It'll even back up your photos and videos from Facebook. (Read our review of IDrive, a PCMag Editors' Choice.) (Wondering about Google Drive? It's on the list, but down under Office Suites.) AOMEI Backupper The standard, free version of this tool can create a full system image, back up entire drives or specific partitions, schedule backup of files and folders you specify, even fully clone a smaller drive to a larger drive for an upgrade (or a hard drive to a solid state drive for a speed boost). Recuva Recuva (say it out loud) is a must on the tool belt of any techie: it's the key to helping recover a lost file. It's easy to understand, though should really be installed before you lose a file. It's portable, so you have the option to run it from a USB thumb drive. (Read our review of Recuva.) Filezilla The former computer-science project is now one of the best standalone file transfer protocol (FTP) clients around. It's a must-have for website owners who transfer a lot of files to a server, fast. It comes in a client and Windows-only server option. Teracopy Windows copies files between folders and drives just fine. TeraCopy takes over that job and makes it sing\u2014it's faster, better looking, provides more information/feedback, and can recover from transfer errors. File Management Multi Commander There are many, many attempts out there to replace Windows Explorer (a file manager marinating in weak sauce). Multi Commander stands out, providing multiple tabs, a file viewer, and dual panels to efficiently show you everything. 7-Zip Eventually in this life, you're going to run into an archive file\u2014a single file with multiple files stored (and compressed) inside it. They have different extensions, from RAR to ZIP to 7z and many more, and sometimes the program to open them costs you. Not 7-Zip. It opens all of those and more, and allows creation of new archives. It'll even encrypt the contents for safety. It's entirely open source. Evernote Evernote is your online repository for everything. Scan it, shoot it, type it, whatever, just put it in Evernote to find later. Most text, even in pictures, is made searchable. Organize the notes into Notebooks, then access it anywhere. Despite some severe ups and downs in its business model, it remains our Editors' Choice for note-taking apps on multiple platforms\u2014even if you can only use two devices (plus the web interface) for free. Foxit Reader Foxit Reader is free for not just reading, but also creating PDFs and collaboration on the files (at least you can with the Windows version; Mac and Linux are more limited). Foxit's MobilePDF apps are on iOS and Android. Send PDF files between them and even update the contents after the fact (thanks be to the cloud). (For more, read How to Convert PDFs to Word Documents and Image Files.) Kaspersky Free Kaspersky Free has perfect scores from independent antivirus labs and our phishing tests. The only thing it lacks is direct tech support. (And yes, we know there are allegations about ties to the Russian government, but haven't seen any proof yet.) (Read our review of Kapersky Free, a PCMag Editors\u2019 Choice.) BoxCryptor This app creates a folder where everything inside gets AES-256 and RSA encrypted. Use one cloud service and two devices with the free version and share access to encrypted files with others. BoxCryptor itself has zero access to your data or account info, so don't lose your password. (For more, read How to Encrypt a Document Stored on Google Drive.) ShareX ShareX might have too many options, but if you love choice\u2014both in how to take a shot (like a scrolling capture or OCRing text) and what to do with it after (it supports 80 different destinations and plenty of annotation options)\u2014this is the capture utility you need for your Windows PC. IObit Driver Booster Sometimes the only software you want to update are the drivers that connect your hardware components. Driver Booster checks them to see if the hardware manufacturers have anything new that will make your system purr like a kitten. It creates a restore point before installing drivers for you, just in case something goes awry, and comes a free Windows Software Updater to run once the drivers are updated. IObit Uninstaller This is the tool you need to get rid of stubborn programs, plug-ins, and toolbars on a Windows PC. It outpaces the competition by including a community-based suggestion feature, so the rest of the internet is helping you delete extraneous crud from the PC, too. (Read our review of IObit Uninstaller Free, a PCMag Editors' Choice.) Ninite Ready to install a whole butt-load of programs for Windows all at once, like after you purchase a new PC? Don't grab them all individually\u2014visit Ninite to check off all the programs you want. Then download a custom installer that will place all the programs on the PC in one massive installation session. Unchecky This doesn't uninstall as much as it prevents installs. We've mentioned how you might be accidentally getting Windows software you don't want when you install something you do. Unchecky ensures all the checkboxes in the installer programs are unchecked, and warns you if you may be getting a potentially unwanted program (PUP) or offer AutoHotkey Love your macros in Microsoft Word? Now imagine those same keystrokes performing similar actions in every single program in Windows. That's what AutoHotkey brings to the table\u2014a full scripting language for Windows. HWiNFO This system-information utility does the most thorough audit of your computer and peripherals you'll ever see. Pick the version you need for either 32-bit or 64-bit Windows, whichever you have installed. The portable version can run from a thumb drive. FileSeek Windows search is rarely up to snuff. This utility offers ultra-fast search, checking inside folders and files, looking for patterns, and even uses Regular Expressions for advanced searches. It doesn't even have to index files in the background to work. Save your searches for use again later. Trelby Fancy yourself a budding screenwriter, but lack the funds to buy high-end tools like Final Draft? Trelby does a damn fine job of helping you keep the formatting correct, remembering character names, and even importing and exporting to formats used in Hollywood.","title":"The Best Free Software of 2020"},{"location":"Highlights/Readwise/Articles/The%20Best%20Free%20Software%20of%202020/#the-best-free-software-of-2020","text":"","title":"The Best Free Software of 2020"},{"location":"Highlights/Readwise/Articles/The%20Best%20Free%20Software%20of%202020/#metadata","text":"Author: Full Title: The Best Free Software of 2020 Category: #Type/Highlights/Article URL: https://www.pcmag.com/news/best-free-software","title":"Metadata"},{"location":"Highlights/Readwise/Articles/The%20Best%20Free%20Software%20of%202020/#highlights","text":"IDrive You get 5GB free from IDrive to back up files from all your devices. If that's enough, you'll find this service more than up to your needs. It'll even back up your photos and videos from Facebook. (Read our review of IDrive, a PCMag Editors' Choice.) (Wondering about Google Drive? It's on the list, but down under Office Suites.) AOMEI Backupper The standard, free version of this tool can create a full system image, back up entire drives or specific partitions, schedule backup of files and folders you specify, even fully clone a smaller drive to a larger drive for an upgrade (or a hard drive to a solid state drive for a speed boost). Recuva Recuva (say it out loud) is a must on the tool belt of any techie: it's the key to helping recover a lost file. It's easy to understand, though should really be installed before you lose a file. It's portable, so you have the option to run it from a USB thumb drive. (Read our review of Recuva.) Filezilla The former computer-science project is now one of the best standalone file transfer protocol (FTP) clients around. It's a must-have for website owners who transfer a lot of files to a server, fast. It comes in a client and Windows-only server option. Teracopy Windows copies files between folders and drives just fine. TeraCopy takes over that job and makes it sing\u2014it's faster, better looking, provides more information/feedback, and can recover from transfer errors. File Management Multi Commander There are many, many attempts out there to replace Windows Explorer (a file manager marinating in weak sauce). Multi Commander stands out, providing multiple tabs, a file viewer, and dual panels to efficiently show you everything. 7-Zip Eventually in this life, you're going to run into an archive file\u2014a single file with multiple files stored (and compressed) inside it. They have different extensions, from RAR to ZIP to 7z and many more, and sometimes the program to open them costs you. Not 7-Zip. It opens all of those and more, and allows creation of new archives. It'll even encrypt the contents for safety. It's entirely open source. Evernote Evernote is your online repository for everything. Scan it, shoot it, type it, whatever, just put it in Evernote to find later. Most text, even in pictures, is made searchable. Organize the notes into Notebooks, then access it anywhere. Despite some severe ups and downs in its business model, it remains our Editors' Choice for note-taking apps on multiple platforms\u2014even if you can only use two devices (plus the web interface) for free. Foxit Reader Foxit Reader is free for not just reading, but also creating PDFs and collaboration on the files (at least you can with the Windows version; Mac and Linux are more limited). Foxit's MobilePDF apps are on iOS and Android. Send PDF files between them and even update the contents after the fact (thanks be to the cloud). (For more, read How to Convert PDFs to Word Documents and Image Files.) Kaspersky Free Kaspersky Free has perfect scores from independent antivirus labs and our phishing tests. The only thing it lacks is direct tech support. (And yes, we know there are allegations about ties to the Russian government, but haven't seen any proof yet.) (Read our review of Kapersky Free, a PCMag Editors\u2019 Choice.) BoxCryptor This app creates a folder where everything inside gets AES-256 and RSA encrypted. Use one cloud service and two devices with the free version and share access to encrypted files with others. BoxCryptor itself has zero access to your data or account info, so don't lose your password. (For more, read How to Encrypt a Document Stored on Google Drive.) ShareX ShareX might have too many options, but if you love choice\u2014both in how to take a shot (like a scrolling capture or OCRing text) and what to do with it after (it supports 80 different destinations and plenty of annotation options)\u2014this is the capture utility you need for your Windows PC. IObit Driver Booster Sometimes the only software you want to update are the drivers that connect your hardware components. Driver Booster checks them to see if the hardware manufacturers have anything new that will make your system purr like a kitten. It creates a restore point before installing drivers for you, just in case something goes awry, and comes a free Windows Software Updater to run once the drivers are updated. IObit Uninstaller This is the tool you need to get rid of stubborn programs, plug-ins, and toolbars on a Windows PC. It outpaces the competition by including a community-based suggestion feature, so the rest of the internet is helping you delete extraneous crud from the PC, too. (Read our review of IObit Uninstaller Free, a PCMag Editors' Choice.) Ninite Ready to install a whole butt-load of programs for Windows all at once, like after you purchase a new PC? Don't grab them all individually\u2014visit Ninite to check off all the programs you want. Then download a custom installer that will place all the programs on the PC in one massive installation session. Unchecky This doesn't uninstall as much as it prevents installs. We've mentioned how you might be accidentally getting Windows software you don't want when you install something you do. Unchecky ensures all the checkboxes in the installer programs are unchecked, and warns you if you may be getting a potentially unwanted program (PUP) or offer AutoHotkey Love your macros in Microsoft Word? Now imagine those same keystrokes performing similar actions in every single program in Windows. That's what AutoHotkey brings to the table\u2014a full scripting language for Windows. HWiNFO This system-information utility does the most thorough audit of your computer and peripherals you'll ever see. Pick the version you need for either 32-bit or 64-bit Windows, whichever you have installed. The portable version can run from a thumb drive. FileSeek Windows search is rarely up to snuff. This utility offers ultra-fast search, checking inside folders and files, looking for patterns, and even uses Regular Expressions for advanced searches. It doesn't even have to index files in the background to work. Save your searches for use again later. Trelby Fancy yourself a budding screenwriter, but lack the funds to buy high-end tools like Final Draft? Trelby does a damn fine job of helping you keep the formatting correct, remembering character names, and even importing and exporting to formats used in Hollywood.","title":"Highlights"},{"location":"Highlights/Readwise/Articles/The%20Best%20Microsoft%20Store%20Apps%20for%20Windows%2010/","text":"The Best Microsoft Store Apps for Windows 10 \u00b6 Metadata \u00b6 Author: Full Title: The Best Microsoft Store Apps for Windows 10 Category: #Type/Highlights/Article URL: https://www.makeuseof.com/tag/best-windows-10-apps/ Highlights \u00b6 Cloud Storage Dropbox and OneDrive have official apps for Windows 10, and there\u2019s also an unofficial Google Drive client you should check out. OneDrive is Microsoft\u2019s flagship cloud storage service. For people who don\u2019t want to deal with the somewhat fiddly desktop folder, the app is a great alternative. Note: try out the store app! Copying and pasting are incredibly useful and simple. If you have to move a lot of content, however, constantly bouncing back and forth between apps can quickly become frustrating. Try using Copy Space instead. It\u2019s a universal clipboard that can store several items at once. All your copies are sorted into categories, and it can sync between all your devices. Overdrive has a global network of more than 34,000 libraries which you can use to borrow eBooks, audiobooks, and videos. Anything you borrow will automatically sync across all your devices and the library is open 24/7. The app also doubles as an eReader, so you can do your borrowing and reading through the same interface. Best of all titles are automatically returned at the end of their loan period\u2014you\u2019ll never have to pay a late fee again! (Note: You need to be a member of your local library to access the app) Using this Amazon Windows 10 app is faster than using the website. Search is fast and processing purchases is efficient\u2014try it! We\u2019ve all lived in a place with a dodgy internet connection at some point in our lives. Perhaps the speed fluctuates wildly or your connection is prone to dropping out. Sadly, internet service providers rarely have much inclination to do anything about it\u2014they\u2019re getting your money and they\u2019re happy. It\u2019s frustrating to try and build up a body of evidence to present to them. Speed test websites are full of adverts and they don\u2019t log your historical results. Network Speed Test rectifies the problem. It\u2019s got a clean interface, it\u2019s lightning fast, and it logs past network performance history in easy-to-understand charts. Tubecast for YouTube","title":"The Best Microsoft Store Apps for Windows 10"},{"location":"Highlights/Readwise/Articles/The%20Best%20Microsoft%20Store%20Apps%20for%20Windows%2010/#the-best-microsoft-store-apps-for-windows-10","text":"","title":"The Best Microsoft Store Apps for Windows 10"},{"location":"Highlights/Readwise/Articles/The%20Best%20Microsoft%20Store%20Apps%20for%20Windows%2010/#metadata","text":"Author: Full Title: The Best Microsoft Store Apps for Windows 10 Category: #Type/Highlights/Article URL: https://www.makeuseof.com/tag/best-windows-10-apps/","title":"Metadata"},{"location":"Highlights/Readwise/Articles/The%20Best%20Microsoft%20Store%20Apps%20for%20Windows%2010/#highlights","text":"Cloud Storage Dropbox and OneDrive have official apps for Windows 10, and there\u2019s also an unofficial Google Drive client you should check out. OneDrive is Microsoft\u2019s flagship cloud storage service. For people who don\u2019t want to deal with the somewhat fiddly desktop folder, the app is a great alternative. Note: try out the store app! Copying and pasting are incredibly useful and simple. If you have to move a lot of content, however, constantly bouncing back and forth between apps can quickly become frustrating. Try using Copy Space instead. It\u2019s a universal clipboard that can store several items at once. All your copies are sorted into categories, and it can sync between all your devices. Overdrive has a global network of more than 34,000 libraries which you can use to borrow eBooks, audiobooks, and videos. Anything you borrow will automatically sync across all your devices and the library is open 24/7. The app also doubles as an eReader, so you can do your borrowing and reading through the same interface. Best of all titles are automatically returned at the end of their loan period\u2014you\u2019ll never have to pay a late fee again! (Note: You need to be a member of your local library to access the app) Using this Amazon Windows 10 app is faster than using the website. Search is fast and processing purchases is efficient\u2014try it! We\u2019ve all lived in a place with a dodgy internet connection at some point in our lives. Perhaps the speed fluctuates wildly or your connection is prone to dropping out. Sadly, internet service providers rarely have much inclination to do anything about it\u2014they\u2019re getting your money and they\u2019re happy. It\u2019s frustrating to try and build up a body of evidence to present to them. Speed test websites are full of adverts and they don\u2019t log your historical results. Network Speed Test rectifies the problem. It\u2019s got a clean interface, it\u2019s lightning fast, and it logs past network performance history in easy-to-understand charts. Tubecast for YouTube","title":"Highlights"},{"location":"Highlights/Readwise/Articles/The%20Best%20PC%20Software%20for%20Your%20Windows%20Computer/","text":"The Best PC Software for Your Windows Computer \u00b6 Metadata \u00b6 Author: Full Title: The Best PC Software for Your Windows Computer Category: #Type/Highlights/Article URL: https://www.makeuseof.com/tag/best-windows-software/ Highlights \u00b6 Macrium Reflect Free FreeFileSync EaseUS Todo Backup This is a free backup solution that includes a disaster recovery option. The tool can back up files and folders, create an image of the entire operating system, or clone disks to migrate data. Supports comprehensive full backup, incremental backup, and differential backup. EaseUS Partition Master A feature-packed alternative file manager to Windows File Explorer that uses a dual-panel layout. If all you desire is a file explorer that supports tabs, we recommend Explorer++. For more options, see this article on alternative file explorers. Download: MultiCommander (Free) Additional tools in this section: 7-Zip, a free archive manager that can extract or compress to ZIP, RAR, and many other archive files. Universal Extractor, can decompress and extract files from any type of archive or installer, including ZIP, RAR and EXE files. DropIt can automatically sort files based on file type. File Recovery Did you ever wish you could turn back time to recover your lost files? With the following tools, you need neither a DeLorean nor a flux capacitor, a little luck will do. Just remember not to write any data to the disk you wish to recover files from. Recuva This open source tool is considered one of the best applications for recovering lost partitions or making non-booting disks bootable again. It\u2019s operated through a command prompt window but comes with thorough documentation, which will allow even novices to compile information for recovery by a professional. Other tools in this section: Nextcloud, a free open source tool to build your own, self-hosted cloud storage solution; a community fork of ownCloud. MEGA, formerly known as MegaUpload, is a cloud storage and file sharing solution that offers up to 50GB of free storage. KeePass Ditto is a clipboard manager that allows you to keep a record of your Windows clipboard backed up for later use or sync clipboards across multiple computers. Also available as a portable app. Similar to ClipX [Broken URL Removed] and many other clipboard managers. Other notable applications in this section: AutoHotkey enables desktop automation with hotkeys via custom scripts. Fences, a tool to organize the icons on your desktop. Rainlendar, a stylish and lightweight calendar for the Windows desktop. Right Click Enhancer, a tool to edit Windows context menus. SendToSendTo helps you customize the Windows Send To menu. OneNote, Microsoft\u2019s free and cross-platform note-taking app. Revo Uninstaller Probably the most popular tool in this category. Easy to use and thorough, even comes with a hunter mode that will track down and eliminate programs based on icons or shortcuts on your screen. The pro version supports forced uninstall, bulk uninstall, extended scanning for leftover files, real-time change monitoring with log files, multi-level backup system, print and export a list of installed programs, and lots more. IObit Uninstaller IObit\u2019s Uninstaller sorts all your programs into categories that make it easier to find applications you installed recently, software that takes up a lot of space, or tools you barely ever use. This utility also allows you to quickly get rid of browser toolbars and plugins, and Windows apps. The Pro version can delete bundled programs and plug-ins, uninstall malicious browser extensions, it features adware removal, 1-click updates for installed programs, free technical support, and more. Download: IObit Uninstaller (Free) Download: IObit Uninstaller Pro ($19.99) Other tools in this category: Absolute Uninstaller can fix invalid program entries and supports batch uninstalling. Geek Uninstaller is fast and reliable, it comes with a force removal option, and it\u2019s completely portable. Note that some installers pack bloatware, useless adware that\u2019s pre-selected to install. It\u2019s the bane of freeware. Thus, Unchecky should be the very first app from this list you should install because it can help you catch checkboxes that commit you to downloading and installing bundled apps you don\u2019t need.","title":"The Best PC Software for Your Windows Computer"},{"location":"Highlights/Readwise/Articles/The%20Best%20PC%20Software%20for%20Your%20Windows%20Computer/#the-best-pc-software-for-your-windows-computer","text":"","title":"The Best PC Software for Your Windows Computer"},{"location":"Highlights/Readwise/Articles/The%20Best%20PC%20Software%20for%20Your%20Windows%20Computer/#metadata","text":"Author: Full Title: The Best PC Software for Your Windows Computer Category: #Type/Highlights/Article URL: https://www.makeuseof.com/tag/best-windows-software/","title":"Metadata"},{"location":"Highlights/Readwise/Articles/The%20Best%20PC%20Software%20for%20Your%20Windows%20Computer/#highlights","text":"Macrium Reflect Free FreeFileSync EaseUS Todo Backup This is a free backup solution that includes a disaster recovery option. The tool can back up files and folders, create an image of the entire operating system, or clone disks to migrate data. Supports comprehensive full backup, incremental backup, and differential backup. EaseUS Partition Master A feature-packed alternative file manager to Windows File Explorer that uses a dual-panel layout. If all you desire is a file explorer that supports tabs, we recommend Explorer++. For more options, see this article on alternative file explorers. Download: MultiCommander (Free) Additional tools in this section: 7-Zip, a free archive manager that can extract or compress to ZIP, RAR, and many other archive files. Universal Extractor, can decompress and extract files from any type of archive or installer, including ZIP, RAR and EXE files. DropIt can automatically sort files based on file type. File Recovery Did you ever wish you could turn back time to recover your lost files? With the following tools, you need neither a DeLorean nor a flux capacitor, a little luck will do. Just remember not to write any data to the disk you wish to recover files from. Recuva This open source tool is considered one of the best applications for recovering lost partitions or making non-booting disks bootable again. It\u2019s operated through a command prompt window but comes with thorough documentation, which will allow even novices to compile information for recovery by a professional. Other tools in this section: Nextcloud, a free open source tool to build your own, self-hosted cloud storage solution; a community fork of ownCloud. MEGA, formerly known as MegaUpload, is a cloud storage and file sharing solution that offers up to 50GB of free storage. KeePass Ditto is a clipboard manager that allows you to keep a record of your Windows clipboard backed up for later use or sync clipboards across multiple computers. Also available as a portable app. Similar to ClipX [Broken URL Removed] and many other clipboard managers. Other notable applications in this section: AutoHotkey enables desktop automation with hotkeys via custom scripts. Fences, a tool to organize the icons on your desktop. Rainlendar, a stylish and lightweight calendar for the Windows desktop. Right Click Enhancer, a tool to edit Windows context menus. SendToSendTo helps you customize the Windows Send To menu. OneNote, Microsoft\u2019s free and cross-platform note-taking app. Revo Uninstaller Probably the most popular tool in this category. Easy to use and thorough, even comes with a hunter mode that will track down and eliminate programs based on icons or shortcuts on your screen. The pro version supports forced uninstall, bulk uninstall, extended scanning for leftover files, real-time change monitoring with log files, multi-level backup system, print and export a list of installed programs, and lots more. IObit Uninstaller IObit\u2019s Uninstaller sorts all your programs into categories that make it easier to find applications you installed recently, software that takes up a lot of space, or tools you barely ever use. This utility also allows you to quickly get rid of browser toolbars and plugins, and Windows apps. The Pro version can delete bundled programs and plug-ins, uninstall malicious browser extensions, it features adware removal, 1-click updates for installed programs, free technical support, and more. Download: IObit Uninstaller (Free) Download: IObit Uninstaller Pro ($19.99) Other tools in this category: Absolute Uninstaller can fix invalid program entries and supports batch uninstalling. Geek Uninstaller is fast and reliable, it comes with a force removal option, and it\u2019s completely portable. Note that some installers pack bloatware, useless adware that\u2019s pre-selected to install. It\u2019s the bane of freeware. Thus, Unchecky should be the very first app from this list you should install because it can help you catch checkboxes that commit you to downloading and installing bundled apps you don\u2019t need.","title":"Highlights"},{"location":"Highlights/Readwise/Articles/The%20Best%20Part%20of%20Windows%2011%20Is%20a%20Revamped%20Windows%20Subsystem%20for%20Linux/","text":"The Best Part of Windows 11 Is a Revamped Windows Subsystem for Linux \u00b6 Metadata \u00b6 Author: [[Jim Salter]] Full Title: The Best Part of Windows 11 Is a Revamped Windows Subsystem for Linux Category: #Type/Highlights/Article URL: https://arstechnica.com/gadgets/2021/10/the-best-part-of-windows-11-is-a-revamped-windows-subsystem-for-linux/ Highlights \u00b6 there is one obvious \"killer app\" for WSLg that has us excited\u2014and that's virt-manager, the RedHat-originated virtualization management tool. virt-manager is a simple tool that streamlines the creation, management, and operation of virtual machines using the Linux Kernel Virtual Machine. ( View Highlight ) With virt-manager, you can see a simple list of your VMs along with how much disk, network, and CPU activity is currently associated with each. You can also manipulate their virtual \"hardware\"\u2014e.g., by adding or removing RAM, \"disks\", network interfaces, and more\u2014and start, pause, or stop them. Creation and destruction of VMs is as easy as management\u2014and, finally, virt-manager allows you to pull a graphical console directly into each VM, which behaves just as a physical display connected to a bare-metal machine would. ( View Highlight ) You also can't run the GNOME shell desktop environment itself under WSLg. Running apt install gnome-shell works fine, and pulls in the enormous list of dependencies necessary to satisfy that request\u2014but gnome-shell itself fails ignominiously with unsupported session type, which effectively means it doesn't like WSLg's Weston/XWayland environment. ( View Highlight ) Finally, Ubuntu's excellent baked-in OpenZFS support is missing. You can apt install zfsutils-linux without difficulty, but that package depends on Canonical's in-house kernel with built-in ZFS support, which Microsoft has not picked up in its own WSL2 kernel. Determined Ubuntu users can still apt install zfs-fuse and expect that user-mode implementation to work as well as it does under native Ubuntu\u2014but we don't recommend it for production; the FUSE implementation is still stuck on 0.7.0, while the in-kernel version is 0.8.3. This means a lack of support for ZFS native encryption, along with a whole host of other features, bugfixes, and enhancements\u2014let alone the performance implications of running under FUSE rather than in-kernel. ( View Highlight )","title":"The Best Part of Windows 11 Is a Revamped Windows Subsystem for Linux"},{"location":"Highlights/Readwise/Articles/The%20Best%20Part%20of%20Windows%2011%20Is%20a%20Revamped%20Windows%20Subsystem%20for%20Linux/#the-best-part-of-windows-11-is-a-revamped-windows-subsystem-for-linux","text":"","title":"The Best Part of Windows 11 Is a Revamped Windows Subsystem for Linux"},{"location":"Highlights/Readwise/Articles/The%20Best%20Part%20of%20Windows%2011%20Is%20a%20Revamped%20Windows%20Subsystem%20for%20Linux/#metadata","text":"Author: [[Jim Salter]] Full Title: The Best Part of Windows 11 Is a Revamped Windows Subsystem for Linux Category: #Type/Highlights/Article URL: https://arstechnica.com/gadgets/2021/10/the-best-part-of-windows-11-is-a-revamped-windows-subsystem-for-linux/","title":"Metadata"},{"location":"Highlights/Readwise/Articles/The%20Best%20Part%20of%20Windows%2011%20Is%20a%20Revamped%20Windows%20Subsystem%20for%20Linux/#highlights","text":"there is one obvious \"killer app\" for WSLg that has us excited\u2014and that's virt-manager, the RedHat-originated virtualization management tool. virt-manager is a simple tool that streamlines the creation, management, and operation of virtual machines using the Linux Kernel Virtual Machine. ( View Highlight ) With virt-manager, you can see a simple list of your VMs along with how much disk, network, and CPU activity is currently associated with each. You can also manipulate their virtual \"hardware\"\u2014e.g., by adding or removing RAM, \"disks\", network interfaces, and more\u2014and start, pause, or stop them. Creation and destruction of VMs is as easy as management\u2014and, finally, virt-manager allows you to pull a graphical console directly into each VM, which behaves just as a physical display connected to a bare-metal machine would. ( View Highlight ) You also can't run the GNOME shell desktop environment itself under WSLg. Running apt install gnome-shell works fine, and pulls in the enormous list of dependencies necessary to satisfy that request\u2014but gnome-shell itself fails ignominiously with unsupported session type, which effectively means it doesn't like WSLg's Weston/XWayland environment. ( View Highlight ) Finally, Ubuntu's excellent baked-in OpenZFS support is missing. You can apt install zfsutils-linux without difficulty, but that package depends on Canonical's in-house kernel with built-in ZFS support, which Microsoft has not picked up in its own WSL2 kernel. Determined Ubuntu users can still apt install zfs-fuse and expect that user-mode implementation to work as well as it does under native Ubuntu\u2014but we don't recommend it for production; the FUSE implementation is still stuck on 0.7.0, while the in-kernel version is 0.8.3. This means a lack of support for ZFS native encryption, along with a whole host of other features, bugfixes, and enhancements\u2014let alone the performance implications of running under FUSE rather than in-kernel. ( View Highlight )","title":"Highlights"},{"location":"Highlights/Readwise/Articles/The%20Best%20Productivity%20System%20There%20Is%20-%20Personal%20Excellence/","text":"The Best Productivity System There Is - Personal Excellence \u00b6 Metadata \u00b6 Author: Full Title: The Best Productivity System There Is - Personal Excellence Category: #Type/Highlights/Article URL: https://personalexcellence.co/blog/productivity-system/ Highlights \u00b6 After a long period of trying out different methods and software to track my information, from your traditional pen and paper, organizers/handbooks, online to-do lists, sticky notes, GTD productivity software (modeled after David Allen\u2019s Getting Things Done) and what not, I realized there\u2019s no one size fits all solution. Then I tried GTD software. As part of running a personal development blog, I often get free copies of books and software to review on my blog if I like them. I tried a GTD system based on David Allen\u2019s Getting Things Done. It helps you plan out your projects from conceptualization to execution, through the use of Goals, Projects, Tasks, Checklists, Schedules and Calendar. After about a week of earnestly trying to make it work, I stopped using it. I had a hard time drawing a meaningful difference between Goals and Projects, and I spent more time clicking around and organizing my stuff in the system than really getting things done! I\u2019m sure it\u2019s a fantastic system for some, but it just didn\u2019t work for me. I also tried some online to-do lists. While they were fun at the beginning, after a while it became a real hassle to have to login, input/update/delete my tasks day-in and day-out. The Best Productivity System What I found out from all these experiences is that there is no one best productivity system out there for you or me. I have my specific way of doing things, and with each system I tried in the past, I felt I was changing myself to make the system work out rather than being truly productive with it. Each system made me feel boxed in. The more complex GTD systems had learning curves of their own. The best productivity system is one that makes your productivity flow, not obstruct it. After all these, I realized it\u2019s time to stop looking for a one-size fits all productivity system for me. It doesn\u2019t exist. All of us have our individual styles and preferences, and to have a system that suits all our needs comes nothing short of hiring a software developer to build a customized system for us and us only. Creating My Productivity System So then, I started off with my own tracking sheet, using MS Excel / Openoffice (it\u2019s like a replica of MS Office except it\u2019s free). It started off as a simple list of what I need to do, listed by their dates. Over time I began building on it, adding goals and projects. Then I started to arrange them by priority within the goals. Soon, I introduced long-term goals into the system. Today it has evolved into a full workbook with individual sheets on future goals, monthly goals, weekly goals, key projects, action steps, strategies, daily to-do lists, information and other miscellaneous info. It helps me manage between seeing the big picture and managing the nitty gritty. (Those who read how to create your life handbook will know that I use excel for my handbook too. This is a different workbook from my life handbook.) My Add-on Productivity Tools Once every week and every month, I review my productivity system and update it with my focus for the week/month. I continue to make tweaks here and there, and overall it\u2019s a very robust system for my needs. It\u2019ll probably continue to change and evolve as I change too. That\u2019s the beauty of creating your own productivity system \u2013 you revise it to fit your needs as you change. Create Your Own Productivity System Softwares You Can Use To Create Your Productivity System MS Office (I use Excel) Open Office Google Documents Zoho Productivity Tools Of course, if you don\u2019t have much experience using productivity systems/software, it\u2019s better for you to try around with different systems so you get a sense of what works for you and what doesn\u2019t, before you start creating your own productivity system. Here are some good tools to start off with: Calendar: Google calendar is the best calendar option out there. It has basic calendar functions for event management (title, location, description, option to repeat) and other add-on functions like an addendum task-list and different calendars for different purposes (i.e. Work, Personal, Exercise, etc \u2013 you can color code them to distinguish between them). You can also share your calendar with others who use Gcal too, making it a collaborative tool. Sticky Notes: After trying a good number of sticky notes software, I concluded I love Morun Free Sticky Notes the most because it\u2019s so user-friendly and light on resources. You can have multiple notes for different purposes, and differentiate based on the note title and the color. Within each note, you can do simple formatting (bold, italics, underline, change font color). Best of all, it\u2019s free! To-Do Lists: There are quite a number of great online to-do lists. I\u2019ve listed the most popular and highly rated lists below. Each of them has its own positive points, so be sure to try them to see how they work out for you. They are ordered from simple to advance: Ta-da Lists \u2013 Minimalists\u2019 type of to-do list. If you are just looking for the simplest to-do list there is, where you just list items and check them off, this is the one. Can be integrated with iPhone. Todoist \u2013 Simple interface, comes with a calendar, lets you create hierarchies among your tasks (i.e. prioritized items), along with gmail integration, mobile access, reminders, and more. Has mobile support as well. Remember the Milk \u2013 With Milk, you can create deadlines, set tasks to recur, set priority among tasks, have reminders and more. It\u2019s integrated with gmail and gcal. It\u2019s been voted as the best to-do list manager on Lifehacker.com. There\u2019s also mobile phone support. Toodledo.com \u2013 More than just a to-do list, it\u2019s more like a to-do system, complete with tagging, time tracking, goal setting, calendar and more. Project Management: For higher level organization and management. Tiddly Wiki \u2013 Imagine a wiki site (complete with the functionality of tagging, editing, saving, searching) but for your own personal use to track your personal projects. What\u2019s more, you also get to port it from computer to computer. PB Works \u2013 Similar to Tiddly Wiki, except PB Works is more geared toward business team collaboration. Goals on Track \u2013 Online, paid Vitalist \u2013 Online, free with paid version Nirvana \u2013 Online, free Thinking Rock \u2013 cross-platform, free with paid version OmniFocus \u2013 for Mac users only, free Ready Made Productivity Systems For You I recognize some of you may be fully contented with using ready made productivity systems, and if so you can check out the following. I\u2019ve listed the best GTD systems as rated by the web community. GTD-Free Nozbe Vitalist My Life Organized Full list of other productivity software: GTD Tools","title":"The Best Productivity System There Is - Personal Excellence"},{"location":"Highlights/Readwise/Articles/The%20Best%20Productivity%20System%20There%20Is%20-%20Personal%20Excellence/#the-best-productivity-system-there-is-personal-excellence","text":"","title":"The Best Productivity System There Is - Personal Excellence"},{"location":"Highlights/Readwise/Articles/The%20Best%20Productivity%20System%20There%20Is%20-%20Personal%20Excellence/#metadata","text":"Author: Full Title: The Best Productivity System There Is - Personal Excellence Category: #Type/Highlights/Article URL: https://personalexcellence.co/blog/productivity-system/","title":"Metadata"},{"location":"Highlights/Readwise/Articles/The%20Best%20Productivity%20System%20There%20Is%20-%20Personal%20Excellence/#highlights","text":"After a long period of trying out different methods and software to track my information, from your traditional pen and paper, organizers/handbooks, online to-do lists, sticky notes, GTD productivity software (modeled after David Allen\u2019s Getting Things Done) and what not, I realized there\u2019s no one size fits all solution. Then I tried GTD software. As part of running a personal development blog, I often get free copies of books and software to review on my blog if I like them. I tried a GTD system based on David Allen\u2019s Getting Things Done. It helps you plan out your projects from conceptualization to execution, through the use of Goals, Projects, Tasks, Checklists, Schedules and Calendar. After about a week of earnestly trying to make it work, I stopped using it. I had a hard time drawing a meaningful difference between Goals and Projects, and I spent more time clicking around and organizing my stuff in the system than really getting things done! I\u2019m sure it\u2019s a fantastic system for some, but it just didn\u2019t work for me. I also tried some online to-do lists. While they were fun at the beginning, after a while it became a real hassle to have to login, input/update/delete my tasks day-in and day-out. The Best Productivity System What I found out from all these experiences is that there is no one best productivity system out there for you or me. I have my specific way of doing things, and with each system I tried in the past, I felt I was changing myself to make the system work out rather than being truly productive with it. Each system made me feel boxed in. The more complex GTD systems had learning curves of their own. The best productivity system is one that makes your productivity flow, not obstruct it. After all these, I realized it\u2019s time to stop looking for a one-size fits all productivity system for me. It doesn\u2019t exist. All of us have our individual styles and preferences, and to have a system that suits all our needs comes nothing short of hiring a software developer to build a customized system for us and us only. Creating My Productivity System So then, I started off with my own tracking sheet, using MS Excel / Openoffice (it\u2019s like a replica of MS Office except it\u2019s free). It started off as a simple list of what I need to do, listed by their dates. Over time I began building on it, adding goals and projects. Then I started to arrange them by priority within the goals. Soon, I introduced long-term goals into the system. Today it has evolved into a full workbook with individual sheets on future goals, monthly goals, weekly goals, key projects, action steps, strategies, daily to-do lists, information and other miscellaneous info. It helps me manage between seeing the big picture and managing the nitty gritty. (Those who read how to create your life handbook will know that I use excel for my handbook too. This is a different workbook from my life handbook.) My Add-on Productivity Tools Once every week and every month, I review my productivity system and update it with my focus for the week/month. I continue to make tweaks here and there, and overall it\u2019s a very robust system for my needs. It\u2019ll probably continue to change and evolve as I change too. That\u2019s the beauty of creating your own productivity system \u2013 you revise it to fit your needs as you change. Create Your Own Productivity System Softwares You Can Use To Create Your Productivity System MS Office (I use Excel) Open Office Google Documents Zoho Productivity Tools Of course, if you don\u2019t have much experience using productivity systems/software, it\u2019s better for you to try around with different systems so you get a sense of what works for you and what doesn\u2019t, before you start creating your own productivity system. Here are some good tools to start off with: Calendar: Google calendar is the best calendar option out there. It has basic calendar functions for event management (title, location, description, option to repeat) and other add-on functions like an addendum task-list and different calendars for different purposes (i.e. Work, Personal, Exercise, etc \u2013 you can color code them to distinguish between them). You can also share your calendar with others who use Gcal too, making it a collaborative tool. Sticky Notes: After trying a good number of sticky notes software, I concluded I love Morun Free Sticky Notes the most because it\u2019s so user-friendly and light on resources. You can have multiple notes for different purposes, and differentiate based on the note title and the color. Within each note, you can do simple formatting (bold, italics, underline, change font color). Best of all, it\u2019s free! To-Do Lists: There are quite a number of great online to-do lists. I\u2019ve listed the most popular and highly rated lists below. Each of them has its own positive points, so be sure to try them to see how they work out for you. They are ordered from simple to advance: Ta-da Lists \u2013 Minimalists\u2019 type of to-do list. If you are just looking for the simplest to-do list there is, where you just list items and check them off, this is the one. Can be integrated with iPhone. Todoist \u2013 Simple interface, comes with a calendar, lets you create hierarchies among your tasks (i.e. prioritized items), along with gmail integration, mobile access, reminders, and more. Has mobile support as well. Remember the Milk \u2013 With Milk, you can create deadlines, set tasks to recur, set priority among tasks, have reminders and more. It\u2019s integrated with gmail and gcal. It\u2019s been voted as the best to-do list manager on Lifehacker.com. There\u2019s also mobile phone support. Toodledo.com \u2013 More than just a to-do list, it\u2019s more like a to-do system, complete with tagging, time tracking, goal setting, calendar and more. Project Management: For higher level organization and management. Tiddly Wiki \u2013 Imagine a wiki site (complete with the functionality of tagging, editing, saving, searching) but for your own personal use to track your personal projects. What\u2019s more, you also get to port it from computer to computer. PB Works \u2013 Similar to Tiddly Wiki, except PB Works is more geared toward business team collaboration. Goals on Track \u2013 Online, paid Vitalist \u2013 Online, free with paid version Nirvana \u2013 Online, free Thinking Rock \u2013 cross-platform, free with paid version OmniFocus \u2013 for Mac users only, free Ready Made Productivity Systems For You I recognize some of you may be fully contented with using ready made productivity systems, and if so you can check out the following. I\u2019ve listed the best GTD systems as rated by the web community. GTD-Free Nozbe Vitalist My Life Organized Full list of other productivity software: GTD Tools","title":"Highlights"},{"location":"Highlights/Readwise/Articles/The%20Best%20Way%20to%20Organize%20Your%20To-Dos/","text":"The Best Way to Organize Your To-Dos \u00b6 Metadata \u00b6 Author: [[Tamara Kerr]] Full Title: The Best Way to Organize Your To-Dos Category: #Type/Highlights/Article URL: https://tamarakerr.com/blogs/post/the-best-way-to-organize-your-to-dos Highlights \u00b6 First, clarify your projects. So many people try to organize unclear stuff\u2014you can\u2019t. If you had a pile of documents on your desk and I said to you, \u201cPlease organize those quickly.\u201d You\u2019d probably say, \u201cWell . . . I can\u2019t do that until I look at each paper first.\u201d Exactly. People try to \u201cget organized\u201d when the stuff they\u2019re trying to organize is still in a vague and unclear form. You can\u2019t prioritize a mess. Remember this: everything on your to-do list is either attracting you or repelling you; there\u2019s no neutral territory. You\u2019re either looking at something and saying, \u201cAwesome! When can I do this and mark it off?\u201d or, \u201cYuck! I don\u2019t even want to think about this because there is so much involved it\u2019s overwhelming.\u201d The solution is to decide on stuff only once. That means when you put an action item on a list, clearly identify what the next action is\u2014the very next physical, visible activity you need to take to move things forward. Your to-do list should be only next actions, so that when you decide to do one of those actions, you can be confident it\u2019s the right thing to do. And make sure your items start with verbs like these: Call, Read, Draft, Email, Text, Download. And so on. Second, organize your tasks so that you can start doing and stop analyzing. The way people typically organize to-dos and tasks is either in one big list or by topic. The problem with the first approach is that it results in huge lists. I\u2019m guessing you don\u2019t just have 25 to-dos. If you did, then one list would work. I\u2019m guessing you have 100 to 150 to-dos in your personal and professional life\u2014maybe more. So, when it\u2019s time to get things done, you end up spending more time sifting through the massive list to figure out which task to do. Then if we do segment our lists, we tend to group them by topic or project. The potential problem with these approaches is that we often run into issues related to context and resources. Here\u2019s the principle: Make it easier for yourself to see the tasks you need to accomplish, when you can accomplish them. Here\u2019s how you do that: Organize to-dos according to the location you need to be in, or the resources and people you need to be connected to, in order to complete the action. Organizing by context was initially counterintuitive for me, but once I tried it out with \u201cboth feet in\u201d I became far more productive and focused, and with less effort. I\u2019m convinced I\u2019ll never go back to organizing by project, topic, or one big list. When you organize by context or resource, your focus is on the actions you can take, not on sorting and sifting. And that\u2019s really the point of Getting Things Done.","title":"The Best Way to Organize Your To-Dos"},{"location":"Highlights/Readwise/Articles/The%20Best%20Way%20to%20Organize%20Your%20To-Dos/#the-best-way-to-organize-your-to-dos","text":"","title":"The Best Way to Organize Your To-Dos"},{"location":"Highlights/Readwise/Articles/The%20Best%20Way%20to%20Organize%20Your%20To-Dos/#metadata","text":"Author: [[Tamara Kerr]] Full Title: The Best Way to Organize Your To-Dos Category: #Type/Highlights/Article URL: https://tamarakerr.com/blogs/post/the-best-way-to-organize-your-to-dos","title":"Metadata"},{"location":"Highlights/Readwise/Articles/The%20Best%20Way%20to%20Organize%20Your%20To-Dos/#highlights","text":"First, clarify your projects. So many people try to organize unclear stuff\u2014you can\u2019t. If you had a pile of documents on your desk and I said to you, \u201cPlease organize those quickly.\u201d You\u2019d probably say, \u201cWell . . . I can\u2019t do that until I look at each paper first.\u201d Exactly. People try to \u201cget organized\u201d when the stuff they\u2019re trying to organize is still in a vague and unclear form. You can\u2019t prioritize a mess. Remember this: everything on your to-do list is either attracting you or repelling you; there\u2019s no neutral territory. You\u2019re either looking at something and saying, \u201cAwesome! When can I do this and mark it off?\u201d or, \u201cYuck! I don\u2019t even want to think about this because there is so much involved it\u2019s overwhelming.\u201d The solution is to decide on stuff only once. That means when you put an action item on a list, clearly identify what the next action is\u2014the very next physical, visible activity you need to take to move things forward. Your to-do list should be only next actions, so that when you decide to do one of those actions, you can be confident it\u2019s the right thing to do. And make sure your items start with verbs like these: Call, Read, Draft, Email, Text, Download. And so on. Second, organize your tasks so that you can start doing and stop analyzing. The way people typically organize to-dos and tasks is either in one big list or by topic. The problem with the first approach is that it results in huge lists. I\u2019m guessing you don\u2019t just have 25 to-dos. If you did, then one list would work. I\u2019m guessing you have 100 to 150 to-dos in your personal and professional life\u2014maybe more. So, when it\u2019s time to get things done, you end up spending more time sifting through the massive list to figure out which task to do. Then if we do segment our lists, we tend to group them by topic or project. The potential problem with these approaches is that we often run into issues related to context and resources. Here\u2019s the principle: Make it easier for yourself to see the tasks you need to accomplish, when you can accomplish them. Here\u2019s how you do that: Organize to-dos according to the location you need to be in, or the resources and people you need to be connected to, in order to complete the action. Organizing by context was initially counterintuitive for me, but once I tried it out with \u201cboth feet in\u201d I became far more productive and focused, and with less effort. I\u2019m convinced I\u2019ll never go back to organizing by project, topic, or one big list. When you organize by context or resource, your focus is on the actions you can take, not on sorting and sifting. And that\u2019s really the point of Getting Things Done.","title":"Highlights"},{"location":"Highlights/Readwise/Articles/The%20Case%20for%20Digital%20Notes%20-%20Forte%20Labs/","text":"The Case for Digital Notes - Forte Labs \u00b6 Metadata \u00b6 Author: [[fortelabs.co]] Full Title: The Case for Digital Notes - Forte Labs Category: #Type/Highlights/Article URL: https://fortelabs.co/blog/the-case-for-digital-notes/ Highlights \u00b6 Notes are personal, informal, quick and dirty. They are not for public consumption, but for your own personal use, like a leather notebook you keep in your backpack. Notes are open-ended and never finished. \u201cTaking notes\u201d is a continuous process, in which you can noodle on ideas without an immediate purpose in mind. Notes have low standards for quality and polish. They are easy to jot down, because it\u2019s fine if they are messy, incomplete, or totally random. Notes naturally mix diverse types of media. Just like a paper notebook might contain drawings and sketches, quotes and ideas, and even a pasted photo or post-it note, notes naturally combine different kinds of media in one place. How to use notes apps as a \u201cuniversal inbox\u201d it can function as a \u201cuniversal inbox\u201d for capturing any kind of information coming your way. By paying close attention to a \u201chome base\u201d that you know you can always depend on, you\u2019re free to strike out towards the frontier of knowledge, and experiment with the most cutting-edge new apps. The most common pitfalls in adopting notes and productivity apps Switching frequently between apps My recommendation is to instead pick one notes app, and invest in it for the long term. Focusing too much on the long term As important as it is to preserve your notes over the long term, this can also become a pitfall. I\u2019ve seen people spend so much energy creating multiple, totally secure backups, or using file types that will never change, that there\u2019s no energy left over for creating! Remember that all this work is designed to make it easier to produce meaningful results. Don\u2019t make a hobby out of engineering a system so resilient that it can survive a nuclear war! My recommendation is instead to balance short and long-term perspectives, prioritizing doing good work in the medium term of the next few years. Waiting until you have the whole system perfectly figured out to get started This is perhaps the most common one, and the most problematic, especially among perfectionists. It\u2019s understandable to feel anxiety and fear when embarking on such an important undertaking. It\u2019s so tempting to try and have all the details perfectly worked out before you take the first step. But ultimately, you can\u2019t know exactly what will work upfront. An approach that works for someone else may not necessarily work for you. Even this one. The only way to build a second brain is to start small, and make incremental improvements over time. Trust yourself that you will learn and grow right alongside it.","title":"The Case for Digital Notes - Forte Labs"},{"location":"Highlights/Readwise/Articles/The%20Case%20for%20Digital%20Notes%20-%20Forte%20Labs/#the-case-for-digital-notes-forte-labs","text":"","title":"The Case for Digital Notes - Forte Labs"},{"location":"Highlights/Readwise/Articles/The%20Case%20for%20Digital%20Notes%20-%20Forte%20Labs/#metadata","text":"Author: [[fortelabs.co]] Full Title: The Case for Digital Notes - Forte Labs Category: #Type/Highlights/Article URL: https://fortelabs.co/blog/the-case-for-digital-notes/","title":"Metadata"},{"location":"Highlights/Readwise/Articles/The%20Case%20for%20Digital%20Notes%20-%20Forte%20Labs/#highlights","text":"Notes are personal, informal, quick and dirty. They are not for public consumption, but for your own personal use, like a leather notebook you keep in your backpack. Notes are open-ended and never finished. \u201cTaking notes\u201d is a continuous process, in which you can noodle on ideas without an immediate purpose in mind. Notes have low standards for quality and polish. They are easy to jot down, because it\u2019s fine if they are messy, incomplete, or totally random. Notes naturally mix diverse types of media. Just like a paper notebook might contain drawings and sketches, quotes and ideas, and even a pasted photo or post-it note, notes naturally combine different kinds of media in one place. How to use notes apps as a \u201cuniversal inbox\u201d it can function as a \u201cuniversal inbox\u201d for capturing any kind of information coming your way. By paying close attention to a \u201chome base\u201d that you know you can always depend on, you\u2019re free to strike out towards the frontier of knowledge, and experiment with the most cutting-edge new apps. The most common pitfalls in adopting notes and productivity apps Switching frequently between apps My recommendation is to instead pick one notes app, and invest in it for the long term. Focusing too much on the long term As important as it is to preserve your notes over the long term, this can also become a pitfall. I\u2019ve seen people spend so much energy creating multiple, totally secure backups, or using file types that will never change, that there\u2019s no energy left over for creating! Remember that all this work is designed to make it easier to produce meaningful results. Don\u2019t make a hobby out of engineering a system so resilient that it can survive a nuclear war! My recommendation is instead to balance short and long-term perspectives, prioritizing doing good work in the medium term of the next few years. Waiting until you have the whole system perfectly figured out to get started This is perhaps the most common one, and the most problematic, especially among perfectionists. It\u2019s understandable to feel anxiety and fear when embarking on such an important undertaking. It\u2019s so tempting to try and have all the details perfectly worked out before you take the first step. But ultimately, you can\u2019t know exactly what will work upfront. An approach that works for someone else may not necessarily work for you. Even this one. The only way to build a second brain is to start small, and make incremental improvements over time. Trust yourself that you will learn and grow right alongside it.","title":"Highlights"},{"location":"Highlights/Readwise/Articles/The%20Checklist%20Manifesto%20-%20By%20Atul%20Gawande%20%20Derek%20Sivers/","text":"The Checklist Manifesto - By Atul Gawande | Derek Sivers \u00b6 Metadata \u00b6 Author: [[sivers.org]] Full Title: The Checklist Manifesto - By Atul Gawande | Derek Sivers Category: #Type/Highlights/Article URL: https://sivers.org/book/ChecklistManifesto Highlights \u00b6 We have just two reasons that we may fail: Ignorance Ineptitude - knowledge exists, yet we fail to apply it correctly. Three different kinds of problems in the world: SIMPLE ... like baking a cake from a mix. There is a recipe. Sometimes a few basic techniques to learn. But once these are mastered, following the recipe brings a high likelihood of success. COMPLICATED ... like sending a rocket to the moon. They can sometimes be broken down into a series of simple problems. But there is no straightforward recipe. Success frequently requires multiple people, often multiple teams, and specialized expertise. Unanticipated difficulties are frequent. Timing and coordination become serious concerns. COMPLEX ... like raising a child. Every child is unique. Although raising one child may provide experience, it does not guarantee success with the next child. Expertise is valuable but most certainly not sufficient. Outcomes for complex problems remain highly uncertain. It is possible to raise a child well. It\u2019s complex, that\u2019s all. CONSTRUCTION SCHEDULE: A line-by-line, day-by-day listing of every building task that needed to be accomplished, in what order, and when. The whole checklist is sent to the subcontractors and other independent experts so they can double-check that everything is correct, that nothing has been missed. What results is remarkable: a succession of day-by-day checks that guide how the building is constructed and ensure that the knowledge of hundreds, perhaps thousands, is put to use in the right place at the right time in the right way. COMMUNICATION: Trust in the power of communication. Don\u2019t believe in the wisdom of the single individual, of even an expert. Believe in the wisdom of the group, the wisdom of making sure that multiple pairs of eyes were on a problem and then letting the watchers decide what to do. USABLE CHECKLISTS: The checklist was too long. It was unclear. And past a certain point, it was starting to feel like a distraction. The checklist cannot be lengthy. A rule of thumb some use is to keep it to between five and nine items, After about sixty to ninety seconds at a given pause point, the checklist often becomes a distraction from other things. People start \u201cshortcutting.\u201d Steps get missed. So you want to keep the list short by focusing on what he called \u201cthe killer items\u201d - the steps that are most dangerous to skip and sometimes overlooked nonetheless. Ideally, it should fit on one page. It is common to misconceive how checklists function in complex lines of work. They are not comprehensive how-to guides. They are quick and simple tools aimed to buttress the skills of expert professionals. Balance between brevity and effectiveness. Cut too much and you won\u2019t have enough checks to improve care. Leave too much in and the list becomes too long to use. Furthermore, an item critical to one expert might not be critical to another. BAD CHECKLISTS ... are vague and imprecise. They are too long; they are hard to use; they are impractical. They are made by desk jockeys with no awareness of the situations in which they are to be deployed. They treat the people using the tools as dumb and try to spell out every single step. They turn people\u2019s brains off rather than turn them on. GOOD CHECKLISTS ... are precise. They are efficient, to the point, and easy to use even in the most difficult situations. They do not try to spell out everything - a checklist cannot fly a plane. They provide reminders of only the most critical and important steps - the ones that even the highly skilled professionals using them could miss. Good checklists are, above all, practical. The power of checklists is limited. They can help experts remember how to manage a complex process or configure a complex machine. They can make priorities clearer and prompt people to function better as a team. By themselves, however, checklists cannot make anyone follow them. READ-DO checklist: people carry out the tasks as they check them off - it\u2019s more like a recipe. We adopted mainly a DO-CONFIRM rather than a READ-DO format, to give people greater flexibility in performing their tasks while nonetheless having them stop at key points to confirm that critical steps have not been overlooked. INVESTING: Neuroscientists have found that the prospect of making money stimulates the same primitive reward circuits in the brain that cocaine does. And that, Pabrai said, is when serious investors like himself try to become systematic. They focus on dispassionate analysis, on avoiding both irrational exuberance and panic. They pore over the company\u2019s financial reports, investigate its liabilities and risks, examine its management team\u2019s track record, weigh its competitors, consider the future of the market it is in - trying to gauge both the magnitude of opportunity and the margin of safety.","title":"The Checklist Manifesto - By Atul Gawande | Derek Sivers"},{"location":"Highlights/Readwise/Articles/The%20Checklist%20Manifesto%20-%20By%20Atul%20Gawande%20%20Derek%20Sivers/#the-checklist-manifesto-by-atul-gawande-derek-sivers","text":"","title":"The Checklist Manifesto - By Atul Gawande | Derek Sivers"},{"location":"Highlights/Readwise/Articles/The%20Checklist%20Manifesto%20-%20By%20Atul%20Gawande%20%20Derek%20Sivers/#metadata","text":"Author: [[sivers.org]] Full Title: The Checklist Manifesto - By Atul Gawande | Derek Sivers Category: #Type/Highlights/Article URL: https://sivers.org/book/ChecklistManifesto","title":"Metadata"},{"location":"Highlights/Readwise/Articles/The%20Checklist%20Manifesto%20-%20By%20Atul%20Gawande%20%20Derek%20Sivers/#highlights","text":"We have just two reasons that we may fail: Ignorance Ineptitude - knowledge exists, yet we fail to apply it correctly. Three different kinds of problems in the world: SIMPLE ... like baking a cake from a mix. There is a recipe. Sometimes a few basic techniques to learn. But once these are mastered, following the recipe brings a high likelihood of success. COMPLICATED ... like sending a rocket to the moon. They can sometimes be broken down into a series of simple problems. But there is no straightforward recipe. Success frequently requires multiple people, often multiple teams, and specialized expertise. Unanticipated difficulties are frequent. Timing and coordination become serious concerns. COMPLEX ... like raising a child. Every child is unique. Although raising one child may provide experience, it does not guarantee success with the next child. Expertise is valuable but most certainly not sufficient. Outcomes for complex problems remain highly uncertain. It is possible to raise a child well. It\u2019s complex, that\u2019s all. CONSTRUCTION SCHEDULE: A line-by-line, day-by-day listing of every building task that needed to be accomplished, in what order, and when. The whole checklist is sent to the subcontractors and other independent experts so they can double-check that everything is correct, that nothing has been missed. What results is remarkable: a succession of day-by-day checks that guide how the building is constructed and ensure that the knowledge of hundreds, perhaps thousands, is put to use in the right place at the right time in the right way. COMMUNICATION: Trust in the power of communication. Don\u2019t believe in the wisdom of the single individual, of even an expert. Believe in the wisdom of the group, the wisdom of making sure that multiple pairs of eyes were on a problem and then letting the watchers decide what to do. USABLE CHECKLISTS: The checklist was too long. It was unclear. And past a certain point, it was starting to feel like a distraction. The checklist cannot be lengthy. A rule of thumb some use is to keep it to between five and nine items, After about sixty to ninety seconds at a given pause point, the checklist often becomes a distraction from other things. People start \u201cshortcutting.\u201d Steps get missed. So you want to keep the list short by focusing on what he called \u201cthe killer items\u201d - the steps that are most dangerous to skip and sometimes overlooked nonetheless. Ideally, it should fit on one page. It is common to misconceive how checklists function in complex lines of work. They are not comprehensive how-to guides. They are quick and simple tools aimed to buttress the skills of expert professionals. Balance between brevity and effectiveness. Cut too much and you won\u2019t have enough checks to improve care. Leave too much in and the list becomes too long to use. Furthermore, an item critical to one expert might not be critical to another. BAD CHECKLISTS ... are vague and imprecise. They are too long; they are hard to use; they are impractical. They are made by desk jockeys with no awareness of the situations in which they are to be deployed. They treat the people using the tools as dumb and try to spell out every single step. They turn people\u2019s brains off rather than turn them on. GOOD CHECKLISTS ... are precise. They are efficient, to the point, and easy to use even in the most difficult situations. They do not try to spell out everything - a checklist cannot fly a plane. They provide reminders of only the most critical and important steps - the ones that even the highly skilled professionals using them could miss. Good checklists are, above all, practical. The power of checklists is limited. They can help experts remember how to manage a complex process or configure a complex machine. They can make priorities clearer and prompt people to function better as a team. By themselves, however, checklists cannot make anyone follow them. READ-DO checklist: people carry out the tasks as they check them off - it\u2019s more like a recipe. We adopted mainly a DO-CONFIRM rather than a READ-DO format, to give people greater flexibility in performing their tasks while nonetheless having them stop at key points to confirm that critical steps have not been overlooked. INVESTING: Neuroscientists have found that the prospect of making money stimulates the same primitive reward circuits in the brain that cocaine does. And that, Pabrai said, is when serious investors like himself try to become systematic. They focus on dispassionate analysis, on avoiding both irrational exuberance and panic. They pore over the company\u2019s financial reports, investigate its liabilities and risks, examine its management team\u2019s track record, weigh its competitors, consider the future of the market it is in - trying to gauge both the magnitude of opportunity and the margin of safety.","title":"Highlights"},{"location":"Highlights/Readwise/Articles/The%20Data%20Science%20Landscape/","text":"The Data Science Landscape \u00b6 Metadata \u00b6 Author: [[Dr. Stefan Karenfort]] Full Title: The Data Science Landscape Category: #Type/Highlights/Article URL: https://medium.com/p/f6f7842c9865 Highlights \u00b6 Fourth, over- and underfitting of the model should be avoided as underfitting leads to generally poor performance and high prediction error while overfitting leads to poor generalization and high model complexity. Lastly, the result of the data science project must be communicated in a way that non-technical people can understand. A suitable way to communicate data is to use visualization techniques. In the business context, a good reference for presenting data is the International Business Communication Standards (IBCS). Deployment \u2014 How do stakeholders access the results? Evaluation \u2014 Which model best meets the business objectives? Modeling \u2014 What modeling techniques should we apply? Data preparation \u2014 How do we organize the data for modeling? Data understanding \u2014 What data do we have / need? Is it clean? Business understanding \u2014 What does the business need? The Cross Industry Standard Process for Data Mining (CRISP-DM) is a process model with six phases that naturally describes the data science life cycle. It is a framework to plan, organize and implement a data science project. Analytics generates insights from data using simple presentation, manipulation, calculation or visualization of data. In the context of data science, it is also sometimes referred to as exploratory data analytics. It often serves the purpose to familiarize oneself with the subject matter and to obtain some initial hints for further analysis. To this end, analytics is often used to formulate appropriate questions for a data science project. Data science is part of the computer sciences [1]. It comprises the disciplines of i) analytics, ii) statistics and iii) machine learning. Principles of Success The Data Science Process The Data Science Toolkit The Data Science Landscape Analytics First, at the initial stage, it is paramount that the underlying business problem is clear to all stakeholders involved. Second, sufficient time has to be allocated for the data preparation stage which typically accounts for the majority of time spent during most projects. Third, the right variables have to be selected by the data scientist. A model should ideally comprise only the fewest possible number of variables with relevant explanatory power. The process of feature selection is therefore important in order to maximize performance while reducing the noise in a model. The most popular languages for machine learning are Python, C/C++, Java, R and Java Script. The R programming language, for example, was built primarily for statistical applications. Therefore, it is highly suitable for statistical tasks as well as visualization using the popular R package ggplot2.","title":"The Data Science Landscape"},{"location":"Highlights/Readwise/Articles/The%20Data%20Science%20Landscape/#the-data-science-landscape","text":"","title":"The Data Science Landscape"},{"location":"Highlights/Readwise/Articles/The%20Data%20Science%20Landscape/#metadata","text":"Author: [[Dr. Stefan Karenfort]] Full Title: The Data Science Landscape Category: #Type/Highlights/Article URL: https://medium.com/p/f6f7842c9865","title":"Metadata"},{"location":"Highlights/Readwise/Articles/The%20Data%20Science%20Landscape/#highlights","text":"Fourth, over- and underfitting of the model should be avoided as underfitting leads to generally poor performance and high prediction error while overfitting leads to poor generalization and high model complexity. Lastly, the result of the data science project must be communicated in a way that non-technical people can understand. A suitable way to communicate data is to use visualization techniques. In the business context, a good reference for presenting data is the International Business Communication Standards (IBCS). Deployment \u2014 How do stakeholders access the results? Evaluation \u2014 Which model best meets the business objectives? Modeling \u2014 What modeling techniques should we apply? Data preparation \u2014 How do we organize the data for modeling? Data understanding \u2014 What data do we have / need? Is it clean? Business understanding \u2014 What does the business need? The Cross Industry Standard Process for Data Mining (CRISP-DM) is a process model with six phases that naturally describes the data science life cycle. It is a framework to plan, organize and implement a data science project. Analytics generates insights from data using simple presentation, manipulation, calculation or visualization of data. In the context of data science, it is also sometimes referred to as exploratory data analytics. It often serves the purpose to familiarize oneself with the subject matter and to obtain some initial hints for further analysis. To this end, analytics is often used to formulate appropriate questions for a data science project. Data science is part of the computer sciences [1]. It comprises the disciplines of i) analytics, ii) statistics and iii) machine learning. Principles of Success The Data Science Process The Data Science Toolkit The Data Science Landscape Analytics First, at the initial stage, it is paramount that the underlying business problem is clear to all stakeholders involved. Second, sufficient time has to be allocated for the data preparation stage which typically accounts for the majority of time spent during most projects. Third, the right variables have to be selected by the data scientist. A model should ideally comprise only the fewest possible number of variables with relevant explanatory power. The process of feature selection is therefore important in order to maximize performance while reducing the noise in a model. The most popular languages for machine learning are Python, C/C++, Java, R and Java Script. The R programming language, for example, was built primarily for statistical applications. Therefore, it is highly suitable for statistical tasks as well as visualization using the popular R package ggplot2.","title":"Highlights"},{"location":"Highlights/Readwise/Articles/The%20Data%20Science%20Workflow/","text":"The Data Science Workflow \u00b6 Metadata \u00b6 Author: Full Title: The Data Science Workflow Category: #Type/Highlights/Article URL: https://towardsdatascience.com/the-data-science-workflow-43859db0415 Highlights \u00b6 Source data access your first step is to define access to the source data. Your source data is provided as a set of *.csv files. You follow the cookiecutter-data-science approach, make a data/raw subdirectory in your project's root folder, and put all the files there. You create the docs/data.rst file, where you describe the meaning of your source data. (Note: Cookiecutter-DataScience template actually recommends references/ as the place for data dictionaries, while I pesonally prefer docs. Not that it matters much). Tags: [[favorite]] Note: This is python specific - I life the idea of references folder though as well as a restructured-text documentation \".rst\" file although i would use markdown. Your source data is provided as a set of *.csv files. You set up an SQL server, create a schema named raw and import all your CSV files as separate tables. You create the docs/data.rst file, where you describe the meaning of your source data as well as the location and access procedures for the SQL server. Your source data is a messy collection of genome sequence files, patient records, Excel files and Word documents, which may later grow in unpredicted ways. In addition, you know that you will need to query several external websites to receive extra information. You create an SQL database server in the cloud and import most of the tables from Excel files there. You create the data/raw directory in your project, put all the huge genome sequence files into the dna subdirectory. Some of the Excel files were too dirty to be imported into a database table, so you store them in data/raw/unprocessed directory along with the Word files. You create an Amazon S3 bucket and push your whole data/raw directory there using DVC. You create a Python package for querying the external websites. You create the docs/data.rst file, where you specify the location of the SQL server, the S3 bucket, the external websites, describe how to use DVC to download the data from S3 and the Python package to query the websites. You also describe, to the best of your understanding, the meaning and contents of all the Excel and Word files as well as the procedures to be taken when new data is added. Your source data consists of constantly updated website logs. You set up the ELK stack and configure the website to stream all the new logs there. You create docs/data.rst, where you describe the contents of the log records as well as the information needed to access and configure the ELK stack. Your source data is a simulated dataset. You implement the dataset generation as a Python class and document its use in a README.txt file. In general, remember the following rules of thumb when setting up the source data: Whenever you can meaningfully store your source data in a conveniently queryable/indexable form (an SQL database, the ELK stack, an HDF5 file or a raster database), you should do it. Even if your source data is a single csv and you are reluctant to set up a server, do yourself a favor and import it into an SQLite file, for example. If your data is nice and clean, it can be as simple as: Note: import sqlalchemy as sa import pandas as pd e = sa.create_engine(\"sqlite:///raw_data.sqlite\") pd.read_csv(\"raw_data.csv\").to_sql(\"raw_data\", e) If you work in a team, make sure the data is easy to share. Use an NFS partition, an S3 bucket, a Git-LFS repository, a Quilt package, etc. Make sure your source data is always read-only and you have a backup copy. Take your time to document the meaning of all of your data as well as its location and access procedures. In general, take this step very seriously. Any mistake you make here, be it an invalid source file, a misunderstood feature name, or a misconfigured server may waste you a lot of time and effort down the road. Data processing The aim of the data processing step is to turn the source data into a \u201cclean\u201d form, suitable for use in the following modeling stage. This \u201cclean\u201d form is, in most cases, a table of features, hence the gist of \u201cdata processing\u201d often boils down to various forms of feature engineering. The core requirements here are to ensure that the feature engineering logic is maintainable, the target datasets are reproducible and, sometimes, that the whole pipeline is traceable to the source representations (otherwise you would not be able to deploy the model). All these requirements can be satisfied, if the processing is organized in an explicitly described computation graph. There are different possibilities for implementing this graph, however. Here are some examples: You follow the cookiecutter-data-science route and use Makefiles to describe the computation graph. Each step is implemented in a script, which takes some data file as input and produces a new data file as output, which you store in the data/interim or data/processed subdirectories of your project. You enjoy easy parallel computation via make -j . You use Luigi, Airflow or any other dedicated workflow management system instead of Makefiles to describe and execute the computation graph. Among other things this would typically let you observe the progress of your computations on a fancy web-based dashboard, integrate with a computing cluster\u2019s job queue, or provide some other tool-specific benefits. All of your source data is stored in an SQL database as a set of tables. You implement all of the feature extraction logic in terms of SQL views. In addition, you use SQL views to describe the samples of objects. You can then use these feature- and sample-views to create the final modeling datasets using auto-generated queries like Firstly, it lets you keep track of all the currently defined features easily without having to store them in huge data tables \u2014 the feature definitions are only kept as code until you actually query them. Secondly, the deployment of models to production becomes rather straightforward \u2014 assuming the live database uses the same schema, you only need to copy the respective views. Moreover, you may even compile all the feature definitions into a single query along with the final model prediction computation using a sequence of CTE statements: This technique has been implemented in one in-house data science workbench tool of my design (not publicly available so far, unfortunately) and provides a very streamlined workflow. Example of an SQL-based feature engineering pipeline No matter which way you choose, keep these points in mind: Always organize the processing in the form of a computation graph and keep reproducibility in mind. This is the place where you have to think about the compute infrastructure you may need. Do you plan to run long computations? Do you need to parallelize or rent a cluster? Would you benefit from a job queue with a management UI for tracking task execution? If you plan to deploy the models into production later on, make sure your system will support this use case out of the box. For example, if you are developing a model to be included in a Java Android app, yet you prefer to do your data science in Python, one possibility for avoiding a lot of hassle down the road would be to express all of your data processing in a specially designed DSL rather than free-from Python. This DSL may then be translated into Java or an intermediate format like PMML. Consider storing some metadata about your designed features or interim computations. This does not have to be complicated \u2014 you can save each feature column to a separate file, for example, or use Python function annotations to annotate each feature-generating function with a list of its outputs. If your project is long and involves several people designing features, having such a registry may end up quite useful. Exploration and reporting Throughout the life of the data science project you will constantly have to sidestep from the main modeling pipeline in order to explore the data, try out various hypotheses, produce charts or reports. These tasks differ from the main pipeline in two important aspects. Firstly, most of them do not have to be reproducible. That is, you do not absolutely need to include them in the computation graph as you would with your data preprocessing and model fitting logic. You should always try to stick to reproducibility, of course \u2014 it is great when you have all the code to regenerate a given report from raw data, but there would still be many cases where this hassle is unnecessary. Sometimes making some plots manually in Jupyter and pasting them into a Powerpoint presentation serves the purpose just fine, no need to overengineer. The second, actually problematic particularity of these \u201cExploration\u201d tasks is that they tend to be somewhat disorganized and unpredictable. One day you might need to analyze a curious outlier in the performance monitoring logs. Next day you want to test a new algorithm, etc. If you do not decide on a suitable folder structure, soon your project directory will be filled with notebooks with weird names, and no one in the team would understand what is what. Over the years I have only found one more or less working solution to this problem: ordering subprojects by date. Namely: You create a projects directory in your project folder. You agree that each \"exploratory\" project must create a folder named projects/YYYY-MM-DD - Subproject title, where YYYY-MM-DD is the date when the subproject was initiated. After a year of work your projects folder looks as follows: Note that you are free to organize the internals of each subproject as you deem necessary. In particular, it may even be a \u201cdata science project\u201d in itself, with its own raw/processed data subfolders, its own Makefile-based computation graph, as well as own subprojects (which I would tend to name tasks in this case). In any case, always document each subproject (have a README file at the very least). Sometimes it helps to also have a root projects/README.txt file, which briefly lists the meaning of each subproject directory. Eventually you may discover that the project list becomes too long, and decide to reorganize the projects directory. You compress some of them and move to an archive folder. You regroup some related projects and move them to the tasks subdirectory of some parent project. Exploration tasks come in two flavors. Some tasks are truly one-shot analyses, which can be solved using a Jupyter notebook that will never be executed again. Others aim to produce reusable code (not to be confused with reproducible outputs). I find it important to establish some conventions for how the reusable code should be kept. For example, the convention may be to have a file named script.py in the subproject's root which outputs an argparse-based help message when executed. Or you may decide to require providing a run function, configured as a Celery task, so it can easily be submitted to the job queue. Or it could be something else - anything is fine, as long as it is consistent. The service checklist There is an other, orthogonal perspective on the data science workflow, which I find useful. Namely, rather than speaking about it in terms of a pipeline of processes, we may instead discuss the key services that data science projects typically rely upon. This way you may describe your particular (or desired) setup by specifying how exactly should each of the following 9 key services be provided: File storage. Your project must have a home. Often this home must be shared by the team. Is it a folder on a network drive? Is it a working folder of a Git repository? How do you organize its contents? Data services. How do you store and access your data? \u201cData\u201d here includes your source data, intermediate results, access to third-party datasets, metadata, models and reports \u2014 essentially everything which is read by or written by a computer. Yes, keeping a bunch of HDF5 files is also an example of a \u201cdata service\u201d. Versioning. Code, data, models, reports and documentation \u2014 everything should be kept under some form of version control. Git for code? Quilt for data? DVC for models? Dropbox for reports? Wiki for documentation? Once we\u2019re at it, do not forget to set up regular back ups for everything. Metadata and documentation. How do you document your project or subprojects? Do you maintain any machine-readable metadata about your features, scripts, datasets or models? Interactive computing. Interactive computing is how most of the hard work is done in data science. Do you use JupyterLab, RStudio, ROOT, Octave or Matlab? Do you set up a cluster for interactive parallel computing (e.g. ipyparallel or dask)? Job queue & scheduler. How do you run your code? Do you use a job processing queue? Do you have the capability (or the need) to schedule regular maintenance tasks? Computation graph. How do you describe the computation graph and establish reproducibility? Makefiles? DVC? Airflow? Experiment manager. How do you collect, view and analyze model training progress and results? ModelDB? Hyperdash? FloydHub? Monitoring dashboard. How do you collect and track the performance of the model in production? Metabase? Tableau? PowerBI? Grafana? The tools To conclude and summarize the exposition, here is a small spreadsheet, listing the tools mentioned in this post (as well as some extra ones I added or will add later on), categorizing them according to which stages of the data science workflow (in the terms defined in this post) they aim to support. Disclaimer \u2014 I did try out most, but not all of them. In particular, my understanding of the capabilities of the non-free solutions in the list is so far only based on their online demos or descriptions on the site.","title":"The Data Science Workflow"},{"location":"Highlights/Readwise/Articles/The%20Data%20Science%20Workflow/#the-data-science-workflow","text":"","title":"The Data Science Workflow"},{"location":"Highlights/Readwise/Articles/The%20Data%20Science%20Workflow/#metadata","text":"Author: Full Title: The Data Science Workflow Category: #Type/Highlights/Article URL: https://towardsdatascience.com/the-data-science-workflow-43859db0415","title":"Metadata"},{"location":"Highlights/Readwise/Articles/The%20Data%20Science%20Workflow/#highlights","text":"Source data access your first step is to define access to the source data. Your source data is provided as a set of *.csv files. You follow the cookiecutter-data-science approach, make a data/raw subdirectory in your project's root folder, and put all the files there. You create the docs/data.rst file, where you describe the meaning of your source data. (Note: Cookiecutter-DataScience template actually recommends references/ as the place for data dictionaries, while I pesonally prefer docs. Not that it matters much). Tags: [[favorite]] Note: This is python specific - I life the idea of references folder though as well as a restructured-text documentation \".rst\" file although i would use markdown. Your source data is provided as a set of *.csv files. You set up an SQL server, create a schema named raw and import all your CSV files as separate tables. You create the docs/data.rst file, where you describe the meaning of your source data as well as the location and access procedures for the SQL server. Your source data is a messy collection of genome sequence files, patient records, Excel files and Word documents, which may later grow in unpredicted ways. In addition, you know that you will need to query several external websites to receive extra information. You create an SQL database server in the cloud and import most of the tables from Excel files there. You create the data/raw directory in your project, put all the huge genome sequence files into the dna subdirectory. Some of the Excel files were too dirty to be imported into a database table, so you store them in data/raw/unprocessed directory along with the Word files. You create an Amazon S3 bucket and push your whole data/raw directory there using DVC. You create a Python package for querying the external websites. You create the docs/data.rst file, where you specify the location of the SQL server, the S3 bucket, the external websites, describe how to use DVC to download the data from S3 and the Python package to query the websites. You also describe, to the best of your understanding, the meaning and contents of all the Excel and Word files as well as the procedures to be taken when new data is added. Your source data consists of constantly updated website logs. You set up the ELK stack and configure the website to stream all the new logs there. You create docs/data.rst, where you describe the contents of the log records as well as the information needed to access and configure the ELK stack. Your source data is a simulated dataset. You implement the dataset generation as a Python class and document its use in a README.txt file. In general, remember the following rules of thumb when setting up the source data: Whenever you can meaningfully store your source data in a conveniently queryable/indexable form (an SQL database, the ELK stack, an HDF5 file or a raster database), you should do it. Even if your source data is a single csv and you are reluctant to set up a server, do yourself a favor and import it into an SQLite file, for example. If your data is nice and clean, it can be as simple as: Note: import sqlalchemy as sa import pandas as pd e = sa.create_engine(\"sqlite:///raw_data.sqlite\") pd.read_csv(\"raw_data.csv\").to_sql(\"raw_data\", e) If you work in a team, make sure the data is easy to share. Use an NFS partition, an S3 bucket, a Git-LFS repository, a Quilt package, etc. Make sure your source data is always read-only and you have a backup copy. Take your time to document the meaning of all of your data as well as its location and access procedures. In general, take this step very seriously. Any mistake you make here, be it an invalid source file, a misunderstood feature name, or a misconfigured server may waste you a lot of time and effort down the road. Data processing The aim of the data processing step is to turn the source data into a \u201cclean\u201d form, suitable for use in the following modeling stage. This \u201cclean\u201d form is, in most cases, a table of features, hence the gist of \u201cdata processing\u201d often boils down to various forms of feature engineering. The core requirements here are to ensure that the feature engineering logic is maintainable, the target datasets are reproducible and, sometimes, that the whole pipeline is traceable to the source representations (otherwise you would not be able to deploy the model). All these requirements can be satisfied, if the processing is organized in an explicitly described computation graph. There are different possibilities for implementing this graph, however. Here are some examples: You follow the cookiecutter-data-science route and use Makefiles to describe the computation graph. Each step is implemented in a script, which takes some data file as input and produces a new data file as output, which you store in the data/interim or data/processed subdirectories of your project. You enjoy easy parallel computation via make -j . You use Luigi, Airflow or any other dedicated workflow management system instead of Makefiles to describe and execute the computation graph. Among other things this would typically let you observe the progress of your computations on a fancy web-based dashboard, integrate with a computing cluster\u2019s job queue, or provide some other tool-specific benefits. All of your source data is stored in an SQL database as a set of tables. You implement all of the feature extraction logic in terms of SQL views. In addition, you use SQL views to describe the samples of objects. You can then use these feature- and sample-views to create the final modeling datasets using auto-generated queries like Firstly, it lets you keep track of all the currently defined features easily without having to store them in huge data tables \u2014 the feature definitions are only kept as code until you actually query them. Secondly, the deployment of models to production becomes rather straightforward \u2014 assuming the live database uses the same schema, you only need to copy the respective views. Moreover, you may even compile all the feature definitions into a single query along with the final model prediction computation using a sequence of CTE statements: This technique has been implemented in one in-house data science workbench tool of my design (not publicly available so far, unfortunately) and provides a very streamlined workflow. Example of an SQL-based feature engineering pipeline No matter which way you choose, keep these points in mind: Always organize the processing in the form of a computation graph and keep reproducibility in mind. This is the place where you have to think about the compute infrastructure you may need. Do you plan to run long computations? Do you need to parallelize or rent a cluster? Would you benefit from a job queue with a management UI for tracking task execution? If you plan to deploy the models into production later on, make sure your system will support this use case out of the box. For example, if you are developing a model to be included in a Java Android app, yet you prefer to do your data science in Python, one possibility for avoiding a lot of hassle down the road would be to express all of your data processing in a specially designed DSL rather than free-from Python. This DSL may then be translated into Java or an intermediate format like PMML. Consider storing some metadata about your designed features or interim computations. This does not have to be complicated \u2014 you can save each feature column to a separate file, for example, or use Python function annotations to annotate each feature-generating function with a list of its outputs. If your project is long and involves several people designing features, having such a registry may end up quite useful. Exploration and reporting Throughout the life of the data science project you will constantly have to sidestep from the main modeling pipeline in order to explore the data, try out various hypotheses, produce charts or reports. These tasks differ from the main pipeline in two important aspects. Firstly, most of them do not have to be reproducible. That is, you do not absolutely need to include them in the computation graph as you would with your data preprocessing and model fitting logic. You should always try to stick to reproducibility, of course \u2014 it is great when you have all the code to regenerate a given report from raw data, but there would still be many cases where this hassle is unnecessary. Sometimes making some plots manually in Jupyter and pasting them into a Powerpoint presentation serves the purpose just fine, no need to overengineer. The second, actually problematic particularity of these \u201cExploration\u201d tasks is that they tend to be somewhat disorganized and unpredictable. One day you might need to analyze a curious outlier in the performance monitoring logs. Next day you want to test a new algorithm, etc. If you do not decide on a suitable folder structure, soon your project directory will be filled with notebooks with weird names, and no one in the team would understand what is what. Over the years I have only found one more or less working solution to this problem: ordering subprojects by date. Namely: You create a projects directory in your project folder. You agree that each \"exploratory\" project must create a folder named projects/YYYY-MM-DD - Subproject title, where YYYY-MM-DD is the date when the subproject was initiated. After a year of work your projects folder looks as follows: Note that you are free to organize the internals of each subproject as you deem necessary. In particular, it may even be a \u201cdata science project\u201d in itself, with its own raw/processed data subfolders, its own Makefile-based computation graph, as well as own subprojects (which I would tend to name tasks in this case). In any case, always document each subproject (have a README file at the very least). Sometimes it helps to also have a root projects/README.txt file, which briefly lists the meaning of each subproject directory. Eventually you may discover that the project list becomes too long, and decide to reorganize the projects directory. You compress some of them and move to an archive folder. You regroup some related projects and move them to the tasks subdirectory of some parent project. Exploration tasks come in two flavors. Some tasks are truly one-shot analyses, which can be solved using a Jupyter notebook that will never be executed again. Others aim to produce reusable code (not to be confused with reproducible outputs). I find it important to establish some conventions for how the reusable code should be kept. For example, the convention may be to have a file named script.py in the subproject's root which outputs an argparse-based help message when executed. Or you may decide to require providing a run function, configured as a Celery task, so it can easily be submitted to the job queue. Or it could be something else - anything is fine, as long as it is consistent. The service checklist There is an other, orthogonal perspective on the data science workflow, which I find useful. Namely, rather than speaking about it in terms of a pipeline of processes, we may instead discuss the key services that data science projects typically rely upon. This way you may describe your particular (or desired) setup by specifying how exactly should each of the following 9 key services be provided: File storage. Your project must have a home. Often this home must be shared by the team. Is it a folder on a network drive? Is it a working folder of a Git repository? How do you organize its contents? Data services. How do you store and access your data? \u201cData\u201d here includes your source data, intermediate results, access to third-party datasets, metadata, models and reports \u2014 essentially everything which is read by or written by a computer. Yes, keeping a bunch of HDF5 files is also an example of a \u201cdata service\u201d. Versioning. Code, data, models, reports and documentation \u2014 everything should be kept under some form of version control. Git for code? Quilt for data? DVC for models? Dropbox for reports? Wiki for documentation? Once we\u2019re at it, do not forget to set up regular back ups for everything. Metadata and documentation. How do you document your project or subprojects? Do you maintain any machine-readable metadata about your features, scripts, datasets or models? Interactive computing. Interactive computing is how most of the hard work is done in data science. Do you use JupyterLab, RStudio, ROOT, Octave or Matlab? Do you set up a cluster for interactive parallel computing (e.g. ipyparallel or dask)? Job queue & scheduler. How do you run your code? Do you use a job processing queue? Do you have the capability (or the need) to schedule regular maintenance tasks? Computation graph. How do you describe the computation graph and establish reproducibility? Makefiles? DVC? Airflow? Experiment manager. How do you collect, view and analyze model training progress and results? ModelDB? Hyperdash? FloydHub? Monitoring dashboard. How do you collect and track the performance of the model in production? Metabase? Tableau? PowerBI? Grafana? The tools To conclude and summarize the exposition, here is a small spreadsheet, listing the tools mentioned in this post (as well as some extra ones I added or will add later on), categorizing them according to which stages of the data science workflow (in the terms defined in this post) they aim to support. Disclaimer \u2014 I did try out most, but not all of them. In particular, my understanding of the capabilities of the non-free solutions in the list is so far only based on their online demos or descriptions on the site.","title":"Highlights"},{"location":"Highlights/Readwise/Articles/The%20Deep%20Reset%20-%20Study%20Hacks%20-%20Cal%20Newport/","text":"The Deep Reset - Study Hacks - Cal Newport \u00b6 Metadata \u00b6 Author: [[calnewport.com]] Full Title: The Deep Reset - Study Hacks - Cal Newport Category: #Type/Highlights/Article URL: https://www.calnewport.com/blog/2020/05/14/the-deep-reset/ Highlights \u00b6 But he\u2019s not done. Following a prophecy delivered to him by the ghost of Theban Teiresias in the underworld (depicted above), Odysseus makes a humbling journey inland. He carries an oar \u2014 a symbol of the maritime world where he reined \u2014 farther and farther from the sea, until he arrives at a place where it\u2019s mistaken for a farming implement by locals who have \u201cnever heard of crimson-painted ships, or the well-shaped oars that serve as wings.\u201d It is here, stripped of any of the recognitions on which he\u2019d built his previous life, that he plants the oar in the ground and performs sacrifices to Poseidon, before returning home to live out his life in peace. \u201cThe story of Odysseus is a classic transrational myth,\u201d writes Richard Rohr in his underground classic, Falling Upward, \u201cone that many would say sets the bar and direction for all later Western storytelling.\u201d And for good reason. It\u2019s one of the earliest extant works to describe a pattern absolutely fundamental to the human condition: hardship unlocking a deeper, more authentic, more satisfying life. To varying degrees of severity, we\u2019re all suffering through some version of Odysseus\u2019s tragic journey. Many \u2014 too many \u2014 are struggling with devastating consequences to their health or livelihoods. Like Odysseus surviving the storm that destroyed his fleet, for them, all energy is dedicated to perseverance in the moment. But for many others, including a large part of my audience here, the moment has brought severe dislocation to much of what we\u2019ve come to trust and expect, but falls short of immediate peril. The question then is what those who find themselves in this situation \u2014 marooned on a Netflix-themed island of the lotus eaters \u2014 should do about it. Essentially all of philosophy, theology, literature and history implies that the Odysseus approach is the one for which we as humans are wired. The best response to deep disruption, in other words, is often a deep reset.","title":"The Deep Reset - Study Hacks - Cal Newport"},{"location":"Highlights/Readwise/Articles/The%20Deep%20Reset%20-%20Study%20Hacks%20-%20Cal%20Newport/#the-deep-reset-study-hacks-cal-newport","text":"","title":"The Deep Reset - Study Hacks - Cal Newport"},{"location":"Highlights/Readwise/Articles/The%20Deep%20Reset%20-%20Study%20Hacks%20-%20Cal%20Newport/#metadata","text":"Author: [[calnewport.com]] Full Title: The Deep Reset - Study Hacks - Cal Newport Category: #Type/Highlights/Article URL: https://www.calnewport.com/blog/2020/05/14/the-deep-reset/","title":"Metadata"},{"location":"Highlights/Readwise/Articles/The%20Deep%20Reset%20-%20Study%20Hacks%20-%20Cal%20Newport/#highlights","text":"But he\u2019s not done. Following a prophecy delivered to him by the ghost of Theban Teiresias in the underworld (depicted above), Odysseus makes a humbling journey inland. He carries an oar \u2014 a symbol of the maritime world where he reined \u2014 farther and farther from the sea, until he arrives at a place where it\u2019s mistaken for a farming implement by locals who have \u201cnever heard of crimson-painted ships, or the well-shaped oars that serve as wings.\u201d It is here, stripped of any of the recognitions on which he\u2019d built his previous life, that he plants the oar in the ground and performs sacrifices to Poseidon, before returning home to live out his life in peace. \u201cThe story of Odysseus is a classic transrational myth,\u201d writes Richard Rohr in his underground classic, Falling Upward, \u201cone that many would say sets the bar and direction for all later Western storytelling.\u201d And for good reason. It\u2019s one of the earliest extant works to describe a pattern absolutely fundamental to the human condition: hardship unlocking a deeper, more authentic, more satisfying life. To varying degrees of severity, we\u2019re all suffering through some version of Odysseus\u2019s tragic journey. Many \u2014 too many \u2014 are struggling with devastating consequences to their health or livelihoods. Like Odysseus surviving the storm that destroyed his fleet, for them, all energy is dedicated to perseverance in the moment. But for many others, including a large part of my audience here, the moment has brought severe dislocation to much of what we\u2019ve come to trust and expect, but falls short of immediate peril. The question then is what those who find themselves in this situation \u2014 marooned on a Netflix-themed island of the lotus eaters \u2014 should do about it. Essentially all of philosophy, theology, literature and history implies that the Odysseus approach is the one for which we as humans are wired. The best response to deep disruption, in other words, is often a deep reset.","title":"Highlights"},{"location":"Highlights/Readwise/Articles/The%20Digital%20Productivity%20Pyramid%20-%20Forte%20Labs/","text":"The Digital Productivity Pyramid - Forte Labs \u00b6 Metadata \u00b6 Author: [[fortelabs.co]] Full Title: The Digital Productivity Pyramid - Forte Labs Category: #Type/Highlights/Article URL: https://fortelabs.co/blog/the-digital-productivity-pyramid/ Highlights \u00b6 The shiny new thing introduces novelty that seems to help for a short time. But it soon becomes just another layer of complexity, exacerbating the original problem. The Pyramid shows how higher-order productivity skills build upon and extend lower-order skills. It shows how each skill can be leveraged using a particular kind of digital technology, which is our focus. Non-linear The key breakthrough we needed to develop this model was that digital productivity is not a linear learning process. You don\u2019t learn one skill at a time, in strict order, mastering one completely before moving on to the next. It\u2019s more like a spiral staircase, ascending through increasingly advanced versions of the same core skills. I would estimate that 90% of full-time knowledge workers are proficient in level 1, while less than 1% are proficient at level 5. Skills + technologies Each level of the Pyramid is a combination of human skills augmented or extended by some form of digital technology: hardware, software, or online platforms. These skills range from very meta (noticing what you notice), to very actionable (using a text expander). Pairing each of them with a digital tool gives them scale and leverage. Emergence Each level emerges from the one below it, either extending or abstracting the same core principles. Each level also makes use of the time and attention freed up by the level below. Building up each level involves an initial design/setup stage, during which key systems and habits are put in place, followed by a longer optimization/customization stage. Information flows The blocks within each level are ordered from left to right, not in chronological order, but in terms of which direction information flows. The actual behaviors involved with each skill may take place in any order, but are generally organized to process information from one state to another. Level 1: Digital Fluency Includes: Basic computer usage Web browsing Basic email usage Keyboard shortcuts Digital calendars Scheduling apps Read Later apps Inbox Zero Password management Speed reading Time tracking Text Expanders Digital literacy refers to the most basic familiarity with computers, such as how to visit a webpage or create a text document. Level 1 of the Digital Productivity Pyramid extends this concept to digital fluency. Mastering computer skills is a learning process that never ends. Even the most advanced users continue to learn new keyboard shortcuts, discover new features of their devices, and optimize their settings. We\u2019ve placed these core capabilities at the bottom of the Pyramid because everything else depends on them Focusing on your actionable tasks (Level 2) will involve a lot of friction if you don\u2019t have a dedicated place for reading online articles (Level 1) Building routines (Level 3) will be very challenging without a reliable digital calendar (Level 1) You\u2019ll have trouble finding the time to organize your files (Level 4) if your email inbox is out of control (Level 1) Tags: [[favorite]] Level 2: Task Management and Workflow Includes: Capture: collect what has your attention Clarify: decide what it means Organize: put it where it belongs Reflect: review what you\u2019ve collected Engage: take action Task management is essentially \u201cadvanced to-do lists.\u201d Popular digital task managers include Omnifocus, Things, Wunderlist, Todoist, 2Do, and Toodledo. A workflow is simply the sequence of steps you move through to manage information using a task manager, from first identifying a potential action, to completion. Although there are many ways to create a task management workflow, there is one that stands above the rest: David Allen\u2019s Getting Things Done (GTD) method. The five stages of GTD are so fundamental to how actionable information is captured and managed to completion that we\u2019ve used them to label this level: Incomplete capturing (i.e. writing down) of your tasks will absolutely become a bottleneck to any ambitious project you want to take on, as decisions and commitments get lost Trying to complete tasks that haven\u2019t been properly clarified (i.e. formulated in a way that makes them actionable and outcome-oriented) is difficult and frustrating, since it won\u2019t be clear why you\u2019re doing them The most comprehensive collection of potential tasks is useless if not organized in a way that they can be quickly identified and acted on Strategic decision making depends on dedicated reflection time, to make sense of all the information being collected And of course, all of these tasks amount to excessive record-keeping if not actually engaged with and acted on Level 3: Habit Formation and Behavior Change After an initial setup period, each one of the five principles from Level 2 must be put on autopilot to have their full impact. The key is to adopt a critical, automatic habit for each one: Capture => Collection Habit Clarify => Next Physical Action Organize => Project List Reflect => Weekly Review Engage => Contexts/priorities Includes: Progressive summarization P.A.R.A. Workflow Strategies Whereas Level 2 is about taming the flow of information related to actions, Level 4 is about the flow of knowledge. Personal knowledge management (PKM) is a set of skills and tools for an individual to capture, organize, and deploy the knowledge they accumulate while completing their work. It draws from diverse fields such as digital archiving, process management, and project management, and includes software programs for e-reading, digital note-taking, word processing, cloud storage, and others. Personal knowledge management is the topic of Building a Second Brain, an online course in which we help people unlock their creative potential using digital note-taking software. Level 5: Just-in-Time Project Management As working professionals, we don\u2019t have time to consume a body of knowledge upfront and then regurgitate it for a test, as in school. Professional education has to take place right alongside daily work. We have to build the plane (and learn to fly it) as it\u2019s taking off. For PKM to be sustainable, it needs to directly enable the execution of real projects. That\u2019s why Just-in-Time Project Management is the capstone of the Pyramid. The knowledge we are collecting and managing needs to have an immediate return to be justified, instead of only far in the future. While you don\u2019t need to build levels 1-4 before starting to work on real projects, the scale and ambition of the projects you can successfully execute is constrained by the structural integrity of your Pyramid. The taller the building you want to erect, the deeper and stronger your foundation must be.","title":"The Digital Productivity Pyramid - Forte Labs"},{"location":"Highlights/Readwise/Articles/The%20Digital%20Productivity%20Pyramid%20-%20Forte%20Labs/#the-digital-productivity-pyramid-forte-labs","text":"","title":"The Digital Productivity Pyramid - Forte Labs"},{"location":"Highlights/Readwise/Articles/The%20Digital%20Productivity%20Pyramid%20-%20Forte%20Labs/#metadata","text":"Author: [[fortelabs.co]] Full Title: The Digital Productivity Pyramid - Forte Labs Category: #Type/Highlights/Article URL: https://fortelabs.co/blog/the-digital-productivity-pyramid/","title":"Metadata"},{"location":"Highlights/Readwise/Articles/The%20Digital%20Productivity%20Pyramid%20-%20Forte%20Labs/#highlights","text":"The shiny new thing introduces novelty that seems to help for a short time. But it soon becomes just another layer of complexity, exacerbating the original problem. The Pyramid shows how higher-order productivity skills build upon and extend lower-order skills. It shows how each skill can be leveraged using a particular kind of digital technology, which is our focus. Non-linear The key breakthrough we needed to develop this model was that digital productivity is not a linear learning process. You don\u2019t learn one skill at a time, in strict order, mastering one completely before moving on to the next. It\u2019s more like a spiral staircase, ascending through increasingly advanced versions of the same core skills. I would estimate that 90% of full-time knowledge workers are proficient in level 1, while less than 1% are proficient at level 5. Skills + technologies Each level of the Pyramid is a combination of human skills augmented or extended by some form of digital technology: hardware, software, or online platforms. These skills range from very meta (noticing what you notice), to very actionable (using a text expander). Pairing each of them with a digital tool gives them scale and leverage. Emergence Each level emerges from the one below it, either extending or abstracting the same core principles. Each level also makes use of the time and attention freed up by the level below. Building up each level involves an initial design/setup stage, during which key systems and habits are put in place, followed by a longer optimization/customization stage. Information flows The blocks within each level are ordered from left to right, not in chronological order, but in terms of which direction information flows. The actual behaviors involved with each skill may take place in any order, but are generally organized to process information from one state to another. Level 1: Digital Fluency Includes: Basic computer usage Web browsing Basic email usage Keyboard shortcuts Digital calendars Scheduling apps Read Later apps Inbox Zero Password management Speed reading Time tracking Text Expanders Digital literacy refers to the most basic familiarity with computers, such as how to visit a webpage or create a text document. Level 1 of the Digital Productivity Pyramid extends this concept to digital fluency. Mastering computer skills is a learning process that never ends. Even the most advanced users continue to learn new keyboard shortcuts, discover new features of their devices, and optimize their settings. We\u2019ve placed these core capabilities at the bottom of the Pyramid because everything else depends on them Focusing on your actionable tasks (Level 2) will involve a lot of friction if you don\u2019t have a dedicated place for reading online articles (Level 1) Building routines (Level 3) will be very challenging without a reliable digital calendar (Level 1) You\u2019ll have trouble finding the time to organize your files (Level 4) if your email inbox is out of control (Level 1) Tags: [[favorite]] Level 2: Task Management and Workflow Includes: Capture: collect what has your attention Clarify: decide what it means Organize: put it where it belongs Reflect: review what you\u2019ve collected Engage: take action Task management is essentially \u201cadvanced to-do lists.\u201d Popular digital task managers include Omnifocus, Things, Wunderlist, Todoist, 2Do, and Toodledo. A workflow is simply the sequence of steps you move through to manage information using a task manager, from first identifying a potential action, to completion. Although there are many ways to create a task management workflow, there is one that stands above the rest: David Allen\u2019s Getting Things Done (GTD) method. The five stages of GTD are so fundamental to how actionable information is captured and managed to completion that we\u2019ve used them to label this level: Incomplete capturing (i.e. writing down) of your tasks will absolutely become a bottleneck to any ambitious project you want to take on, as decisions and commitments get lost Trying to complete tasks that haven\u2019t been properly clarified (i.e. formulated in a way that makes them actionable and outcome-oriented) is difficult and frustrating, since it won\u2019t be clear why you\u2019re doing them The most comprehensive collection of potential tasks is useless if not organized in a way that they can be quickly identified and acted on Strategic decision making depends on dedicated reflection time, to make sense of all the information being collected And of course, all of these tasks amount to excessive record-keeping if not actually engaged with and acted on Level 3: Habit Formation and Behavior Change After an initial setup period, each one of the five principles from Level 2 must be put on autopilot to have their full impact. The key is to adopt a critical, automatic habit for each one: Capture => Collection Habit Clarify => Next Physical Action Organize => Project List Reflect => Weekly Review Engage => Contexts/priorities Includes: Progressive summarization P.A.R.A. Workflow Strategies Whereas Level 2 is about taming the flow of information related to actions, Level 4 is about the flow of knowledge. Personal knowledge management (PKM) is a set of skills and tools for an individual to capture, organize, and deploy the knowledge they accumulate while completing their work. It draws from diverse fields such as digital archiving, process management, and project management, and includes software programs for e-reading, digital note-taking, word processing, cloud storage, and others. Personal knowledge management is the topic of Building a Second Brain, an online course in which we help people unlock their creative potential using digital note-taking software. Level 5: Just-in-Time Project Management As working professionals, we don\u2019t have time to consume a body of knowledge upfront and then regurgitate it for a test, as in school. Professional education has to take place right alongside daily work. We have to build the plane (and learn to fly it) as it\u2019s taking off. For PKM to be sustainable, it needs to directly enable the execution of real projects. That\u2019s why Just-in-Time Project Management is the capstone of the Pyramid. The knowledge we are collecting and managing needs to have an immediate return to be justified, instead of only far in the future. While you don\u2019t need to build levels 1-4 before starting to work on real projects, the scale and ambition of the projects you can successfully execute is constrained by the structural integrity of your Pyramid. The taller the building you want to erect, the deeper and stronger your foundation must be.","title":"Highlights"},{"location":"Highlights/Readwise/Articles/The%20Future%20of%20Communities%20Is%20Increasingly%20More%20About%20Digital%20Community%20Gardening/","text":"The Future of Communities Is Increasingly More About Digital Community Gardening \u00b6 Metadata \u00b6 Author: [[indiehackers.com]] Full Title: The Future of Communities Is Increasingly More About Digital Community Gardening Category: #Type/Highlights/Article URL: https://www.indiehackers.com/post/building-a-community-digital-garden-7e941d107c Highlights \u00b6 The phrase \"digital garden\" is a metaphor for thinking about writing and creating that focuses less on the resulting \"showpiece\" and more on the process, care, and craft it takes to get there. A digital garden for me is about moving away from the idea of a blog (or even a newsletter like this \ud83d\ude2c), where the posts are displayed chronologically and with a focus on perfection.","title":"The Future of Communities Is Increasingly More About Digital Community Gardening"},{"location":"Highlights/Readwise/Articles/The%20Future%20of%20Communities%20Is%20Increasingly%20More%20About%20Digital%20Community%20Gardening/#the-future-of-communities-is-increasingly-more-about-digital-community-gardening","text":"","title":"The Future of Communities Is Increasingly More About Digital Community Gardening"},{"location":"Highlights/Readwise/Articles/The%20Future%20of%20Communities%20Is%20Increasingly%20More%20About%20Digital%20Community%20Gardening/#metadata","text":"Author: [[indiehackers.com]] Full Title: The Future of Communities Is Increasingly More About Digital Community Gardening Category: #Type/Highlights/Article URL: https://www.indiehackers.com/post/building-a-community-digital-garden-7e941d107c","title":"Metadata"},{"location":"Highlights/Readwise/Articles/The%20Future%20of%20Communities%20Is%20Increasingly%20More%20About%20Digital%20Community%20Gardening/#highlights","text":"The phrase \"digital garden\" is a metaphor for thinking about writing and creating that focuses less on the resulting \"showpiece\" and more on the process, care, and craft it takes to get there. A digital garden for me is about moving away from the idea of a blog (or even a newsletter like this \ud83d\ude2c), where the posts are displayed chronologically and with a focus on perfection.","title":"Highlights"},{"location":"Highlights/Readwise/Articles/The%20Guide%20to%20Writing%20Great%20Emails%20That%20Win%20You%20Clients%20-%20Double%20Your%20Freelancing/","text":"The Guide to Writing Great Emails That Win You Clients - Double Your Freelancing \u00b6 Metadata \u00b6 Author: [[doubleyourfreelancing.com]] Full Title: The Guide to Writing Great Emails That Win You Clients - Double Your Freelancing Category: #Type/Highlights/Article URL: https://doubleyourfreelancing.com/guide-to-writing-client-emails/ Highlights \u00b6 Before you write another email read this. Your biggest competition for a new client is yourself. Most freelancers and consultants eliminate themselves before they ever get told \u201cno\u201d by a client. ( View Highlight ) An email stands out if it\u2019s different. In fact, one of my most successful Workshop customers, Eric Davis, puts off emailing the leads I send him for weeks or months. He saves them all up in his inbox then revisits them later. That\u2019s when he follows up about how the project turned out and \u2013 only then \u2013 talks about what he can do to help. He\u2019s earned over $60,000 by doing this with Workshop leads. It\u2019s true, you can\u2019t know the perfect time to email someone. But being first doesn\u2019t matter. ( View Highlight ) Email Goal #1: Educating your clients ( View Highlight ) You have to make educating clients a priority. Ideal clients aren\u2019t born; they\u2019re created by great consultants who teach them. That\u2019s why some people triple their client\u2019s budget while others are stuck giving discounts. ( View Highlight ) The most successful consultants get this. Instead of complaining about low budgets, they show clients how working with them is in their best interest. Instead of discussing the price of open heart surgery they discuss whether the client needs the surgery at all. Questioning whether they even need your service, immediately put a client in a position to fight for what they want. Suggesting smaller projects for price-conscious clients will build trust by demonstrating you won\u2019t ever sell them something they don\u2019t need. You\u2019ll create life-long clients this way. ( View Highlight ) How to make a connection quickly. ( View Highlight ) Remember that each client you email is potentially worth thousands of dollars, and you only need a handful of clients to make a lot of money. So it\u2019s OK to spend some time on each one. ( View Highlight ) Has the recipient written a book or blog post you can read? If so, read it. Learn their name. Lead with something you really love about their company. Sincerely discovering what YOU think is great about them will not only feel good it will result in 10x the results. Remember, as your future client reads each sentence, they only have two options: Stop reading. Keep reading. Give them a reason to choose #2 by stepping into their shoes and addressing the fact that their inbox is full of spam. It\u2019s the best way to ensure they keep reading. ( View Highlight ) How to get your emails read. ( View Highlight ) Should you send your portfolio? ( View Highlight ) Most consultants and freelancers have great work on display in their portfolio. They all look the same. They all have a link in their signature. It makes sense that you want to use something you\u2019ve invested so much time into as much as possible. Don\u2019t. You needed to stand out. ( View Highlight ) Sell an outcome, not yourself. ( View Highlight ) Similarly, no one wants to read a 10-page proposal email about you and your awesome websites. People don\u2019t want websites. They don\u2019t want to hire a freelancer. They want something to happen. They want a result. So focus on selling results. If you had to remove the words \u201cI,\u201d \u201cme,\u201d or \u201cmy\u201d in the email and replace them with \u201cyou,\u201d (meaning the client) what would you say? I\u2019ve helped hundreds of businesses in your position. I helped X-company to accomplish Y-benefit. Would become: Your website reminds me of past client of mine: X-company, which probably means you want Y-benefit as well. This is way more effective because you\u2019re making the client the star of your email. What\u2019s the outcome they want? Leave everything else out. ( View Highlight ) What else to leave out I also recommend you don\u2019t include links to your social media or blog. A prospective client doesn\u2019t care about your work yet. The only point of your email is to get them to reply. Making them click on your website, linkedin profile, or blog makes this less likely to happen. In fact, leave out anything that doesn\u2019t help you get them to reply. That means keeping your emails extremely short. That way it\u2019s easier to find the point of your email. Don\u2019t go into your regular spiel about . Instead use words that they use to talk about their business. To find these words you can simply scan their job posting or website, steal their words, and mirror them back. ( View Highlight ) The fastest way to win over a client ( View Highlight ) Make smart decisions for them and put the burden on yourself to prove that you can help. Ask yourself: What do they need accomplished? What\u2019s most important to them? Why do they need this? Ignore everything else. Can you take care of their problem by sending this one email? If so, do it every time. ( View Highlight ) Is your email helpful? ( View Highlight ) Nobody cares about great design. Nobody cares about clean code. Nobody wants to have the best content just to have it. It\u2019s all about what it means for them. ( View Highlight ) A great SEO strategy means that a business owner doesn\u2019t have to worry about promoting articles as much and can just focus on making customers happy. ( View Highlight ) A web app means that the business owner can outsource a process and have it taken out of their hands. It doesn\u2019t have to be more complicated than that. ( View Highlight ) But what I didn\u2019t know at the time was that it was a single phrase I was writing in nearly every email I sent that was causing this hole in my pipeline. \u201cLet me know how I can help.\u201d I would spew it out constantly when I didn\u2019t know what else to say, or when I wanted to be helpful. All my emails ended with some variation of \u201clet me know.\u201d It seemed like a professional way to end an email. By letting a client dictate, I thought I was giving them exactly what they wanted. In reality, I was dumping my work on to them, and saying \u201chere, YOU deal with it.\u201d It reeked of incompetence and undermined my business. After all, these were problems I was asking to be paid to solve. So I tested the complete opposite for a few weeks. Instead of open-ended emails, I prescribed a solution. ( View Highlight ) If someone wanted a meeting, I\u2019d suggest a time. If I was presenting an idea I would also present how to implement it quickly. ( View Highlight ) If you don\u2019t apply anything else from this article, just take away this: end your email with a suggested next step. You\u2019ll know you\u2019re on the right track if a client can reply with a quick \u201csounds good\u201d to any email you send. Do that and your emails will win you more clients in less time too. ( View Highlight ) Examples of amazing emails: ( View Highlight ) The \u201cin-conversation\u201d emails. ( View Highlight ) You should put leads in different groups depending on what stage they\u2019re in. You\u2019ll want to follow-up with some leads more often than others. ( View Highlight ) For a client who has responded positively I recommend the group \u201cIn Conversation\u201d, because these leads are different than a lead who has never responded. While you should follow up with both, the people who have responded positively to an email should get more aggressive follow-ups: every 4-5 days until you get a solid \u201cno\u201d or \u201cnot right now\u201d. It\u2019s your duty to remember. Embrace the no. Try to get to it as quickly as possible. ( View Highlight ) The follow-up ( View Highlight ) The testimonial email ( View Highlight ) The referral email ( View Highlight ) How to end your emails ( View Highlight ) The last step: How to make it easy to hire you. ( View Highlight ) The last thing you want to do is remove any obstacles that come between you and a positive reply. People are more likely to do something when it\u2019s easy. That\u2019s why you\u2019ve gotta make it easy to read and act on your emails: Break emails up into sections. Make them easy to scan by using lists and bolding key points. Remove all links unless the client specifically requested them. You\u2019re not trying to drive traffic to a website, you\u2019re trying to get a reply. Don\u2019t send your entire portfolio. Break out 1-2 pieces that are relevant to their project. Match the benefits of your past work to their current needs. Remove any job board links. They know they posted on a job board. Don\u2019t give them a long questionnaire to fill out. No one wants to do it. Use good grammar. Write simply and get straight to the point. Once you\u2019ve agreed on the price and scope, link them to an easy payment system, like Stripe, Shopify, or Gumroad. A good rule of thumb: if someone can just reply \u201csounds good,\u201d then your email does enough of the heavy lifting. It means you\u2019ve taken away the hard part: deciding what\u2019s next. Even the busiest people will reply if you make it easy. ( View Highlight )","title":"The Guide to Writing Great Emails That Win You Clients - Double Your Freelancing"},{"location":"Highlights/Readwise/Articles/The%20Guide%20to%20Writing%20Great%20Emails%20That%20Win%20You%20Clients%20-%20Double%20Your%20Freelancing/#the-guide-to-writing-great-emails-that-win-you-clients-double-your-freelancing","text":"","title":"The Guide to Writing Great Emails That Win You Clients - Double Your Freelancing"},{"location":"Highlights/Readwise/Articles/The%20Guide%20to%20Writing%20Great%20Emails%20That%20Win%20You%20Clients%20-%20Double%20Your%20Freelancing/#metadata","text":"Author: [[doubleyourfreelancing.com]] Full Title: The Guide to Writing Great Emails That Win You Clients - Double Your Freelancing Category: #Type/Highlights/Article URL: https://doubleyourfreelancing.com/guide-to-writing-client-emails/","title":"Metadata"},{"location":"Highlights/Readwise/Articles/The%20Guide%20to%20Writing%20Great%20Emails%20That%20Win%20You%20Clients%20-%20Double%20Your%20Freelancing/#highlights","text":"Before you write another email read this. Your biggest competition for a new client is yourself. Most freelancers and consultants eliminate themselves before they ever get told \u201cno\u201d by a client. ( View Highlight ) An email stands out if it\u2019s different. In fact, one of my most successful Workshop customers, Eric Davis, puts off emailing the leads I send him for weeks or months. He saves them all up in his inbox then revisits them later. That\u2019s when he follows up about how the project turned out and \u2013 only then \u2013 talks about what he can do to help. He\u2019s earned over $60,000 by doing this with Workshop leads. It\u2019s true, you can\u2019t know the perfect time to email someone. But being first doesn\u2019t matter. ( View Highlight ) Email Goal #1: Educating your clients ( View Highlight ) You have to make educating clients a priority. Ideal clients aren\u2019t born; they\u2019re created by great consultants who teach them. That\u2019s why some people triple their client\u2019s budget while others are stuck giving discounts. ( View Highlight ) The most successful consultants get this. Instead of complaining about low budgets, they show clients how working with them is in their best interest. Instead of discussing the price of open heart surgery they discuss whether the client needs the surgery at all. Questioning whether they even need your service, immediately put a client in a position to fight for what they want. Suggesting smaller projects for price-conscious clients will build trust by demonstrating you won\u2019t ever sell them something they don\u2019t need. You\u2019ll create life-long clients this way. ( View Highlight ) How to make a connection quickly. ( View Highlight ) Remember that each client you email is potentially worth thousands of dollars, and you only need a handful of clients to make a lot of money. So it\u2019s OK to spend some time on each one. ( View Highlight ) Has the recipient written a book or blog post you can read? If so, read it. Learn their name. Lead with something you really love about their company. Sincerely discovering what YOU think is great about them will not only feel good it will result in 10x the results. Remember, as your future client reads each sentence, they only have two options: Stop reading. Keep reading. Give them a reason to choose #2 by stepping into their shoes and addressing the fact that their inbox is full of spam. It\u2019s the best way to ensure they keep reading. ( View Highlight ) How to get your emails read. ( View Highlight ) Should you send your portfolio? ( View Highlight ) Most consultants and freelancers have great work on display in their portfolio. They all look the same. They all have a link in their signature. It makes sense that you want to use something you\u2019ve invested so much time into as much as possible. Don\u2019t. You needed to stand out. ( View Highlight ) Sell an outcome, not yourself. ( View Highlight ) Similarly, no one wants to read a 10-page proposal email about you and your awesome websites. People don\u2019t want websites. They don\u2019t want to hire a freelancer. They want something to happen. They want a result. So focus on selling results. If you had to remove the words \u201cI,\u201d \u201cme,\u201d or \u201cmy\u201d in the email and replace them with \u201cyou,\u201d (meaning the client) what would you say? I\u2019ve helped hundreds of businesses in your position. I helped X-company to accomplish Y-benefit. Would become: Your website reminds me of past client of mine: X-company, which probably means you want Y-benefit as well. This is way more effective because you\u2019re making the client the star of your email. What\u2019s the outcome they want? Leave everything else out. ( View Highlight ) What else to leave out I also recommend you don\u2019t include links to your social media or blog. A prospective client doesn\u2019t care about your work yet. The only point of your email is to get them to reply. Making them click on your website, linkedin profile, or blog makes this less likely to happen. In fact, leave out anything that doesn\u2019t help you get them to reply. That means keeping your emails extremely short. That way it\u2019s easier to find the point of your email. Don\u2019t go into your regular spiel about . Instead use words that they use to talk about their business. To find these words you can simply scan their job posting or website, steal their words, and mirror them back. ( View Highlight ) The fastest way to win over a client ( View Highlight ) Make smart decisions for them and put the burden on yourself to prove that you can help. Ask yourself: What do they need accomplished? What\u2019s most important to them? Why do they need this? Ignore everything else. Can you take care of their problem by sending this one email? If so, do it every time. ( View Highlight ) Is your email helpful? ( View Highlight ) Nobody cares about great design. Nobody cares about clean code. Nobody wants to have the best content just to have it. It\u2019s all about what it means for them. ( View Highlight ) A great SEO strategy means that a business owner doesn\u2019t have to worry about promoting articles as much and can just focus on making customers happy. ( View Highlight ) A web app means that the business owner can outsource a process and have it taken out of their hands. It doesn\u2019t have to be more complicated than that. ( View Highlight ) But what I didn\u2019t know at the time was that it was a single phrase I was writing in nearly every email I sent that was causing this hole in my pipeline. \u201cLet me know how I can help.\u201d I would spew it out constantly when I didn\u2019t know what else to say, or when I wanted to be helpful. All my emails ended with some variation of \u201clet me know.\u201d It seemed like a professional way to end an email. By letting a client dictate, I thought I was giving them exactly what they wanted. In reality, I was dumping my work on to them, and saying \u201chere, YOU deal with it.\u201d It reeked of incompetence and undermined my business. After all, these were problems I was asking to be paid to solve. So I tested the complete opposite for a few weeks. Instead of open-ended emails, I prescribed a solution. ( View Highlight ) If someone wanted a meeting, I\u2019d suggest a time. If I was presenting an idea I would also present how to implement it quickly. ( View Highlight ) If you don\u2019t apply anything else from this article, just take away this: end your email with a suggested next step. You\u2019ll know you\u2019re on the right track if a client can reply with a quick \u201csounds good\u201d to any email you send. Do that and your emails will win you more clients in less time too. ( View Highlight ) Examples of amazing emails: ( View Highlight ) The \u201cin-conversation\u201d emails. ( View Highlight ) You should put leads in different groups depending on what stage they\u2019re in. You\u2019ll want to follow-up with some leads more often than others. ( View Highlight ) For a client who has responded positively I recommend the group \u201cIn Conversation\u201d, because these leads are different than a lead who has never responded. While you should follow up with both, the people who have responded positively to an email should get more aggressive follow-ups: every 4-5 days until you get a solid \u201cno\u201d or \u201cnot right now\u201d. It\u2019s your duty to remember. Embrace the no. Try to get to it as quickly as possible. ( View Highlight ) The follow-up ( View Highlight ) The testimonial email ( View Highlight ) The referral email ( View Highlight ) How to end your emails ( View Highlight ) The last step: How to make it easy to hire you. ( View Highlight ) The last thing you want to do is remove any obstacles that come between you and a positive reply. People are more likely to do something when it\u2019s easy. That\u2019s why you\u2019ve gotta make it easy to read and act on your emails: Break emails up into sections. Make them easy to scan by using lists and bolding key points. Remove all links unless the client specifically requested them. You\u2019re not trying to drive traffic to a website, you\u2019re trying to get a reply. Don\u2019t send your entire portfolio. Break out 1-2 pieces that are relevant to their project. Match the benefits of your past work to their current needs. Remove any job board links. They know they posted on a job board. Don\u2019t give them a long questionnaire to fill out. No one wants to do it. Use good grammar. Write simply and get straight to the point. Once you\u2019ve agreed on the price and scope, link them to an easy payment system, like Stripe, Shopify, or Gumroad. A good rule of thumb: if someone can just reply \u201csounds good,\u201d then your email does enough of the heavy lifting. It means you\u2019ve taken away the hard part: deciding what\u2019s next. Even the busiest people will reply if you make it easy. ( View Highlight )","title":"Highlights"},{"location":"Highlights/Readwise/Articles/The%20Impact%20of%20the%20Cloud%20on%20Software%20Development%20%20Developer.com/","text":"The Impact of the Cloud on Software Development | Developer.com \u00b6 Metadata \u00b6 Author: [[Brad Jones]] Full Title: The Impact of the Cloud on Software Development | Developer.com Category: #Type/Highlights/Article URL: https://www.developer.com/design/the-impact-of-the-cloud-on-software-development/ Highlights \u00b6 The following are just some of the areas that Cloud service providers offer to developers: Compute: Compute provides the ability to run applications and services on the Cloud provider\u2019s systems. This gives developers computing power without the need to invest in their own servers. Container Support: Container Support includes the ability to host and run containers such as Docker. Content Delivery: Content delivery includes the ability to distribute content, including placing objects on the Cloud \u201cedge.\u201d Database Services: Database services include scalable databases and database services with features such as SSD storage for fast access, data redundancy, data pipelines, access to relation and other database systems, and much more. Deployment: Many Cloud providers also offer continuous deployment services, as well as the ability to create automated deployments. Machine Learning: Services that help to drive machine learning and artificial intelligence are more recent additions for many Cloud providers. Management: As Cloud services and functions have increased, the ability to control and manage those Cloud services has been added. This can range from connecting to Microsoft Active Directory to configuring compliance, security, scalability, authentication, and other services. Mobile Services: Mobile services provide access to configure mobile apps and work with mobile app features such as notification services, user authentication, data storage, push notifications, analytics, and more. Networking: Networking services can include domain name services, virtual private networking, load balancing, and more. Storage: Storage was one of the earlier features provided, and generally includes the ability to do private backup and recovery along with the storage and hosting of data. This can include long-term storage options, high redundancy storage, and more. Web Site Management: The ability to manage DNS services, Web services, and more is also available from many Cloud providers. This also can include Web hosting as well as associated features such as analytics, data management, and more. Analytics: Analytics includes the ability to tap into business intelligence, analytics, and visualization tools. Application Services: Application services include features such as the ability to tap into Web service APIs and more. This can include services such as video and game streaming to providing e-mail, notifications, workflow, SMS, or any other types of app services. ( View Highlight )","title":"The Impact of the Cloud on Software Development | Developer.com"},{"location":"Highlights/Readwise/Articles/The%20Impact%20of%20the%20Cloud%20on%20Software%20Development%20%20Developer.com/#the-impact-of-the-cloud-on-software-development-developercom","text":"","title":"The Impact of the Cloud on Software Development | Developer.com"},{"location":"Highlights/Readwise/Articles/The%20Impact%20of%20the%20Cloud%20on%20Software%20Development%20%20Developer.com/#metadata","text":"Author: [[Brad Jones]] Full Title: The Impact of the Cloud on Software Development | Developer.com Category: #Type/Highlights/Article URL: https://www.developer.com/design/the-impact-of-the-cloud-on-software-development/","title":"Metadata"},{"location":"Highlights/Readwise/Articles/The%20Impact%20of%20the%20Cloud%20on%20Software%20Development%20%20Developer.com/#highlights","text":"The following are just some of the areas that Cloud service providers offer to developers: Compute: Compute provides the ability to run applications and services on the Cloud provider\u2019s systems. This gives developers computing power without the need to invest in their own servers. Container Support: Container Support includes the ability to host and run containers such as Docker. Content Delivery: Content delivery includes the ability to distribute content, including placing objects on the Cloud \u201cedge.\u201d Database Services: Database services include scalable databases and database services with features such as SSD storage for fast access, data redundancy, data pipelines, access to relation and other database systems, and much more. Deployment: Many Cloud providers also offer continuous deployment services, as well as the ability to create automated deployments. Machine Learning: Services that help to drive machine learning and artificial intelligence are more recent additions for many Cloud providers. Management: As Cloud services and functions have increased, the ability to control and manage those Cloud services has been added. This can range from connecting to Microsoft Active Directory to configuring compliance, security, scalability, authentication, and other services. Mobile Services: Mobile services provide access to configure mobile apps and work with mobile app features such as notification services, user authentication, data storage, push notifications, analytics, and more. Networking: Networking services can include domain name services, virtual private networking, load balancing, and more. Storage: Storage was one of the earlier features provided, and generally includes the ability to do private backup and recovery along with the storage and hosting of data. This can include long-term storage options, high redundancy storage, and more. Web Site Management: The ability to manage DNS services, Web services, and more is also available from many Cloud providers. This also can include Web hosting as well as associated features such as analytics, data management, and more. Analytics: Analytics includes the ability to tap into business intelligence, analytics, and visualization tools. Application Services: Application services include features such as the ability to tap into Web service APIs and more. This can include services such as video and game streaming to providing e-mail, notifications, workflow, SMS, or any other types of app services. ( View Highlight )","title":"Highlights"},{"location":"Highlights/Readwise/Articles/The%20Importance%20of%20Systems/","text":"The Importance of Systems \u00b6 Metadata \u00b6 Author: Full Title: The Importance of Systems Category: #Type/Highlights/Article URL: https://jamesstuber.com/systems/ Highlights \u00b6 Civilization advances by extending the number of important operations which we can perform without thinking about them. \u2014 Alfred North Whitehead Your own life advances by extending the number of important operations which you can perform without thinking about them. What to systematize What are some operations which we can systematize? Paying bills Sleep and wake times Daily Planning Studying procedures Work procedures Organizing Information and research Food choices Exercise programs Email handling Clothing choices Cleaning the house I\u2019m sure you can think of more. Systematize the stuff that\u2019s important, but boring to you. 10 Tools to Help You Implement Systems You don\u2019t have to make the next all-encompassing personal productivity system. Take something that\u2019s already been built and apply it to your own life. Here are some frameworks and tools you can work from: Every day write down your Most Important Tasks Setup a Morning Routine Put every appointment into your calendar app Inbox Zero your email Automate your bills Plan your meals for the week, and when you\u2019re going to cook them Plan your life on different time scales (Daily, Weekly, Quarterly, 25 years) Organize your research in a Notetaking App Setup a Task Planning system\u2013 GTD / ZTD / The Agile Way Pick one of these and implement it. Don\u2019t look for the holy grail of systems, pick something simple that works. Your system doesn\u2019t need to be perfect, or cover every edge case. Improve on it later if you need to. Further Reading A Daily Planning System - How I plan my days with Todoist and Google Calendar Gateless - Systems improve your \u2018Capacity\u2019 and make you more valuable Work Clean - Mise-en-place for your work Getting Things Done - The OG task planning system Zen To Done - An incremental approach for those who find GTD too complicated The Agile Way - For those who find GTD outdated or too reactive","title":"The Importance of Systems"},{"location":"Highlights/Readwise/Articles/The%20Importance%20of%20Systems/#the-importance-of-systems","text":"","title":"The Importance of Systems"},{"location":"Highlights/Readwise/Articles/The%20Importance%20of%20Systems/#metadata","text":"Author: Full Title: The Importance of Systems Category: #Type/Highlights/Article URL: https://jamesstuber.com/systems/","title":"Metadata"},{"location":"Highlights/Readwise/Articles/The%20Importance%20of%20Systems/#highlights","text":"Civilization advances by extending the number of important operations which we can perform without thinking about them. \u2014 Alfred North Whitehead Your own life advances by extending the number of important operations which you can perform without thinking about them. What to systematize What are some operations which we can systematize? Paying bills Sleep and wake times Daily Planning Studying procedures Work procedures Organizing Information and research Food choices Exercise programs Email handling Clothing choices Cleaning the house I\u2019m sure you can think of more. Systematize the stuff that\u2019s important, but boring to you. 10 Tools to Help You Implement Systems You don\u2019t have to make the next all-encompassing personal productivity system. Take something that\u2019s already been built and apply it to your own life. Here are some frameworks and tools you can work from: Every day write down your Most Important Tasks Setup a Morning Routine Put every appointment into your calendar app Inbox Zero your email Automate your bills Plan your meals for the week, and when you\u2019re going to cook them Plan your life on different time scales (Daily, Weekly, Quarterly, 25 years) Organize your research in a Notetaking App Setup a Task Planning system\u2013 GTD / ZTD / The Agile Way Pick one of these and implement it. Don\u2019t look for the holy grail of systems, pick something simple that works. Your system doesn\u2019t need to be perfect, or cover every edge case. Improve on it later if you need to. Further Reading A Daily Planning System - How I plan my days with Todoist and Google Calendar Gateless - Systems improve your \u2018Capacity\u2019 and make you more valuable Work Clean - Mise-en-place for your work Getting Things Done - The OG task planning system Zen To Done - An incremental approach for those who find GTD too complicated The Agile Way - For those who find GTD outdated or too reactive","title":"Highlights"},{"location":"Highlights/Readwise/Articles/The%20Maker%27s%20Guide%20to%20Content%20Curation%2C%20Part%201%20Open-Sourcing%20Your%20Learning%20Process%20-%20Forte%20Labs/","text":"The Maker's Guide to Content Curation, Part 1: Open-Sourcing Your Learning Process - Forte Labs \u00b6 Metadata \u00b6 Author: [[fortelabs.co]] Full Title: The Maker's Guide to Content Curation, Part 1: Open-Sourcing Your Learning Process - Forte Labs Category: #Type/Highlights/Article URL: https://fortelabs.co/blog/the-makers-guide-to-content-curation-part-1/ Highlights \u00b6 One of the best ways to advance your career, start an extra income stream, or become an entrepreneur is by creating content. By \u201ccontent\u201d I mean tangible information that delivers value to others, delivered over the internet. It could take the form of a blog post or a long-form essay, an instructional guide or a how-to video, an ebook or online course. Content is anything you make out of knowledge and ideas, either your own or those of others, that exists on its own as a stand-alone thing. Content typically has the goal of entertaining people, helping them learn something new, or giving them solutions to their problems without you having to be there. information products have a few key differences that make them perfectly suited to getting a business off the ground. First, they can be created out of nothing but thinking and effort. The cost of raw materials is zero. Second, once you\u2019ve produced the first one, they cost nothing to duplicate. The cost of additional manufacturing is zero. Third, they can be stored for free on your computer, and delivered for free over the internet. Inventory and distribution cost zero. And fourth, you can easily edit a text, modify an image, or change a webpage after the fact, often even after they\u2019ve been delivered. The costs of modification are zero. One of the best ways to start creating content is to curate content. Curation is the process of sorting through the vast amount of content that already exists, and picking and choosing the best or most interesting items for others. choosing the items is just the beginning of a curator\u2019s job. They also organize and present the items they are curating in a way that makes sense. In many cases, the curator\u2019s job goes even beyond that, including annotating, explaining, or putting the items into a narrative. Diagrams, infographics, other visuals: make a map or diagram showing the best tools, websites, events, or products for a particular hobby or activity, and how they relate to each other Curated news feed: find the best sources of news on a particular topic, and filter only the best ones for others Comparison tables: if you\u2019ve done the research comparing the options in an industry or niche hobby, create a table showing how they compare Guides: if you understand an industry or a field, create a \u201cguide\u201d that shows people who the major players are, or what the best sources of insights are Expert directories: create a list of the top experts in a field for people to follow Web page showcase Learning curriculum: make a \u201ccurriculum\u201d of the best sources of learning for your field, along with some commentary on how people should use them and in what order","title":"The Maker's Guide to Content Curation, Part 1: Open-Sourcing Your Learning Process - Forte Labs"},{"location":"Highlights/Readwise/Articles/The%20Maker%27s%20Guide%20to%20Content%20Curation%2C%20Part%201%20Open-Sourcing%20Your%20Learning%20Process%20-%20Forte%20Labs/#the-makers-guide-to-content-curation-part-1-open-sourcing-your-learning-process-forte-labs","text":"","title":"The Maker's Guide to Content Curation, Part 1: Open-Sourcing Your Learning Process - Forte Labs"},{"location":"Highlights/Readwise/Articles/The%20Maker%27s%20Guide%20to%20Content%20Curation%2C%20Part%201%20Open-Sourcing%20Your%20Learning%20Process%20-%20Forte%20Labs/#metadata","text":"Author: [[fortelabs.co]] Full Title: The Maker's Guide to Content Curation, Part 1: Open-Sourcing Your Learning Process - Forte Labs Category: #Type/Highlights/Article URL: https://fortelabs.co/blog/the-makers-guide-to-content-curation-part-1/","title":"Metadata"},{"location":"Highlights/Readwise/Articles/The%20Maker%27s%20Guide%20to%20Content%20Curation%2C%20Part%201%20Open-Sourcing%20Your%20Learning%20Process%20-%20Forte%20Labs/#highlights","text":"One of the best ways to advance your career, start an extra income stream, or become an entrepreneur is by creating content. By \u201ccontent\u201d I mean tangible information that delivers value to others, delivered over the internet. It could take the form of a blog post or a long-form essay, an instructional guide or a how-to video, an ebook or online course. Content is anything you make out of knowledge and ideas, either your own or those of others, that exists on its own as a stand-alone thing. Content typically has the goal of entertaining people, helping them learn something new, or giving them solutions to their problems without you having to be there. information products have a few key differences that make them perfectly suited to getting a business off the ground. First, they can be created out of nothing but thinking and effort. The cost of raw materials is zero. Second, once you\u2019ve produced the first one, they cost nothing to duplicate. The cost of additional manufacturing is zero. Third, they can be stored for free on your computer, and delivered for free over the internet. Inventory and distribution cost zero. And fourth, you can easily edit a text, modify an image, or change a webpage after the fact, often even after they\u2019ve been delivered. The costs of modification are zero. One of the best ways to start creating content is to curate content. Curation is the process of sorting through the vast amount of content that already exists, and picking and choosing the best or most interesting items for others. choosing the items is just the beginning of a curator\u2019s job. They also organize and present the items they are curating in a way that makes sense. In many cases, the curator\u2019s job goes even beyond that, including annotating, explaining, or putting the items into a narrative. Diagrams, infographics, other visuals: make a map or diagram showing the best tools, websites, events, or products for a particular hobby or activity, and how they relate to each other Curated news feed: find the best sources of news on a particular topic, and filter only the best ones for others Comparison tables: if you\u2019ve done the research comparing the options in an industry or niche hobby, create a table showing how they compare Guides: if you understand an industry or a field, create a \u201cguide\u201d that shows people who the major players are, or what the best sources of insights are Expert directories: create a list of the top experts in a field for people to follow Web page showcase Learning curriculum: make a \u201ccurriculum\u201d of the best sources of learning for your field, along with some commentary on how people should use them and in what order","title":"Highlights"},{"location":"Highlights/Readwise/Articles/The%20Nitty-Gritty%20%E2%80%93%20Clearing%20Out%20Your%20Inbox%20-%20Next%20Action%20Associates/","text":"The Nitty-Gritty \u2013 Clearing Out Your Inbox - Next Action Associates \u00b6 Metadata \u00b6 Author: [[Edward Lamont]] Full Title: The Nitty-Gritty \u2013 Clearing Out Your Inbox - Next Action Associates Category: #Type/Highlights/Article Document Tags: [[Liked]] URL: https://www.next-action.co.uk/2014/02/18/nitty-gritty-clearing-inbox-2/ Highlights \u00b6 Protect some time \u2013 to process the new \u2018stuff\u2019 that comes in each day, you\u2019ll need about 45-75 minutes each day. Not necessarily in one block, but as a total spread through the day. If you don\u2019t protect this time to think about new stuff then do not be surprised when you are overwhelmed by your inboxes. ( View Highlight ) Choose your moment \u2013 this requires focus and energy, so there is no point in trying to do it when you are too tired. Better to leave it in \u2018in\u2019 (where you know it will wait for you) for a time when you are feeling fitter. ( View Highlight ) Avoid the Sisyphus Shuffle \u2013 just as Sisyphus was trapped rolling a boulder up the hill and having it repeatedly roll back over him, constantly jumping back up to the top of your inbox to look at the last thing that arrived means you\u2019ll be much less likely to get to look at the oldest, and you\u2019ll probably just confuse yourself with too much information on a variety of topics rather than staying focused on one thing until you have finished the thinking on it ( View Highlight ) Start at the top \u2013 take the first paper / first e-mail / first whatever it is, and start there. You could start anywhere, of course, but jumping around all over the place often leads to avoiding the challenging things. ( View Highlight ) Go one at a time, until you are at zero \u2013 simple to say, more difficult to do. Ask the simple questions we suggest: What is it? Is it actionable? etc. Just stay with them until they are thought through, the reminders are put into a system, and the originals either deleted or filed. One. Thing. At. A. Time. Your brain will love you for this. ( View Highlight ) This is about thinking and deciding, not doing* \u2013 think each thing through, and make the decisions that you can make, given your current circumstances. We strongly suggest you don\u2019t allow your thinking to result in next actions that start with \u2018think about x\u2019 or \u2018decide about y\u2019. Thinking and deciding is what you are doing now while you are processing. Otherwise you\u2019ll just have well organized \u2018stuff\u2019. ( View Highlight ) Go slow to go fast \u2013 this process might feel slow at the start, but if you continue two things will happen: you\u2019ll get much faster at it, and \u2013 no matter how slow it feels in the beginning \u2013 you\u2019ll be able to move like a rocket once you are working on lists that are clustered by place or by tool. ( View Highlight )","title":"The Nitty-Gritty \u2013 Clearing Out Your Inbox - Next Action Associates"},{"location":"Highlights/Readwise/Articles/The%20Nitty-Gritty%20%E2%80%93%20Clearing%20Out%20Your%20Inbox%20-%20Next%20Action%20Associates/#the-nitty-gritty-clearing-out-your-inbox-next-action-associates","text":"","title":"The Nitty-Gritty \u2013 Clearing Out Your Inbox - Next Action Associates"},{"location":"Highlights/Readwise/Articles/The%20Nitty-Gritty%20%E2%80%93%20Clearing%20Out%20Your%20Inbox%20-%20Next%20Action%20Associates/#metadata","text":"Author: [[Edward Lamont]] Full Title: The Nitty-Gritty \u2013 Clearing Out Your Inbox - Next Action Associates Category: #Type/Highlights/Article Document Tags: [[Liked]] URL: https://www.next-action.co.uk/2014/02/18/nitty-gritty-clearing-inbox-2/","title":"Metadata"},{"location":"Highlights/Readwise/Articles/The%20Nitty-Gritty%20%E2%80%93%20Clearing%20Out%20Your%20Inbox%20-%20Next%20Action%20Associates/#highlights","text":"Protect some time \u2013 to process the new \u2018stuff\u2019 that comes in each day, you\u2019ll need about 45-75 minutes each day. Not necessarily in one block, but as a total spread through the day. If you don\u2019t protect this time to think about new stuff then do not be surprised when you are overwhelmed by your inboxes. ( View Highlight ) Choose your moment \u2013 this requires focus and energy, so there is no point in trying to do it when you are too tired. Better to leave it in \u2018in\u2019 (where you know it will wait for you) for a time when you are feeling fitter. ( View Highlight ) Avoid the Sisyphus Shuffle \u2013 just as Sisyphus was trapped rolling a boulder up the hill and having it repeatedly roll back over him, constantly jumping back up to the top of your inbox to look at the last thing that arrived means you\u2019ll be much less likely to get to look at the oldest, and you\u2019ll probably just confuse yourself with too much information on a variety of topics rather than staying focused on one thing until you have finished the thinking on it ( View Highlight ) Start at the top \u2013 take the first paper / first e-mail / first whatever it is, and start there. You could start anywhere, of course, but jumping around all over the place often leads to avoiding the challenging things. ( View Highlight ) Go one at a time, until you are at zero \u2013 simple to say, more difficult to do. Ask the simple questions we suggest: What is it? Is it actionable? etc. Just stay with them until they are thought through, the reminders are put into a system, and the originals either deleted or filed. One. Thing. At. A. Time. Your brain will love you for this. ( View Highlight ) This is about thinking and deciding, not doing* \u2013 think each thing through, and make the decisions that you can make, given your current circumstances. We strongly suggest you don\u2019t allow your thinking to result in next actions that start with \u2018think about x\u2019 or \u2018decide about y\u2019. Thinking and deciding is what you are doing now while you are processing. Otherwise you\u2019ll just have well organized \u2018stuff\u2019. ( View Highlight ) Go slow to go fast \u2013 this process might feel slow at the start, but if you continue two things will happen: you\u2019ll get much faster at it, and \u2013 no matter how slow it feels in the beginning \u2013 you\u2019ll be able to move like a rocket once you are working on lists that are clustered by place or by tool. ( View Highlight )","title":"Highlights"},{"location":"Highlights/Readwise/Articles/The%20Notetaking%20Cold%20War/","text":"The Notetaking Cold War \u00b6 Metadata \u00b6 Author: [[Dan Shipper]] Full Title: The Notetaking Cold War Category: #Type/Highlights/Article URL: https://superorganizers.substack.com/p/the-notetaking-cold-war Highlights \u00b6 Let\u2019s start at the beginning. Why are we fighting in the first place? Why is organizing notes so hard? That\u2019s a good question to ask. One obvious answer is that organizing information is just hard. But it turns out that it\u2019s only really hard for certain types of information. One way to think about knowledge management is as philosophy in action: As we think about the best folder structures and tag hierarchies, we\u2019re really doing philosophy. And it turns out that there\u2019s a two-thousand-year-old debate in philosophy that\u2019s pretty similar to the debate between Tiago and Conor. Instead of being about how notes are organized, it\u2019s about the way the world is organized. all software does the same thing. Software lets us record information, store it, transform it, and then retrieve it at an appropriate point in the future. That\u2019s what every piece of software does. Some pieces of software we call spreadsheets, some software we call CRMs, some we call Facebook, some we call Mario Kart. But they\u2019re all fundamentally the same thing. They\u2019re just ways to record, store, transform, and manipulate information. Tags: [[favorite]] If you want to be able to organize notes, you need to do one of two things: Make the use of the notes more predictable and part of a well-defined process Create an infinitely flexible organizational system Tiago picked the first move. Conor picked the second. Each choice has its pros and cons. Tiago\u2019s Process Tiago\u2019s approach is to create a well-defined process that applies to a segment of knowledge workers, and then use existing organization systems to help him represent and run that process. The core insight of PARA is two-fold: The job of every knowledge worker is to produce work Given (1) all notes can be organized according to how likely they are to be used in the work you are producing Put simply, Tiago\u2019s organization process is about actionability. Once you\u2019ve centered your organizational process around actionability, categories start to emerge: Notice how Tiago can create a well-defined process for where a note should be by introducing the actionability constraint. Once we know what notes are for \u2014 to take action on a piece of work \u2014 we can create a system around it. Categories like \u201cProjects\u201d, and \u201cArchives\u201d then begin to emerge organically. Tiago has taken the network of information that makes up our notes, and reduced it to a hierarchy in order to make it more usable. If you need more evidence that PARA is pragmatic, you should take a close look at how Tiago talks about it. He\u2019s specifically designed it to be flexible enough for practitioners to pick and choose which parts of the system are worth doing and which ones aren\u2019t. Do you not find Areas useful in your organization system? Throw it away! PARA is exactly what most knowledge workers need. It doesn\u2019t work for everyone, but it does work for a lot of people. And that\u2019s really all Tiago wants to do \u2014 he doesn\u2019t need to define the one true and correct system of organization for all time. He just needs one that\u2019s good enough to help his students get organized and get back to doing their work. And that\u2019s exactly what he\u2019s done.","title":"The Notetaking Cold War"},{"location":"Highlights/Readwise/Articles/The%20Notetaking%20Cold%20War/#the-notetaking-cold-war","text":"","title":"The Notetaking Cold War"},{"location":"Highlights/Readwise/Articles/The%20Notetaking%20Cold%20War/#metadata","text":"Author: [[Dan Shipper]] Full Title: The Notetaking Cold War Category: #Type/Highlights/Article URL: https://superorganizers.substack.com/p/the-notetaking-cold-war","title":"Metadata"},{"location":"Highlights/Readwise/Articles/The%20Notetaking%20Cold%20War/#highlights","text":"Let\u2019s start at the beginning. Why are we fighting in the first place? Why is organizing notes so hard? That\u2019s a good question to ask. One obvious answer is that organizing information is just hard. But it turns out that it\u2019s only really hard for certain types of information. One way to think about knowledge management is as philosophy in action: As we think about the best folder structures and tag hierarchies, we\u2019re really doing philosophy. And it turns out that there\u2019s a two-thousand-year-old debate in philosophy that\u2019s pretty similar to the debate between Tiago and Conor. Instead of being about how notes are organized, it\u2019s about the way the world is organized. all software does the same thing. Software lets us record information, store it, transform it, and then retrieve it at an appropriate point in the future. That\u2019s what every piece of software does. Some pieces of software we call spreadsheets, some software we call CRMs, some we call Facebook, some we call Mario Kart. But they\u2019re all fundamentally the same thing. They\u2019re just ways to record, store, transform, and manipulate information. Tags: [[favorite]] If you want to be able to organize notes, you need to do one of two things: Make the use of the notes more predictable and part of a well-defined process Create an infinitely flexible organizational system Tiago picked the first move. Conor picked the second. Each choice has its pros and cons. Tiago\u2019s Process Tiago\u2019s approach is to create a well-defined process that applies to a segment of knowledge workers, and then use existing organization systems to help him represent and run that process. The core insight of PARA is two-fold: The job of every knowledge worker is to produce work Given (1) all notes can be organized according to how likely they are to be used in the work you are producing Put simply, Tiago\u2019s organization process is about actionability. Once you\u2019ve centered your organizational process around actionability, categories start to emerge: Notice how Tiago can create a well-defined process for where a note should be by introducing the actionability constraint. Once we know what notes are for \u2014 to take action on a piece of work \u2014 we can create a system around it. Categories like \u201cProjects\u201d, and \u201cArchives\u201d then begin to emerge organically. Tiago has taken the network of information that makes up our notes, and reduced it to a hierarchy in order to make it more usable. If you need more evidence that PARA is pragmatic, you should take a close look at how Tiago talks about it. He\u2019s specifically designed it to be flexible enough for practitioners to pick and choose which parts of the system are worth doing and which ones aren\u2019t. Do you not find Areas useful in your organization system? Throw it away! PARA is exactly what most knowledge workers need. It doesn\u2019t work for everyone, but it does work for a lot of people. And that\u2019s really all Tiago wants to do \u2014 he doesn\u2019t need to define the one true and correct system of organization for all time. He just needs one that\u2019s good enough to help his students get organized and get back to doing their work. And that\u2019s exactly what he\u2019s done.","title":"Highlights"},{"location":"Highlights/Readwise/Articles/The%20Official%20Guide%20to%20Using%20Todoist%20Build%20Your%20Perfect%20Productivity%20Workfl/","text":"The Official Guide to Using Todoist: Build Your Perfect Productivity Workfl \u00b6 Metadata \u00b6 Author: Full Title: The Official Guide to Using Todoist: Build Your Perfect Productivity Workfl Category: #Type/Highlights/Article URL: https://doist.com/blog/how-to-use-todoist-effectively/ Highlights \u00b6 \u201cThe mechanic that wishes to perfect his work must first sharpen his tools.\u201d -Confucius Split bigger tasks into sub-tasks Don\u2019t be afraid to add smaller tasks to a project. For example, you\u2019ll need plenty of little steps to take care of a task like \u201cWrite a video script\u201d. Add sub-tasks for every step along the way to completing the bigger task. Let\u2019s say you\u2019re writing a script as part of your #Video project: You can add sub-tasks named First draft, Second draft, and Final draft. Breaking big tasks down into smaller ones makes it less daunting to get started, and checking things off along the way builds momentum to get to the finish.","title":"The Official Guide to Using Todoist: Build Your Perfect Productivity Workfl"},{"location":"Highlights/Readwise/Articles/The%20Official%20Guide%20to%20Using%20Todoist%20Build%20Your%20Perfect%20Productivity%20Workfl/#the-official-guide-to-using-todoist-build-your-perfect-productivity-workfl","text":"","title":"The Official Guide to Using Todoist: Build Your Perfect Productivity Workfl"},{"location":"Highlights/Readwise/Articles/The%20Official%20Guide%20to%20Using%20Todoist%20Build%20Your%20Perfect%20Productivity%20Workfl/#metadata","text":"Author: Full Title: The Official Guide to Using Todoist: Build Your Perfect Productivity Workfl Category: #Type/Highlights/Article URL: https://doist.com/blog/how-to-use-todoist-effectively/","title":"Metadata"},{"location":"Highlights/Readwise/Articles/The%20Official%20Guide%20to%20Using%20Todoist%20Build%20Your%20Perfect%20Productivity%20Workfl/#highlights","text":"\u201cThe mechanic that wishes to perfect his work must first sharpen his tools.\u201d -Confucius Split bigger tasks into sub-tasks Don\u2019t be afraid to add smaller tasks to a project. For example, you\u2019ll need plenty of little steps to take care of a task like \u201cWrite a video script\u201d. Add sub-tasks for every step along the way to completing the bigger task. Let\u2019s say you\u2019re writing a script as part of your #Video project: You can add sub-tasks named First draft, Second draft, and Final draft. Breaking big tasks down into smaller ones makes it less daunting to get started, and checking things off along the way builds momentum to get to the finish.","title":"Highlights"},{"location":"Highlights/Readwise/Articles/The%20Power%20of%20Systematic%20Notes%20A%20Book%20Review%20of%20How%20to%20Take%20Smart%20Notes%20by%20S%C3%B6nke%20Ahrens%20-%20Mark%20Koester/","text":"The Power of Systematic Notes: A Book Review of How to Take Smart Notes by S\u00f6nke Ahrens - Mark Koester \u00b6 Metadata \u00b6 Author: [[Mark Koester]] Full Title: The Power of Systematic Notes: A Book Review of How to Take Smart Notes by S\u00f6nke Ahrens - Mark Koester Category: #Type/Highlights/Article URL: http://www.markwk.com/smart-notes.html Highlights \u00b6 The first step in nearly \u201cevery intellectual endeavour\u201d is to take a note. Note: Love this. Writing notes is critical for how we learn, develop ideas and ultimately, create, and if you want to become a better writer or creative of any type, you need a better system and process for your notes. Niklas Luhmann (1927-1998), a well-known German social scientist and his method for managing his research and writing, Ahren explores how to be more productive, creative and organized using a system of deliberate note taking. the lessons go well-beyond academia I\u2019d even argue that this provides one of the missing pieces to David Allen\u2019s \u201cGetting Things Done\u201d method of productivity (Allen, 2001). Smart notes are a form of \u201clearning through elaboration\u201d, meaning we learn by putting complex ideas in our own words and by connecting them to other ideas. Smart notes are not just another way to collect stuff; their aim and goal is to foster and support creative and innovative output. Based on these permanent, insight notes, we assemble a \u201cknowledge management system\u201d (my term) that he calls in German the Zettlekarten or in English the slip-box. Actionable Lessons on Learning and Creativity from \u201cHow To Take Smart Notes\u201d 1: Read with a Pen reading a book of nonfiction and never doing anything with it is largely a waste of time and energy. Books, articles, and podcasts should help us learn and think. This is especially true in the complex world we live in. If you don\u2019t do anything with a book, you probably won\u2019t learn anything. We should strive to transform reading material into knowledge and insights. The call to action is to \u201cread with a pen\u201d and take up the habit of taking notes. The main motivation behind reading with a pen is to capture what interests you, provide a useful memory, and have a starting point for later, more permanent insight notes (and eventually whatever you write or create). As Benjamin Franklin wrote, \u201cI would advise you to read with a pen in your hand and enter in a little book short hints of what you feel that is common or that may be useful; for this will be the best method of imprinting such portcullis in your memory.\u201d Tags: [[vocab]] [[quote]] [[favorite]] Note: Quote by BenFrank. Vocab: portcullis 2: Don\u2019t Just Collect, Elaborate YOUR Notes The collector\u2019s fallacy is the belief that having the book or article is the same as having the knowledge that is in that book. We think that since we have the book or saved an article that we actual \u201cknow\u201d something. Unfortunately, like other ineffective learning techniques like re-reading and highlighting, this is an example of the illusion of competence. Having a book is not the same as having learned something from it. Tags: [[favorite]] Note: Collectors Fallacy Learning takes effort. Tags: [[favorite]] One of the most well-established and best ways to learn is elaboration. The physicist Richard Feymann was famous for his own learning method of elaboration. He believed that if you couldn\u2019t deliver a lecture on a topic, then you hadn\u2019t learned it. Whether or not you actually do present it, the Feynman Technique takes you through a series of study steps until you remove gaps in your understanding and explanation and are able to confidently teach a concept. If you can\u2019t teach it, you haven\u2019t learned it. Thinking through writing and learning through elaboration are two core assets of why we should take notes rather than just collect quotes. 3: Take Smart Notes So, what is a smart notes? A smart note is a distilled, atomic idea in writing. Ask yourself: \u201cDoes the new information contradict, correct, support or add to what you already have (in the slip-box or on your mind)? Can you combine ideas to generate something new? What questions are triggered by them?\u201d Tags: [[favorite]] Once you\u2019ve thought about it some (remember the goal is to spur divergent thinking, not more passive collecting), create your note. Aim to make your smart notes should \u201catomic\u201d or limited to a core insight. To quote again: \u201cWrite exactly one note for each idea and write as if you were writing for someone else: Use full sentences, disclose your sources, make references and try to be as precise, clear and brief as possible. Throw away the fleeting notes from step one and put the literature notes from step two into your reference system. You can forget about them now. All that matters is going into the slip-box.\u201d A \u201csmart note\u201d or as I like to call it, an \u201cInsight Note,\u201d is a hard effort to take information and translate it into a precise and meaningful expression. It is a form of learning. They externalize a memory into an elaboration, provide a way to write out our thinking, and act like a first draft in our eventual creation. Smart notes are learning, thinking, and creating rolled into one. Tags: [[favorite]] 4: The Slip-box: Assemble Your Own Network of Smart, Interconnected Notes The whole becomes greater than the sum of its parts. Because these are not your typical class notes or collected quotes, but rather processed, argued out, clear expressions of thought, smart notes have a dynamic quality. You might think about the slip-box as the missing piece from David Allen\u2019s \u201cGetting Things Done\u201d productivity methodology (Allen, 2001). Also known as GTD, this approach focuses on ensuring tasks and information have a place in an external system, rather than in our mind\u2019s limited capacity. GTD\u2019s main tools are a calendar for events, a planner or todo-list for task management, and a file cabinet for storing important reference information for later. I\u2019ve largely used Evernote as my digital, GTD file cabinet, but never been quite satisfied with how I organize and manage information and ideas. This is where a the slip-box can help. Tags: [[favorite]] The slip-box provides an inspiring way to be more more systematic in how we take and manage our notes. We strive to create smarts notes and assemble the notes into a network of connected ideas. Like GTD, the book is rather agnostic on the specific tools, but the author does recommend a framework of three tools: a notebook for capturing fleeting notes software for your permanent notes and for building your archive or slip box, and a reference management system for citations to articles, books and other things \u201cout in the world\u201d The end goal is to create something. These are the support tools for your organized creativity. 5: A Bottoms-Up Creative Process from Notes to Creation: To quote: \u201cTo get a good paper written, you only have to rewrite a good draft; to get a good draft written, you only have to turn a series of notes into a continuous text. And as a series of notes is just the rearrangement of notes you already have in your slip-box, all you really have to do is have a pen in your hand when you read.\u201d (p. 75) Conclusion: To be creative, follow your interests, take notes, and trust in a process","title":"The Power of Systematic Notes: A Book Review of How to Take Smart Notes by S\u00f6nke Ahrens - Mark Koester"},{"location":"Highlights/Readwise/Articles/The%20Power%20of%20Systematic%20Notes%20A%20Book%20Review%20of%20How%20to%20Take%20Smart%20Notes%20by%20S%C3%B6nke%20Ahrens%20-%20Mark%20Koester/#the-power-of-systematic-notes-a-book-review-of-how-to-take-smart-notes-by-sonke-ahrens-mark-koester","text":"","title":"The Power of Systematic Notes: A Book Review of How to Take Smart Notes by S\u00f6nke Ahrens - Mark Koester"},{"location":"Highlights/Readwise/Articles/The%20Power%20of%20Systematic%20Notes%20A%20Book%20Review%20of%20How%20to%20Take%20Smart%20Notes%20by%20S%C3%B6nke%20Ahrens%20-%20Mark%20Koester/#metadata","text":"Author: [[Mark Koester]] Full Title: The Power of Systematic Notes: A Book Review of How to Take Smart Notes by S\u00f6nke Ahrens - Mark Koester Category: #Type/Highlights/Article URL: http://www.markwk.com/smart-notes.html","title":"Metadata"},{"location":"Highlights/Readwise/Articles/The%20Power%20of%20Systematic%20Notes%20A%20Book%20Review%20of%20How%20to%20Take%20Smart%20Notes%20by%20S%C3%B6nke%20Ahrens%20-%20Mark%20Koester/#highlights","text":"The first step in nearly \u201cevery intellectual endeavour\u201d is to take a note. Note: Love this. Writing notes is critical for how we learn, develop ideas and ultimately, create, and if you want to become a better writer or creative of any type, you need a better system and process for your notes. Niklas Luhmann (1927-1998), a well-known German social scientist and his method for managing his research and writing, Ahren explores how to be more productive, creative and organized using a system of deliberate note taking. the lessons go well-beyond academia I\u2019d even argue that this provides one of the missing pieces to David Allen\u2019s \u201cGetting Things Done\u201d method of productivity (Allen, 2001). Smart notes are a form of \u201clearning through elaboration\u201d, meaning we learn by putting complex ideas in our own words and by connecting them to other ideas. Smart notes are not just another way to collect stuff; their aim and goal is to foster and support creative and innovative output. Based on these permanent, insight notes, we assemble a \u201cknowledge management system\u201d (my term) that he calls in German the Zettlekarten or in English the slip-box. Actionable Lessons on Learning and Creativity from \u201cHow To Take Smart Notes\u201d 1: Read with a Pen reading a book of nonfiction and never doing anything with it is largely a waste of time and energy. Books, articles, and podcasts should help us learn and think. This is especially true in the complex world we live in. If you don\u2019t do anything with a book, you probably won\u2019t learn anything. We should strive to transform reading material into knowledge and insights. The call to action is to \u201cread with a pen\u201d and take up the habit of taking notes. The main motivation behind reading with a pen is to capture what interests you, provide a useful memory, and have a starting point for later, more permanent insight notes (and eventually whatever you write or create). As Benjamin Franklin wrote, \u201cI would advise you to read with a pen in your hand and enter in a little book short hints of what you feel that is common or that may be useful; for this will be the best method of imprinting such portcullis in your memory.\u201d Tags: [[vocab]] [[quote]] [[favorite]] Note: Quote by BenFrank. Vocab: portcullis 2: Don\u2019t Just Collect, Elaborate YOUR Notes The collector\u2019s fallacy is the belief that having the book or article is the same as having the knowledge that is in that book. We think that since we have the book or saved an article that we actual \u201cknow\u201d something. Unfortunately, like other ineffective learning techniques like re-reading and highlighting, this is an example of the illusion of competence. Having a book is not the same as having learned something from it. Tags: [[favorite]] Note: Collectors Fallacy Learning takes effort. Tags: [[favorite]] One of the most well-established and best ways to learn is elaboration. The physicist Richard Feymann was famous for his own learning method of elaboration. He believed that if you couldn\u2019t deliver a lecture on a topic, then you hadn\u2019t learned it. Whether or not you actually do present it, the Feynman Technique takes you through a series of study steps until you remove gaps in your understanding and explanation and are able to confidently teach a concept. If you can\u2019t teach it, you haven\u2019t learned it. Thinking through writing and learning through elaboration are two core assets of why we should take notes rather than just collect quotes. 3: Take Smart Notes So, what is a smart notes? A smart note is a distilled, atomic idea in writing. Ask yourself: \u201cDoes the new information contradict, correct, support or add to what you already have (in the slip-box or on your mind)? Can you combine ideas to generate something new? What questions are triggered by them?\u201d Tags: [[favorite]] Once you\u2019ve thought about it some (remember the goal is to spur divergent thinking, not more passive collecting), create your note. Aim to make your smart notes should \u201catomic\u201d or limited to a core insight. To quote again: \u201cWrite exactly one note for each idea and write as if you were writing for someone else: Use full sentences, disclose your sources, make references and try to be as precise, clear and brief as possible. Throw away the fleeting notes from step one and put the literature notes from step two into your reference system. You can forget about them now. All that matters is going into the slip-box.\u201d A \u201csmart note\u201d or as I like to call it, an \u201cInsight Note,\u201d is a hard effort to take information and translate it into a precise and meaningful expression. It is a form of learning. They externalize a memory into an elaboration, provide a way to write out our thinking, and act like a first draft in our eventual creation. Smart notes are learning, thinking, and creating rolled into one. Tags: [[favorite]] 4: The Slip-box: Assemble Your Own Network of Smart, Interconnected Notes The whole becomes greater than the sum of its parts. Because these are not your typical class notes or collected quotes, but rather processed, argued out, clear expressions of thought, smart notes have a dynamic quality. You might think about the slip-box as the missing piece from David Allen\u2019s \u201cGetting Things Done\u201d productivity methodology (Allen, 2001). Also known as GTD, this approach focuses on ensuring tasks and information have a place in an external system, rather than in our mind\u2019s limited capacity. GTD\u2019s main tools are a calendar for events, a planner or todo-list for task management, and a file cabinet for storing important reference information for later. I\u2019ve largely used Evernote as my digital, GTD file cabinet, but never been quite satisfied with how I organize and manage information and ideas. This is where a the slip-box can help. Tags: [[favorite]] The slip-box provides an inspiring way to be more more systematic in how we take and manage our notes. We strive to create smarts notes and assemble the notes into a network of connected ideas. Like GTD, the book is rather agnostic on the specific tools, but the author does recommend a framework of three tools: a notebook for capturing fleeting notes software for your permanent notes and for building your archive or slip box, and a reference management system for citations to articles, books and other things \u201cout in the world\u201d The end goal is to create something. These are the support tools for your organized creativity. 5: A Bottoms-Up Creative Process from Notes to Creation: To quote: \u201cTo get a good paper written, you only have to rewrite a good draft; to get a good draft written, you only have to turn a series of notes into a continuous text. And as a series of notes is just the rearrangement of notes you already have in your slip-box, all you really have to do is have a pen in your hand when you read.\u201d (p. 75) Conclusion: To be creative, follow your interests, take notes, and trust in a process","title":"Highlights"},{"location":"Highlights/Readwise/Articles/The%20Productivity%20System%20You%20Use%20Doesn%E2%80%99t%20Matter/","text":"The Productivity System You Use Doesn\u2019t Matter \u00b6 Metadata \u00b6 Author: [[Megan Holstein]] Full Title: The Productivity System You Use Doesn\u2019t Matter Category: #Type/Highlights/Article URL: https://medium.com/p/d64fbc73291c Highlights \u00b6 They can only transform someone\u2019s life to the degree that their life needed that kind of transformation in the first place.","title":"The Productivity System You Use Doesn\u2019t Matter"},{"location":"Highlights/Readwise/Articles/The%20Productivity%20System%20You%20Use%20Doesn%E2%80%99t%20Matter/#the-productivity-system-you-use-doesnt-matter","text":"","title":"The Productivity System You Use Doesn\u2019t Matter"},{"location":"Highlights/Readwise/Articles/The%20Productivity%20System%20You%20Use%20Doesn%E2%80%99t%20Matter/#metadata","text":"Author: [[Megan Holstein]] Full Title: The Productivity System You Use Doesn\u2019t Matter Category: #Type/Highlights/Article URL: https://medium.com/p/d64fbc73291c","title":"Metadata"},{"location":"Highlights/Readwise/Articles/The%20Productivity%20System%20You%20Use%20Doesn%E2%80%99t%20Matter/#highlights","text":"They can only transform someone\u2019s life to the degree that their life needed that kind of transformation in the first place.","title":"Highlights"},{"location":"Highlights/Readwise/Articles/The%20R%20Code%20Optimizer%20%E2%80%A2%20Rco/","text":"The R Code Optimizer \u2022 Rco \u00b6 Metadata \u00b6 Author: Full Title: The R Code Optimizer \u2022 Rco Category: #Type/Highlights/Article URL: https://jcrodriguez1989.github.io/rco/ Highlights \u00b6 rco analyzes your code and applies different optimization strategies that return an R code that runs faster. Using the RStudio Addins Optimize active file: Optimizes the file currently open in RStudio. It will apply the optimizers present in all_optimizers. Optimize selection: Optimizes the code currently highlited in the RStudio Source Pane. It will apply the optimizers present in all_optimizers. Using the shiny GUIs rco_gui(\"code_optimizer\") opens a shiny interface in a browser. This GUI allows to easily optimize chunks of code. rco_gui(\"pkg_optimizer\") opens a shiny interface in a browser. This GUI allows to easily optimize R packages that are hosted at CRAN or GitHub. Using the R functions Optimize some .R code files optimize_files(c(\"file_to_optimize_1.R\", \"file_to_optimize_2.R\")) Optimize some code in a character vector code <- paste( \"code_to_optimize <- 8 ^ 8 * 1918\", \"cto <- code_to_optimize * 2\", sep = \"\\n\" ) optimize_text(code) Optimize all .R code files into a folder optimize_folder(\"~/myfolder_to_optimize\", recursive = FALSE)","title":"The R Code Optimizer \u2022 Rco"},{"location":"Highlights/Readwise/Articles/The%20R%20Code%20Optimizer%20%E2%80%A2%20Rco/#the-r-code-optimizer-rco","text":"","title":"The R Code Optimizer \u2022 Rco"},{"location":"Highlights/Readwise/Articles/The%20R%20Code%20Optimizer%20%E2%80%A2%20Rco/#metadata","text":"Author: Full Title: The R Code Optimizer \u2022 Rco Category: #Type/Highlights/Article URL: https://jcrodriguez1989.github.io/rco/","title":"Metadata"},{"location":"Highlights/Readwise/Articles/The%20R%20Code%20Optimizer%20%E2%80%A2%20Rco/#highlights","text":"rco analyzes your code and applies different optimization strategies that return an R code that runs faster. Using the RStudio Addins Optimize active file: Optimizes the file currently open in RStudio. It will apply the optimizers present in all_optimizers. Optimize selection: Optimizes the code currently highlited in the RStudio Source Pane. It will apply the optimizers present in all_optimizers. Using the shiny GUIs rco_gui(\"code_optimizer\") opens a shiny interface in a browser. This GUI allows to easily optimize chunks of code. rco_gui(\"pkg_optimizer\") opens a shiny interface in a browser. This GUI allows to easily optimize R packages that are hosted at CRAN or GitHub. Using the R functions Optimize some .R code files optimize_files(c(\"file_to_optimize_1.R\", \"file_to_optimize_2.R\")) Optimize some code in a character vector code <- paste( \"code_to_optimize <- 8 ^ 8 * 1918\", \"cto <- code_to_optimize * 2\", sep = \"\\n\" ) optimize_text(code) Optimize all .R code files into a folder optimize_folder(\"~/myfolder_to_optimize\", recursive = FALSE)","title":"Highlights"},{"location":"Highlights/Readwise/Articles/The%20Role%20of%20Data%20Scientist%20A%20Back-Of-The-Envelope%20Model/","text":"The Role of Data Scientist: A Back-Of-The-Envelope Model \u00b6 Metadata \u00b6 Author: [[Ron Sielinski]] Full Title: The Role of Data Scientist: A Back-Of-The-Envelope Model Category: #Type/Highlights/Article URL: https://medium.com/p/631e1138f6b3 Highlights \u00b6 The essence of data science The essence of data science","title":"The Role of Data Scientist: A Back-Of-The-Envelope Model"},{"location":"Highlights/Readwise/Articles/The%20Role%20of%20Data%20Scientist%20A%20Back-Of-The-Envelope%20Model/#the-role-of-data-scientist-a-back-of-the-envelope-model","text":"","title":"The Role of Data Scientist: A Back-Of-The-Envelope Model"},{"location":"Highlights/Readwise/Articles/The%20Role%20of%20Data%20Scientist%20A%20Back-Of-The-Envelope%20Model/#metadata","text":"Author: [[Ron Sielinski]] Full Title: The Role of Data Scientist: A Back-Of-The-Envelope Model Category: #Type/Highlights/Article URL: https://medium.com/p/631e1138f6b3","title":"Metadata"},{"location":"Highlights/Readwise/Articles/The%20Role%20of%20Data%20Scientist%20A%20Back-Of-The-Envelope%20Model/#highlights","text":"The essence of data science The essence of data science","title":"Highlights"},{"location":"Highlights/Readwise/Articles/The%20Search%20for%20the%20Ultimate%20Productivity%20System/","text":"The Search for the Ultimate Productivity System \u00b6 Metadata \u00b6 Author: [[Jack Heimbigner]] Full Title: The Search for the Ultimate Productivity System Category: #Type/Highlights/Article URL: https://medium.com/p/18ff42015e11 Highlights \u00b6 The system needs to merge notes, calendars, records, task lists, and contact info in once place. The ultimate productivity tool is my iPad/iPhone combination with OneNote, Calendar, and Contacts.","title":"The Search for the Ultimate Productivity System"},{"location":"Highlights/Readwise/Articles/The%20Search%20for%20the%20Ultimate%20Productivity%20System/#the-search-for-the-ultimate-productivity-system","text":"","title":"The Search for the Ultimate Productivity System"},{"location":"Highlights/Readwise/Articles/The%20Search%20for%20the%20Ultimate%20Productivity%20System/#metadata","text":"Author: [[Jack Heimbigner]] Full Title: The Search for the Ultimate Productivity System Category: #Type/Highlights/Article URL: https://medium.com/p/18ff42015e11","title":"Metadata"},{"location":"Highlights/Readwise/Articles/The%20Search%20for%20the%20Ultimate%20Productivity%20System/#highlights","text":"The system needs to merge notes, calendars, records, task lists, and contact info in once place. The ultimate productivity tool is my iPad/iPhone combination with OneNote, Calendar, and Contacts.","title":"Highlights"},{"location":"Highlights/Readwise/Articles/The%20Shadow%20Course%20A%20Simple%20Technique%20to%20Produce%20Extraordinary%20Work%20-%20Study%20Hacks%20-%20Cal%20Newport/","text":"The Shadow Course: A Simple Technique to Produce Extraordinary Work - Study Hacks - Cal Newport \u00b6 Metadata \u00b6 Author: Full Title: The Shadow Course: A Simple Technique to Produce Extraordinary Work - Study Hacks - Cal Newport Category: #Type/Highlights/Article URL: https://www.calnewport.com/blog/2009/05/04/the-shadow-course-a-simple-technique-to-produce-extraordinary-work/ Highlights \u00b6 The autopilot schedule is a set of fixed times and locations for finishing your regular work each week. For example, you might decide to always tackle your history reading assignments Monday morning, from 9 am to 11 am, in the study carrels found on the 6th floor stacks of the main library. The shadow course, described below, is a simple optimization to the autopilot schedule that can generate huge benefits. I recommend that you choose the most exotic possible location for your weekly shadow course time blocks To make things even better, because this time is spread out across an autopilot schedule, these hours all maintain a high intensity of focus \u2014 a feat which would be impossible if this time was condensed into a small number of long study session.","title":"The Shadow Course: A Simple Technique to Produce Extraordinary Work - Study Hacks - Cal Newport"},{"location":"Highlights/Readwise/Articles/The%20Shadow%20Course%20A%20Simple%20Technique%20to%20Produce%20Extraordinary%20Work%20-%20Study%20Hacks%20-%20Cal%20Newport/#the-shadow-course-a-simple-technique-to-produce-extraordinary-work-study-hacks-cal-newport","text":"","title":"The Shadow Course: A Simple Technique to Produce Extraordinary Work - Study Hacks - Cal Newport"},{"location":"Highlights/Readwise/Articles/The%20Shadow%20Course%20A%20Simple%20Technique%20to%20Produce%20Extraordinary%20Work%20-%20Study%20Hacks%20-%20Cal%20Newport/#metadata","text":"Author: Full Title: The Shadow Course: A Simple Technique to Produce Extraordinary Work - Study Hacks - Cal Newport Category: #Type/Highlights/Article URL: https://www.calnewport.com/blog/2009/05/04/the-shadow-course-a-simple-technique-to-produce-extraordinary-work/","title":"Metadata"},{"location":"Highlights/Readwise/Articles/The%20Shadow%20Course%20A%20Simple%20Technique%20to%20Produce%20Extraordinary%20Work%20-%20Study%20Hacks%20-%20Cal%20Newport/#highlights","text":"The autopilot schedule is a set of fixed times and locations for finishing your regular work each week. For example, you might decide to always tackle your history reading assignments Monday morning, from 9 am to 11 am, in the study carrels found on the 6th floor stacks of the main library. The shadow course, described below, is a simple optimization to the autopilot schedule that can generate huge benefits. I recommend that you choose the most exotic possible location for your weekly shadow course time blocks To make things even better, because this time is spread out across an autopilot schedule, these hours all maintain a high intensity of focus \u2014 a feat which would be impossible if this time was condensed into a small number of long study session.","title":"Highlights"},{"location":"Highlights/Readwise/Articles/The%20Ultimate%20Guide%20to%20Summarizing%20Books%20How%20to%20Distill%20Ideas%20to%20Accelerate%20Your%20Learning%20-%20Forte%20Labs/","text":"The Ultimate Guide to Summarizing Books: How to Distill Ideas to Accelerate Your Learning - Forte Labs \u00b6 Metadata \u00b6 Author: [[fortelabs.co]] Full Title: The Ultimate Guide to Summarizing Books: How to Distill Ideas to Accelerate Your Learning - Forte Labs Category: #Type/Highlights/Article URL: https://fortelabs.co/blog/the-ultimate-guide-to-summarizing-books/ Highlights \u00b6 I realized if I wanted to benefit from my reading, I needed to engage with the books I read on a much deeper level. I needed to make something out of them. Otherwise, I would continue to passively consume information with no lasting memory of what I learned. I decided I would rather deeply absorb the wisdom of a small handful of books than speed-read my way through dozens. Let\u2019s dive into each of the benefits of summarizing books, in roughly the order they appear: Allows me to absorb the book\u2019s lessons on a much deeper level Creates building blocks for my own thinking and creating Improves my writing through imitation Builds my audience of email subscribers Connects me with influential people Expands my visibility and credibility in online communities I follow five steps to go from reading a book to publishing a summary blog post: Read and highlight Export highlights Progressively summarize Outline Write Do\u2019s: Do highlight chapter titles and section headings \u2013 this ensures your exported notes will preserve the structure of the book. Do highlight lists and summaries already found within the book \u2013 this is valuable summarizing work the author has already done for you. Do highlight \u201cpopular highlights\u201d (a feature of some ebook services such as Kindle which shows you phrases that many other people have highlighted) \u2013 these are phrases that other readers have already told you are helpful in their understanding of the text. Don\u2019ts: Don\u2019t highlight entire paragraphs or pages \u2013 this will create a lot of work later on to figure out what is actually valuable in those large chunks of text. Don\u2019t highlight entire stories or long examples \u2013 they are usually too long, and you can always go back and find them if you need them. Don\u2019t highlight ideas or explanations that you already know, agree with, or could have guessed \u2013 focus on what is novel, surprising, and counterintuitive. Watch on YouTube: How to Create an Outline with Digital Notes The outline should be hierarchical, which reflects the hierarchical structure that your final summary will follow: Main point Supporting point Supporting point Supporting point Main point Supporting point Supporting point Supporting point Main point Etc. This structure allows your eye to skip quickly from one main point to another to see if they make sense and are in the right order. And if you want to zoom in on any main point, you only have to move your eyes down and to the right. Outlining is the only step that I strongly recommend you sit down and complete in one sitting. We\u2019ve postponed it for as long as possible, but at this stage it is necessary to load all the main points into your head all at once. Only then can you compare and contrast and interconnect them into one structure in your mind. To avoid having to do that more than once, it\u2019s a good idea to create the outline in one sitting.","title":"The Ultimate Guide to Summarizing Books: How to Distill Ideas to Accelerate Your Learning - Forte Labs"},{"location":"Highlights/Readwise/Articles/The%20Ultimate%20Guide%20to%20Summarizing%20Books%20How%20to%20Distill%20Ideas%20to%20Accelerate%20Your%20Learning%20-%20Forte%20Labs/#the-ultimate-guide-to-summarizing-books-how-to-distill-ideas-to-accelerate-your-learning-forte-labs","text":"","title":"The Ultimate Guide to Summarizing Books: How to Distill Ideas to Accelerate Your Learning - Forte Labs"},{"location":"Highlights/Readwise/Articles/The%20Ultimate%20Guide%20to%20Summarizing%20Books%20How%20to%20Distill%20Ideas%20to%20Accelerate%20Your%20Learning%20-%20Forte%20Labs/#metadata","text":"Author: [[fortelabs.co]] Full Title: The Ultimate Guide to Summarizing Books: How to Distill Ideas to Accelerate Your Learning - Forte Labs Category: #Type/Highlights/Article URL: https://fortelabs.co/blog/the-ultimate-guide-to-summarizing-books/","title":"Metadata"},{"location":"Highlights/Readwise/Articles/The%20Ultimate%20Guide%20to%20Summarizing%20Books%20How%20to%20Distill%20Ideas%20to%20Accelerate%20Your%20Learning%20-%20Forte%20Labs/#highlights","text":"I realized if I wanted to benefit from my reading, I needed to engage with the books I read on a much deeper level. I needed to make something out of them. Otherwise, I would continue to passively consume information with no lasting memory of what I learned. I decided I would rather deeply absorb the wisdom of a small handful of books than speed-read my way through dozens. Let\u2019s dive into each of the benefits of summarizing books, in roughly the order they appear: Allows me to absorb the book\u2019s lessons on a much deeper level Creates building blocks for my own thinking and creating Improves my writing through imitation Builds my audience of email subscribers Connects me with influential people Expands my visibility and credibility in online communities I follow five steps to go from reading a book to publishing a summary blog post: Read and highlight Export highlights Progressively summarize Outline Write Do\u2019s: Do highlight chapter titles and section headings \u2013 this ensures your exported notes will preserve the structure of the book. Do highlight lists and summaries already found within the book \u2013 this is valuable summarizing work the author has already done for you. Do highlight \u201cpopular highlights\u201d (a feature of some ebook services such as Kindle which shows you phrases that many other people have highlighted) \u2013 these are phrases that other readers have already told you are helpful in their understanding of the text. Don\u2019ts: Don\u2019t highlight entire paragraphs or pages \u2013 this will create a lot of work later on to figure out what is actually valuable in those large chunks of text. Don\u2019t highlight entire stories or long examples \u2013 they are usually too long, and you can always go back and find them if you need them. Don\u2019t highlight ideas or explanations that you already know, agree with, or could have guessed \u2013 focus on what is novel, surprising, and counterintuitive. Watch on YouTube: How to Create an Outline with Digital Notes The outline should be hierarchical, which reflects the hierarchical structure that your final summary will follow: Main point Supporting point Supporting point Supporting point Main point Supporting point Supporting point Supporting point Main point Etc. This structure allows your eye to skip quickly from one main point to another to see if they make sense and are in the right order. And if you want to zoom in on any main point, you only have to move your eyes down and to the right. Outlining is the only step that I strongly recommend you sit down and complete in one sitting. We\u2019ve postponed it for as long as possible, but at this stage it is necessary to load all the main points into your head all at once. Only then can you compare and contrast and interconnect them into one structure in your mind. To avoid having to do that more than once, it\u2019s a good idea to create the outline in one sitting.","title":"Highlights"},{"location":"Highlights/Readwise/Articles/The%20Ultimate%20Home%20Office%20Setup%20Guide%2018%20Must-Have%20Items/","text":"The Ultimate Home Office Setup Guide: 18 Must-Have Items \u00b6 Metadata \u00b6 Author: Full Title: The Ultimate Home Office Setup Guide: 18 Must-Have Items Category: #Type/Highlights/Article URL: https://www.developgoodhabits.com/home-office-setup/ Highlights \u00b6 Make sure that you have access to natural lighting in your office. One of the best ways to do this while also saving space is to put your desk in front of a window. Studies have shown that having exposure to natural light has a wide range of health benefits, including increased productivity. there is a strong correlation between daylight exposure in the workplace and your quality of sleep, mental health, visual acuity, productivity, and physical health. Not only is a slow Internet connection frustrating, but it will also hinder your productivity. While you wait for attachments to download, files to transfer, or Web pages to load, you could be getting work done. When you are shopping for a network router, consider the size of the area where you need coverage and the kinds of devices that will be connected to the router. having the option to print and scan at home is a large part of being productive. keep your work safe in case your electricity unexpectedly goes out, having a UPS will give you backup power for a limited time. You need to make sure that your desk has a large empty area for you to work, or you need to dedicate some space elsewhere. According to a study published in Forbes, about 57% of people think that one's work directly correlates with the tidiness of their office. This means that if your office is messy, your work is likely to be messy as well. Good home office setup requires you to keep your workspace and papers organized. One of the best ways to do this is with a file cabinet. If you want a file cabinet that can be used as the legs of your desk, check out this Lorell File Cabinet. Alternatively, if you want something that is small and portable, yet still secure, try the Master Lock Security Steel Box filing system. Finally, this United Solutions file box may be your best bet if you want an easy storage solution You will need somewhere to store your supplies, such as pens, paper, sticky notes, ink, and business cards. If you want a simple storage cart with wheels so you can maneuver it around your office, some great options are here and here. Stock all of the supplies that you may need in your office and keep track of when you are running low on something. You want to have anything available at your fingertips when you need it without having to run out to a store to buy something or wait for supplies to be delivered to your house. To eliminate a chaotic look that may lead to feelings of being overwhelmed, hide any cords or other eyesores so you don't have to look at them. Here is a good tutorial for hiding your computer cords. Also, consider putting your printer out of the way and hiding your UPS and surge protector. Keep your space decluttered. What I have found to be one of the most useful of these tips is taking everything out of an area so you have to go item by item and determine what you need and what is trash. To learn more, check out one or two of the 15 books on decluttering that we profile here. Separate your work computer from your home computer. Don't give yourself the temptation to log onto social media or play a quick computer game while you are in the middle of doing your job. Make sure that the computer you use in your home office is strictly for work.","title":"The Ultimate Home Office Setup Guide: 18 Must-Have Items"},{"location":"Highlights/Readwise/Articles/The%20Ultimate%20Home%20Office%20Setup%20Guide%2018%20Must-Have%20Items/#the-ultimate-home-office-setup-guide-18-must-have-items","text":"","title":"The Ultimate Home Office Setup Guide: 18 Must-Have Items"},{"location":"Highlights/Readwise/Articles/The%20Ultimate%20Home%20Office%20Setup%20Guide%2018%20Must-Have%20Items/#metadata","text":"Author: Full Title: The Ultimate Home Office Setup Guide: 18 Must-Have Items Category: #Type/Highlights/Article URL: https://www.developgoodhabits.com/home-office-setup/","title":"Metadata"},{"location":"Highlights/Readwise/Articles/The%20Ultimate%20Home%20Office%20Setup%20Guide%2018%20Must-Have%20Items/#highlights","text":"Make sure that you have access to natural lighting in your office. One of the best ways to do this while also saving space is to put your desk in front of a window. Studies have shown that having exposure to natural light has a wide range of health benefits, including increased productivity. there is a strong correlation between daylight exposure in the workplace and your quality of sleep, mental health, visual acuity, productivity, and physical health. Not only is a slow Internet connection frustrating, but it will also hinder your productivity. While you wait for attachments to download, files to transfer, or Web pages to load, you could be getting work done. When you are shopping for a network router, consider the size of the area where you need coverage and the kinds of devices that will be connected to the router. having the option to print and scan at home is a large part of being productive. keep your work safe in case your electricity unexpectedly goes out, having a UPS will give you backup power for a limited time. You need to make sure that your desk has a large empty area for you to work, or you need to dedicate some space elsewhere. According to a study published in Forbes, about 57% of people think that one's work directly correlates with the tidiness of their office. This means that if your office is messy, your work is likely to be messy as well. Good home office setup requires you to keep your workspace and papers organized. One of the best ways to do this is with a file cabinet. If you want a file cabinet that can be used as the legs of your desk, check out this Lorell File Cabinet. Alternatively, if you want something that is small and portable, yet still secure, try the Master Lock Security Steel Box filing system. Finally, this United Solutions file box may be your best bet if you want an easy storage solution You will need somewhere to store your supplies, such as pens, paper, sticky notes, ink, and business cards. If you want a simple storage cart with wheels so you can maneuver it around your office, some great options are here and here. Stock all of the supplies that you may need in your office and keep track of when you are running low on something. You want to have anything available at your fingertips when you need it without having to run out to a store to buy something or wait for supplies to be delivered to your house. To eliminate a chaotic look that may lead to feelings of being overwhelmed, hide any cords or other eyesores so you don't have to look at them. Here is a good tutorial for hiding your computer cords. Also, consider putting your printer out of the way and hiding your UPS and surge protector. Keep your space decluttered. What I have found to be one of the most useful of these tips is taking everything out of an area so you have to go item by item and determine what you need and what is trash. To learn more, check out one or two of the 15 books on decluttering that we profile here. Separate your work computer from your home computer. Don't give yourself the temptation to log onto social media or play a quick computer game while you are in the middle of doing your job. Make sure that the computer you use in your home office is strictly for work.","title":"Highlights"},{"location":"Highlights/Readwise/Articles/The%20Unsinkable%20Student%20Organization%20System%20-%20Study%20Hacks%20-%20Cal%20Newport/","text":"The Unsinkable Student Organization System - Study Hacks - Cal Newport \u00b6 Metadata \u00b6 Author: Full Title: The Unsinkable Student Organization System - Study Hacks - Cal Newport Category: #Type/Highlights/Article URL: https://www.calnewport.com/blog/2009/08/25/the-unsinkable-student-organization-system/ Highlights \u00b6 what seems like a smart, comprehensive system to today you, will be later seen as a terrible prison that blackens your heart and steals your freedom by the future you As you might have guessed, this future you will abandon your smart system and fall back into unorganized chaos Rule #1: One Class = One Notebook + One Folder Note: Instead of Class, think Project Rule #3: Use a Calendar Backup Notebook. As I\u2019ve pleaded many times before, you must keep a calendar that you check at the same time every day. (I like Google\u2019s calendar, but anything works.) This simple addition to your student life will save you significant stress. In addition to this calendar, however, my unsinkable organization system asks that you keep a small spiral-bound notebook with you at all times. When you encounter a date, appointment, or deadline, record it in this notebook. When you next review your calendar, add the dates from your notebook. (If you use a time management system like GTDCS, this can be the same notebook you use for task capture.) This ensures that you\u2019re never scratching your head to remember what you\u2019re responsible for and when.","title":"The Unsinkable Student Organization System - Study Hacks - Cal Newport"},{"location":"Highlights/Readwise/Articles/The%20Unsinkable%20Student%20Organization%20System%20-%20Study%20Hacks%20-%20Cal%20Newport/#the-unsinkable-student-organization-system-study-hacks-cal-newport","text":"","title":"The Unsinkable Student Organization System - Study Hacks - Cal Newport"},{"location":"Highlights/Readwise/Articles/The%20Unsinkable%20Student%20Organization%20System%20-%20Study%20Hacks%20-%20Cal%20Newport/#metadata","text":"Author: Full Title: The Unsinkable Student Organization System - Study Hacks - Cal Newport Category: #Type/Highlights/Article URL: https://www.calnewport.com/blog/2009/08/25/the-unsinkable-student-organization-system/","title":"Metadata"},{"location":"Highlights/Readwise/Articles/The%20Unsinkable%20Student%20Organization%20System%20-%20Study%20Hacks%20-%20Cal%20Newport/#highlights","text":"what seems like a smart, comprehensive system to today you, will be later seen as a terrible prison that blackens your heart and steals your freedom by the future you As you might have guessed, this future you will abandon your smart system and fall back into unorganized chaos Rule #1: One Class = One Notebook + One Folder Note: Instead of Class, think Project Rule #3: Use a Calendar Backup Notebook. As I\u2019ve pleaded many times before, you must keep a calendar that you check at the same time every day. (I like Google\u2019s calendar, but anything works.) This simple addition to your student life will save you significant stress. In addition to this calendar, however, my unsinkable organization system asks that you keep a small spiral-bound notebook with you at all times. When you encounter a date, appointment, or deadline, record it in this notebook. When you next review your calendar, add the dates from your notebook. (If you use a time management system like GTDCS, this can be the same notebook you use for task capture.) This ensures that you\u2019re never scratching your head to remember what you\u2019re responsible for and when.","title":"Highlights"},{"location":"Highlights/Readwise/Articles/The%20%E2%80%9CBurner%20List%E2%80%9D%E2%80%94My%20Simple%2C%20Paper-Based%20System%20for%20Focused%20To-Dos/","text":"The \u201cBurner List\u201d\u2014My Simple, Paper-Based System for Focused To-Dos \u00b6 Metadata \u00b6 Author: [[Jake Knapp]] Full Title: The \u201cBurner List\u201d\u2014My Simple, Paper-Based System for Focused To-Dos Category: #Type/Highlights/Article URL: https://medium.com/make-time/the-burner-list-my-simple-paper-based-system-for-focused-to-dos-95497321cf14 Highlights \u00b6 no matter how many tasks I finish, I\u2019m never done \u2014 more to-dos are always waiting to take their place. To-do lists just perpetuate the feeling of \u201cunfinishedness\u201d that dogs modern life I call my system the \u201cBurner List\u201d The Burner List is intentionally limited\u2014and therefore focused. Here\u2019s how to make one: Ingredients One sheet of blank paper (printer paper is perfect) A pen Make two tall columns You can fold the paper, draw a line down the middle, or just eyeball it. Precision is unimportant. What is important is the metaphor you\u2019ve just created: Left = front burner. Right = back burner. Put your most important project on the front burner You are allowed to have one and only one project on the front burner. Not two, not three \u2014 just one. In the top left-hand corner, write the name of your most important project and underline it. Then list the to-dos for your top project \u2014 any task you can do in the next few days to move it forward. Leave some counter space Leave the rest of the first column empty. The Burner List is not intended to make an efficient use of the damned paper surface area \u2014 it\u2019s intended to make good use of your time and energy! The blank space gives you room to add more tasks for the top project, but, just as important, extra visual space makes it easier to focus on the important stuff. Put your second most important project on the back burner In the top of the right-hand column, write the name of your second most important project and underline it, then write related to-dos underneath. Make a kitchen sink Finally, about halfway down the right-hand column, list any miscellaneous tasks that you need to do but don\u2019t fit with project 1 or project 2. It doesn\u2019t matter if they\u2019re part of project 3 or 4, they just get chucked into the kitchen sink with everything else. Yes, this goes counter to all organizational and productivity advice \u2014 but by constraining the space and attention you give to other stuff, you\u2019ll help yourself spend your time well. Now get cooking Imagine there was a chef standing to the left of your page. He\u2019ll naturally focus most of his attention on the front burner. He\u2019s aware of the back burner, and sometimes he stirs a pot or flips a pancake back there, but the front burner is where the action is.","title":"The \u201cBurner List\u201d\u2014My Simple, Paper-Based System for Focused To-Dos"},{"location":"Highlights/Readwise/Articles/The%20%E2%80%9CBurner%20List%E2%80%9D%E2%80%94My%20Simple%2C%20Paper-Based%20System%20for%20Focused%20To-Dos/#the-burner-listmy-simple-paper-based-system-for-focused-to-dos","text":"","title":"The \u201cBurner List\u201d\u2014My Simple, Paper-Based System for Focused To-Dos"},{"location":"Highlights/Readwise/Articles/The%20%E2%80%9CBurner%20List%E2%80%9D%E2%80%94My%20Simple%2C%20Paper-Based%20System%20for%20Focused%20To-Dos/#metadata","text":"Author: [[Jake Knapp]] Full Title: The \u201cBurner List\u201d\u2014My Simple, Paper-Based System for Focused To-Dos Category: #Type/Highlights/Article URL: https://medium.com/make-time/the-burner-list-my-simple-paper-based-system-for-focused-to-dos-95497321cf14","title":"Metadata"},{"location":"Highlights/Readwise/Articles/The%20%E2%80%9CBurner%20List%E2%80%9D%E2%80%94My%20Simple%2C%20Paper-Based%20System%20for%20Focused%20To-Dos/#highlights","text":"no matter how many tasks I finish, I\u2019m never done \u2014 more to-dos are always waiting to take their place. To-do lists just perpetuate the feeling of \u201cunfinishedness\u201d that dogs modern life I call my system the \u201cBurner List\u201d The Burner List is intentionally limited\u2014and therefore focused. Here\u2019s how to make one: Ingredients One sheet of blank paper (printer paper is perfect) A pen Make two tall columns You can fold the paper, draw a line down the middle, or just eyeball it. Precision is unimportant. What is important is the metaphor you\u2019ve just created: Left = front burner. Right = back burner. Put your most important project on the front burner You are allowed to have one and only one project on the front burner. Not two, not three \u2014 just one. In the top left-hand corner, write the name of your most important project and underline it. Then list the to-dos for your top project \u2014 any task you can do in the next few days to move it forward. Leave some counter space Leave the rest of the first column empty. The Burner List is not intended to make an efficient use of the damned paper surface area \u2014 it\u2019s intended to make good use of your time and energy! The blank space gives you room to add more tasks for the top project, but, just as important, extra visual space makes it easier to focus on the important stuff. Put your second most important project on the back burner In the top of the right-hand column, write the name of your second most important project and underline it, then write related to-dos underneath. Make a kitchen sink Finally, about halfway down the right-hand column, list any miscellaneous tasks that you need to do but don\u2019t fit with project 1 or project 2. It doesn\u2019t matter if they\u2019re part of project 3 or 4, they just get chucked into the kitchen sink with everything else. Yes, this goes counter to all organizational and productivity advice \u2014 but by constraining the space and attention you give to other stuff, you\u2019ll help yourself spend your time well. Now get cooking Imagine there was a chef standing to the left of your page. He\u2019ll naturally focus most of his attention on the front burner. He\u2019s aware of the back burner, and sometimes he stirs a pot or flips a pancake back there, but the front burner is where the action is.","title":"Highlights"},{"location":"Highlights/Readwise/Articles/This%20Is%20How%20You%20Become%20Confident%20and%20Transform%20Your%20Life/","text":"This Is How You Become Confident and Transform Your Life \u00b6 Metadata \u00b6 Author: [[Ben Hardy]] Full Title: This Is How You Become Confident and Transform Your Life Category: #Type/Highlights/Article URL: https://benjaminhardy.com/thisishowyoubecomeconfidentandtransformyourlife/ Highlights \u00b6 \u201cWe are kept from our goal not by obstacles but by a clear path to a lesser goal.\u201d JOURNALING: Writing about what you\u2019re dealing with is essential. There is so much science to prove this point. Writing about what you\u2019re dealing with allows you to think about it differently. It allows you to see it differently. It turns confusion into words and coherent thoughts, which you can then comprehend and choose what to do with. Writing in your journal every single day is a habit everyone should develop. It helps you become far more self-aware, it helps you reframe experiences, and helps you proactively determine who you want to be. TALKING: Aside from journaling, you can and should have people in your life whom you can talk to when you\u2019re going through hard experiences. Whenever I\u2019m overwhelmed, I call my friend Wayne or my mom. They always empathetically listen, encourage me, and by the time I\u2019m done with the phone call, I feel much better. There were many instances during my PhD program when I felt very lonely. I remember pulling all-nighters in strange buildings on campus, studying for some HUGE TEST and wanting to give up. I\u2019d call Wayne and he\u2019d help me through it.","title":"This Is How You Become Confident and Transform Your Life"},{"location":"Highlights/Readwise/Articles/This%20Is%20How%20You%20Become%20Confident%20and%20Transform%20Your%20Life/#this-is-how-you-become-confident-and-transform-your-life","text":"","title":"This Is How You Become Confident and Transform Your Life"},{"location":"Highlights/Readwise/Articles/This%20Is%20How%20You%20Become%20Confident%20and%20Transform%20Your%20Life/#metadata","text":"Author: [[Ben Hardy]] Full Title: This Is How You Become Confident and Transform Your Life Category: #Type/Highlights/Article URL: https://benjaminhardy.com/thisishowyoubecomeconfidentandtransformyourlife/","title":"Metadata"},{"location":"Highlights/Readwise/Articles/This%20Is%20How%20You%20Become%20Confident%20and%20Transform%20Your%20Life/#highlights","text":"\u201cWe are kept from our goal not by obstacles but by a clear path to a lesser goal.\u201d JOURNALING: Writing about what you\u2019re dealing with is essential. There is so much science to prove this point. Writing about what you\u2019re dealing with allows you to think about it differently. It allows you to see it differently. It turns confusion into words and coherent thoughts, which you can then comprehend and choose what to do with. Writing in your journal every single day is a habit everyone should develop. It helps you become far more self-aware, it helps you reframe experiences, and helps you proactively determine who you want to be. TALKING: Aside from journaling, you can and should have people in your life whom you can talk to when you\u2019re going through hard experiences. Whenever I\u2019m overwhelmed, I call my friend Wayne or my mom. They always empathetically listen, encourage me, and by the time I\u2019m done with the phone call, I feel much better. There were many instances during my PhD program when I felt very lonely. I remember pulling all-nighters in strange buildings on campus, studying for some HUGE TEST and wanting to give up. I\u2019d call Wayne and he\u2019d help me through it.","title":"Highlights"},{"location":"Highlights/Readwise/Articles/Tipsandtricks%20-%20Windows10/","text":"Tipsandtricks - Windows10 \u00b6 Metadata \u00b6 Author: Full Title: Tipsandtricks - Windows10 Category: #Type/Highlights/Article URL: https://www.reddit.com/r/Windows10/wiki/tipsandtricks Highlights \u00b6 Windows key + X You can click on a title letter in the \"All apps\" list from the Start Menu which triggers a nice zoom-out animation and displays the alphabet for quick access to a specific letter You can narrow down search results to a single type (like files) by first typing the name of the section followed by a colon. For example: files:jqu <-- this would find jquery files. This works for basically all section headers (apps: settings: web: folders: etc) Win+Ctrl+D to create new virtual desktop Win+Crtl+F4 to close the current virtual desktop. Win+Ctrl+Left/Right arrow to quickly switch between desktops,","title":"Tipsandtricks - Windows10"},{"location":"Highlights/Readwise/Articles/Tipsandtricks%20-%20Windows10/#tipsandtricks-windows10","text":"","title":"Tipsandtricks - Windows10"},{"location":"Highlights/Readwise/Articles/Tipsandtricks%20-%20Windows10/#metadata","text":"Author: Full Title: Tipsandtricks - Windows10 Category: #Type/Highlights/Article URL: https://www.reddit.com/r/Windows10/wiki/tipsandtricks","title":"Metadata"},{"location":"Highlights/Readwise/Articles/Tipsandtricks%20-%20Windows10/#highlights","text":"Windows key + X You can click on a title letter in the \"All apps\" list from the Start Menu which triggers a nice zoom-out animation and displays the alphabet for quick access to a specific letter You can narrow down search results to a single type (like files) by first typing the name of the section followed by a colon. For example: files:jqu <-- this would find jquery files. This works for basically all section headers (apps: settings: web: folders: etc) Win+Ctrl+D to create new virtual desktop Win+Crtl+F4 to close the current virtual desktop. Win+Ctrl+Left/Right arrow to quickly switch between desktops,","title":"Highlights"},{"location":"Highlights/Readwise/Articles/Top%2010%20Best%20Practices%20in%20Configuration%20Management/","text":"Top 10 Best Practices in Configuration Management \u00b6 Metadata \u00b6 Author: [[cmcrossroads.com]] Full Title: Top 10 Best Practices in Configuration Management Category: #Type/Highlights/Article URL: https://www.cmcrossroads.com/article/top-10-best-practices-configuration-management Highlights \u00b6 Organize Shared Code into Separate Products When you're producing software that is shared by different products, issues such as development ownership, timing of releases, etc. are typically difficult to manage because the different products utilizing the shared code have different sets of requirements, and possibly differing processes. Often the shared code starts out as part of one product's development but business logic dictates that it be shared in multiple products. The best practice in this situation is to partition the shared code into one (or more) separate products. That product has as its customers, the other product teams. Control of releases, frequency, features, etc. really have to be managed as a full product is managed. Different customers will want to move to new releases of the shared product at different times. Some will want the new features, some won't want the risk. The shared code may need to branch into different release streams to support the various customers. ( View Highlight ) Separate Customer Requests from Engineering Problems/Features ( View Highlight ) Customers want to raise problems, ask for new features, or simply specify how they believe the tool should operate, without reference to whether it is a feature request or a problem report. Some customers will ask for the same features as other customers, perhaps with a different twist or priority. Customers want to know the status of their requests, many of which can be dealt with directly by the technical support team without involving the engineering team. Some are data configuration issues, others non-problems. The customer just wants the majority of requests addressed successfully. The engineering team doesn't care about how many customers report a problem or request a feature - they just want their marching orders: a list of problems to be fixed and a list of features to be implemented. Sure they're prioritized based on customer input, but ultimately, this reflects the value of the feature in the product. It's too hard for customers to classify issues as features or problems, and it doesn't really matter anyway - it's input to the product team. But it's critical to distinguish engineering problems from features as they are completely different processes. All this to say, track customer requests separately from engineering problems/features. That is not to say that you should use a separate repository. And of course the engineering records should be traced back to the customer requests. ( View Highlight ) Separate Problems/Issues/Defects from Activities/Features/Tasks A related best practice that we touched on in the last paragraph is that problem fixing is a completely different process from feature development. One is a fix to the product because it didn't meet the requirements. No new requirement specification. And the specification for the change is the problem report itself. The first step is to ensure reproducibility. The problem has to be investigated for potentially all supported development streams. And so forth. Feature development is completely different. The feature has to be designed and fully specified. New requirements are needed to put the case forward for the feature. User documentation has to be updated. A new set of test cases has to be established. Problems and Features (or more generally activities) are different beasts. Don't try to track them both as \"tasks\". If you have separate ALM tools to deal with those processes, that's perhaps a different matter. But in a fully integrated system, keep them separate ( View Highlight ) Use Tags and Separate Variant Code into Separate Files Avoid the temptation of using parallel branches to manage separate variants. Consider that if you have 3 variant options for language, 3 more for security level and 2 more for packaging, you'll have 18 branches already. Variant management must be addressed in the software engineering realm, not in the CM realm primarily. The CM realm should allow you to tag files with the appropriate variant tags, and to select files based on one or more specified variant tags. In some cases, the CM tool might go so far as to allow you to tag specific changes as \"variant\" changes, that can be \"automatically\" applied to your source code when that variant is selected. But the bigger task of the CM manager is to make sure that the development organization understands how to deal with variants. The preference is run-time configuration. Next to that is link/load time configuration (by selecting the files to load or to link together). Then comes compile-time variants, also known as conditional compilation. This is less appealing because you then need different variants of the same object file, making your build task more complex (often the entire build is replicated for each variant to get around this problem). But at all costs avoid the parallel branch approach. ( View Highlight ) Tailor your User Interface Closely to your Process ( View Highlight ) Automate Administration to Remove Human Error ( View Highlight ) Enforce Change Traceability to Features/Problem Reports ( View Highlight ) Best Practices Summary So there you have it - the top 10, in fact, the top 20 (or 21). Use of Change Packages Stream-based Branching Strategy - do not overload branching Status flow for all records with Clear In Box Assignments Data record Owner and Assignee Continuous integration with automated nightly builds from the CM repository Dumb numbering Main branch per release vs Main Trunk Enforce change traceability to Features/Problem Reports Automate administration to remove human error 10.Tailor your user interface closely to your process Org chart integrated with CM tool Change control of requirements Continuous Automation Warm-standby disaster recovery Use Live data CRB/CIB meetings A Problem is not a problem until it's in the CM repository Use tags and separate variant code into separate files 18a. Separate Problems/Issues/Defects from Activities/Features/Tasks 18b. Separate customer requests from Engineering problems/features Change promotion vs Promotion Branches Separate products for shared code Perhaps these best practice descriptions are more detailed than you expected. Perhaps they don't quite fit into your picture, or you find them too opinionated. Maybe you expected one on how best to do labelling or on how to derive a branching strategy - these would, of course, be incompatible with the best practices that I've mentioned here. Perhaps you have some obvious ones that are missing here - Give me your feedback. I'd love to hear your input. There are many more on the fringes that fall into software engineering, or tool architecture, rather than CM process. What about the order of importance in which I've presented them? That's gotta ruffle some feathers. If not, I'd love to hear that too. ( View Highlight )","title":"Top 10 Best Practices in Configuration Management"},{"location":"Highlights/Readwise/Articles/Top%2010%20Best%20Practices%20in%20Configuration%20Management/#top-10-best-practices-in-configuration-management","text":"","title":"Top 10 Best Practices in Configuration Management"},{"location":"Highlights/Readwise/Articles/Top%2010%20Best%20Practices%20in%20Configuration%20Management/#metadata","text":"Author: [[cmcrossroads.com]] Full Title: Top 10 Best Practices in Configuration Management Category: #Type/Highlights/Article URL: https://www.cmcrossroads.com/article/top-10-best-practices-configuration-management","title":"Metadata"},{"location":"Highlights/Readwise/Articles/Top%2010%20Best%20Practices%20in%20Configuration%20Management/#highlights","text":"Organize Shared Code into Separate Products When you're producing software that is shared by different products, issues such as development ownership, timing of releases, etc. are typically difficult to manage because the different products utilizing the shared code have different sets of requirements, and possibly differing processes. Often the shared code starts out as part of one product's development but business logic dictates that it be shared in multiple products. The best practice in this situation is to partition the shared code into one (or more) separate products. That product has as its customers, the other product teams. Control of releases, frequency, features, etc. really have to be managed as a full product is managed. Different customers will want to move to new releases of the shared product at different times. Some will want the new features, some won't want the risk. The shared code may need to branch into different release streams to support the various customers. ( View Highlight ) Separate Customer Requests from Engineering Problems/Features ( View Highlight ) Customers want to raise problems, ask for new features, or simply specify how they believe the tool should operate, without reference to whether it is a feature request or a problem report. Some customers will ask for the same features as other customers, perhaps with a different twist or priority. Customers want to know the status of their requests, many of which can be dealt with directly by the technical support team without involving the engineering team. Some are data configuration issues, others non-problems. The customer just wants the majority of requests addressed successfully. The engineering team doesn't care about how many customers report a problem or request a feature - they just want their marching orders: a list of problems to be fixed and a list of features to be implemented. Sure they're prioritized based on customer input, but ultimately, this reflects the value of the feature in the product. It's too hard for customers to classify issues as features or problems, and it doesn't really matter anyway - it's input to the product team. But it's critical to distinguish engineering problems from features as they are completely different processes. All this to say, track customer requests separately from engineering problems/features. That is not to say that you should use a separate repository. And of course the engineering records should be traced back to the customer requests. ( View Highlight ) Separate Problems/Issues/Defects from Activities/Features/Tasks A related best practice that we touched on in the last paragraph is that problem fixing is a completely different process from feature development. One is a fix to the product because it didn't meet the requirements. No new requirement specification. And the specification for the change is the problem report itself. The first step is to ensure reproducibility. The problem has to be investigated for potentially all supported development streams. And so forth. Feature development is completely different. The feature has to be designed and fully specified. New requirements are needed to put the case forward for the feature. User documentation has to be updated. A new set of test cases has to be established. Problems and Features (or more generally activities) are different beasts. Don't try to track them both as \"tasks\". If you have separate ALM tools to deal with those processes, that's perhaps a different matter. But in a fully integrated system, keep them separate ( View Highlight ) Use Tags and Separate Variant Code into Separate Files Avoid the temptation of using parallel branches to manage separate variants. Consider that if you have 3 variant options for language, 3 more for security level and 2 more for packaging, you'll have 18 branches already. Variant management must be addressed in the software engineering realm, not in the CM realm primarily. The CM realm should allow you to tag files with the appropriate variant tags, and to select files based on one or more specified variant tags. In some cases, the CM tool might go so far as to allow you to tag specific changes as \"variant\" changes, that can be \"automatically\" applied to your source code when that variant is selected. But the bigger task of the CM manager is to make sure that the development organization understands how to deal with variants. The preference is run-time configuration. Next to that is link/load time configuration (by selecting the files to load or to link together). Then comes compile-time variants, also known as conditional compilation. This is less appealing because you then need different variants of the same object file, making your build task more complex (often the entire build is replicated for each variant to get around this problem). But at all costs avoid the parallel branch approach. ( View Highlight ) Tailor your User Interface Closely to your Process ( View Highlight ) Automate Administration to Remove Human Error ( View Highlight ) Enforce Change Traceability to Features/Problem Reports ( View Highlight ) Best Practices Summary So there you have it - the top 10, in fact, the top 20 (or 21). Use of Change Packages Stream-based Branching Strategy - do not overload branching Status flow for all records with Clear In Box Assignments Data record Owner and Assignee Continuous integration with automated nightly builds from the CM repository Dumb numbering Main branch per release vs Main Trunk Enforce change traceability to Features/Problem Reports Automate administration to remove human error 10.Tailor your user interface closely to your process Org chart integrated with CM tool Change control of requirements Continuous Automation Warm-standby disaster recovery Use Live data CRB/CIB meetings A Problem is not a problem until it's in the CM repository Use tags and separate variant code into separate files 18a. Separate Problems/Issues/Defects from Activities/Features/Tasks 18b. Separate customer requests from Engineering problems/features Change promotion vs Promotion Branches Separate products for shared code Perhaps these best practice descriptions are more detailed than you expected. Perhaps they don't quite fit into your picture, or you find them too opinionated. Maybe you expected one on how best to do labelling or on how to derive a branching strategy - these would, of course, be incompatible with the best practices that I've mentioned here. Perhaps you have some obvious ones that are missing here - Give me your feedback. I'd love to hear your input. There are many more on the fringes that fall into software engineering, or tool architecture, rather than CM process. What about the order of importance in which I've presented them? That's gotta ruffle some feathers. If not, I'd love to hear that too. ( View Highlight )","title":"Highlights"},{"location":"Highlights/Readwise/Articles/Top%204%20Tips%20to%20Get%20Organized%20for%20Efficient%20Software%20Development/","text":"Top 4 Tips to Get Organized for Efficient Software Development \u00b6 Metadata \u00b6 Author: [[kitelytech.com]] Full Title: Top 4 Tips to Get Organized for Efficient Software Development Category: #Type/Highlights/Article URL: https://kitelytech.com/4-tips-get-organized-efficient-software-development/ Highlights \u00b6 Clear Your Work Space ( View Highlight ) Begin with a healthy, positive work environment, free from distractions. This is vital to increasing productivity within the workplace. Aim to keep your workspace free of clutter, and reduce distractions by turning off your social media notifications as soon as you start working. Basically, remove access to all websites and emails that will distract you. A messy desk makes for a cluttered mind, and the inverse is also true; a clean workspace makes for an organized mind. ( View Highlight ) Get Your Priorities in Order ( View Highlight ) Keep all documents organized in their proper folders with up-to-date versioning. By prioritizing and updating everything, you will help your development process. Keep tasks organized for the team too. Try using technology to automate these processes. By enabling yourself and your team to stay productive while being able to report and monitor your progress, the team will be empowered to become more efficient. Carry your organizational habits through to the end of the day too, to help prepare for tomorrow. Before you leave the office, or before you start the week on Sunday evening, make a list of high-priority tasks for the next day. This will keep the whole workweek efficient. ( View Highlight ) Plan a Development Process ( View Highlight ) Before you start working, plan out how you want to handle the task at hand. Lots of programmers spend lots of time in front of whiteboards before they ever start typing. If you determine patterns early on and write modular code this will allow you to increase usability to simplify your process. If you plan out smaller functions that can complete one task, then it\u2019s an easy way for programmers to make their code efficient and reusable. By taking the time to think in these abstract ways you can transform problems and develop patterns into solutions you already have. ( View Highlight ) Avoid Overworking If you work past your \u2018productive point\u2019, then you are just wasting your time. Crunch time is an area you can\u2019t avoid in the tech industry, but it\u2019s also the most taxing on your brain power. If you spend your time fixing mistakes you\u2019ve made previously because of overworking, it might be a sign you need to take a break and recharge before returning to the screen to code. Being able to alternate between taking breaks and working will benefit not only your efficiency but your mental health too. It\u2019s also very important to take actual breaks, such as taking a quiet walk or stretching. ( View Highlight )","title":"Top 4 Tips to Get Organized for Efficient Software Development"},{"location":"Highlights/Readwise/Articles/Top%204%20Tips%20to%20Get%20Organized%20for%20Efficient%20Software%20Development/#top-4-tips-to-get-organized-for-efficient-software-development","text":"","title":"Top 4 Tips to Get Organized for Efficient Software Development"},{"location":"Highlights/Readwise/Articles/Top%204%20Tips%20to%20Get%20Organized%20for%20Efficient%20Software%20Development/#metadata","text":"Author: [[kitelytech.com]] Full Title: Top 4 Tips to Get Organized for Efficient Software Development Category: #Type/Highlights/Article URL: https://kitelytech.com/4-tips-get-organized-efficient-software-development/","title":"Metadata"},{"location":"Highlights/Readwise/Articles/Top%204%20Tips%20to%20Get%20Organized%20for%20Efficient%20Software%20Development/#highlights","text":"Clear Your Work Space ( View Highlight ) Begin with a healthy, positive work environment, free from distractions. This is vital to increasing productivity within the workplace. Aim to keep your workspace free of clutter, and reduce distractions by turning off your social media notifications as soon as you start working. Basically, remove access to all websites and emails that will distract you. A messy desk makes for a cluttered mind, and the inverse is also true; a clean workspace makes for an organized mind. ( View Highlight ) Get Your Priorities in Order ( View Highlight ) Keep all documents organized in their proper folders with up-to-date versioning. By prioritizing and updating everything, you will help your development process. Keep tasks organized for the team too. Try using technology to automate these processes. By enabling yourself and your team to stay productive while being able to report and monitor your progress, the team will be empowered to become more efficient. Carry your organizational habits through to the end of the day too, to help prepare for tomorrow. Before you leave the office, or before you start the week on Sunday evening, make a list of high-priority tasks for the next day. This will keep the whole workweek efficient. ( View Highlight ) Plan a Development Process ( View Highlight ) Before you start working, plan out how you want to handle the task at hand. Lots of programmers spend lots of time in front of whiteboards before they ever start typing. If you determine patterns early on and write modular code this will allow you to increase usability to simplify your process. If you plan out smaller functions that can complete one task, then it\u2019s an easy way for programmers to make their code efficient and reusable. By taking the time to think in these abstract ways you can transform problems and develop patterns into solutions you already have. ( View Highlight ) Avoid Overworking If you work past your \u2018productive point\u2019, then you are just wasting your time. Crunch time is an area you can\u2019t avoid in the tech industry, but it\u2019s also the most taxing on your brain power. If you spend your time fixing mistakes you\u2019ve made previously because of overworking, it might be a sign you need to take a break and recharge before returning to the screen to code. Being able to alternate between taking breaks and working will benefit not only your efficiency but your mental health too. It\u2019s also very important to take actual breaks, such as taking a quiet walk or stretching. ( View Highlight )","title":"Highlights"},{"location":"Highlights/Readwise/Articles/Top%20GitHub%20Best%20Practices%20for%20Developers/","text":"Top GitHub Best Practices for Developers \u00b6 Metadata \u00b6 Author: Full Title: Top GitHub Best Practices for Developers Category: #Type/Highlights/Article URL: https://www.datree.io/resources/github-best-practices Highlights \u00b6 How we created this GitHub best practices list \u200d We interviewed hundreds of software developers to understand their development workflows and how they work with GitHub. Using our own product, we also scanned thousands of GitHub repositories for our customers. 0 \u2013 Don\u2019t git push straight to master Regardless if you use Gitflow or any other git branching model, it is always a good idea to turn on git branch protection to prevent direct commits and ensure your main branch code is deployable at all times. All commits should be pushed to master through pull requests. 1 \u2013 Don\u2019t commit code as an unrecognized author 4 \u2013 Don\u2019t commit dependencies into source control 5 \u2013 Don\u2019t commit local config files into source control We strongly recommend against committing your local config files to version control. Usually, those are private configuration files you don\u2019t want to push to remote because they are holding secrets, personal preferences, history or general information that should stay only in your local environment. 6 \u2013 Create a meaningful git ignore file A .gitignore file is a must in each repository to ignore predefined files and directories. It will help you to prevent secret keys, dependencies and many other possible discrepancies in your code. You can choose a relevant template from Gitignore.io to get started quickly. 7 \u2013 Archive dead repositories 8 \u2013 Lock package version 9 \u2013 Specify standard package versions 10 - Leverage task list Tasks lists provide a way for you totrack to-dos directly within comments, issues, and even MarkDownfiles (*.MD) within your repository (users must have write access to therepository to make changes to MarkDownfiles). Tasks lists provide an excellent way tocapture a high-level overview of a task or issue, as well as keep othersupdated on its state. Make sure to take advantage of this powerful new feature! 11 - Use a branch naming convention 12 - Delete stale branches Every time one branch is merged into another, the branch that is merged in becomes stale, assuming further work isn\u2019t being done in it. While it may seem useful or even necessary to keep the extra data on hand, the reality is that stale branches are abandoned 98% of the time and simply clutter up your project. Even if you delete a branch when you shouldn\u2019t have, you can restore it - and if you don\u2019t trust GitHub\u2019s restore feature, chances are it\u2019s safe on somebody\u2019s computer, thanks to the magic of distributed versioning. 13 - Keep branches up to date","title":"Top GitHub Best Practices for Developers"},{"location":"Highlights/Readwise/Articles/Top%20GitHub%20Best%20Practices%20for%20Developers/#top-github-best-practices-for-developers","text":"","title":"Top GitHub Best Practices for Developers"},{"location":"Highlights/Readwise/Articles/Top%20GitHub%20Best%20Practices%20for%20Developers/#metadata","text":"Author: Full Title: Top GitHub Best Practices for Developers Category: #Type/Highlights/Article URL: https://www.datree.io/resources/github-best-practices","title":"Metadata"},{"location":"Highlights/Readwise/Articles/Top%20GitHub%20Best%20Practices%20for%20Developers/#highlights","text":"How we created this GitHub best practices list \u200d We interviewed hundreds of software developers to understand their development workflows and how they work with GitHub. Using our own product, we also scanned thousands of GitHub repositories for our customers. 0 \u2013 Don\u2019t git push straight to master Regardless if you use Gitflow or any other git branching model, it is always a good idea to turn on git branch protection to prevent direct commits and ensure your main branch code is deployable at all times. All commits should be pushed to master through pull requests. 1 \u2013 Don\u2019t commit code as an unrecognized author 4 \u2013 Don\u2019t commit dependencies into source control 5 \u2013 Don\u2019t commit local config files into source control We strongly recommend against committing your local config files to version control. Usually, those are private configuration files you don\u2019t want to push to remote because they are holding secrets, personal preferences, history or general information that should stay only in your local environment. 6 \u2013 Create a meaningful git ignore file A .gitignore file is a must in each repository to ignore predefined files and directories. It will help you to prevent secret keys, dependencies and many other possible discrepancies in your code. You can choose a relevant template from Gitignore.io to get started quickly. 7 \u2013 Archive dead repositories 8 \u2013 Lock package version 9 \u2013 Specify standard package versions 10 - Leverage task list Tasks lists provide a way for you totrack to-dos directly within comments, issues, and even MarkDownfiles (*.MD) within your repository (users must have write access to therepository to make changes to MarkDownfiles). Tasks lists provide an excellent way tocapture a high-level overview of a task or issue, as well as keep othersupdated on its state. Make sure to take advantage of this powerful new feature! 11 - Use a branch naming convention 12 - Delete stale branches Every time one branch is merged into another, the branch that is merged in becomes stale, assuming further work isn\u2019t being done in it. While it may seem useful or even necessary to keep the extra data on hand, the reality is that stale branches are abandoned 98% of the time and simply clutter up your project. Even if you delete a branch when you shouldn\u2019t have, you can restore it - and if you don\u2019t trust GitHub\u2019s restore feature, chances are it\u2019s safe on somebody\u2019s computer, thanks to the magic of distributed versioning. 13 - Keep branches up to date","title":"Highlights"},{"location":"Highlights/Readwise/Articles/Ultimate%20Personal%20Management%20Systems%20-%20The%20Startup%20-%20Medium/","text":"Ultimate Personal Management Systems - The Startup - Medium \u00b6 Metadata \u00b6 Author: [[Dan Silvestre]] Full Title: Ultimate Personal Management Systems - The Startup - Medium Category: #Type/Highlights/Article URL: https://medium.com/swlh/ultimate-personal-management-systems-41f376f4ec2c Highlights \u00b6 Easy to Search You must be able to find anything you are looking for under 5 seconds. It doesn\u2019t matter if it\u2019s a digital \u2014 organizing notes in Evernote \u2014 or physical system \u2014 organizing the movie collection. You must be able to find exactly what you are looking for fast. In other words: the entire structure around your system must help you be more efficient . Minimal Setup You want to be able to set up your management system fast once and for all. The only reason you are creating a system in the first place is to make your life simple, not more complicated. Don\u2019t try to come up with the \u2018perfect system\u2019 that is at the same time super complicated to use and to set up. Easy to Maintain After setting up the system you will keep adding stuff to it \u2014 whether its clothes, notes or emails. What this means is that you will be affecting the system by inputting more content into it. Having a system that it\u2019s easy to maintain will ensure that it always stays organized. Follow the rule of \u2018two actions\u2019: if it takes more than two actions to complete something, you are doing it wrong. Tags: [[favorite]] Folders are not how the brain works. The brain works by thinking of something and finding it. You should be able to go to your documents folder and search for it immediately. The organization should not rely on folders but rather on the names of the actual document. Here\u2019s the question you want to ask yourself: What is the major problem I am trying to solve? Often we overlook the reason why we create a system: we just want to be organized for the sake of it. Tags: [[favorite]] I cannot stress this enough: simpler is better! Building a simpler system means that you will cover the three main rules to perfection. It will be easier to search, minimal setup will be necessary and will be quick to maintain. Organization is normally confused with compartmentalizing information to the tiniest of detail. Tags: [[favorite]] Start by thinking of what you can join by type and what big groups you need to create. It would be weird to have different drawers for socks that have different colors. You would have one for black socks, another for blue socks and so on. This doesn\u2019t happen: space is limited. make it easy for other people to learn it. To make life easier and start seeing progress fast \u2014 especially if you have thousands of items -, process them in batch. Follow 80/20 rule: focus the first 20% of your time into 80% of the items. Focus on everything that you can process in bulk. You want to find things that you can either archive or delete altogether. Get it done and unclutter your life. After that, I had around 20% of my Pocket links left, at which point I started opening and reading it. I would then decide to do two actions only: archive with a tag or delete. The \u2018hack\u2019 was to focus on the 80% of the task first. Do the same for your items. Keeping Your System Organized The main mistake after setting a new system is to forget how to use it going forward. You make it more complex by adding layers, complicate search and don\u2019t process incoming items. Email to Inbox Zero Ah, email, the corporate evil of the 21st century. I could only start with email in the examples. I organized my inbox with only a handful of labels and I use multiple inboxes to view it in two columns. This turned my email into a GTD Gmail Inbox. keep the organization simple: everything arrives in my inbox and gets sorted from there to either a notebook or trash. The inbox is my default notebook for screenshots as well I have three different separate stacks: personal, projects and work. It\u2019s pretty easy to understand what each one refers to, but I also try to keep the notebooks inside each stack to a minimal. This means using a broader category to aggregate different notes that are essentially the same type. Tracking Expenses A big one. You can do it using pen and paper, an online tool, looking at your bank statement or using a money management app. Again, this doesn\u2019t have to be more complicated than it needs. I use a simple spreadsheet. I fill it every weekend with the following fields: how much, when, what, what type, perishable or not. Remember the golden rules to build a great system: Searchable: find anything in 5 seconds or less Easy to set up: the simpler the system the easier it will be to set it up; aim for less than one hour Easy to maintain: don\u2019t add complexity as you go, instead try to remove layers When setting your system for the first time you will need to process everything going backward. This means categorizing and filling all the items that will be in your system. The easiest hack is to follow the 80/20 rule. Focus 20% of your efforts on 80% of the items so you clear the way to work on things that demand your attention. Those are the 20% of items which are the really important ones. Start by processing larger items. Then batch the remaining ones by grouping them into related categories as you process them. Tags: [[favorite]]","title":"Ultimate Personal Management Systems - The Startup - Medium"},{"location":"Highlights/Readwise/Articles/Ultimate%20Personal%20Management%20Systems%20-%20The%20Startup%20-%20Medium/#ultimate-personal-management-systems-the-startup-medium","text":"","title":"Ultimate Personal Management Systems - The Startup - Medium"},{"location":"Highlights/Readwise/Articles/Ultimate%20Personal%20Management%20Systems%20-%20The%20Startup%20-%20Medium/#metadata","text":"Author: [[Dan Silvestre]] Full Title: Ultimate Personal Management Systems - The Startup - Medium Category: #Type/Highlights/Article URL: https://medium.com/swlh/ultimate-personal-management-systems-41f376f4ec2c","title":"Metadata"},{"location":"Highlights/Readwise/Articles/Ultimate%20Personal%20Management%20Systems%20-%20The%20Startup%20-%20Medium/#highlights","text":"Easy to Search You must be able to find anything you are looking for under 5 seconds. It doesn\u2019t matter if it\u2019s a digital \u2014 organizing notes in Evernote \u2014 or physical system \u2014 organizing the movie collection. You must be able to find exactly what you are looking for fast. In other words: the entire structure around your system must help you be more efficient . Minimal Setup You want to be able to set up your management system fast once and for all. The only reason you are creating a system in the first place is to make your life simple, not more complicated. Don\u2019t try to come up with the \u2018perfect system\u2019 that is at the same time super complicated to use and to set up. Easy to Maintain After setting up the system you will keep adding stuff to it \u2014 whether its clothes, notes or emails. What this means is that you will be affecting the system by inputting more content into it. Having a system that it\u2019s easy to maintain will ensure that it always stays organized. Follow the rule of \u2018two actions\u2019: if it takes more than two actions to complete something, you are doing it wrong. Tags: [[favorite]] Folders are not how the brain works. The brain works by thinking of something and finding it. You should be able to go to your documents folder and search for it immediately. The organization should not rely on folders but rather on the names of the actual document. Here\u2019s the question you want to ask yourself: What is the major problem I am trying to solve? Often we overlook the reason why we create a system: we just want to be organized for the sake of it. Tags: [[favorite]] I cannot stress this enough: simpler is better! Building a simpler system means that you will cover the three main rules to perfection. It will be easier to search, minimal setup will be necessary and will be quick to maintain. Organization is normally confused with compartmentalizing information to the tiniest of detail. Tags: [[favorite]] Start by thinking of what you can join by type and what big groups you need to create. It would be weird to have different drawers for socks that have different colors. You would have one for black socks, another for blue socks and so on. This doesn\u2019t happen: space is limited. make it easy for other people to learn it. To make life easier and start seeing progress fast \u2014 especially if you have thousands of items -, process them in batch. Follow 80/20 rule: focus the first 20% of your time into 80% of the items. Focus on everything that you can process in bulk. You want to find things that you can either archive or delete altogether. Get it done and unclutter your life. After that, I had around 20% of my Pocket links left, at which point I started opening and reading it. I would then decide to do two actions only: archive with a tag or delete. The \u2018hack\u2019 was to focus on the 80% of the task first. Do the same for your items. Keeping Your System Organized The main mistake after setting a new system is to forget how to use it going forward. You make it more complex by adding layers, complicate search and don\u2019t process incoming items. Email to Inbox Zero Ah, email, the corporate evil of the 21st century. I could only start with email in the examples. I organized my inbox with only a handful of labels and I use multiple inboxes to view it in two columns. This turned my email into a GTD Gmail Inbox. keep the organization simple: everything arrives in my inbox and gets sorted from there to either a notebook or trash. The inbox is my default notebook for screenshots as well I have three different separate stacks: personal, projects and work. It\u2019s pretty easy to understand what each one refers to, but I also try to keep the notebooks inside each stack to a minimal. This means using a broader category to aggregate different notes that are essentially the same type. Tracking Expenses A big one. You can do it using pen and paper, an online tool, looking at your bank statement or using a money management app. Again, this doesn\u2019t have to be more complicated than it needs. I use a simple spreadsheet. I fill it every weekend with the following fields: how much, when, what, what type, perishable or not. Remember the golden rules to build a great system: Searchable: find anything in 5 seconds or less Easy to set up: the simpler the system the easier it will be to set it up; aim for less than one hour Easy to maintain: don\u2019t add complexity as you go, instead try to remove layers When setting your system for the first time you will need to process everything going backward. This means categorizing and filling all the items that will be in your system. The easiest hack is to follow the 80/20 rule. Focus 20% of your efforts on 80% of the items so you clear the way to work on things that demand your attention. Those are the 20% of items which are the really important ones. Start by processing larger items. Then batch the remaining ones by grouping them into related categories as you process them. Tags: [[favorite]]","title":"Highlights"},{"location":"Highlights/Readwise/Articles/Use%20the%20%E2%80%98Mental%20Shift%E2%80%99%20Technique%20to%20Increase%20Your%20Self-Discipline%20and%20Stop%20Procrastinating/","text":"Use the \u2018Mental Shift\u2019 Technique to Increase Your Self-Discipline and Stop Procrastinating \u00b6 Metadata \u00b6 Author: [[Jari Roomer]] Full Title: Use the \u2018Mental Shift\u2019 Technique to Increase Your Self-Discipline and Stop Procrastinating Category: #Type/Highlights/Article URL: https://medium.com/p/7f70b729fa55 Highlights \u00b6 When you feel like procrastinating, chances are you\u2019re pondering over how much effort a certain task or activity will cost you. In other words, you\u2019re focused on the short-term \u2018pain\u2019 of taking action. This short-term focus is a key characteristic of chronic procrastinators. The most disciplined people, on the other hand, shift their minds away from the short-term effort it costs them and instead focus on the long-term results their actions will bring them. We must all suffer from one of two pains: the pain of discipline or the pain of regret. The difference is discipline weighs ounces while regret weighs tons.\u201d \u2014 Jim Rohn","title":"Use the \u2018Mental Shift\u2019 Technique to Increase Your Self-Discipline and Stop Procrastinating"},{"location":"Highlights/Readwise/Articles/Use%20the%20%E2%80%98Mental%20Shift%E2%80%99%20Technique%20to%20Increase%20Your%20Self-Discipline%20and%20Stop%20Procrastinating/#use-the-mental-shift-technique-to-increase-your-self-discipline-and-stop-procrastinating","text":"","title":"Use the \u2018Mental Shift\u2019 Technique to Increase Your Self-Discipline and Stop Procrastinating"},{"location":"Highlights/Readwise/Articles/Use%20the%20%E2%80%98Mental%20Shift%E2%80%99%20Technique%20to%20Increase%20Your%20Self-Discipline%20and%20Stop%20Procrastinating/#metadata","text":"Author: [[Jari Roomer]] Full Title: Use the \u2018Mental Shift\u2019 Technique to Increase Your Self-Discipline and Stop Procrastinating Category: #Type/Highlights/Article URL: https://medium.com/p/7f70b729fa55","title":"Metadata"},{"location":"Highlights/Readwise/Articles/Use%20the%20%E2%80%98Mental%20Shift%E2%80%99%20Technique%20to%20Increase%20Your%20Self-Discipline%20and%20Stop%20Procrastinating/#highlights","text":"When you feel like procrastinating, chances are you\u2019re pondering over how much effort a certain task or activity will cost you. In other words, you\u2019re focused on the short-term \u2018pain\u2019 of taking action. This short-term focus is a key characteristic of chronic procrastinators. The most disciplined people, on the other hand, shift their minds away from the short-term effort it costs them and instead focus on the long-term results their actions will bring them. We must all suffer from one of two pains: the pain of discipline or the pain of regret. The difference is discipline weighs ounces while regret weighs tons.\u201d \u2014 Jim Rohn","title":"Highlights"},{"location":"Highlights/Readwise/Articles/Usethis%20Workflow%20for%20Package%20Development%20%20Emil%20Hvitfeldt/","text":"Usethis Workflow for Package Development | Emil Hvitfeldt \u00b6 Metadata \u00b6 Author: Full Title: Usethis Workflow for Package Development | Emil Hvitfeldt Category: #Type/Highlights/Article URL: https://www.hvitfeldt.me/blog/usethis-workflow-for-package-development/ Highlights \u00b6 The usethis promises to \u2026 it automates repetitive tasks that arise during project setup and development, both for R packages and non-package projects. Before creation Before we get started we need to make sure we have the essential packages installed to create a R package development workflow library(devtools) library(roxygen2) library(usethis) create_package(\"~/Desktop/utwf\") use_git() use_github() We can check that the package works by pressing \u201cInstall and Restart\u201d in the \u201cBuild\u201d panel. Alternatively you can use the keyboard shortcut Cmd+Shift+B (Ctrl+Shift+B for Windows). DESCRIPTION file and make sure that the Authors@R is populated correctly and modify the Title and Description fields. Next we will license the package. This can be done using one of the following functions (we will use MIT for this example) use_readme_rmd() use_travis() use_appveyor() use_coverage(type = c(\"codecov\")) use_testthat() use_spell_check() use_data_raw() use_news_md() Multiple time modifications You typical workflow will be repeating the following steps in the order that suits your flow Write some code Restart R Session Cmd+Shift+F10 (Ctrl+Shift+F10 for Windows) Build and Reload Cmd+Shift+B (Ctrl+Shift+B for Windows) Test Package Cmd+Shift+T (Ctrl+Shift+T for Windows) Check Package Cmd+Shift+E (Ctrl+Shift+E for Windows) Document Package Cmd+Shift+D (Ctrl+Shift+D for Windows) Writing code most likely includes writing functions, this is helped by the use_r() function by adding and opening a .R file that you write your function in use_r(\"function_name\") but it will also open the files if they are already created, this makes navigating your R files much easier Note: wow-did not know this! Once you have created your function it is time to add some tests! This is done using the use_test() function, and it works much the same way as the use_r(). use_test(\"function_name\") In the creating of your functions, you might need to depend on another package, to add a function to the imports field in the DESCRIPTION file you can use the use_package() function use_package(\"dplyr\") Special cases function includes use_rcpp(), use_pipe() and use_tibble(). An vignette provides a nice piece of documentation once you have added a bunch of capabilities to your package. use_vignette(\"How to do this cool analysis\") Before every commit Before you commit, run the following commands one more time to make sure you didn\u2019t break anything. Restart R Session Cmd+Shift+F10 (Ctrl+Shift+F10 for Windows) Document Package Cmd+Shift+D (Ctrl+Shift+D for Windows) Check Package Cmd+Shift+E (Ctrl+Shift+E for Windows) update the version number with the use of use_version()","title":"Usethis Workflow for Package Development | Emil Hvitfeldt"},{"location":"Highlights/Readwise/Articles/Usethis%20Workflow%20for%20Package%20Development%20%20Emil%20Hvitfeldt/#usethis-workflow-for-package-development-emil-hvitfeldt","text":"","title":"Usethis Workflow for Package Development | Emil Hvitfeldt"},{"location":"Highlights/Readwise/Articles/Usethis%20Workflow%20for%20Package%20Development%20%20Emil%20Hvitfeldt/#metadata","text":"Author: Full Title: Usethis Workflow for Package Development | Emil Hvitfeldt Category: #Type/Highlights/Article URL: https://www.hvitfeldt.me/blog/usethis-workflow-for-package-development/","title":"Metadata"},{"location":"Highlights/Readwise/Articles/Usethis%20Workflow%20for%20Package%20Development%20%20Emil%20Hvitfeldt/#highlights","text":"The usethis promises to \u2026 it automates repetitive tasks that arise during project setup and development, both for R packages and non-package projects. Before creation Before we get started we need to make sure we have the essential packages installed to create a R package development workflow library(devtools) library(roxygen2) library(usethis) create_package(\"~/Desktop/utwf\") use_git() use_github() We can check that the package works by pressing \u201cInstall and Restart\u201d in the \u201cBuild\u201d panel. Alternatively you can use the keyboard shortcut Cmd+Shift+B (Ctrl+Shift+B for Windows). DESCRIPTION file and make sure that the Authors@R is populated correctly and modify the Title and Description fields. Next we will license the package. This can be done using one of the following functions (we will use MIT for this example) use_readme_rmd() use_travis() use_appveyor() use_coverage(type = c(\"codecov\")) use_testthat() use_spell_check() use_data_raw() use_news_md() Multiple time modifications You typical workflow will be repeating the following steps in the order that suits your flow Write some code Restart R Session Cmd+Shift+F10 (Ctrl+Shift+F10 for Windows) Build and Reload Cmd+Shift+B (Ctrl+Shift+B for Windows) Test Package Cmd+Shift+T (Ctrl+Shift+T for Windows) Check Package Cmd+Shift+E (Ctrl+Shift+E for Windows) Document Package Cmd+Shift+D (Ctrl+Shift+D for Windows) Writing code most likely includes writing functions, this is helped by the use_r() function by adding and opening a .R file that you write your function in use_r(\"function_name\") but it will also open the files if they are already created, this makes navigating your R files much easier Note: wow-did not know this! Once you have created your function it is time to add some tests! This is done using the use_test() function, and it works much the same way as the use_r(). use_test(\"function_name\") In the creating of your functions, you might need to depend on another package, to add a function to the imports field in the DESCRIPTION file you can use the use_package() function use_package(\"dplyr\") Special cases function includes use_rcpp(), use_pipe() and use_tibble(). An vignette provides a nice piece of documentation once you have added a bunch of capabilities to your package. use_vignette(\"How to do this cool analysis\") Before every commit Before you commit, run the following commands one more time to make sure you didn\u2019t break anything. Restart R Session Cmd+Shift+F10 (Ctrl+Shift+F10 for Windows) Document Package Cmd+Shift+D (Ctrl+Shift+D for Windows) Check Package Cmd+Shift+E (Ctrl+Shift+E for Windows) update the version number with the use of use_version()","title":"Highlights"},{"location":"Highlights/Readwise/Articles/Using%20Redo%20to%20Manage%20R%20Data%20Analysis%20Workflow/","text":"Using Redo to Manage R Data Analysis Workflow \u00b6 Metadata \u00b6 Author: [[karolis.koncevicius.lt]] Full Title: Using Redo to Manage R Data Analysis Workflow Category: #Type/Highlights/Article URL: http://karolis.koncevicius.lt/posts/using_redo_to_manage_r_data_analysis_workflow/ Highlights \u00b6 Real world data analysis projects are often complicated. They can involve multi-gigabyte input files, complex data cleaning procedures, week-long computations, and elaborate reports. Making changes and then tracking down the parts that need to be recomputed becomes close to impossible. In this article I describe my approach for dealing with this problem, which is based on a lesser known build automation tool - redo ( View Highlight ) Note: \u201cRebuilding target files when source files have changed\u201d on D. J. Bernstein's homepage Redo ( View Highlight ) Data science projects typically have complex pipelines involving input files, code, results, and reports. Analyses can be computationally intensive and take hours if not days or weeks to complete. Hence, data science practitioners need to be able to make changes without restarting the whole pipeline from scratch. Workflow management becomes essential and many projects turn to build automation tools like Make ( View Highlight ) Redo is a recursive build automation system that promises to be simpler and more powerful than Make. Unlike Make or its derivatives redo is tiny, recursive, and has no special syntax of its own. It allows declaring dependencies straight from within the code being executed, which enables writing scripts that \u201cknow\u201d they will need to rerun themselves whenever their input data changes all without maintaining a separate dependency configuration file. ( View Highlight ) Standard redo workflow has several '.do' files that hold the instructions for producing every output file saved during the analysis. Computation of each target is requested with a 'redo' command which is called straight from the command line. ( View Highlight ) Some explanation is necessary. The redo command simply takes an argument and tries to produce a file of the same name. In this case the argument was 'rawdata.rds' and, given the command, redo starts looking for instructions about how to produce it. The rule for storing instructions is quite simple - they are stored in a separate file with a name constructed by adding a '.do' suffix to the original argument. In other words - redo looks for instructions about producing 'rawdata.rds' file in a file named 'rawdata.rds.do'. ( View Highlight )","title":"Using Redo to Manage R Data Analysis Workflow"},{"location":"Highlights/Readwise/Articles/Using%20Redo%20to%20Manage%20R%20Data%20Analysis%20Workflow/#using-redo-to-manage-r-data-analysis-workflow","text":"","title":"Using Redo to Manage R Data Analysis Workflow"},{"location":"Highlights/Readwise/Articles/Using%20Redo%20to%20Manage%20R%20Data%20Analysis%20Workflow/#metadata","text":"Author: [[karolis.koncevicius.lt]] Full Title: Using Redo to Manage R Data Analysis Workflow Category: #Type/Highlights/Article URL: http://karolis.koncevicius.lt/posts/using_redo_to_manage_r_data_analysis_workflow/","title":"Metadata"},{"location":"Highlights/Readwise/Articles/Using%20Redo%20to%20Manage%20R%20Data%20Analysis%20Workflow/#highlights","text":"Real world data analysis projects are often complicated. They can involve multi-gigabyte input files, complex data cleaning procedures, week-long computations, and elaborate reports. Making changes and then tracking down the parts that need to be recomputed becomes close to impossible. In this article I describe my approach for dealing with this problem, which is based on a lesser known build automation tool - redo ( View Highlight ) Note: \u201cRebuilding target files when source files have changed\u201d on D. J. Bernstein's homepage Redo ( View Highlight ) Data science projects typically have complex pipelines involving input files, code, results, and reports. Analyses can be computationally intensive and take hours if not days or weeks to complete. Hence, data science practitioners need to be able to make changes without restarting the whole pipeline from scratch. Workflow management becomes essential and many projects turn to build automation tools like Make ( View Highlight ) Redo is a recursive build automation system that promises to be simpler and more powerful than Make. Unlike Make or its derivatives redo is tiny, recursive, and has no special syntax of its own. It allows declaring dependencies straight from within the code being executed, which enables writing scripts that \u201cknow\u201d they will need to rerun themselves whenever their input data changes all without maintaining a separate dependency configuration file. ( View Highlight ) Standard redo workflow has several '.do' files that hold the instructions for producing every output file saved during the analysis. Computation of each target is requested with a 'redo' command which is called straight from the command line. ( View Highlight ) Some explanation is necessary. The redo command simply takes an argument and tries to produce a file of the same name. In this case the argument was 'rawdata.rds' and, given the command, redo starts looking for instructions about how to produce it. The rule for storing instructions is quite simple - they are stored in a separate file with a name constructed by adding a '.do' suffix to the original argument. In other words - redo looks for instructions about producing 'rawdata.rds' file in a file named 'rawdata.rds.do'. ( View Highlight )","title":"Highlights"},{"location":"Highlights/Readwise/Articles/Using%20Todoist%20for%20GTD%20%20GTD%20Method/","text":"Using Todoist for GTD | GTD Method \u00b6 Metadata \u00b6 Author: Full Title: Using Todoist for GTD | GTD Method Category: #Type/Highlights/Article URL: http://gtdmethod.com/2016/using-todoist-for-gtd/ Highlights \u00b6 \u201cWork\u201d task list The main/parent \u201cWork\u201d list is where you put your basic work-related tasks that will typically take longer than 15 minutes to do. In most cases, a task will have multiple steps or \u201cnext actions\u201d (sup-tasks) that need to be done. If a task has multiple next actions that need to be done in order to complete it, then you should nest the \u201cnext actions\u201d as sub-task under the task. Work \u201cQuick Next Actions\u201d task list The work \u201cQuick Next Actions\u201d task list is only for work task (small next actions) that can be done in 15 minutes or less This list is for those moments when you find yourself with a small block of time to work on something. Like when you have 30 minutes or 15 minutes until your next meeting and you want to quickly do as many tasks as you can while you wait. These little windows of time are also a good opportunity for you to process your inboxes, review your calendar and agendas, review your project and task list system and/or catch up on your social media channels. Work \u201cWaiting\u201d project and task list The \u201cWaiting\u201d list is for projects and tasks that have been put on pause because the next action is out of your control and it involves waiting on someone or something else before moving forward. This is where you store all your work related delegated tasks. You can move tasks or projects into the \u201cWaiting\u201d list by dragging and dropping. Almost every time you delegate something to someone else, you still want to keep track of it and follow up with them at a later time to see how things are going on it, and/or if they got it all done okay. You may want to share this \u201cWaiting\u201d list with your direct team members so everyone on the team can see what\u2019s all in \u201cWaiting\u201d. It\u2019s important to stay on top of all the things you\u2019re waiting for so things don\u2019t fall through the cracks. During the Weekly Review is the best time to process all your \u201cWaiting\u201d list items and send follow up emails to the people your waiting on. You should also make a folder in your \u201cemail\u201d called \u201c@ Waiting\u201d where you save email conversations for things you\u2019re waiting on. This will make it easier for you to send follow up email and pick up on conversations where they left off. Work \u201cProjects\u201d list This is where all your work related projects will live your system. A project is essentially a large task with many sub-tasks sometimes nested 3 or 4 levels deep. In a project, your tasks will often contain \u201cnext action\u201d sub-tasks that need to be done in order to complete the parent tasks. It\u2019s okay for you to move \u201cnext action\u201d tasks of projects out of the project lists and into the another work lists like \u201cWaiting\u201d, \u201cQuick Next Actions\u201d or \u201cWork\u201d if you want to. I do it all the time. I find this a good way to prioritize next actions and get things done. When I\u2019m done with the \u201cnext action\u201d task, I\u2019ll move it back under its parent task or project before marketing it completely. What about big projects? Big projects that will take two weeks or longer to complete with multiple levels of sub-tasks should be given their very own project list nested as a sub-list under the main \u201cProjects\u201d list. Like shown in this image below. This will make it very convent to share the entire project with other team members. The Home/Personal Section You should have a \u201cHome/Personal\u201d section in your system that is only for personal items. The \u201cHome/Personal\u201d section functions just like the \u201cWork\u201d section, the only difference is the \u201cHome/Personal\u201d section is for personal tasks and projects. I\u2019m not going to explain the Home/Personal \u201cQuick Next Actions\u201d, \u201cWaiting\u201d or \u201cHome Projects\u201d lists because they function the same way as the Work \u201cQuick Next Actions\u201d, \u201cWaiting\u201d and \u201cProjects\u201d lists I just went over. The Someday Maybe Section The \u201cSomeday Maybe\u201d section in your task and project lists system functions like a \u201cBucket List\u201d. It\u2019s for \u201cTickers\u201d and things you might want to do someday, but they\u2019re things you haven\u2019t yet made the decision to move forward on. \u201cSomeday Maybe\u201d list Examples of \u201cSomeday Maybe\u201d list items: you might say \u201cI want to go on a cruise someday\u201d or \u201cSomeday, I want to learn to play the guitar\u201d. These are things you would add to your someday maybe list. Then, the next time you do a deep Weekly Review, you will briefly see these items in your \u201cSomeday Maybe\u201d list and be reminded of the things you someday want to accomplish. You may look at an item in your \u201cSomeday Maybe\u201d list and decide that is something you don\u2019t really want to do. When this happens you should delete the item to keep your list current can clean. When you decide to actually start moving forward on an item in your \u201cSomeday Maybe\u201d list, then you should move it out of your \u201cSomeday Maybe\u201d list and into one of your personal or work project/task lists. The \u201cSomeday Maybe\u201d list is really nice for helping you stay on top of your personal dreams, vision and life goals. It\u2019s okay to mix both work and personal items in your \u201cSomeday Maybe\u201d and \u201cTickler\u201d lists. I actually highly recommend you do mix them to keep things simple and speed up the gathering and Weekly Review processes. You don\u2019t have to process your \u201cSomeday Maybe\u201d list every time you do your Weekly Review. I only process my \u201cSomeday Maybe\u201d list during my monthly Deep Weekly Review, which I do at the beginning of each month. \u201cTicklers\u201d list So, what is a \u201cTicklers\u201d list or a \u201cTickler File\u201d, and why do I have it nested under the \u201cSomeday Maybe\u201d list; you might be asking\u2026 Ticklers are things you want to have popup in your face and be reminded about on a specific day or time. A lot of your \u201cSomeday Maybe\u201d items should be Tickler items because you might want to be reminded of them on a specific day or time. For example, if you decided that someday you want to go on a cruise vacation but you know you won\u2019t be able to even think about the trip until sometime next year; instead of adding this item to your \u201cSomeday Maybe\u201d list, you should create a \u201cTickler\u201d for it. That way, you won\u2019t be constantly reminded about it every month while doing your Deep Weekly Review, when there\u2019s really nothing you can do about it until next year. I love using a \u201cTicklers\u201d list. Tickets to a concert or event is another good example of a tickler item. Maybe you heard about a concert you might want to attend but the show\u2019s still 4 months away and you want to wait and decided a couple weeks before the event. Ticklers are great for things your want to sleep on for a while before making up your mind. A tickler item is simply a task with a scheduled reminder and/or due date. You should have your \u201cTickler\u201d reminder notifications set to show up in your email rather than popup as a notification on your screen or mobile phone. Because they might popup on your screen at an inconvenient time when you can\u2019t properly process them. It\u2019s much easier to process your ticklers without letting them fall through the cracks when they show up in your email, but you can have ticklers set to notify you via both email and mobile notifications if you want to. When a tickler item reminder shows up in your email, you need to process it and decided if you want to move forward on it, or not. If you don\u2019t want to move forward on it at all, then just mark it done or delete it from your list. If you do want to move forward on it, then move it into one of you work or personal project/task lists. If you still want to wait and decide later, then just keep the tickler item in your \u201cTicklers\u201d list but be sure to change the reminder/due date to the new day or time you want to again be reminded of it. You hardly ever need to process your ticklers or even look at your \u201cTicklers\u201d list. Just drop your ticklers in the \u201cTicklers\u201d list and let them work for you. I only process my Ticklers about 3 or 4 times per year. The reason you would process your \u201cTicklers\u201d list, is to see if you\u2019ve missed anything or changed your mind about anything. When processing your \u201cTicklers\u201d list, you should make sure everything has a good reminder/due date and you should update any items with reminders or due dates that have already passed. He recently released a book I look forward to reading called \u201cYour Digital Life: Everything you need to know to get your life organized and put technology to work for you","title":"Using Todoist for GTD | GTD Method"},{"location":"Highlights/Readwise/Articles/Using%20Todoist%20for%20GTD%20%20GTD%20Method/#using-todoist-for-gtd-gtd-method","text":"","title":"Using Todoist for GTD | GTD Method"},{"location":"Highlights/Readwise/Articles/Using%20Todoist%20for%20GTD%20%20GTD%20Method/#metadata","text":"Author: Full Title: Using Todoist for GTD | GTD Method Category: #Type/Highlights/Article URL: http://gtdmethod.com/2016/using-todoist-for-gtd/","title":"Metadata"},{"location":"Highlights/Readwise/Articles/Using%20Todoist%20for%20GTD%20%20GTD%20Method/#highlights","text":"\u201cWork\u201d task list The main/parent \u201cWork\u201d list is where you put your basic work-related tasks that will typically take longer than 15 minutes to do. In most cases, a task will have multiple steps or \u201cnext actions\u201d (sup-tasks) that need to be done. If a task has multiple next actions that need to be done in order to complete it, then you should nest the \u201cnext actions\u201d as sub-task under the task. Work \u201cQuick Next Actions\u201d task list The work \u201cQuick Next Actions\u201d task list is only for work task (small next actions) that can be done in 15 minutes or less This list is for those moments when you find yourself with a small block of time to work on something. Like when you have 30 minutes or 15 minutes until your next meeting and you want to quickly do as many tasks as you can while you wait. These little windows of time are also a good opportunity for you to process your inboxes, review your calendar and agendas, review your project and task list system and/or catch up on your social media channels. Work \u201cWaiting\u201d project and task list The \u201cWaiting\u201d list is for projects and tasks that have been put on pause because the next action is out of your control and it involves waiting on someone or something else before moving forward. This is where you store all your work related delegated tasks. You can move tasks or projects into the \u201cWaiting\u201d list by dragging and dropping. Almost every time you delegate something to someone else, you still want to keep track of it and follow up with them at a later time to see how things are going on it, and/or if they got it all done okay. You may want to share this \u201cWaiting\u201d list with your direct team members so everyone on the team can see what\u2019s all in \u201cWaiting\u201d. It\u2019s important to stay on top of all the things you\u2019re waiting for so things don\u2019t fall through the cracks. During the Weekly Review is the best time to process all your \u201cWaiting\u201d list items and send follow up emails to the people your waiting on. You should also make a folder in your \u201cemail\u201d called \u201c@ Waiting\u201d where you save email conversations for things you\u2019re waiting on. This will make it easier for you to send follow up email and pick up on conversations where they left off. Work \u201cProjects\u201d list This is where all your work related projects will live your system. A project is essentially a large task with many sub-tasks sometimes nested 3 or 4 levels deep. In a project, your tasks will often contain \u201cnext action\u201d sub-tasks that need to be done in order to complete the parent tasks. It\u2019s okay for you to move \u201cnext action\u201d tasks of projects out of the project lists and into the another work lists like \u201cWaiting\u201d, \u201cQuick Next Actions\u201d or \u201cWork\u201d if you want to. I do it all the time. I find this a good way to prioritize next actions and get things done. When I\u2019m done with the \u201cnext action\u201d task, I\u2019ll move it back under its parent task or project before marketing it completely. What about big projects? Big projects that will take two weeks or longer to complete with multiple levels of sub-tasks should be given their very own project list nested as a sub-list under the main \u201cProjects\u201d list. Like shown in this image below. This will make it very convent to share the entire project with other team members. The Home/Personal Section You should have a \u201cHome/Personal\u201d section in your system that is only for personal items. The \u201cHome/Personal\u201d section functions just like the \u201cWork\u201d section, the only difference is the \u201cHome/Personal\u201d section is for personal tasks and projects. I\u2019m not going to explain the Home/Personal \u201cQuick Next Actions\u201d, \u201cWaiting\u201d or \u201cHome Projects\u201d lists because they function the same way as the Work \u201cQuick Next Actions\u201d, \u201cWaiting\u201d and \u201cProjects\u201d lists I just went over. The Someday Maybe Section The \u201cSomeday Maybe\u201d section in your task and project lists system functions like a \u201cBucket List\u201d. It\u2019s for \u201cTickers\u201d and things you might want to do someday, but they\u2019re things you haven\u2019t yet made the decision to move forward on. \u201cSomeday Maybe\u201d list Examples of \u201cSomeday Maybe\u201d list items: you might say \u201cI want to go on a cruise someday\u201d or \u201cSomeday, I want to learn to play the guitar\u201d. These are things you would add to your someday maybe list. Then, the next time you do a deep Weekly Review, you will briefly see these items in your \u201cSomeday Maybe\u201d list and be reminded of the things you someday want to accomplish. You may look at an item in your \u201cSomeday Maybe\u201d list and decide that is something you don\u2019t really want to do. When this happens you should delete the item to keep your list current can clean. When you decide to actually start moving forward on an item in your \u201cSomeday Maybe\u201d list, then you should move it out of your \u201cSomeday Maybe\u201d list and into one of your personal or work project/task lists. The \u201cSomeday Maybe\u201d list is really nice for helping you stay on top of your personal dreams, vision and life goals. It\u2019s okay to mix both work and personal items in your \u201cSomeday Maybe\u201d and \u201cTickler\u201d lists. I actually highly recommend you do mix them to keep things simple and speed up the gathering and Weekly Review processes. You don\u2019t have to process your \u201cSomeday Maybe\u201d list every time you do your Weekly Review. I only process my \u201cSomeday Maybe\u201d list during my monthly Deep Weekly Review, which I do at the beginning of each month. \u201cTicklers\u201d list So, what is a \u201cTicklers\u201d list or a \u201cTickler File\u201d, and why do I have it nested under the \u201cSomeday Maybe\u201d list; you might be asking\u2026 Ticklers are things you want to have popup in your face and be reminded about on a specific day or time. A lot of your \u201cSomeday Maybe\u201d items should be Tickler items because you might want to be reminded of them on a specific day or time. For example, if you decided that someday you want to go on a cruise vacation but you know you won\u2019t be able to even think about the trip until sometime next year; instead of adding this item to your \u201cSomeday Maybe\u201d list, you should create a \u201cTickler\u201d for it. That way, you won\u2019t be constantly reminded about it every month while doing your Deep Weekly Review, when there\u2019s really nothing you can do about it until next year. I love using a \u201cTicklers\u201d list. Tickets to a concert or event is another good example of a tickler item. Maybe you heard about a concert you might want to attend but the show\u2019s still 4 months away and you want to wait and decided a couple weeks before the event. Ticklers are great for things your want to sleep on for a while before making up your mind. A tickler item is simply a task with a scheduled reminder and/or due date. You should have your \u201cTickler\u201d reminder notifications set to show up in your email rather than popup as a notification on your screen or mobile phone. Because they might popup on your screen at an inconvenient time when you can\u2019t properly process them. It\u2019s much easier to process your ticklers without letting them fall through the cracks when they show up in your email, but you can have ticklers set to notify you via both email and mobile notifications if you want to. When a tickler item reminder shows up in your email, you need to process it and decided if you want to move forward on it, or not. If you don\u2019t want to move forward on it at all, then just mark it done or delete it from your list. If you do want to move forward on it, then move it into one of you work or personal project/task lists. If you still want to wait and decide later, then just keep the tickler item in your \u201cTicklers\u201d list but be sure to change the reminder/due date to the new day or time you want to again be reminded of it. You hardly ever need to process your ticklers or even look at your \u201cTicklers\u201d list. Just drop your ticklers in the \u201cTicklers\u201d list and let them work for you. I only process my Ticklers about 3 or 4 times per year. The reason you would process your \u201cTicklers\u201d list, is to see if you\u2019ve missed anything or changed your mind about anything. When processing your \u201cTicklers\u201d list, you should make sure everything has a good reminder/due date and you should update any items with reminders or due dates that have already passed. He recently released a book I look forward to reading called \u201cYour Digital Life: Everything you need to know to get your life organized and put technology to work for you","title":"Highlights"},{"location":"Highlights/Readwise/Articles/Variable%20and%20Value%20Labels%20Support%20in%20Base%20R%20and%20Other%20Packages/","text":"Variable and Value Labels Support in Base R and Other Packages \u00b6 Metadata \u00b6 Author: Full Title: Variable and Value Labels Support in Base R and Other Packages Category: #Type/Highlights/Article URL: https://cran.r-project.org/web/packages/expss/vignettes/labels-support.html Highlights \u00b6 Variable label is human readable description of the variable. R supports rather long variable names and these names can contain even spaces and punctuation but short variables names make coding easier. Variable label can give a nice, long description of variable. With this description it is easier to remember what those variable names refer to. Value labels are similar to variable labels, but value labels are descriptions of the values a variable can take. Labeling values means we don\u2019t have to remember if 1=Extremely poor and 7=Excellent or vice-versa. We can easily get dataset description and variables summary with info function. Note: expss R package - info function","title":"Variable and Value Labels Support in Base R and Other Packages"},{"location":"Highlights/Readwise/Articles/Variable%20and%20Value%20Labels%20Support%20in%20Base%20R%20and%20Other%20Packages/#variable-and-value-labels-support-in-base-r-and-other-packages","text":"","title":"Variable and Value Labels Support in Base R and Other Packages"},{"location":"Highlights/Readwise/Articles/Variable%20and%20Value%20Labels%20Support%20in%20Base%20R%20and%20Other%20Packages/#metadata","text":"Author: Full Title: Variable and Value Labels Support in Base R and Other Packages Category: #Type/Highlights/Article URL: https://cran.r-project.org/web/packages/expss/vignettes/labels-support.html","title":"Metadata"},{"location":"Highlights/Readwise/Articles/Variable%20and%20Value%20Labels%20Support%20in%20Base%20R%20and%20Other%20Packages/#highlights","text":"Variable label is human readable description of the variable. R supports rather long variable names and these names can contain even spaces and punctuation but short variables names make coding easier. Variable label can give a nice, long description of variable. With this description it is easier to remember what those variable names refer to. Value labels are similar to variable labels, but value labels are descriptions of the values a variable can take. Labeling values means we don\u2019t have to remember if 1=Extremely poor and 7=Excellent or vice-versa. We can easily get dataset description and variables summary with info function. Note: expss R package - info function","title":"Highlights"},{"location":"Highlights/Readwise/Articles/Want%20to%20Get%20Organized%20Start%20With%20the%20Mind%20Sweep/","text":"Want to Get Organized? Start With the Mind Sweep \u00b6 Metadata \u00b6 Author: [[Francisco S\u00e1ez]] Full Title: Want to Get Organized? Start With the Mind Sweep Category: #Type/Highlights/Article URL: https://facilethings.com/blog/en/the-mind-sweep Highlights \u00b6 The basic principle is that you must know how your world is right now, how the map in which you move looks like, so that you can make a positive commitment to it. If you don\u2019t do something constructive with all these things that steal your attention, they will continue to be there, maliciously consuming part of your consciousness. Tags: [[favorite]] David Allen summarizes this collecting phase in a very simple way: \u201cIf it\u2019s on your mind, write it down or record it somehow in a concrete way. It doesn\u2019t matter how you capture these thoughts, as long as you get them out of your head and have them all in some way easily accessible for review.\u201d Tags: [[favorite]] when you decide that enough is enough, that it\u2019s time to start organizing your stuff\u2014, you should perform a complete (or nearly complete) capture of everything that exists in your mind. This is called The Mind Sweep in GTD, i.e. a overall scan of everything holding your attention right now. It consists in identifying anything concerning your work or your personal life which you consider should be different, and put it all in one single place, which we can call the in-basket. Professional stuff: Projects started, not completed. Projects that need to be started. Commitments/promises to others (boss, partners, colleagues, subordinates, customers, organizations, professionals\u2026) Communications to make/get (phone calls, e-mails, letters, memos, etc.) Writing to finish/submit (reports, proposals, articles, promotional materials, instructions, etc.) Meetings that need to be set. Decisions that have to be made. Who needs to know? Significant read/review. Financial stuff (budgets, forecasts, statistics, credit line, cash flow, etc.). Projects formal planning (goals, targets, objectives). Travel. Banks. Administration (legal issues, insurance, procedures, etc.) Customers. Marketing. Promotion. Sales. Systems (computers, phones, office equipment). Supplies. Waiting for\u2026 information, delegated tasks, replies, petty cash, ordered items, decisions of others, etc. Professional development (training, things to learn, skills to practice.) Research. Personal stuff: Projects started, not completed. Projects that need to be started. Commitments/promises to others (spouse, children, family, friends.) Communications to make/get with family and friends. Upcoming events (birthdays, anniversaries, weddings, travel, social events, cultural events, sporting events, etc.) Things to do (places to go, people to meet.) Administration (bills, banks, investments, loans, taxes, insurance, legal affairs.) Waiting for\u2026 orders, repair, loaned items, etc. Home/household (plumbing, electricity, decoration, furniture, etc.) Computers (software, hardware, connections, internet.) TV, VCR. Music, CDs. Cameras, film. Phones. Sports equipment. Closets/clothes. Garage/storage. Vehicle repair/maintenance. Pets. Health care. Hobbies (books, music, movies.) Errands (drugstore, market, bank, stationer, etc.) Community (neighborhood, schools, local government).","title":"Want to Get Organized? Start With the Mind Sweep"},{"location":"Highlights/Readwise/Articles/Want%20to%20Get%20Organized%20Start%20With%20the%20Mind%20Sweep/#want-to-get-organized-start-with-the-mind-sweep","text":"","title":"Want to Get Organized? Start With the Mind Sweep"},{"location":"Highlights/Readwise/Articles/Want%20to%20Get%20Organized%20Start%20With%20the%20Mind%20Sweep/#metadata","text":"Author: [[Francisco S\u00e1ez]] Full Title: Want to Get Organized? Start With the Mind Sweep Category: #Type/Highlights/Article URL: https://facilethings.com/blog/en/the-mind-sweep","title":"Metadata"},{"location":"Highlights/Readwise/Articles/Want%20to%20Get%20Organized%20Start%20With%20the%20Mind%20Sweep/#highlights","text":"The basic principle is that you must know how your world is right now, how the map in which you move looks like, so that you can make a positive commitment to it. If you don\u2019t do something constructive with all these things that steal your attention, they will continue to be there, maliciously consuming part of your consciousness. Tags: [[favorite]] David Allen summarizes this collecting phase in a very simple way: \u201cIf it\u2019s on your mind, write it down or record it somehow in a concrete way. It doesn\u2019t matter how you capture these thoughts, as long as you get them out of your head and have them all in some way easily accessible for review.\u201d Tags: [[favorite]] when you decide that enough is enough, that it\u2019s time to start organizing your stuff\u2014, you should perform a complete (or nearly complete) capture of everything that exists in your mind. This is called The Mind Sweep in GTD, i.e. a overall scan of everything holding your attention right now. It consists in identifying anything concerning your work or your personal life which you consider should be different, and put it all in one single place, which we can call the in-basket. Professional stuff: Projects started, not completed. Projects that need to be started. Commitments/promises to others (boss, partners, colleagues, subordinates, customers, organizations, professionals\u2026) Communications to make/get (phone calls, e-mails, letters, memos, etc.) Writing to finish/submit (reports, proposals, articles, promotional materials, instructions, etc.) Meetings that need to be set. Decisions that have to be made. Who needs to know? Significant read/review. Financial stuff (budgets, forecasts, statistics, credit line, cash flow, etc.). Projects formal planning (goals, targets, objectives). Travel. Banks. Administration (legal issues, insurance, procedures, etc.) Customers. Marketing. Promotion. Sales. Systems (computers, phones, office equipment). Supplies. Waiting for\u2026 information, delegated tasks, replies, petty cash, ordered items, decisions of others, etc. Professional development (training, things to learn, skills to practice.) Research. Personal stuff: Projects started, not completed. Projects that need to be started. Commitments/promises to others (spouse, children, family, friends.) Communications to make/get with family and friends. Upcoming events (birthdays, anniversaries, weddings, travel, social events, cultural events, sporting events, etc.) Things to do (places to go, people to meet.) Administration (bills, banks, investments, loans, taxes, insurance, legal affairs.) Waiting for\u2026 orders, repair, loaned items, etc. Home/household (plumbing, electricity, decoration, furniture, etc.) Computers (software, hardware, connections, internet.) TV, VCR. Music, CDs. Cameras, film. Phones. Sports equipment. Closets/clothes. Garage/storage. Vehicle repair/maintenance. Pets. Health care. Hobbies (books, music, movies.) Errands (drugstore, market, bank, stationer, etc.) Community (neighborhood, schools, local government).","title":"Highlights"},{"location":"Highlights/Readwise/Articles/Weekly%20Reset%20System%20for%20Increased%20Productivity%20%20Mystigal/","text":"Weekly Reset System for Increased Productivity | Mystigal \u00b6 Metadata \u00b6 Author: Full Title: Weekly Reset System for Increased Productivity | Mystigal Category: #Type/Highlights/Article URL: http://mystigal.com/weekly-reset-system-for-increased-productivity/ Highlights \u00b6 Why Should You have a Weekly Reset System? A weekly reset routine -or a \u2018GYST (Get your Sh*t Together) Routine\u201d as Kalyn Nicholson calls it- is important for many reasons. Stay on track with your chores Stay focused on your Goals Pause to understand the situation in a different perspective Invest time in yourself to encourage self-love Hustle in a systematic manner to get maximum results The Reset Routine This routine is a basic 4 step routine that makes you feel energized at the end of the day. I usually perform this entire routine on a Sunday to start off my week on a positive note. I am sharing the framework and not the exact routine so that you can create one for yourself as well. Catch-up Weekly rituals such as laundry, car wash, bathroom cleaning, etc. Pending or postponed tasks such as paying the phone bill, getting a new notebook, booking a flight ticket, etc. Making calls to loved ones, taking appointments, etc.","title":"Weekly Reset System for Increased Productivity | Mystigal"},{"location":"Highlights/Readwise/Articles/Weekly%20Reset%20System%20for%20Increased%20Productivity%20%20Mystigal/#weekly-reset-system-for-increased-productivity-mystigal","text":"","title":"Weekly Reset System for Increased Productivity | Mystigal"},{"location":"Highlights/Readwise/Articles/Weekly%20Reset%20System%20for%20Increased%20Productivity%20%20Mystigal/#metadata","text":"Author: Full Title: Weekly Reset System for Increased Productivity | Mystigal Category: #Type/Highlights/Article URL: http://mystigal.com/weekly-reset-system-for-increased-productivity/","title":"Metadata"},{"location":"Highlights/Readwise/Articles/Weekly%20Reset%20System%20for%20Increased%20Productivity%20%20Mystigal/#highlights","text":"Why Should You have a Weekly Reset System? A weekly reset routine -or a \u2018GYST (Get your Sh*t Together) Routine\u201d as Kalyn Nicholson calls it- is important for many reasons. Stay on track with your chores Stay focused on your Goals Pause to understand the situation in a different perspective Invest time in yourself to encourage self-love Hustle in a systematic manner to get maximum results The Reset Routine This routine is a basic 4 step routine that makes you feel energized at the end of the day. I usually perform this entire routine on a Sunday to start off my week on a positive note. I am sharing the framework and not the exact routine so that you can create one for yourself as well. Catch-up Weekly rituals such as laundry, car wash, bathroom cleaning, etc. Pending or postponed tasks such as paying the phone bill, getting a new notebook, booking a flight ticket, etc. Making calls to loved ones, taking appointments, etc.","title":"Highlights"},{"location":"Highlights/Readwise/Articles/Weekly%20Review%20Checklist%20An%20Insanely%20Productive%20Week%20in%2014%20Steps%20%20Process%20Street%20%20Checklist%2C%20Workflow%20and%20SOP%20Software/","text":"Weekly Review Checklist: An Insanely Productive Week in 14 Steps | Process Street | Checklist, Workflow and SOP Software \u00b6 Metadata \u00b6 Author: Full Title: Weekly Review Checklist: An Insanely Productive Week in 14 Steps | Process Street | Checklist, Workflow and SOP Software Category: #Type/Highlights/Article URL: https://www.process.st/weekly-review/ Highlights \u00b6 Reset your life to zero Do a reset on your life by processing all your inboxes. This means you can start the next week fresh, and not have any tasks hanging over that could be processed and actioned. Email inbox: You don\u2019t want to be going through a thick wad of emails first thing Monday. Get your emails down to zero by processing any action items into your inbox, replying to anything that needs a response, and archiving everything that doesn\u2019t need action (or has already been added to your to-do list or replied to). The best app for lightning-fast inbox processing is Inbox by Gmail, which you can read more about in my total guide to email productivity. Evernote inbox: If you\u2019ve set Evernote up properly, you should have an inbox set up as the default location for all new notes. If you\u2019re anything like me, it\u2019ll be a bunch of Untitled Quick Notes without tags. Tag them, title them, move them to the right notebook. To-do list inbox: Every to-do list has two overarching sections: an inbox, and a section for processed items, with priority and tags. Get everything from your inbox into the 2nd section by moving it into the right project, prioritizing it and tagging it properly. A quick note on inbox processing: depending on your line of work, you inbox could be in a few different places. Anywhere you fill with unstructured content over the course of the week is an inbox. For me, that\u2019s Pocket, Evernote and Inbox by Gmail. If you have one, bring up your weekly goal list. It\u2019s too much to go over in this quick-start guide, but I\u2019d highly suggest reading this blog post on the topic. Next, bring up your done list. Depending on what kind of checklist app you use, there\u2019ll be different ways to do this. I use TaskPaper, and that pushes all tasks marked @done to a new category at the bottom of the page called \u2018Archive\u2019. You can get the same effect on Wunderlist or Todoist by tapping \u2018Show completed tasks\u2019, for example. Finally for this bit, you need to collect your loose papers, items from various apps and general miscellaneous material. Process them into your to-do list, or archive them if they\u2019re not actionable. For me, the only applicable content left over here is from my paper notebook that I capture ideas and to-do list items in while I\u2019m waiting. Update your lists After processing from your various sources into your inbox, make sure you\u2019ve got everything you\u2019ve already done checked off. Mark anything \u2018waiting\u2019 if you\u2019re waiting on someone else\u2019s action, and write next actions for bigger inbox tasks before processing them into the correct project. Next, process your upcoming tasks. Check your calendar, and see if anything you\u2019ve got upcoming for the next month needs next actions. Process these into your to-do list and make sure the calendar event times are still correct. It\u2019s time to follow up and find out the status on tasks you\u2019re waiting for other people\u2019s actions on. Pester them if you have to. It\u2019s a terrible feeling to have a to-do list full of items tagged \u2018waiting\u2019 and going nowhere. Looking at your weekly goal list, now add next actions for every goal to make sure you\u2019re going to stay in the swing of making progress. Update these projects with any new material you\u2019ve gathered in the previous week and get everything linked together. Check back through and make sure you\u2019ve actually completed the necessary steps in your weekly process checklists and done list. Let\u2019s face it, the further away these get, the less likely you are to go back and address and pending issues, so get it over and done with now. Look to the future It\u2019s so easy to mark a task as \u2018someday\u2019, but what happens when you have to go and prioritize it? In my case, \u2018someday\u2019 can be as good as \u2018never\u2019. Snap yourself out of it and give your \u2018someday\u2019 tasks a priority, however low it might be. A week of hard work can mean you had too much to do for a good old capture session (also known charmingly as a brain dump). Take this chance to capture new ideas, projects, risks, and schemes to your inbox! Now you\u2019ve gone through a weekly review, and worked with your own systems for the past hour or so, you\u2019ve got to ask yourself an important question: was this process optimized? If the inbox processing stage took you forever, it could be because you\u2019re storing material in too many different apps. A quick solution is to zap all incoming content to one place using any number of different Zapier integrations. Are you taking too long getting items from your paper notebook to your digital one? How about using Evernote\u2019s scanner app or OneNote\u2019s amazing image-to-text feature to quickly rip handwriting into your computer.","title":"Weekly Review Checklist: An Insanely Productive Week in 14 Steps | Process Street | Checklist, Workflow and SOP Software"},{"location":"Highlights/Readwise/Articles/Weekly%20Review%20Checklist%20An%20Insanely%20Productive%20Week%20in%2014%20Steps%20%20Process%20Street%20%20Checklist%2C%20Workflow%20and%20SOP%20Software/#weekly-review-checklist-an-insanely-productive-week-in-14-steps-process-street-checklist-workflow-and-sop-software","text":"","title":"Weekly Review Checklist: An Insanely Productive Week in 14 Steps | Process Street | Checklist, Workflow and SOP Software"},{"location":"Highlights/Readwise/Articles/Weekly%20Review%20Checklist%20An%20Insanely%20Productive%20Week%20in%2014%20Steps%20%20Process%20Street%20%20Checklist%2C%20Workflow%20and%20SOP%20Software/#metadata","text":"Author: Full Title: Weekly Review Checklist: An Insanely Productive Week in 14 Steps | Process Street | Checklist, Workflow and SOP Software Category: #Type/Highlights/Article URL: https://www.process.st/weekly-review/","title":"Metadata"},{"location":"Highlights/Readwise/Articles/Weekly%20Review%20Checklist%20An%20Insanely%20Productive%20Week%20in%2014%20Steps%20%20Process%20Street%20%20Checklist%2C%20Workflow%20and%20SOP%20Software/#highlights","text":"Reset your life to zero Do a reset on your life by processing all your inboxes. This means you can start the next week fresh, and not have any tasks hanging over that could be processed and actioned. Email inbox: You don\u2019t want to be going through a thick wad of emails first thing Monday. Get your emails down to zero by processing any action items into your inbox, replying to anything that needs a response, and archiving everything that doesn\u2019t need action (or has already been added to your to-do list or replied to). The best app for lightning-fast inbox processing is Inbox by Gmail, which you can read more about in my total guide to email productivity. Evernote inbox: If you\u2019ve set Evernote up properly, you should have an inbox set up as the default location for all new notes. If you\u2019re anything like me, it\u2019ll be a bunch of Untitled Quick Notes without tags. Tag them, title them, move them to the right notebook. To-do list inbox: Every to-do list has two overarching sections: an inbox, and a section for processed items, with priority and tags. Get everything from your inbox into the 2nd section by moving it into the right project, prioritizing it and tagging it properly. A quick note on inbox processing: depending on your line of work, you inbox could be in a few different places. Anywhere you fill with unstructured content over the course of the week is an inbox. For me, that\u2019s Pocket, Evernote and Inbox by Gmail. If you have one, bring up your weekly goal list. It\u2019s too much to go over in this quick-start guide, but I\u2019d highly suggest reading this blog post on the topic. Next, bring up your done list. Depending on what kind of checklist app you use, there\u2019ll be different ways to do this. I use TaskPaper, and that pushes all tasks marked @done to a new category at the bottom of the page called \u2018Archive\u2019. You can get the same effect on Wunderlist or Todoist by tapping \u2018Show completed tasks\u2019, for example. Finally for this bit, you need to collect your loose papers, items from various apps and general miscellaneous material. Process them into your to-do list, or archive them if they\u2019re not actionable. For me, the only applicable content left over here is from my paper notebook that I capture ideas and to-do list items in while I\u2019m waiting. Update your lists After processing from your various sources into your inbox, make sure you\u2019ve got everything you\u2019ve already done checked off. Mark anything \u2018waiting\u2019 if you\u2019re waiting on someone else\u2019s action, and write next actions for bigger inbox tasks before processing them into the correct project. Next, process your upcoming tasks. Check your calendar, and see if anything you\u2019ve got upcoming for the next month needs next actions. Process these into your to-do list and make sure the calendar event times are still correct. It\u2019s time to follow up and find out the status on tasks you\u2019re waiting for other people\u2019s actions on. Pester them if you have to. It\u2019s a terrible feeling to have a to-do list full of items tagged \u2018waiting\u2019 and going nowhere. Looking at your weekly goal list, now add next actions for every goal to make sure you\u2019re going to stay in the swing of making progress. Update these projects with any new material you\u2019ve gathered in the previous week and get everything linked together. Check back through and make sure you\u2019ve actually completed the necessary steps in your weekly process checklists and done list. Let\u2019s face it, the further away these get, the less likely you are to go back and address and pending issues, so get it over and done with now. Look to the future It\u2019s so easy to mark a task as \u2018someday\u2019, but what happens when you have to go and prioritize it? In my case, \u2018someday\u2019 can be as good as \u2018never\u2019. Snap yourself out of it and give your \u2018someday\u2019 tasks a priority, however low it might be. A week of hard work can mean you had too much to do for a good old capture session (also known charmingly as a brain dump). Take this chance to capture new ideas, projects, risks, and schemes to your inbox! Now you\u2019ve gone through a weekly review, and worked with your own systems for the past hour or so, you\u2019ve got to ask yourself an important question: was this process optimized? If the inbox processing stage took you forever, it could be because you\u2019re storing material in too many different apps. A quick solution is to zap all incoming content to one place using any number of different Zapier integrations. Are you taking too long getting items from your paper notebook to your digital one? How about using Evernote\u2019s scanner app or OneNote\u2019s amazing image-to-text feature to quickly rip handwriting into your computer.","title":"Highlights"},{"location":"Highlights/Readwise/Articles/What%20I%27ve%20Learnt%20About%20Making%20an%20R%20Package/","text":"What I've Learnt About Making an R Package \u00b6 Metadata \u00b6 Author: Full Title: What I've Learnt About Making an R Package Category: #Type/Highlights/Article URL: https://mdneuzerling.com/post/what-ive-learnt-about-making-an-r-package/ Highlights \u00b6 General hints There\u2019s a difference between attaching and loading a package. Attaching a package also loads it, and this is what happens when you run the library function. I\u2019ve heard it claimed before that it\u2019s inefficient to use double colons like readr::read_csv() because R \u201cloads the package every time\u201d. That\u2019s not true. R loads the package on the first use of a double colon function, but doesn\u2019t attach it. For every call afterwards, that package has already been loaded. Note: Document this! Running devtools::check() (as opposed to R CMD CHECK) will automatically run devtools::document() before the package check if devtools can see that you\u2019re using Roxygen. This isn\u2019t always obvious for a brand new package, so I found that I had to run devtools::document() initially. After that first command, however, devtools::check() started documenting. Use the @keywords internal Roxygen tag for documented internal functions, that is, functions without an @export tag. This partially hides the documentation from regular users, while still allowing interested users and developers to access it. If you want to skip the portion of a package check where R connects to CRAN (because you\u2019re behind a proxy or you don\u2019t have an internet connection) run rcmdcheck::rcmdcheck(repos = FALSE). This lets you continue package development on planes. Tags: [[favorite]] When you use a function like: \"mutate(mtcars, kph = 0.425144 * mpg)\", the package check will complain because it\u2019s expecting to see mtcars and mpg as global variables. Add \"utils::globalVariables(c(\"mtcars\", \"mpg\"))\" to a globals.R file in my R folder. If there\u2019s a chance someone else will be looking at your source code, you should add a (non-Roxygen) comment explaining why so they don\u2019t get confused. Tags: [[favorite]] Note: Use utils::globalVariables(c(\"var1\",...)) for assigning global variables to avoid check notes during R package development. If you\u2019re creating a custom package for a specific data set, I recommend creating a download_data function that creates the inst/extdata folder and downloads the external data only if it doesn\u2019t already exist. You can add inst/extdata to your .gitignore. This means that you can host your source code but not your data (which may be quite large) on git, without having to worry about doing multiple redundant downloads. This will also let you delete your R Markdown cache without deleting your local data. Imports\u201d in the DESCRIPTION file is not the same as \u201cImports\u201d in the NAMESPACE file. The DESCRIPTION file doesn\u2019t really \u201cimport\u201d anything in the namespace sense \u2014 it just tells R that those packages should be installed. Use a double colon like dplyr::mutate. This is the preferred option since it doesn\u2019t change the namespace of your package. Add a Roxygen tag @ImportFrom, such as #' @ImportFrom dplyr mutate. This adds the mutate function to the namespace available to your package functions without anything else from the dplyr package. This allows you to use mutate by itself in your package functions. Because this only adds a single function at a time, you\u2019re unlikely to encounter a namespace collision (two objects with the same name in the namespace). Add a Roxygen tag @Import, such as #' @Import dplyr. This adds every function in the dplyr package to the namespace available to your package functions. This isn\u2019t recommended because it makes it very easy to run into a namespace collision. Something Hadley said: it\u2019s okay to do this if you\u2019re running a package that\u2019s been explicitly designed to be imported in this manner. For example, tidyverse functions import the entire rlang namespace. It\u2019s also more acceptable to do this if you\u2019re only importing the entire namespace of a single package, since that\u2019s unlikely to lead to conflicts. You can use the same @Import or @ImportFrom multiple times, and Roxygen will only add it once to the NAMESPACE. I like to keep my dependencies close to the functions that use them, so if I need a pipe in many functions I\u2019ll put @ImportFrom magrittr %>% in each file. That\u2019s just my personal preference, though. Once you\u2019ve added either an @ImportFrom or @Import tag, you need to devtools::document() for the change to take effect. This will add the relevant lines to your NAMESPACE file. devtools::check() will usually do this for you. This often catches me out if I change the NAMESPACE through a Roxygen tag and then re-install the package without running devtools::check(). I get frustrated that my changes aren\u2019t taking effect, until I realise my mistake! You do need to explicitly refer to functions and objects from the utils and stats packages, eg. stats::var(c(2, 3, 3, 3, 4)), and put them in your DESCRIPTION file. Tags: [[favorite]] Packages used in your vignettes that are not used in your package itself should go in the \u201cSuggests\u201d portion of your namespace, eg. usethis::use_package(\"ggplot2\", type = \"Suggests\"). Suppose that one of your dependencies uses an S3 method for a generic. For example, the randomForest package has an (unexported) predict.randomForest S3 method that allows you to make predictions with new data using the predict generic. How do you deal with that dependency without importing the whole randomForest namespace? I created a quick package to test this out. You can find it on GitHub. The option I went with here is to call on the internal function directly: randomForest:::predict.randomForest(). This works, but you\u2019ll get a note because you\u2019re generally not supposed to use ::: in functions. If you\u2019re submitting to CRAN, this could be an issue. Similarly, @importMethodsFrom randomForest predict.randomForest seems to work, even though R throws a warning that it couldn\u2019t find the method.","title":"What I've Learnt About Making an R Package"},{"location":"Highlights/Readwise/Articles/What%20I%27ve%20Learnt%20About%20Making%20an%20R%20Package/#what-ive-learnt-about-making-an-r-package","text":"","title":"What I've Learnt About Making an R Package"},{"location":"Highlights/Readwise/Articles/What%20I%27ve%20Learnt%20About%20Making%20an%20R%20Package/#metadata","text":"Author: Full Title: What I've Learnt About Making an R Package Category: #Type/Highlights/Article URL: https://mdneuzerling.com/post/what-ive-learnt-about-making-an-r-package/","title":"Metadata"},{"location":"Highlights/Readwise/Articles/What%20I%27ve%20Learnt%20About%20Making%20an%20R%20Package/#highlights","text":"General hints There\u2019s a difference between attaching and loading a package. Attaching a package also loads it, and this is what happens when you run the library function. I\u2019ve heard it claimed before that it\u2019s inefficient to use double colons like readr::read_csv() because R \u201cloads the package every time\u201d. That\u2019s not true. R loads the package on the first use of a double colon function, but doesn\u2019t attach it. For every call afterwards, that package has already been loaded. Note: Document this! Running devtools::check() (as opposed to R CMD CHECK) will automatically run devtools::document() before the package check if devtools can see that you\u2019re using Roxygen. This isn\u2019t always obvious for a brand new package, so I found that I had to run devtools::document() initially. After that first command, however, devtools::check() started documenting. Use the @keywords internal Roxygen tag for documented internal functions, that is, functions without an @export tag. This partially hides the documentation from regular users, while still allowing interested users and developers to access it. If you want to skip the portion of a package check where R connects to CRAN (because you\u2019re behind a proxy or you don\u2019t have an internet connection) run rcmdcheck::rcmdcheck(repos = FALSE). This lets you continue package development on planes. Tags: [[favorite]] When you use a function like: \"mutate(mtcars, kph = 0.425144 * mpg)\", the package check will complain because it\u2019s expecting to see mtcars and mpg as global variables. Add \"utils::globalVariables(c(\"mtcars\", \"mpg\"))\" to a globals.R file in my R folder. If there\u2019s a chance someone else will be looking at your source code, you should add a (non-Roxygen) comment explaining why so they don\u2019t get confused. Tags: [[favorite]] Note: Use utils::globalVariables(c(\"var1\",...)) for assigning global variables to avoid check notes during R package development. If you\u2019re creating a custom package for a specific data set, I recommend creating a download_data function that creates the inst/extdata folder and downloads the external data only if it doesn\u2019t already exist. You can add inst/extdata to your .gitignore. This means that you can host your source code but not your data (which may be quite large) on git, without having to worry about doing multiple redundant downloads. This will also let you delete your R Markdown cache without deleting your local data. Imports\u201d in the DESCRIPTION file is not the same as \u201cImports\u201d in the NAMESPACE file. The DESCRIPTION file doesn\u2019t really \u201cimport\u201d anything in the namespace sense \u2014 it just tells R that those packages should be installed. Use a double colon like dplyr::mutate. This is the preferred option since it doesn\u2019t change the namespace of your package. Add a Roxygen tag @ImportFrom, such as #' @ImportFrom dplyr mutate. This adds the mutate function to the namespace available to your package functions without anything else from the dplyr package. This allows you to use mutate by itself in your package functions. Because this only adds a single function at a time, you\u2019re unlikely to encounter a namespace collision (two objects with the same name in the namespace). Add a Roxygen tag @Import, such as #' @Import dplyr. This adds every function in the dplyr package to the namespace available to your package functions. This isn\u2019t recommended because it makes it very easy to run into a namespace collision. Something Hadley said: it\u2019s okay to do this if you\u2019re running a package that\u2019s been explicitly designed to be imported in this manner. For example, tidyverse functions import the entire rlang namespace. It\u2019s also more acceptable to do this if you\u2019re only importing the entire namespace of a single package, since that\u2019s unlikely to lead to conflicts. You can use the same @Import or @ImportFrom multiple times, and Roxygen will only add it once to the NAMESPACE. I like to keep my dependencies close to the functions that use them, so if I need a pipe in many functions I\u2019ll put @ImportFrom magrittr %>% in each file. That\u2019s just my personal preference, though. Once you\u2019ve added either an @ImportFrom or @Import tag, you need to devtools::document() for the change to take effect. This will add the relevant lines to your NAMESPACE file. devtools::check() will usually do this for you. This often catches me out if I change the NAMESPACE through a Roxygen tag and then re-install the package without running devtools::check(). I get frustrated that my changes aren\u2019t taking effect, until I realise my mistake! You do need to explicitly refer to functions and objects from the utils and stats packages, eg. stats::var(c(2, 3, 3, 3, 4)), and put them in your DESCRIPTION file. Tags: [[favorite]] Packages used in your vignettes that are not used in your package itself should go in the \u201cSuggests\u201d portion of your namespace, eg. usethis::use_package(\"ggplot2\", type = \"Suggests\"). Suppose that one of your dependencies uses an S3 method for a generic. For example, the randomForest package has an (unexported) predict.randomForest S3 method that allows you to make predictions with new data using the predict generic. How do you deal with that dependency without importing the whole randomForest namespace? I created a quick package to test this out. You can find it on GitHub. The option I went with here is to call on the internal function directly: randomForest:::predict.randomForest(). This works, but you\u2019ll get a note because you\u2019re generally not supposed to use ::: in functions. If you\u2019re submitting to CRAN, this could be an issue. Similarly, @importMethodsFrom randomForest predict.randomForest seems to work, even though R throws a warning that it couldn\u2019t find the method.","title":"Highlights"},{"location":"Highlights/Readwise/Articles/What%27s%20a%20Successful%20Shiny%20Application%20-%20Rtask/","text":"What's a \"Successful\" Shiny Application? - Rtask \u00b6 Metadata \u00b6 Author: [[Agence Breizhtorm - Www.Breizhtorm.Fr]] Full Title: What's a \"Successful\" Shiny Application? - Rtask Category: #Type/Highlights/Article URL: https://rtask.thinkr.fr/whats-a-successful-shiny-application/ Highlights \u00b6 That seems like an obvious concept, but of course a Shiny application is successful and ready for production if the dev team was able to move from the idea to the actual implementation to the delivery of the app. It\u2019s a very \u2018engineer-oriented\u2019 definition of success, but that\u2019s a pragmatic one: a project that doesn\u2019t exist can\u2019t be labelled as a successful one. Working in a framework like {golem} does help you reaching this goal: working inside a formalised structure will help you keep track of what is happening, and allows to grasp more easily what is contained in a given project. For example, if I today open a {golem} project I have never seen before, I will immediately be able to understand how the codebase is organised. t\u2019s Accurate Once the application exists, the other parameter that defines a production-grade application is that it is accurate. In other words, the visualisation are correct, the algorithms return the answer they are supposed to, the information are the needed one, etc. And yes, it happens that you deliver an application that works differently from the way it is expected to work. How do we prevent from that? First of all, by applying the \u201cseparation of concern\u201d: Business logic should be strictly separated from the application logic: build the back end and the non interactive functions separately from the interactive elements, work on them, validate them, and only once everything is thoroughly tested you can start integrating both together. Build a strong and reliable testing suite, so that you can catch any bug that will come along your project. It\u2019s Usable Your application exists, it\u2019s accurate, but now you should get sure it\u2019s usable\u2014in other words, your audience should visit the app and find it user-friendly. It\u2019s Immortal Of course nobody expect your app to live forever, but that\u2019s what you should reach for: robustness along the years. it is successful if it can exist in the long run, with all the hazards that this implies: new package versions that could potentially break the code base, sudden call for the implementation of new features in the global interface, changing key features of the UI or the back-end, and not to mention passing the code base along to someone who has not worked on the first version, and who is now in charge of developing the next version . And this, again, is hard to do without effective planning and efficient engineering.","title":"What's a \"Successful\" Shiny Application? - Rtask"},{"location":"Highlights/Readwise/Articles/What%27s%20a%20Successful%20Shiny%20Application%20-%20Rtask/#whats-a-successful-shiny-application-rtask","text":"","title":"What's a \"Successful\" Shiny Application? - Rtask"},{"location":"Highlights/Readwise/Articles/What%27s%20a%20Successful%20Shiny%20Application%20-%20Rtask/#metadata","text":"Author: [[Agence Breizhtorm - Www.Breizhtorm.Fr]] Full Title: What's a \"Successful\" Shiny Application? - Rtask Category: #Type/Highlights/Article URL: https://rtask.thinkr.fr/whats-a-successful-shiny-application/","title":"Metadata"},{"location":"Highlights/Readwise/Articles/What%27s%20a%20Successful%20Shiny%20Application%20-%20Rtask/#highlights","text":"That seems like an obvious concept, but of course a Shiny application is successful and ready for production if the dev team was able to move from the idea to the actual implementation to the delivery of the app. It\u2019s a very \u2018engineer-oriented\u2019 definition of success, but that\u2019s a pragmatic one: a project that doesn\u2019t exist can\u2019t be labelled as a successful one. Working in a framework like {golem} does help you reaching this goal: working inside a formalised structure will help you keep track of what is happening, and allows to grasp more easily what is contained in a given project. For example, if I today open a {golem} project I have never seen before, I will immediately be able to understand how the codebase is organised. t\u2019s Accurate Once the application exists, the other parameter that defines a production-grade application is that it is accurate. In other words, the visualisation are correct, the algorithms return the answer they are supposed to, the information are the needed one, etc. And yes, it happens that you deliver an application that works differently from the way it is expected to work. How do we prevent from that? First of all, by applying the \u201cseparation of concern\u201d: Business logic should be strictly separated from the application logic: build the back end and the non interactive functions separately from the interactive elements, work on them, validate them, and only once everything is thoroughly tested you can start integrating both together. Build a strong and reliable testing suite, so that you can catch any bug that will come along your project. It\u2019s Usable Your application exists, it\u2019s accurate, but now you should get sure it\u2019s usable\u2014in other words, your audience should visit the app and find it user-friendly. It\u2019s Immortal Of course nobody expect your app to live forever, but that\u2019s what you should reach for: robustness along the years. it is successful if it can exist in the long run, with all the hazards that this implies: new package versions that could potentially break the code base, sudden call for the implementation of new features in the global interface, changing key features of the UI or the back-end, and not to mention passing the code base along to someone who has not worked on the first version, and who is now in charge of developing the next version . And this, again, is hard to do without effective planning and efficient engineering.","title":"Highlights"},{"location":"Highlights/Readwise/Articles/What%E2%80%99s%20on%20Your%20Programming%20Reading%20List-2/","text":"What\u2019s on Your Programming Reading List? \u00b6 Metadata \u00b6 Author: [[Amy M Haddad]] Full Title: What\u2019s on Your Programming Reading List? Category: #Type/Highlights/Article URL: https://medium.com/p/472fc23ed9bc Highlights \u00b6 That experience, which was about a decade ago, taught me a critical lesson: the benefits of reading avidly and broadly about your field. What began as a one-time thing to do well in a class has turned into a lifetime habit. So I read a lot over the next few weeks. My knowledge grew tremendously \u2014 and so did my ideas, which inspired a new and improved paper topic.","title":"What\u2019s on Your Programming Reading List?"},{"location":"Highlights/Readwise/Articles/What%E2%80%99s%20on%20Your%20Programming%20Reading%20List-2/#whats-on-your-programming-reading-list","text":"","title":"What\u2019s on Your Programming Reading List?"},{"location":"Highlights/Readwise/Articles/What%E2%80%99s%20on%20Your%20Programming%20Reading%20List-2/#metadata","text":"Author: [[Amy M Haddad]] Full Title: What\u2019s on Your Programming Reading List? Category: #Type/Highlights/Article URL: https://medium.com/p/472fc23ed9bc","title":"Metadata"},{"location":"Highlights/Readwise/Articles/What%E2%80%99s%20on%20Your%20Programming%20Reading%20List-2/#highlights","text":"That experience, which was about a decade ago, taught me a critical lesson: the benefits of reading avidly and broadly about your field. What began as a one-time thing to do well in a class has turned into a lifetime habit. So I read a lot over the next few weeks. My knowledge grew tremendously \u2014 and so did my ideas, which inspired a new and improved paper topic.","title":"Highlights"},{"location":"Highlights/Readwise/Articles/What%E2%80%99s%20on%20Your%20Programming%20Reading%20List/","text":"What\u2019s on Your Programming Reading List? \u00b6 Metadata \u00b6 Author: [[levelup.gitconnected.com]] Full Title: What\u2019s on Your Programming Reading List? Category: #Type/Highlights/Article URL: https://levelup.gitconnected.com/whats-on-your-programming-reading-list-472fc23ed9bc Highlights \u00b6 \u201cRead more?\u201d I remember thinking. I wasn\u2019t expecting that response. I walked out of his university office trying to make sense of his comment. So I read a lot over the next few weeks. My knowledge grew tremendously \u2014 and so did my ideas, which inspired a new and improved paper topic. ( View Highlight ) That experience, which was about a decade ago, taught me a critical lesson: the benefits of reading avidly and broadly about your field. What began as a one-time thing to do well in a class has turned into a lifetime habit. ( View Highlight ) Reading technical programming books is one habit programmers should begin immediately. It\u2019s a relatively small investment that\u2019ll help you now, but will pay dividends in the future for this simple reason: your knowledge will compound over time. ( View Highlight ) But books have their place, too. They fill a different need: they\u2019re a source of long-form content that take you on an in-depth journey about a particular topic. A blog post or technical article may be a few hundred or thousand words. A book is tens of thousands. When you pick up a technical book, you take a deep dive into said topic. You pick up the nuances. You study, practice, and learn. You get into the mindset of an industry expert. You begin to see things differently, as your context begins to grow. ( View Highlight ) There\u2019s no shortage of topics to read about in our field: Computer architecture Agile software development Algorithms Testing Writing clean code Refactoring ( View Highlight ) Consider mathematician Richard Hamming. He, too, figured out a way to make reading a habit, which he shares in his excellent lecture, You and Your Research. ( View Highlight ) Hamming reflected on his manager\u2019s comment and decided to \u201creorganize\u201d his life. He cut out \u201cnonsense magazines\u201d and spent time \u201cstudying things in [his] career.\u201d There was always a book on his coffee table \u201cready to be read.\u201d He also got appointed as a book review editor, so he could review the books he read. \u201cThis way I forced myself to get a wide acquaintance in computer science,\u201d Hamming remarked of the process. \u201cI wasn\u2019t a first-class genius,\u201d Hamming explained. \u201cSo I simply set aside those other things [like reading the New Yorker] and did that,\u201d he added. \u201cIt\u2019s not hard to do. You just do it.\u201d ( View Highlight ) There are a few critical points we can glean from Hamming\u2019s story. First, he always had a book on his coffee table. In other words, he always had a book in sight. This visual sends a kind reminder to read. ( View Highlight ) After writing a review, he let it sit for a week. Then, he\u2019d ask himself these questions: \u201cIs that a good review? Does that really digest the book?\u201d If not, \u201cyou\u2019re re-reading the book and writing a better review.\u201d ( View Highlight ) In today\u2019s world, the process is even easier: read a book and write a blog post on it. Indeed, writing is a great way to solidify your knowledge. ( View Highlight ) While reading, use what I call the \u201c spot check \u201c approach. The idea is to randomly check your knowledge as you learn new material. After reading a paragraph or two, pause, and see if you can recall and articulate what you just learned about. ( View Highlight ) Another idea is to type some notes summarizing key points after you read a chapter. The process itself is useful to review and reinforce important points. Then, you can use the notes you type in different ways: Make Anki flashcards, so you\u2019ll constantly see the information in the future. Make a checklist. After getting feedback on my variable names, I read about naming in the book Code Complete. Then, I made a \u201cvariable name\u201d checklist. It hangs on the wall in front of my desk. Focus on something specific you learned about while coding. I recently read some useful information about writing tests. Now I pull up these notes and reference them as I work. ( View Highlight ) The point is to apply what you\u2019re learning. Take the information you\u2019re gaining, connect it, and turn it into knowledge. ( View Highlight ) Make It a Habit ( View Highlight ) You\u2019ve got to realize that reading matters. And to realize that reading matters, you\u2019ve got to see the benefits. When something is important and we see the benefits, we find a way to make it happen ( View Highlight ) There\u2019s an easy way to do it: start with reading only 30 minutes each day for a month. It\u2019s a small, manageable investment of time. And yet it\u2019s enough to have an impact. ( View Highlight ) The professor who told me to \u201cread more\u201d ignited my motivation to read, albeit initially to get a good grade. But I quickly saw the benefits. As it turned out, this professor, who I later learned has over 1,000 books in his personal library, gave me some of the best advice I\u2019ve ever received. ( View Highlight ) Tags: [[favorite]]","title":"What\u2019s on Your Programming Reading List?"},{"location":"Highlights/Readwise/Articles/What%E2%80%99s%20on%20Your%20Programming%20Reading%20List/#whats-on-your-programming-reading-list","text":"","title":"What\u2019s on Your Programming Reading List?"},{"location":"Highlights/Readwise/Articles/What%E2%80%99s%20on%20Your%20Programming%20Reading%20List/#metadata","text":"Author: [[levelup.gitconnected.com]] Full Title: What\u2019s on Your Programming Reading List? Category: #Type/Highlights/Article URL: https://levelup.gitconnected.com/whats-on-your-programming-reading-list-472fc23ed9bc","title":"Metadata"},{"location":"Highlights/Readwise/Articles/What%E2%80%99s%20on%20Your%20Programming%20Reading%20List/#highlights","text":"\u201cRead more?\u201d I remember thinking. I wasn\u2019t expecting that response. I walked out of his university office trying to make sense of his comment. So I read a lot over the next few weeks. My knowledge grew tremendously \u2014 and so did my ideas, which inspired a new and improved paper topic. ( View Highlight ) That experience, which was about a decade ago, taught me a critical lesson: the benefits of reading avidly and broadly about your field. What began as a one-time thing to do well in a class has turned into a lifetime habit. ( View Highlight ) Reading technical programming books is one habit programmers should begin immediately. It\u2019s a relatively small investment that\u2019ll help you now, but will pay dividends in the future for this simple reason: your knowledge will compound over time. ( View Highlight ) But books have their place, too. They fill a different need: they\u2019re a source of long-form content that take you on an in-depth journey about a particular topic. A blog post or technical article may be a few hundred or thousand words. A book is tens of thousands. When you pick up a technical book, you take a deep dive into said topic. You pick up the nuances. You study, practice, and learn. You get into the mindset of an industry expert. You begin to see things differently, as your context begins to grow. ( View Highlight ) There\u2019s no shortage of topics to read about in our field: Computer architecture Agile software development Algorithms Testing Writing clean code Refactoring ( View Highlight ) Consider mathematician Richard Hamming. He, too, figured out a way to make reading a habit, which he shares in his excellent lecture, You and Your Research. ( View Highlight ) Hamming reflected on his manager\u2019s comment and decided to \u201creorganize\u201d his life. He cut out \u201cnonsense magazines\u201d and spent time \u201cstudying things in [his] career.\u201d There was always a book on his coffee table \u201cready to be read.\u201d He also got appointed as a book review editor, so he could review the books he read. \u201cThis way I forced myself to get a wide acquaintance in computer science,\u201d Hamming remarked of the process. \u201cI wasn\u2019t a first-class genius,\u201d Hamming explained. \u201cSo I simply set aside those other things [like reading the New Yorker] and did that,\u201d he added. \u201cIt\u2019s not hard to do. You just do it.\u201d ( View Highlight ) There are a few critical points we can glean from Hamming\u2019s story. First, he always had a book on his coffee table. In other words, he always had a book in sight. This visual sends a kind reminder to read. ( View Highlight ) After writing a review, he let it sit for a week. Then, he\u2019d ask himself these questions: \u201cIs that a good review? Does that really digest the book?\u201d If not, \u201cyou\u2019re re-reading the book and writing a better review.\u201d ( View Highlight ) In today\u2019s world, the process is even easier: read a book and write a blog post on it. Indeed, writing is a great way to solidify your knowledge. ( View Highlight ) While reading, use what I call the \u201c spot check \u201c approach. The idea is to randomly check your knowledge as you learn new material. After reading a paragraph or two, pause, and see if you can recall and articulate what you just learned about. ( View Highlight ) Another idea is to type some notes summarizing key points after you read a chapter. The process itself is useful to review and reinforce important points. Then, you can use the notes you type in different ways: Make Anki flashcards, so you\u2019ll constantly see the information in the future. Make a checklist. After getting feedback on my variable names, I read about naming in the book Code Complete. Then, I made a \u201cvariable name\u201d checklist. It hangs on the wall in front of my desk. Focus on something specific you learned about while coding. I recently read some useful information about writing tests. Now I pull up these notes and reference them as I work. ( View Highlight ) The point is to apply what you\u2019re learning. Take the information you\u2019re gaining, connect it, and turn it into knowledge. ( View Highlight ) Make It a Habit ( View Highlight ) You\u2019ve got to realize that reading matters. And to realize that reading matters, you\u2019ve got to see the benefits. When something is important and we see the benefits, we find a way to make it happen ( View Highlight ) There\u2019s an easy way to do it: start with reading only 30 minutes each day for a month. It\u2019s a small, manageable investment of time. And yet it\u2019s enough to have an impact. ( View Highlight ) The professor who told me to \u201cread more\u201d ignited my motivation to read, albeit initially to get a good grade. But I quickly saw the benefits. As it turned out, this professor, who I later learned has over 1,000 books in his personal library, gave me some of the best advice I\u2019ve ever received. ( View Highlight ) Tags: [[favorite]]","title":"Highlights"},{"location":"Highlights/Readwise/Articles/Why%20Factor%20Is%20One%20of%20the%20Most%20Amazing%20Things%20in%20R%20%26%20Forcats%20Helps%20You%20Reali/","text":"Why Factor Is One of the Most Amazing Things in R & Forcats Helps You Reali \u00b6 Metadata \u00b6 Author: [[Kan Nishida]] Full Title: Why Factor Is One of the Most Amazing Things in R & Forcats Helps You Reali Category: #Type/Highlights/Article URL: https://blog.exploratory.io/why-factor-is-one-of-the-most-amazing-things-in-r-e967fe27d292 Highlights \u00b6 R is like wine, the more you experience it, the more you appreciate what it does, how it does, and why it does. You might hit the initial learning curve, but after you overcome it, then you start feeling how it is beautifully and practically designed to address very common challenges of the everyday data analysis. Factor data type is one of them. It is designed to address typical challenges we encounter when we work with categorical data. This data type looks like Character data type from the outset, but it can contain additional information to manage the levels and the order (or sequence) of the categorical values. Factor data type alone separates R from other BI tools So basically, with Factor data type, we can register the levels (number of the categories) and the orders as part of the columns (or variables) natively so that we can let the columns dictate how to handle such level and sorting information. This is a huge advantage especially comparing to other tools like Excel or typical BI tools. A gift from God \u2014 forcats package But the only problem is, it was not so straightforward to assemble and manage such levels and order with Factor for many of us. In this post, I\u2019m going to demonstrate why Factor should be your best friend and how \u2018forcats\u2019 package makes the journey of knowing Factor data type super easy and fun. I\u2019m going to use Exploratory as a front end (UI), but obviously, you can do the same things in RStudio or other tools as well. Tags: [[favorite]] Set the Order of Categories based on Another Column Values Another way is to use \u2018fct_reorder\u2019 function, which can take another column as a reference for the order, so the original data doesn\u2019t need to be sorted beforehand. If we want to show the US Presidents from the latest to the oldest, then we can simply use \u2018fct_rev\u2019 from \u2018forcats\u2019 package to reverse the original order we have set above. This is when the \u2018fct_lump\u2019 function from \u2018forcats\u2019 package comes to rescue. It keeps only a top N number of the categories, in this case, that is US states, and moves everything else into an \u2018Other\u2019 bucket. Tags: [[favorite]]","title":"Why Factor Is One of the Most Amazing Things in R & Forcats Helps You Reali"},{"location":"Highlights/Readwise/Articles/Why%20Factor%20Is%20One%20of%20the%20Most%20Amazing%20Things%20in%20R%20%26%20Forcats%20Helps%20You%20Reali/#why-factor-is-one-of-the-most-amazing-things-in-r-forcats-helps-you-reali","text":"","title":"Why Factor Is One of the Most Amazing Things in R &amp; Forcats Helps You Reali"},{"location":"Highlights/Readwise/Articles/Why%20Factor%20Is%20One%20of%20the%20Most%20Amazing%20Things%20in%20R%20%26%20Forcats%20Helps%20You%20Reali/#metadata","text":"Author: [[Kan Nishida]] Full Title: Why Factor Is One of the Most Amazing Things in R & Forcats Helps You Reali Category: #Type/Highlights/Article URL: https://blog.exploratory.io/why-factor-is-one-of-the-most-amazing-things-in-r-e967fe27d292","title":"Metadata"},{"location":"Highlights/Readwise/Articles/Why%20Factor%20Is%20One%20of%20the%20Most%20Amazing%20Things%20in%20R%20%26%20Forcats%20Helps%20You%20Reali/#highlights","text":"R is like wine, the more you experience it, the more you appreciate what it does, how it does, and why it does. You might hit the initial learning curve, but after you overcome it, then you start feeling how it is beautifully and practically designed to address very common challenges of the everyday data analysis. Factor data type is one of them. It is designed to address typical challenges we encounter when we work with categorical data. This data type looks like Character data type from the outset, but it can contain additional information to manage the levels and the order (or sequence) of the categorical values. Factor data type alone separates R from other BI tools So basically, with Factor data type, we can register the levels (number of the categories) and the orders as part of the columns (or variables) natively so that we can let the columns dictate how to handle such level and sorting information. This is a huge advantage especially comparing to other tools like Excel or typical BI tools. A gift from God \u2014 forcats package But the only problem is, it was not so straightforward to assemble and manage such levels and order with Factor for many of us. In this post, I\u2019m going to demonstrate why Factor should be your best friend and how \u2018forcats\u2019 package makes the journey of knowing Factor data type super easy and fun. I\u2019m going to use Exploratory as a front end (UI), but obviously, you can do the same things in RStudio or other tools as well. Tags: [[favorite]] Set the Order of Categories based on Another Column Values Another way is to use \u2018fct_reorder\u2019 function, which can take another column as a reference for the order, so the original data doesn\u2019t need to be sorted beforehand. If we want to show the US Presidents from the latest to the oldest, then we can simply use \u2018fct_rev\u2019 from \u2018forcats\u2019 package to reverse the original order we have set above. This is when the \u2018fct_lump\u2019 function from \u2018forcats\u2019 package comes to rescue. It keeps only a top N number of the categories, in this case, that is US states, and moves everything else into an \u2018Other\u2019 bucket. Tags: [[favorite]]","title":"Highlights"},{"location":"Highlights/Readwise/Articles/Why%20I%20Use%20a%20Cloud-Based%20Development%20Environment%20and%20How%20You%20Can%20Too/","text":"Why I Use a Cloud-Based Development Environment and How You Can Too \u00b6 Metadata \u00b6 Author: [[mikenikles.com]] Full Title: Why I Use a Cloud-Based Development Environment and How You Can Too Category: #Type/Highlights/Article URL: https://www.mikenikles.com/blog/why-i-use-a-cloud-based-development-environment-and-how-you-can-too Highlights \u00b6 CPU, Memory & Storage on a laptop ( View Highlight ) , \u2601\ufe0f, \u2601\ufe0f - Everything is in the \u2601\ufe0f ( View Highlight ) Why Gitpod? ( View Highlight ) A core principle of mine is productivity. Anything I can automate, I automate. Anything I can get rid of, I get rid of. Anything I can outsource, I outsource. If I can drop my local development environment, I do so. As soon as you work in a team, all your effort of setting up a local development environment instantly multiplies by the number of team members. I\u2019d much rather not have to deal with that for every new team member that joins and have them started with a fully functioning development environment within minutes. Who\u2019s worked in a team where the most recent developer who joins updates the \u201cDevelopment environment setup\u201d wiki page only to find it outdated by the time the next team member joins? Be honest with yourself when you answer that \ud83d\ude09. ( View Highlight )","title":"Why I Use a Cloud-Based Development Environment and How You Can Too"},{"location":"Highlights/Readwise/Articles/Why%20I%20Use%20a%20Cloud-Based%20Development%20Environment%20and%20How%20You%20Can%20Too/#why-i-use-a-cloud-based-development-environment-and-how-you-can-too","text":"","title":"Why I Use a Cloud-Based Development Environment and How You Can Too"},{"location":"Highlights/Readwise/Articles/Why%20I%20Use%20a%20Cloud-Based%20Development%20Environment%20and%20How%20You%20Can%20Too/#metadata","text":"Author: [[mikenikles.com]] Full Title: Why I Use a Cloud-Based Development Environment and How You Can Too Category: #Type/Highlights/Article URL: https://www.mikenikles.com/blog/why-i-use-a-cloud-based-development-environment-and-how-you-can-too","title":"Metadata"},{"location":"Highlights/Readwise/Articles/Why%20I%20Use%20a%20Cloud-Based%20Development%20Environment%20and%20How%20You%20Can%20Too/#highlights","text":"CPU, Memory & Storage on a laptop ( View Highlight ) , \u2601\ufe0f, \u2601\ufe0f - Everything is in the \u2601\ufe0f ( View Highlight ) Why Gitpod? ( View Highlight ) A core principle of mine is productivity. Anything I can automate, I automate. Anything I can get rid of, I get rid of. Anything I can outsource, I outsource. If I can drop my local development environment, I do so. As soon as you work in a team, all your effort of setting up a local development environment instantly multiplies by the number of team members. I\u2019d much rather not have to deal with that for every new team member that joins and have them started with a fully functioning development environment within minutes. Who\u2019s worked in a team where the most recent developer who joins updates the \u201cDevelopment environment setup\u201d wiki page only to find it outdated by the time the next team member joins? Be honest with yourself when you answer that \ud83d\ude09. ( View Highlight )","title":"Highlights"},{"location":"Highlights/Readwise/Articles/Why%20Ongoing%20Is%20the%20Worst%20Word%20in%20the%20History%20of%20Project%20Management/","text":"Why \"Ongoing\" Is the Worst Word in the History of Project Management \u00b6 Metadata \u00b6 Author: Full Title: Why \"Ongoing\" Is the Worst Word in the History of Project Management Category: #Type/Highlights/Article URL: https://learning.linkedin.com/blog/working-together/why--ongoing--is-the-worst-word-in-the-history-of-project-manage Highlights \u00b6 \u201cBecause if you say that, what you're really saying is you don't know when it's going to finish,\u201d Croft said in his course. \u201cAnd, if you think about it, if you're going to plan a project, you have to know when every task starts and finishes.\u201d The first step to managing a project is defining the project and what success looks like, Croft said. The second and third steps are about defining each task to get to success, along with the budget and timeline of those tasks. Defining each task needed to accomplish success \u2013 step two \u2013 is critical and can be difficult, particularly if you\u2019ve never managed a project like that before. How granular should you get for each task? Obviously, you want the tasks to be more specific than \u201cbuild house\u201d, but \u201cinstall outlet on the second-floor bathroom above the vanity\u201d is way too specific. As a general rule of thumb, Croft said a task usually lasts about a week. So, in the example of building a house, digging and pouring a foundation \u2013 approximately a weeklong job \u2013 is a good example of a singular task. To ensure you've identified all the tasks needed to complete the project, Croft recommends utilizing all three of these methods: First, hold a team brainstorm: The first step is to call a meeting with all the members of your team and have them shout out all the tasks that need to get done to complete the project. Use a work breakdown structure: Once your team completes its brainstorm, build a work breakdown structure (WBS). For a WBS, build a structured tree diagram of all the tasks you need to do, from onset to the eventual goal. This structured approach quickly reveals if you and your team missed anything. Finally, double-check your list with others: Once you\u2019ve completed your list of tasks, compare that list to others, either by doing research or asking other people who ran similar projects. The more input you can get here, particularly from people with experience running similar projects, the better. Tags: [[favorite]]","title":"Why \"Ongoing\" Is the Worst Word in the History of Project Management"},{"location":"Highlights/Readwise/Articles/Why%20Ongoing%20Is%20the%20Worst%20Word%20in%20the%20History%20of%20Project%20Management/#why-ongoing-is-the-worst-word-in-the-history-of-project-management","text":"","title":"Why \"Ongoing\" Is the Worst Word in the History of Project Management"},{"location":"Highlights/Readwise/Articles/Why%20Ongoing%20Is%20the%20Worst%20Word%20in%20the%20History%20of%20Project%20Management/#metadata","text":"Author: Full Title: Why \"Ongoing\" Is the Worst Word in the History of Project Management Category: #Type/Highlights/Article URL: https://learning.linkedin.com/blog/working-together/why--ongoing--is-the-worst-word-in-the-history-of-project-manage","title":"Metadata"},{"location":"Highlights/Readwise/Articles/Why%20Ongoing%20Is%20the%20Worst%20Word%20in%20the%20History%20of%20Project%20Management/#highlights","text":"\u201cBecause if you say that, what you're really saying is you don't know when it's going to finish,\u201d Croft said in his course. \u201cAnd, if you think about it, if you're going to plan a project, you have to know when every task starts and finishes.\u201d The first step to managing a project is defining the project and what success looks like, Croft said. The second and third steps are about defining each task to get to success, along with the budget and timeline of those tasks. Defining each task needed to accomplish success \u2013 step two \u2013 is critical and can be difficult, particularly if you\u2019ve never managed a project like that before. How granular should you get for each task? Obviously, you want the tasks to be more specific than \u201cbuild house\u201d, but \u201cinstall outlet on the second-floor bathroom above the vanity\u201d is way too specific. As a general rule of thumb, Croft said a task usually lasts about a week. So, in the example of building a house, digging and pouring a foundation \u2013 approximately a weeklong job \u2013 is a good example of a singular task. To ensure you've identified all the tasks needed to complete the project, Croft recommends utilizing all three of these methods: First, hold a team brainstorm: The first step is to call a meeting with all the members of your team and have them shout out all the tasks that need to get done to complete the project. Use a work breakdown structure: Once your team completes its brainstorm, build a work breakdown structure (WBS). For a WBS, build a structured tree diagram of all the tasks you need to do, from onset to the eventual goal. This structured approach quickly reveals if you and your team missed anything. Finally, double-check your list with others: Once you\u2019ve completed your list of tasks, compare that list to others, either by doing research or asking other people who ran similar projects. The more input you can get here, particularly from people with experience running similar projects, the better. Tags: [[favorite]]","title":"Highlights"},{"location":"Highlights/Readwise/Articles/Why%20Organising%20Your%20To-Dos%20by%20Project%20Does%20Not%20Work./","text":"Why Organising Your To-Dos by Project Does Not Work. \u00b6 Metadata \u00b6 Author: [[Carl Pullein]] Full Title: Why Organising Your To-Dos by Project Does Not Work. Category: #Type/Highlights/Article URL: https://www.carlpullein.com/blog/why-organising-you-to-dos-by-project-does-not-work/19/2/2020 Highlights \u00b6 And that\u2019s where project-based to-do lists don\u2019t work. They add more work than is necessary, slow down getting the work done, duplicates your work and dilutes your focus. It\u2019s particularly bad if you adhere to the belief anything involving more than one step is a project. With that approach, you end up with a huge list of projects that require regular reviewing and trying to decide where a task goes becomes time-consuming. You end up wasting so much time reviewing and processing, the part where you do the work becomes secondary to your project task list management. To me, all this additional processing and reviewing just added a lot of time to the admin side and did very little to give me more doing time. But, like so many other people I completely bought into the idea that everything had to be organised by project and those projects needed to be reviewed regularly. And given the definition of a project is anything involving two or more tasks, that can lead to hours and hours spent just reviewing and processing with no time spent doing the work! No wonder we feel stressed out and overwhelmed. We are constantly being told to review and look at our work to do and those lists are getting longer and longer and the time spent doing the work is getting shorter and shorter. Today, to see how my work is progressing all I need do is look at the project\u2019s file folder. That tells me \u2014 in real-time \u2014 exactly where a project is. Trying to manage that in a to-do list manager often leads to confusion because if you are not checking everything off when you are doing it (requiring more time away from doing your work) you end up with a false picture of how a project is progressing. The documents I am writing, the presentation files I am creating; those files give me the real picture. All I need my to-do list manager to do is tell me what to work on today.","title":"Why Organising Your To-Dos by Project Does Not Work."},{"location":"Highlights/Readwise/Articles/Why%20Organising%20Your%20To-Dos%20by%20Project%20Does%20Not%20Work./#why-organising-your-to-dos-by-project-does-not-work","text":"","title":"Why Organising Your To-Dos by Project Does Not Work."},{"location":"Highlights/Readwise/Articles/Why%20Organising%20Your%20To-Dos%20by%20Project%20Does%20Not%20Work./#metadata","text":"Author: [[Carl Pullein]] Full Title: Why Organising Your To-Dos by Project Does Not Work. Category: #Type/Highlights/Article URL: https://www.carlpullein.com/blog/why-organising-you-to-dos-by-project-does-not-work/19/2/2020","title":"Metadata"},{"location":"Highlights/Readwise/Articles/Why%20Organising%20Your%20To-Dos%20by%20Project%20Does%20Not%20Work./#highlights","text":"And that\u2019s where project-based to-do lists don\u2019t work. They add more work than is necessary, slow down getting the work done, duplicates your work and dilutes your focus. It\u2019s particularly bad if you adhere to the belief anything involving more than one step is a project. With that approach, you end up with a huge list of projects that require regular reviewing and trying to decide where a task goes becomes time-consuming. You end up wasting so much time reviewing and processing, the part where you do the work becomes secondary to your project task list management. To me, all this additional processing and reviewing just added a lot of time to the admin side and did very little to give me more doing time. But, like so many other people I completely bought into the idea that everything had to be organised by project and those projects needed to be reviewed regularly. And given the definition of a project is anything involving two or more tasks, that can lead to hours and hours spent just reviewing and processing with no time spent doing the work! No wonder we feel stressed out and overwhelmed. We are constantly being told to review and look at our work to do and those lists are getting longer and longer and the time spent doing the work is getting shorter and shorter. Today, to see how my work is progressing all I need do is look at the project\u2019s file folder. That tells me \u2014 in real-time \u2014 exactly where a project is. Trying to manage that in a to-do list manager often leads to confusion because if you are not checking everything off when you are doing it (requiring more time away from doing your work) you end up with a false picture of how a project is progressing. The documents I am writing, the presentation files I am creating; those files give me the real picture. All I need my to-do list manager to do is tell me what to work on today.","title":"Highlights"},{"location":"Highlights/Readwise/Articles/Why%20Programmers%20Should%20Write%20Tutorials/","text":"Why Programmers Should Write Tutorials \u00b6 Metadata \u00b6 Author: [[Fernando Souza]] Full Title: Why Programmers Should Write Tutorials Category: #Type/Highlights/Article URL: https://medium.com/p/6ecbb83f43e3 Highlights \u00b6 As a programmer, it is important to create the habit of documenting any new knowledge you discover. It doesn\u2019t matter if it is as simple as a plug-in configuration or something like a reference guide. As your third-grade teacher used to say, \u201cJust write it down in your own words.\u201d","title":"Why Programmers Should Write Tutorials"},{"location":"Highlights/Readwise/Articles/Why%20Programmers%20Should%20Write%20Tutorials/#why-programmers-should-write-tutorials","text":"","title":"Why Programmers Should Write Tutorials"},{"location":"Highlights/Readwise/Articles/Why%20Programmers%20Should%20Write%20Tutorials/#metadata","text":"Author: [[Fernando Souza]] Full Title: Why Programmers Should Write Tutorials Category: #Type/Highlights/Article URL: https://medium.com/p/6ecbb83f43e3","title":"Metadata"},{"location":"Highlights/Readwise/Articles/Why%20Programmers%20Should%20Write%20Tutorials/#highlights","text":"As a programmer, it is important to create the habit of documenting any new knowledge you discover. It doesn\u2019t matter if it is as simple as a plug-in configuration or something like a reference guide. As your third-grade teacher used to say, \u201cJust write it down in your own words.\u201d","title":"Highlights"},{"location":"Highlights/Readwise/Articles/Workflow%20for%20Serverless%E2%80%8A%E2%80%94%E2%80%8ACloud%20Functions%20%2B%20Workflow%20%5BBasic%5D/","text":"Workflow for Serverless\u200a\u2014\u200aCloud Functions + Workflow [Basic] \u00b6 Metadata \u00b6 Author: [[Johanes Glenn]] Full Title: Workflow for Serverless\u200a\u2014\u200aCloud Functions + Workflow [Basic] Category: #Type/Highlights/Article URL: https://medium.com/p/eb755048c982 Highlights \u00b6 Workflow in it self defined as: service to \u201cOrchestrate and automate Google Cloud and HTTP-based API services with serverless workflows\u201d","title":"Workflow for Serverless\u200a\u2014\u200aCloud Functions + Workflow [Basic]"},{"location":"Highlights/Readwise/Articles/Workflow%20for%20Serverless%E2%80%8A%E2%80%94%E2%80%8ACloud%20Functions%20%2B%20Workflow%20%5BBasic%5D/#workflow-for-serverless-cloud-functions-workflow-basic","text":"","title":"Workflow for Serverless\u200a\u2014\u200aCloud Functions + Workflow [Basic]"},{"location":"Highlights/Readwise/Articles/Workflow%20for%20Serverless%E2%80%8A%E2%80%94%E2%80%8ACloud%20Functions%20%2B%20Workflow%20%5BBasic%5D/#metadata","text":"Author: [[Johanes Glenn]] Full Title: Workflow for Serverless\u200a\u2014\u200aCloud Functions + Workflow [Basic] Category: #Type/Highlights/Article URL: https://medium.com/p/eb755048c982","title":"Metadata"},{"location":"Highlights/Readwise/Articles/Workflow%20for%20Serverless%E2%80%8A%E2%80%94%E2%80%8ACloud%20Functions%20%2B%20Workflow%20%5BBasic%5D/#highlights","text":"Workflow in it self defined as: service to \u201cOrchestrate and automate Google Cloud and HTTP-based API services with serverless workflows\u201d","title":"Highlights"},{"location":"Highlights/Readwise/Articles/Writing%20Is%20Thinking-2/","text":"Writing Is Thinking \u00b6 Metadata \u00b6 Author: [[alistapart.com]] Full Title: Writing Is Thinking Category: #Type/Highlights/Article URL: https://alistapart.com/article/writing-is-thinking/ Highlights \u00b6 I\u2019m asking that you start with thinking. I suspect, if you\u2019re a reader, you\u2019re already a thinker\u2014which means you\u2019re halfway there. Really. Because writing\u2014that first leap into taking your idea and making it a Thing People Read\u2014isn\u2019t really about wording. It\u2019s about thinking. And if you can tell the difference between an article that knows what it\u2019s about and one that exists purely to sell ad space, then you\u2019re pretty good at that already. ( View Highlight ) Think about the things you had to look up on the internet just to figure out how to do your current job. Or maybe those things aren\u2019t even on the internet\u2014you learned from direct experience. You should write that stuff down, because when you connect your ideas into a written piece, you give voice and direction to something that otherwise just rattles around in the form of entrenched habits and beliefs\u2014a resigned \u201cthat\u2019s just the way we\u2019ve always done it around here.\u201d ( View Highlight ) Now you just need to start putting your ideas on paper. Try not to reread until you absolutely have to, preferably on a different day altogether. Just think about what you\u2019re trying to say, and jot the main ideas down. If you\u2019re not sure how to finish a sentence, abandon it halfway through. If you want to write extensively about one particular idea but your mind\u2019s moving too quickly to flesh it all out, paraphrase for now and move on to the next big point. ( View Highlight ) If you\u2019re anything like me, the end result of this first step is going to look a little like an outline interspersed with rants and probably a few side notes about errands you realized you need to run this afternoon. It is laughably far from something you\u2019d share with anyone. In other words, it\u2019s a rough draft. ( View Highlight ) Coming to your point ( View Highlight ) I want you to come away from it thinking, \u201cIf writing is really mostly about thinking rather than wording, I could totally give this writing thing a try.\u201d ( View Highlight ) But I don\u2019t really have an argument. I just have this anecdote to share. ( View Highlight ) Personal anecdote is hugely helpful, especially in a fast-changing field like web design and development. To turn your piece from a meandering narrative into something more substantial, though, here are a few things to think about. ( View Highlight ) First of all, why did this excerpt from your experience stand out to you, personally? Was this the moment something clicked for you regarding your work? ( View Highlight ) Secondly, why do you think things turned out the way they did? Were you surprised? Do you do things differently now as a result? When you spell this out, it\u2019s the difference between journaling for yourself and writing for an audience. ( View Highlight ) Finally, is this something others in your line of work are prone to miss? Is it a rookie error, or something more like an industry-wide oversight? If you\u2019ve tried to search online for similar opinions, do you get a lot of misinformation? Or is the good information simply not in a place where others in your field are likely to see it? ( View Highlight ) Supporting your readers ( View Highlight )","title":"Writing Is Thinking"},{"location":"Highlights/Readwise/Articles/Writing%20Is%20Thinking-2/#writing-is-thinking","text":"","title":"Writing Is Thinking"},{"location":"Highlights/Readwise/Articles/Writing%20Is%20Thinking-2/#metadata","text":"Author: [[alistapart.com]] Full Title: Writing Is Thinking Category: #Type/Highlights/Article URL: https://alistapart.com/article/writing-is-thinking/","title":"Metadata"},{"location":"Highlights/Readwise/Articles/Writing%20Is%20Thinking-2/#highlights","text":"I\u2019m asking that you start with thinking. I suspect, if you\u2019re a reader, you\u2019re already a thinker\u2014which means you\u2019re halfway there. Really. Because writing\u2014that first leap into taking your idea and making it a Thing People Read\u2014isn\u2019t really about wording. It\u2019s about thinking. And if you can tell the difference between an article that knows what it\u2019s about and one that exists purely to sell ad space, then you\u2019re pretty good at that already. ( View Highlight ) Think about the things you had to look up on the internet just to figure out how to do your current job. Or maybe those things aren\u2019t even on the internet\u2014you learned from direct experience. You should write that stuff down, because when you connect your ideas into a written piece, you give voice and direction to something that otherwise just rattles around in the form of entrenched habits and beliefs\u2014a resigned \u201cthat\u2019s just the way we\u2019ve always done it around here.\u201d ( View Highlight ) Now you just need to start putting your ideas on paper. Try not to reread until you absolutely have to, preferably on a different day altogether. Just think about what you\u2019re trying to say, and jot the main ideas down. If you\u2019re not sure how to finish a sentence, abandon it halfway through. If you want to write extensively about one particular idea but your mind\u2019s moving too quickly to flesh it all out, paraphrase for now and move on to the next big point. ( View Highlight ) If you\u2019re anything like me, the end result of this first step is going to look a little like an outline interspersed with rants and probably a few side notes about errands you realized you need to run this afternoon. It is laughably far from something you\u2019d share with anyone. In other words, it\u2019s a rough draft. ( View Highlight ) Coming to your point ( View Highlight ) I want you to come away from it thinking, \u201cIf writing is really mostly about thinking rather than wording, I could totally give this writing thing a try.\u201d ( View Highlight ) But I don\u2019t really have an argument. I just have this anecdote to share. ( View Highlight ) Personal anecdote is hugely helpful, especially in a fast-changing field like web design and development. To turn your piece from a meandering narrative into something more substantial, though, here are a few things to think about. ( View Highlight ) First of all, why did this excerpt from your experience stand out to you, personally? Was this the moment something clicked for you regarding your work? ( View Highlight ) Secondly, why do you think things turned out the way they did? Were you surprised? Do you do things differently now as a result? When you spell this out, it\u2019s the difference between journaling for yourself and writing for an audience. ( View Highlight ) Finally, is this something others in your line of work are prone to miss? Is it a rookie error, or something more like an industry-wide oversight? If you\u2019ve tried to search online for similar opinions, do you get a lot of misinformation? Or is the good information simply not in a place where others in your field are likely to see it? ( View Highlight ) Supporting your readers ( View Highlight )","title":"Highlights"},{"location":"Highlights/Readwise/Articles/Writing%20Is%20Thinking/","text":"Writing Is Thinking \u00b6 Metadata \u00b6 Author: [[alistapart.com]] Full Title: Writing Is Thinking Category: #Type/Highlights/Article URL: https://alistapart.com/article/writing-is-thinking/ Highlights \u00b6 I\u2019m asking that you start with thinking. I suspect, if you\u2019re a reader, you\u2019re already a thinker\u2014which means you\u2019re halfway there. Really. Because writing\u2014that first leap into taking your idea and making it a Thing People Read\u2014isn\u2019t really about wording. It\u2019s about thinking. And if you can tell the difference between an article that knows what it\u2019s about and one that exists purely to sell ad space, then you\u2019re pretty good at that already. Think about the things you had to look up on the internet just to figure out how to do your current job. Or maybe those things aren\u2019t even on the internet\u2014you learned from direct experience. You should write that stuff down, because when you connect your ideas into a written piece, you give voice and direction to something that otherwise just rattles around in the form of entrenched habits and beliefs\u2014a resigned \u201cthat\u2019s just the way we\u2019ve always done it around here.\u201d","title":"Writing Is Thinking"},{"location":"Highlights/Readwise/Articles/Writing%20Is%20Thinking/#writing-is-thinking","text":"","title":"Writing Is Thinking"},{"location":"Highlights/Readwise/Articles/Writing%20Is%20Thinking/#metadata","text":"Author: [[alistapart.com]] Full Title: Writing Is Thinking Category: #Type/Highlights/Article URL: https://alistapart.com/article/writing-is-thinking/","title":"Metadata"},{"location":"Highlights/Readwise/Articles/Writing%20Is%20Thinking/#highlights","text":"I\u2019m asking that you start with thinking. I suspect, if you\u2019re a reader, you\u2019re already a thinker\u2014which means you\u2019re halfway there. Really. Because writing\u2014that first leap into taking your idea and making it a Thing People Read\u2014isn\u2019t really about wording. It\u2019s about thinking. And if you can tell the difference between an article that knows what it\u2019s about and one that exists purely to sell ad space, then you\u2019re pretty good at that already. Think about the things you had to look up on the internet just to figure out how to do your current job. Or maybe those things aren\u2019t even on the internet\u2014you learned from direct experience. You should write that stuff down, because when you connect your ideas into a written piece, you give voice and direction to something that otherwise just rattles around in the form of entrenched habits and beliefs\u2014a resigned \u201cthat\u2019s just the way we\u2019ve always done it around here.\u201d","title":"Highlights"},{"location":"Highlights/Readwise/Articles/Writing%20Technical%20Design%20Docs%2C%20Revisited%20-%20Machine%20Words%20-%20Medium/","text":"Writing Technical Design Docs, Revisited - Machine Words - Medium \u00b6 Metadata \u00b6 Author: Full Title: Writing Technical Design Docs, Revisited - Machine Words - Medium Category: #Type/Highlights/Article URL: https://medium.com/machine-words/writing-technical-design-docs-revisited-850d36570ec Highlights \u00b6 Description of the Problem Give a brief (one paragraph) summary of the problem you are solving. Work to keep away from technical detail. Try instead to talk about this in terms of the problem as it pertains to your customers. At the end of reading this document, any team member should be able to understand the problem, how you intend to solve it, and who are the stakeholders. Solution Requirements Briefly describe what is required of a solution which addresses the problem. Try to steer clear of the how (implementation detail) and concentrate on what is required any solution in order to address the problem outlined above. Glossary Link to the service wide glossary, and define any new terms used in this document. Out of Scope (Non-goals) Explicitly call out what is not in scope (Sometimes articulating what you are not going to do is an easier way to define scope than to talk about what you are going to do.) Assumptions What are you assuming will be true or in place to make your solution successful? Solution Your solution goes here. Start by including a high level diagram and decompose from there. Please diagram (where possible) how your solution interacts with other subsystems and services (including sequence diagrams for complex interactions). Aim to answer: What are you going to deliver? What are your upstream and downstream dependencies? How does it fit in to the broader service? How will it scale? What are the limits of your solution? How will you ensure fault tolerance and quick recovery after failure? How might your solution evolve to meet future requirements? Risks and Open Issues If there are any risks or unknowns, list them here. Are there any open questions which could impact your design for which you do not currently have answers? How are you going to get answers? Will any required team members be loaned to other teams during the time slated for implementation? Are all of required dependencies available in all the regions you need them? What are the one way doors, and are we sure we want to go through them? Work Required Include a high level breakdown of the work required to implement your proposed solution, including t-shirt size estimates (S, M, XL) where appropriate. Also, specifically call out if this solution requires resources from other teams to be completed (away teams, dependencies etc.) High-level Test Plan At a high level, describe how your chosen solution be tested. References Links to any other documents that may be relevant, or sources you wish to cite.","title":"Writing Technical Design Docs, Revisited - Machine Words - Medium"},{"location":"Highlights/Readwise/Articles/Writing%20Technical%20Design%20Docs%2C%20Revisited%20-%20Machine%20Words%20-%20Medium/#writing-technical-design-docs-revisited-machine-words-medium","text":"","title":"Writing Technical Design Docs, Revisited - Machine Words - Medium"},{"location":"Highlights/Readwise/Articles/Writing%20Technical%20Design%20Docs%2C%20Revisited%20-%20Machine%20Words%20-%20Medium/#metadata","text":"Author: Full Title: Writing Technical Design Docs, Revisited - Machine Words - Medium Category: #Type/Highlights/Article URL: https://medium.com/machine-words/writing-technical-design-docs-revisited-850d36570ec","title":"Metadata"},{"location":"Highlights/Readwise/Articles/Writing%20Technical%20Design%20Docs%2C%20Revisited%20-%20Machine%20Words%20-%20Medium/#highlights","text":"Description of the Problem Give a brief (one paragraph) summary of the problem you are solving. Work to keep away from technical detail. Try instead to talk about this in terms of the problem as it pertains to your customers. At the end of reading this document, any team member should be able to understand the problem, how you intend to solve it, and who are the stakeholders. Solution Requirements Briefly describe what is required of a solution which addresses the problem. Try to steer clear of the how (implementation detail) and concentrate on what is required any solution in order to address the problem outlined above. Glossary Link to the service wide glossary, and define any new terms used in this document. Out of Scope (Non-goals) Explicitly call out what is not in scope (Sometimes articulating what you are not going to do is an easier way to define scope than to talk about what you are going to do.) Assumptions What are you assuming will be true or in place to make your solution successful? Solution Your solution goes here. Start by including a high level diagram and decompose from there. Please diagram (where possible) how your solution interacts with other subsystems and services (including sequence diagrams for complex interactions). Aim to answer: What are you going to deliver? What are your upstream and downstream dependencies? How does it fit in to the broader service? How will it scale? What are the limits of your solution? How will you ensure fault tolerance and quick recovery after failure? How might your solution evolve to meet future requirements? Risks and Open Issues If there are any risks or unknowns, list them here. Are there any open questions which could impact your design for which you do not currently have answers? How are you going to get answers? Will any required team members be loaned to other teams during the time slated for implementation? Are all of required dependencies available in all the regions you need them? What are the one way doors, and are we sure we want to go through them? Work Required Include a high level breakdown of the work required to implement your proposed solution, including t-shirt size estimates (S, M, XL) where appropriate. Also, specifically call out if this solution requires resources from other teams to be completed (away teams, dependencies etc.) High-level Test Plan At a high level, describe how your chosen solution be tested. References Links to any other documents that may be relevant, or sources you wish to cite.","title":"Highlights"},{"location":"Highlights/Readwise/Articles/Writing%20Well%20A%20Must-Have%20Skill%20That%20No%20One%20Teaches%20Data%20Scientists/","text":"Writing Well: A Must-Have Skill That No One Teaches Data Scientists \u00b6 Metadata \u00b6 Author: [[Nityesh Agarwal]] Full Title: Writing Well: A Must-Have Skill That No One Teaches Data Scientists Category: #Type/Highlights/Article URL: https://medium.com/p/34a1e8b1b724 Highlights \u00b6 Being a Good Writer Boosts the Arc of Your Entire Career Grabbing the valuable attention of people around you","title":"Writing Well: A Must-Have Skill That No One Teaches Data Scientists"},{"location":"Highlights/Readwise/Articles/Writing%20Well%20A%20Must-Have%20Skill%20That%20No%20One%20Teaches%20Data%20Scientists/#writing-well-a-must-have-skill-that-no-one-teaches-data-scientists","text":"","title":"Writing Well: A Must-Have Skill That No One Teaches Data Scientists"},{"location":"Highlights/Readwise/Articles/Writing%20Well%20A%20Must-Have%20Skill%20That%20No%20One%20Teaches%20Data%20Scientists/#metadata","text":"Author: [[Nityesh Agarwal]] Full Title: Writing Well: A Must-Have Skill That No One Teaches Data Scientists Category: #Type/Highlights/Article URL: https://medium.com/p/34a1e8b1b724","title":"Metadata"},{"location":"Highlights/Readwise/Articles/Writing%20Well%20A%20Must-Have%20Skill%20That%20No%20One%20Teaches%20Data%20Scientists/#highlights","text":"Being a Good Writer Boosts the Arc of Your Entire Career Grabbing the valuable attention of people around you","title":"Highlights"},{"location":"Highlights/Readwise/Articles/Wtf%20Is%20a%20Zettelkasten%20%20Zettlr/","text":"\"Wtf Is a Zettelkasten?\" | Zettlr \u00b6 Metadata \u00b6 Author: Full Title: \"Wtf Is a Zettelkasten?\" | Zettlr Category: #Type/Highlights/Article URL: https://www.zettlr.com/post/what-is-a-zettelkasten Highlights \u00b6 Praised by many online outlets as the solution to our knowledge problems, the existing tutorials and guides on how to actually make use of this idea tend to complicate matters a lot. Many people advertising their expertise on the Zettelkasten method are extremely unhelpful when it comes to actually realising a Zettelkasten that works for you. After all, the question of \"how do I manage my knowledge?\" boils down to two components. The first thing you must respect when beginning to structure your knowledge is exactly that: a certain structure. This is what people like us can explain to you and help you with. But the second thing is where you are completely on your own: self reflection. To manage your knowledge, you have to know how you work. It does not help you to receive tips from people telling you what the contents of your knowledge management system should look like, because these vary between all users. Some people need to only write down thoughts as in a diary. Some people need to write down using bullet lists, while some need to write whole paragraphs. And some \u2014 mainly researchers managing a lot of texts they've read \u2014 need to preserve a lot of meta information such as the originating work, page numbers and cross-references. Structure and Self-Reflection The structure of a Zettelkasten is fairly easy described: It's a database. It is simply a place where you file your knowledge in a semi-structured way. What you need to do is: Conceive of a basic, but consistent structure of your notes. Elements that have to be present everywhere, such as an ID, some tags to categorise your thoughts, and the contents. File them in one system, and one system only. Having your notes littered around in different systems (some in Word documents and some in plain text files) does not help and complicates matters. Stick with these basic structural elements. They need to be stable; it confuses you if you switch from using, e.g., an ID in each file at the top to switching to an ID at the bottom of each file. If you change these underlying structures, you'll have to change them everywhere. Do not overdo the structure. Try to keep it really simple. And by \"really\" we really mean simple. If the stable structure of your Zettelkasten contains more properties than an ID, some tags (or categories, depending on the system) and internal cross-references to other notes, you will very soon find yourself adapting your Zettelkasten a lot in the early stages, which will drill down on your motivation so hard it is likely going to keep you from keeping up your work. The stable structural elements should be so generic they'll fit to anything. The more important part of a Zettelkasten therefore is self reflection. You need to be constantly on the watch for how you work. This is a habit that you'll need to develop over time and nobody can ease this way with a tutorial. Whenever you are writing or reading a text, you need to develop a way of constantly thinking \"what am I doing currently? Is this good?\" Additionally, you need to anticipate the future: what problems are you likely going to run into in the future? Of course you shouldn't overdo it with thinking about the future, because nobody can foresee the future; but you will soon spot some bottlenecks that are destined to become a problem. You need to realise these before you are halfway in a solid Zettelkasten. Because changing thousands of files can become a headache very soon. In fact, the more you read on how to do a Zettelkasten, the less you'll actually know, because a lot of it depends on intuition and self-observation. And this is something no tutorial can teach you. You will have to develop faith in yourself that what you do is not bad, but actually quite useful. Do not listen too much to too specific advises on how to start a Zettelkasten. Just start and use the structure you need. And stop reading tutorials on Zettelk\u00e4sten.","title":"\"Wtf Is a Zettelkasten?\" | Zettlr"},{"location":"Highlights/Readwise/Articles/Wtf%20Is%20a%20Zettelkasten%20%20Zettlr/#wtf-is-a-zettelkasten-zettlr","text":"","title":"\"Wtf Is a Zettelkasten?\" | Zettlr"},{"location":"Highlights/Readwise/Articles/Wtf%20Is%20a%20Zettelkasten%20%20Zettlr/#metadata","text":"Author: Full Title: \"Wtf Is a Zettelkasten?\" | Zettlr Category: #Type/Highlights/Article URL: https://www.zettlr.com/post/what-is-a-zettelkasten","title":"Metadata"},{"location":"Highlights/Readwise/Articles/Wtf%20Is%20a%20Zettelkasten%20%20Zettlr/#highlights","text":"Praised by many online outlets as the solution to our knowledge problems, the existing tutorials and guides on how to actually make use of this idea tend to complicate matters a lot. Many people advertising their expertise on the Zettelkasten method are extremely unhelpful when it comes to actually realising a Zettelkasten that works for you. After all, the question of \"how do I manage my knowledge?\" boils down to two components. The first thing you must respect when beginning to structure your knowledge is exactly that: a certain structure. This is what people like us can explain to you and help you with. But the second thing is where you are completely on your own: self reflection. To manage your knowledge, you have to know how you work. It does not help you to receive tips from people telling you what the contents of your knowledge management system should look like, because these vary between all users. Some people need to only write down thoughts as in a diary. Some people need to write down using bullet lists, while some need to write whole paragraphs. And some \u2014 mainly researchers managing a lot of texts they've read \u2014 need to preserve a lot of meta information such as the originating work, page numbers and cross-references. Structure and Self-Reflection The structure of a Zettelkasten is fairly easy described: It's a database. It is simply a place where you file your knowledge in a semi-structured way. What you need to do is: Conceive of a basic, but consistent structure of your notes. Elements that have to be present everywhere, such as an ID, some tags to categorise your thoughts, and the contents. File them in one system, and one system only. Having your notes littered around in different systems (some in Word documents and some in plain text files) does not help and complicates matters. Stick with these basic structural elements. They need to be stable; it confuses you if you switch from using, e.g., an ID in each file at the top to switching to an ID at the bottom of each file. If you change these underlying structures, you'll have to change them everywhere. Do not overdo the structure. Try to keep it really simple. And by \"really\" we really mean simple. If the stable structure of your Zettelkasten contains more properties than an ID, some tags (or categories, depending on the system) and internal cross-references to other notes, you will very soon find yourself adapting your Zettelkasten a lot in the early stages, which will drill down on your motivation so hard it is likely going to keep you from keeping up your work. The stable structural elements should be so generic they'll fit to anything. The more important part of a Zettelkasten therefore is self reflection. You need to be constantly on the watch for how you work. This is a habit that you'll need to develop over time and nobody can ease this way with a tutorial. Whenever you are writing or reading a text, you need to develop a way of constantly thinking \"what am I doing currently? Is this good?\" Additionally, you need to anticipate the future: what problems are you likely going to run into in the future? Of course you shouldn't overdo it with thinking about the future, because nobody can foresee the future; but you will soon spot some bottlenecks that are destined to become a problem. You need to realise these before you are halfway in a solid Zettelkasten. Because changing thousands of files can become a headache very soon. In fact, the more you read on how to do a Zettelkasten, the less you'll actually know, because a lot of it depends on intuition and self-observation. And this is something no tutorial can teach you. You will have to develop faith in yourself that what you do is not bad, but actually quite useful. Do not listen too much to too specific advises on how to start a Zettelkasten. Just start and use the structure you need. And stop reading tutorials on Zettelk\u00e4sten.","title":"Highlights"},{"location":"Highlights/Readwise/Articles/You%20Need%20a%20Budget%2013%20Parallels%20Between%20Money%20and%20Productivity%20-%20Forte%20Labs/","text":"You Need a Budget: 13 Parallels Between Money and Productivity - Forte Labs \u00b6 Metadata \u00b6 Author: [[fortelabs.co]] Full Title: You Need a Budget: 13 Parallels Between Money and Productivity - Forte Labs Category: #Type/Highlights/Article URL: https://fortelabs.co/blog/you-need-a-budget-13-parallels-between-money-and-productivity/ Highlights \u00b6 My interest in this book is three-fold: I\u2019m terrible at budgeting and need help I want to borrow principles and methods for managing money to help people manage their time and productivity YNAB has built an incredibly strong brand and community, and I want to learn from them as I write my own book As I read and digested the YNAB approach to personal finance, I began to sense a deep connection to principles of productivity. I\u2019ve concluded that there is a series of fundamental mindset shifts required to manage both money and work. It isn\u2019t the particular tool or method you use that makes the difference. It is a shift in perspective and attitude. Rule 0: Identify your top priority for your money (growth, supporting your family, freedom, hobbies, fixing the house, security, retirement, learning) Tags: [[favorite]] Rule 1: Give every dollar a job, by creating accounts for each of the goals you want to fund (buying a house, saving for a wedding, buying a car, going on vacation), and assigning a portion of the money you currently have to each of them, until they are fully funded Rule 2: Embrace your true expenses, by creating accounts for each infrequent, but predictable expense (car repair, doctor\u2019s bills, new computer, Christmas gifts) and assigning a portion of the money you currently have to each of them, until they are fully funded Rule 3: Roll with the punches, adapting to each month\u2019s unique circumstances by pulling money from lower priority accounts to fund higher priority ones Rule 4: Age your money, by waiting as long as possible from the moment money comes in, to the moment it is spent, which creates a cash buffer for riding out fluctuations in income and expenses Engage with your money consistently, by making intentional decisions whenever money comes in about which accounts it should fund Once all accounts have been funded, do whatever you want with your money! The parallels between managing a budget and managing time/tasks are striking. It makes sense that they would be: each one requires managing a flow of a valuable, but finite resource. They are both complex domains with many relevant factors to consider, that also have a tremendous impact on our quality of life and future. They both can be partially automated, but not completely, requiring us to make decisions to achieve the outcomes we want. Here are the principles underlying the budgeting method described in this book, that I believe apply equally well to managing our work: Start by aligning with the deeper purpose ask yourself, \u201cWhat do I want my work to do for me?\u201d Replace black and white decisions with tradeoffs YNAB recommends replacing closed-ended, binary questions, such as \u201cAm I within my budget this month?\u201d, with open-ended ones, such as \u201cWhere can I pull funds from to balance my budgets this month?\u201d This inquisitive attitude activates your curiosity, opening up new options you may not have previously considered. Likewise, a more sophisticated way of working replaces black and white questions, such as \u201cDid I get enough done today?\u201d, with more nuanced ones, like \u201cWhat could I have done differently today?\u201d This trains you in viewing your tasks not as good or bad, but as subtle tradeoffs between priorities that you can learn to navigate skillfully. When stuck, surface information needed to make better decisions When we are stuck, whether in budgeting or productivity, it is most often because we simply don\u2019t have the information required to make a confident decision. Instead of judging the feeling of stuckness or overwhelm as our fault, we can view it as a valuable indicator that more information is needed. At work, we\u2019re often seeking more \u201cclarity\u201d before moving forward on something. But there is always a clear next action available to you: any time you\u2019re not sure how to proceed, surface more information. This can include reviewing your emails for the latest updates, talking to colleagues or your boss, or stepping back to make a plan. The trick is to perform these actions without getting sucked into dealing with them. You want to move quickly and touch lightly, staying at a high elevation and looking for only the information that will help you make better decisions about what to do next, postponing any heavy work until after you\u2019ve made those decisions. Tighten the feedback loop between your present and future self Both money and productivity boil down to a relationship between your present and future self. It is the existence of a desired future that necessitates planning and decision making. We are extracting value from the current flow of money/time, to provide our future selves more freedom, wealth, or happiness. Whether you are sitting down to review your budgets, or review your priorities for the week, anything you can do to strengthen that relationship is valuable. Reflecting on the current month\u2019s spending and whether it is in line with your budgets is really about fine-tuning your expectations and behavior. Doing so non-judgmentally allows your two selves to influence each other without fighting each other, encouraging them to follow through on each others\u2019 promises. Tags: [[favorite]] Manage unexpected events by turning them into consistent routines Create milestones to provide a sense of completion","title":"You Need a Budget: 13 Parallels Between Money and Productivity - Forte Labs"},{"location":"Highlights/Readwise/Articles/You%20Need%20a%20Budget%2013%20Parallels%20Between%20Money%20and%20Productivity%20-%20Forte%20Labs/#you-need-a-budget-13-parallels-between-money-and-productivity-forte-labs","text":"","title":"You Need a Budget: 13 Parallels Between Money and Productivity - Forte Labs"},{"location":"Highlights/Readwise/Articles/You%20Need%20a%20Budget%2013%20Parallels%20Between%20Money%20and%20Productivity%20-%20Forte%20Labs/#metadata","text":"Author: [[fortelabs.co]] Full Title: You Need a Budget: 13 Parallels Between Money and Productivity - Forte Labs Category: #Type/Highlights/Article URL: https://fortelabs.co/blog/you-need-a-budget-13-parallels-between-money-and-productivity/","title":"Metadata"},{"location":"Highlights/Readwise/Articles/You%20Need%20a%20Budget%2013%20Parallels%20Between%20Money%20and%20Productivity%20-%20Forte%20Labs/#highlights","text":"My interest in this book is three-fold: I\u2019m terrible at budgeting and need help I want to borrow principles and methods for managing money to help people manage their time and productivity YNAB has built an incredibly strong brand and community, and I want to learn from them as I write my own book As I read and digested the YNAB approach to personal finance, I began to sense a deep connection to principles of productivity. I\u2019ve concluded that there is a series of fundamental mindset shifts required to manage both money and work. It isn\u2019t the particular tool or method you use that makes the difference. It is a shift in perspective and attitude. Rule 0: Identify your top priority for your money (growth, supporting your family, freedom, hobbies, fixing the house, security, retirement, learning) Tags: [[favorite]] Rule 1: Give every dollar a job, by creating accounts for each of the goals you want to fund (buying a house, saving for a wedding, buying a car, going on vacation), and assigning a portion of the money you currently have to each of them, until they are fully funded Rule 2: Embrace your true expenses, by creating accounts for each infrequent, but predictable expense (car repair, doctor\u2019s bills, new computer, Christmas gifts) and assigning a portion of the money you currently have to each of them, until they are fully funded Rule 3: Roll with the punches, adapting to each month\u2019s unique circumstances by pulling money from lower priority accounts to fund higher priority ones Rule 4: Age your money, by waiting as long as possible from the moment money comes in, to the moment it is spent, which creates a cash buffer for riding out fluctuations in income and expenses Engage with your money consistently, by making intentional decisions whenever money comes in about which accounts it should fund Once all accounts have been funded, do whatever you want with your money! The parallels between managing a budget and managing time/tasks are striking. It makes sense that they would be: each one requires managing a flow of a valuable, but finite resource. They are both complex domains with many relevant factors to consider, that also have a tremendous impact on our quality of life and future. They both can be partially automated, but not completely, requiring us to make decisions to achieve the outcomes we want. Here are the principles underlying the budgeting method described in this book, that I believe apply equally well to managing our work: Start by aligning with the deeper purpose ask yourself, \u201cWhat do I want my work to do for me?\u201d Replace black and white decisions with tradeoffs YNAB recommends replacing closed-ended, binary questions, such as \u201cAm I within my budget this month?\u201d, with open-ended ones, such as \u201cWhere can I pull funds from to balance my budgets this month?\u201d This inquisitive attitude activates your curiosity, opening up new options you may not have previously considered. Likewise, a more sophisticated way of working replaces black and white questions, such as \u201cDid I get enough done today?\u201d, with more nuanced ones, like \u201cWhat could I have done differently today?\u201d This trains you in viewing your tasks not as good or bad, but as subtle tradeoffs between priorities that you can learn to navigate skillfully. When stuck, surface information needed to make better decisions When we are stuck, whether in budgeting or productivity, it is most often because we simply don\u2019t have the information required to make a confident decision. Instead of judging the feeling of stuckness or overwhelm as our fault, we can view it as a valuable indicator that more information is needed. At work, we\u2019re often seeking more \u201cclarity\u201d before moving forward on something. But there is always a clear next action available to you: any time you\u2019re not sure how to proceed, surface more information. This can include reviewing your emails for the latest updates, talking to colleagues or your boss, or stepping back to make a plan. The trick is to perform these actions without getting sucked into dealing with them. You want to move quickly and touch lightly, staying at a high elevation and looking for only the information that will help you make better decisions about what to do next, postponing any heavy work until after you\u2019ve made those decisions. Tighten the feedback loop between your present and future self Both money and productivity boil down to a relationship between your present and future self. It is the existence of a desired future that necessitates planning and decision making. We are extracting value from the current flow of money/time, to provide our future selves more freedom, wealth, or happiness. Whether you are sitting down to review your budgets, or review your priorities for the week, anything you can do to strengthen that relationship is valuable. Reflecting on the current month\u2019s spending and whether it is in line with your budgets is really about fine-tuning your expectations and behavior. Doing so non-judgmentally allows your two selves to influence each other without fighting each other, encouraging them to follow through on each others\u2019 promises. Tags: [[favorite]] Manage unexpected events by turning them into consistent routines Create milestones to provide a sense of completion","title":"Highlights"},{"location":"Highlights/Readwise/Articles/You%20Should%20Make%20a%20Blog%21/","text":"You Should Make a Blog! \u00b6 Metadata \u00b6 Author: Full Title: You Should Make a Blog! Category: #Type/Highlights/Article URL: https://drewdevault.com/make-a-blog Highlights \u00b6 Read these blogs Here\u2019s a list of blogs which have taken me up on this offer, roughly sorted from most to least active: gokigen Neil Panchal Juraj Oravec Alexander Pluhar L. McNulty\u2019s blog Lauro Silva berfr blog Nils Schulte\u2019s blog Nix Adventures Stefan Schick\u2019s personal Blog Limero Hallau World brett.icu DS log Colton\u2019s Blog (pixel)desu.blog Todd Davies\u2019 blog Daniel Playfair Cal\u2019s Blog xy2_ buffer = NULL; Thomas Dagenais\u2019 Blog | i64.dev papatutuwawa@home:~$ kindly [esotericnonsense %] ~/blog Un morceau de toile Rocket Nine Labs Chris Vittal\u2019s blog Mochiro.moe Tretinha\u2019s Lair Notopygos Naz\u2019s Notes WritingGale\u2019s Blog Sean Behan \u2014 converting coffee into code Christophe Slim Saura\u2019s Blog Daniel Benjamin Miller Anon\u2019s Blog Thrill Seeker zdsfa Axel Svensson Cole on fediverse.blog Ohryan on fediverse.blog","title":"You Should Make a Blog!"},{"location":"Highlights/Readwise/Articles/You%20Should%20Make%20a%20Blog%21/#you-should-make-a-blog","text":"","title":"You Should Make a Blog!"},{"location":"Highlights/Readwise/Articles/You%20Should%20Make%20a%20Blog%21/#metadata","text":"Author: Full Title: You Should Make a Blog! Category: #Type/Highlights/Article URL: https://drewdevault.com/make-a-blog","title":"Metadata"},{"location":"Highlights/Readwise/Articles/You%20Should%20Make%20a%20Blog%21/#highlights","text":"Read these blogs Here\u2019s a list of blogs which have taken me up on this offer, roughly sorted from most to least active: gokigen Neil Panchal Juraj Oravec Alexander Pluhar L. McNulty\u2019s blog Lauro Silva berfr blog Nils Schulte\u2019s blog Nix Adventures Stefan Schick\u2019s personal Blog Limero Hallau World brett.icu DS log Colton\u2019s Blog (pixel)desu.blog Todd Davies\u2019 blog Daniel Playfair Cal\u2019s Blog xy2_ buffer = NULL; Thomas Dagenais\u2019 Blog | i64.dev papatutuwawa@home:~$ kindly [esotericnonsense %] ~/blog Un morceau de toile Rocket Nine Labs Chris Vittal\u2019s blog Mochiro.moe Tretinha\u2019s Lair Notopygos Naz\u2019s Notes WritingGale\u2019s Blog Sean Behan \u2014 converting coffee into code Christophe Slim Saura\u2019s Blog Daniel Benjamin Miller Anon\u2019s Blog Thrill Seeker zdsfa Axel Svensson Cole on fediverse.blog Ohryan on fediverse.blog","title":"Highlights"},{"location":"Highlights/Readwise/Articles/Your%20Productivity%20Obsession%20Might%20Be%20Making%20You%20Less%20Productive/","text":"Your Productivity Obsession Might Be Making You Less Productive \u00b6 Metadata \u00b6 Author: Full Title: Your Productivity Obsession Might Be Making You Less Productive Category: #Type/Highlights/Article URL: https://www.fastcompany.com/90389932/why-you-should-stop-focusing-on-productivity Highlights \u00b6 The problems with productivity First, focusing on productivity tends to narrow our view. This can be demotivating for several reasons. A productivity-above-all lens tends to put our attention on the details and nitty-gritty parts of our task, rather than the big picture. Counting hours, widgets, or rows of the spreadsheet won\u2019t get you excited about your work. If you want to find meaning in what you do, you need to focus on why you\u2019re doing it in the first place. That\u2019s the kind of thing that will get you up in the morning. Note: Wow. Need this every day. Focusing too much on productivity can also be detrimental because it adds pressure. That can be extremely paralyzing. When something feels too big, too much, or just generally unreachable, we\u2019re less likely to try to accomplish it When I say that you should stop obsessing about productivity, I\u2019m not telling you to stop being productive. What I am saying is to find other things to focus on instead. Here are some ideas. Focus on what you enjoy: I get it, not every task you do will make you want to jump up and down with excitement. But as much as you can, zero in on the aspect of that task that you enjoy. When you love what you\u2019re doing, it feels less like work, and you\u2019re more motivated to tackle a task or dig in. Curate your work: The way to do more of what you love is to raise your hand for projects that motivate you. Fill your plate and your list of responsibilities with things that add value for the company, and that makes you excited to go to work in the morning. Then you\u2019ll naturally have less time for projects that aren\u2019t your favorite, and those can go to others who are more excited about tackling them. Don\u2019t get too caught up in tedious work: For the things that must get done and are just not going to be stimulating to you, focus on muscling through. Just get them done so you can get on to the more exciting tasks and juicy work. Take small steps: Focus on taking small steps forward. You\u2019ve looked at the big picture and how your work contributes to it. Now, focus on taking one step at a time to get there. Sometimes it even helps to tell yourself you\u2019re just going to work on something for 10 minutes.","title":"Your Productivity Obsession Might Be Making You Less Productive"},{"location":"Highlights/Readwise/Articles/Your%20Productivity%20Obsession%20Might%20Be%20Making%20You%20Less%20Productive/#your-productivity-obsession-might-be-making-you-less-productive","text":"","title":"Your Productivity Obsession Might Be Making You Less Productive"},{"location":"Highlights/Readwise/Articles/Your%20Productivity%20Obsession%20Might%20Be%20Making%20You%20Less%20Productive/#metadata","text":"Author: Full Title: Your Productivity Obsession Might Be Making You Less Productive Category: #Type/Highlights/Article URL: https://www.fastcompany.com/90389932/why-you-should-stop-focusing-on-productivity","title":"Metadata"},{"location":"Highlights/Readwise/Articles/Your%20Productivity%20Obsession%20Might%20Be%20Making%20You%20Less%20Productive/#highlights","text":"The problems with productivity First, focusing on productivity tends to narrow our view. This can be demotivating for several reasons. A productivity-above-all lens tends to put our attention on the details and nitty-gritty parts of our task, rather than the big picture. Counting hours, widgets, or rows of the spreadsheet won\u2019t get you excited about your work. If you want to find meaning in what you do, you need to focus on why you\u2019re doing it in the first place. That\u2019s the kind of thing that will get you up in the morning. Note: Wow. Need this every day. Focusing too much on productivity can also be detrimental because it adds pressure. That can be extremely paralyzing. When something feels too big, too much, or just generally unreachable, we\u2019re less likely to try to accomplish it When I say that you should stop obsessing about productivity, I\u2019m not telling you to stop being productive. What I am saying is to find other things to focus on instead. Here are some ideas. Focus on what you enjoy: I get it, not every task you do will make you want to jump up and down with excitement. But as much as you can, zero in on the aspect of that task that you enjoy. When you love what you\u2019re doing, it feels less like work, and you\u2019re more motivated to tackle a task or dig in. Curate your work: The way to do more of what you love is to raise your hand for projects that motivate you. Fill your plate and your list of responsibilities with things that add value for the company, and that makes you excited to go to work in the morning. Then you\u2019ll naturally have less time for projects that aren\u2019t your favorite, and those can go to others who are more excited about tackling them. Don\u2019t get too caught up in tedious work: For the things that must get done and are just not going to be stimulating to you, focus on muscling through. Just get them done so you can get on to the more exciting tasks and juicy work. Take small steps: Focus on taking small steps forward. You\u2019ve looked at the big picture and how your work contributes to it. Now, focus on taking one step at a time to get there. Sometimes it even helps to tell yourself you\u2019re just going to work on something for 10 minutes.","title":"Highlights"},{"location":"Highlights/Readwise/Articles/Zen%20and%20the%20Art%20of%20File%20and%20Folder%20Organization/","text":"Zen and the Art of File and Folder Organization \u00b6 Metadata \u00b6 Author: [[Mark Virtue]] Full Title: Zen and the Art of File and Folder Organization Category: #Type/Highlights/Article URL: https://www.howtogeek.com/howto/15677/zen-and-the-art-of-file-and-folder-organization/ Highlights \u00b6 Settings is where I store the configuration files and other program data files for my installed software Tip #2. When You Decide on Your System, Stick to It! Tip #3. Choose the Root Folder of Your Structure Carefully Every data file (document, photo, music file, etc) that you create, own or is important to you, no matter where it came from, should be found within one single folder, and that one single folder should be located at the root of your C: drive (as a sub-folder of C:). In other words, do not base your folder structure in standard folders like \u201cMy Documents\u201d. If you do, then you\u2019re leaving it up to the operating system engineers to decide what folder structure is best for you. And every operating system has a different system! In Windows 7 your files are found in C:\\Users\\YourName, whilst on Windows XP it was C:\\Documents and Settings\\YourName\\My Documents. In UNIX systems it\u2019s often /home/YourName. These standard default folders tend to fill up with junk files and folders that are not at all important to you. \u201cMy Documents\u201d is the worst offender. Every second piece of software you install, it seems, likes to create its own folder in the \u201cMy Documents\u201d folder. These folders usually don\u2019t fit within your organizational structure, so don\u2019t use them! In fact, don\u2019t even use the \u201cMy Documents\u201d folder at all. Allow it to fill up with junk, and then simply ignore it. It sounds heretical, but: Don\u2019t ever visit your \u201cMy Documents\u201d folder! Remove your icons/links to \u201cMy Documents\u201d and replace them with links to the folders you created and you care about! If you only have one hard disk (C:), then create a dedicated folder that will contain all your files \u2013 something like C:\\Files. The name of the folder is not important, but make it a single, brief word. There are several reasons for this: When creating a backup regime, it\u2019s easy to decide what files should be backed up \u2013 they\u2019re all in the one folder! If you ever decide to trade in your computer for a new one, you know exactly which files to migrate You will always know where to begin a search for any file If you synchronize files with other computers, it makes your synchronization routines very simple. It also causes all your shortcuts to continue to work on the other machines (more about this in tip #24, below). Once you\u2019ve decided where your files should go, then put all your files in there \u2013 Everything! Completely disregard the standard, default folders that are created for you by the operating system (\u201cMy Music\u201d, \u201cMy Pictures\u201d, etc). In fact, you can actually relocate many of those folders into your own structure The more completely you get all your data files (documents, photos, music, etc) and all your configuration settings into that one folder, then the easier it will be to perform all of the above tasks. Once this has been done, and all your files live in one folder, all the other folders in C:\\ can be thought of as \u201coperating system\u201d folders, and therefore of little day-to-day interest for us. Tip #6. Move the Standard User Folders into Your Own Folder Structure Even if you\u2019re not using them, Windows will still often treat them as the default storage location for many types of files. When you go to save a standard file type, it can become annoying to be automatically prompted to save it in a folder that\u2019s not part of your own file structure. Tip #9. Use Shortcuts! Everywhere! This is probably the single most useful and important tip we can offer. A shortcut allows a file to be in two places at once. The \u201ccorrect\u201d place for a file, according to our organizational rationale, is very often a very inconvenient place for that file to be located. Just because it\u2019s correctly filed doesn\u2019t mean it\u2019s easy to get to. Your file may be \u201ccorrectly\u201d buried six levels deep in your sub-folder structure, but you may need regular and speedy access to this file every day. You could always move it to a more convenient location, but that would mean that you would need to re-file back to its \u201ccorrect\u201d location it every time you\u2019d finished working on it. Most unsatisfactory. A file may simply \u201cbelong\u201d in two or more different locations within your file structure. For example, say you\u2019re an accountant and you have just completed the 2009 tax return for John Smith. It might make sense to you to call this file 2009 Tax Return.doc and file it under Clients\\John Smith. But it may also be important to you to have the 2009 tax returns from all your clients together in the one place. So you might also want to call the file John Smith.doc and file it under Tax Returns\\2009. The problem is, in a purely hierarchical filing system, you can\u2019t put it in both places. Grrrrr! So why are shortcuts so great? Because they allow us to easily overcome the main limitation of hierarchical file systems, and put a file in two (or more) places at the same time. You will always have files that don\u2019t play nice with your organizational rationale, and can\u2019t be filed in only one place. They demand to exist in two places. Shortcuts allow this! Furthermore, they allow you to collect your most often-opened files and folders together in one spot for convenient access. The cool part is that the original files stay where they are, safe forever in their perfectly organized location. So your collection of most often-opened files can \u2013 and should \u2013 become a collection of shortcuts! \u201cOnly ever have one copy of a file \u2013 never have two copies of the same file. Use a shortcut instead\u201d Tip #10. Separate Application Files from Data Files Application files are the components of the software you\u2019ve installed (e.g. Microsoft Word, Adobe Photoshop or Internet Explorer). Data files are the files that you\u2019ve created for yourself using that software (e.g. Word Documents, digital photos, emails or playlists). Tip #11. Organize Files Based on Purpose, Not on File Type Tip #12. Maintain the Same Folder Structure on All Your Computers Tip #13. Create an \u201cInbox\u201d Folder Tip #14. Ensure You have Only One \u201cInbox\u201d Folder Once you\u2019ve created your \u201cInbox\u201d folder, don\u2019t use any other folder location as your \u201cto-do list\u201d. Throw every incoming or created file into the Inbox folder as you create/receive it. This keeps the rest of your computer pristine and free of randomly created or downloaded junk. The last thing you want to be doing is checking multiple folders to see all your current tasks and projects. Gather them all together into one folder. Here are some tips to help ensure you only have one Inbox: Set the default \u201csave\u201d location of all your programs to this folder. Set the default \u201cdownload\u201d location for your browser to this folder. If this folder is not your desktop (recommended) then also see if you can make a point of not putting \u201cto-do\u201d files on your desktop. This keeps your desktop uncluttered and Zen-like: Tip #15. Be Vigilant about Clearing Your \u201cInbox\u201d Folder This is one of the keys to staying organized. If you let your \u201cInbox\u201d overflow (i.e. allow there to be more than, say, 30 files or folders in there), then you\u2019re probably going to start feeling like you\u2019re overwhelmed: You\u2019re not keeping up with your to-do list. Once your Inbox gets beyond a certain point (around 30 files, studies have shown), then you\u2019ll simply start to avoid it. You may continue to put files in there, but you\u2019ll be scared to look at it, fearing the \u201cout of control\u201d feeling that all overworked, chaotic or just plain disorganized people regularly feel. Tags: [[favorite]] Visit your Inbox/to-do folder regularly (at least five times per day). Scan the folder regularly for files that you have completed working on and are ready for filing. File them immediately. Make it a source of pride to keep the number of files in this folder as small as possible. If you value peace of mind, then make the emptiness of this folder one of your highest (computer) priorities If you know that a particular file has been in the folder for more than, say, six weeks, then admit that you\u2019re not actually going to get around to processing it, and move it to its final resting place. File Everything Immediately, and Use Shortcuts for Your Active Projects Use Directory Symbolic Links (or Junctions) to Maintain One Unified Folder Structure Did you know that it\u2019s actually possible to store your files on the D: drive and yet access them as if they were on the C: drive? And no, we\u2019re not talking about shortcuts here (although the concept is very similar). By using the shell command mklink, you can essentially take a folder that lives on one drive and create an alias for it on a different drive (you can do lots more than that with mklink \u2013 for a full rundown on this programs capabilities, see our dedicated article). These aliases are called directory symbolic links (and used to be known as junctions). You can think of them as \u201cvirtual\u201d folders. They function exactly like regular folders, except they\u2019re physically located somewhere else. mklink /d c:\\files d:\\ Tags: [[favorite]] Needless to say, you must run these commands from a command prompt \u2013 click the Start button, type cmd and press Enter Customize Your Folder Icons Tidy Your Start Menu In this structure, Utilities means software whose job it is to keep the computer itself running smoothly (configuration tools, backup software, Zip programs, etc). Applications refers to any productivity software that doesn\u2019t fit under the headings Multimedia, Graphics, Internet, etc. With the Windows Start Menu (all version of Windows), Microsoft has decided that there be two parallel folder structures to store your Start Menu shortcuts. One for you (the logged-in user of the computer) and one for all users of the computer. Having two parallel structures can often be redundant: If you are the only user of the computer, then having two parallel structures is totally redundant. Even if you have several users that regularly log into the computer, most of your installed software will need to be made available to all users, and should thus be moved out of the \u201cjust you\u201d version of the Start Menu and into the \u201call users\u201d area. To take control of your Start Menu, so you can start organizing it, you\u2019ll need to know how to access the actual folders and shortcut files that make up the Start Menu (both versions of it). To find these folders and files, click the Start button and then right-click on the All Programs text (Windows XP users should right-click on the Start button itself): The Open option refers to the \u201cjust you\u201d version of the Start Menu, while the Open All Users option refers to the \u201call users\u201d version. Click on the one you want to organize. A Windows Explorer window then opens with your chosen version of the Start Menu selected. From there it\u2019s easy. Double-click on the Programs folder and you\u2019ll see all your folders and shortcuts. Now you can delete/rename/move until it\u2019s just the way you want it. Note: When you\u2019re reorganizing your Start Menu, you may want to have two Explorer windows open at the same time \u2013 one showing the \u201cjust you\u201d version and one showing the \u201call users\u201d version. You can drag-and-drop between the windows. Keep Your Start Menu Tidy Once you have a perfectly organized Start Menu, try to be a little vigilant about keeping it that way. Every time you install a new piece of software, the icons that get created will almost certainly violate your organizational structure. So to keep your Start Menu pristine and organized, make sure you do the following whenever you install a new piece of software: Check whether the software was installed into the \u201cjust you\u201d area of the Start Menu, or the \u201call users\u201d area, and then move it to the correct area. Remove all the unnecessary icons (like the \u201cRead me\u201d icon, the \u201cHelp\u201d icon (you can always open the help from within the software itself when it\u2019s running), the \u201cUninstall\u201d icon, the link(s)to the manufacturer\u2019s website, etc) Rename the main icon(s) of the software to something brief that makes sense to you. For example, you might like to rename Microsoft Office Word 2010 to simply Word Move the icon(s) into the correct folder based on your Start Menu organizational structure And don\u2019t forget: when you uninstall a piece of software, the software\u2019s uninstall routine is no longer going to be able to remove the software\u2019s icon from the Start Menu (because you moved and/or renamed it), so you\u2019ll need to remove that icon manually. Tidy C:\\ The root of your C: drive (C:) is a common dumping ground for files and folders \u2013 both by the users of your computer and by the software that you install on your computer. It can become a mess. There\u2019s almost no software these days that requires itself to be installed in C:. 99% of the time it can and should be installed into C:\\Program Files. And as for your own files, well, it\u2019s clear that they can (and almost always should) be stored somewhere else. Tidy Your Desktop Move Permanent Items on Your Desktop Away from the Top-Left Corner Synchronize However, if the computers are not always on the same network, then you will at some point need to copy files between them. For files that need to permanently live on both computers, the ideal way to do this is to synchronize the files, as opposed to simply copying them. If you maintain the same file and folder structure on both computers, then you can also sync files depend upon the correct location of other files, like shortcuts, playlists and office documents that link to other office documents, and the synchronized files still work on the other computer! Hide Files You Never Need to See Keep Every Setup File Whenever you download a piece of software, keep it. You\u2019ll never know when you need to reinstall the software. Further, keep with it an Internet shortcut that links back to the website where you originally downloaded it, in case you ever need to check for updates. Try to Minimize the Number of Folders that Contain Both Files and Sub-folders Useful Folders to Create For each one, it\u2019s not so important where the actual folder is located, but it\u2019s very important where you put the shortcut(s) to the folder. You might want to locate the shortcuts: On your Desktop In your \u201cQuick Launch\u201d area (or pinned to your Windows 7 Superbar) In your Windows Explorer \u201cFavorite Links\u201d area Create an \u201cInbox\u201d (\u201cTo-Do\u201d) Folder Create a Folder where Your Current Projects are Collected You can locate this folder in your \u201cInbox\u201d folder, on your desktop, or anywhere at all \u2013 just so long as there\u2019s a way of getting to it quickly, such as putting a link to it in Windows Explorer\u2019s \u201cFavorite Links\u201d area: Create a Folder for Files and Folders that You Regularly Open You will always have a few files that you open regularly, whether it be a spreadsheet of your current accounts, or a favorite playlist. These are not necessarily \u201ccurrent projects\u201d, rather they\u2019re simply files that you always find yourself opening. Typically such files would be located on your desktop (or even better, shortcuts to those files). Why not collect all such shortcuts together and put them in their own special folder? As with the \u201cCurrent Projects\u201d folder (above), you would want to locate that folder somewhere convenient. Below is an example of a folder called \u201cQuick links\u201d, with about seven files (shortcuts) in it, that is accessible through the Windows Quick Launch bar: Tags: [[favorite]] Create a \u201cSet-ups\u201d Folder A typical computer has dozens of applications installed on it. For each piece of software, there are often many different pieces of information you need to keep track of, including: The original installation setup file(s). This can be anything from a simple 100Kb setup.exe file you downloaded from a website, all the way up to a 4Gig ISO file that you copied from a DVD-ROM that you purchased. The home page of the software manufacturer (in case you need to look up something on their support pages, their forum or their online help) The page containing the download link for your actual file (in case you need to re-download it, or download an upgraded version) The serial number Your proof-of-purchase documentation Any other template files, plug-ins, themes, etc that also need to get installed For each piece of software, it\u2019s a great idea to gather all of these files together and put them in a single folder. The folder can be the name of the software (plus possibly a very brief description of what it\u2019s for \u2013 in case you can\u2019t remember what the software does based in its name). Then you would gather all of these folders together into one place, and call it something like \u201cSoftware\u201d or \u201cSetups\u201d. Have a \u201cSettings\u201d Folder These files certainly contain important information that we need, but are often created internally by an application, and saved wherever that application feels is appropriate. A good example of this is the \u201cPST\u201d file that Outlook creates for us and uses to store all our emails, contacts, appointments and so forth. Another example would be the collection of Bookmarks that Firefox stores on your behalf. And yet another example would be the customized settings and configuration files of our all our software. Granted, most Windows programs store their configuration in the Registry, but there are still many programs that use configuration files to store their settings. It can be a very useful idea to create yourself a folder to store all your \u201csettings\u201d \u2013 files that are important to you but which you never actually search for by name and double-click on to open them. Otherwise, next time you go to set up a new computer just the way you want it, you\u2019ll need to spend hours recreating the configuration of your previous computer! Tags: [[favorite]] So how to we get our important files into this folder? Well, we have a few options: Some programs (such as Outlook and its PST files) allow you to place these files wherever you want. If you delve into the program\u2019s options, you will find a setting somewhere that controls the location of the important settings files (or \u201cpersonal storage\u201d \u2013 PST \u2013 when it comes to Outlook) Some programs do not allow you to change such locations in any easy way, but if you get into the Registry, you can sometimes find a registry key that refers to the location of the file(s). Simply move the file into your Settings folder and adjust the registry key to refer to the new location. Some programs stubbornly refuse to allow their settings files to be placed anywhere other then where they stipulate. When faced with programs like these, you have three choices: (1) You can ignore those files, (2) You can copy the files into your Settings folder (let\u2019s face it \u2013 settings don\u2019t change very often), or (3) you can use synchronization software, such as the Windows Briefcase, to make synchronized copies of all your files in your Settings folder. All you then have to do is to remember to run your sync software periodically (perhaps just before you run your backup software!). There are some other things you may decide to locate inside this new \u201cSettings\u201d folder: Exports of registry keys (from the many applications that store their configurations in the Registry). This is useful for backup purposes or for migrating to a new computer Notes you\u2019ve made about all the specific customizations you have made to a particular piece of software (so that you\u2019ll know how to do it all again on your next computer) Shortcuts to webpages that detail how to tweak certain aspects of your operating system or applications so they are just the way you like them (such as how to remove the words \u201cShortcut to\u201d from the beginning of newly created shortcuts). In other words, you\u2019d want to create shortcuts to half the pages on the How-To Geek website! Windows Features that Help with Organization Use the \u201cFavorite Links\u201d Area to Access Oft-Used Folders Some ideas for folders you might want to add there include: Your \u201cInbox\u201d folder (or whatever you\u2019ve called it) \u2013 most important! The base of your filing structure (e.g. C:\\Files) A folder containing shortcuts to often-accessed folders on other computers around the network (shown above as Network Folders) A folder containing shortcuts to your current projects (unless that folder is in your \u201cInbox\u201d folder) Tags: [[favorite]] Customize the Places Bar in the File/Open and File/Save Boxes The easiest way to customize these icons is to use the Group Policy Editor, but not everyone has access to this program. If you do, open it up and navigate to: User Configuration > Administrative Templates > Windows Components > Windows Explorer > Common Open File Dialog If you don\u2019t have access to the Group Policy Editor, then you\u2019ll need to get into the Registry. Navigate to: HKEY_CURRENT_USER \\ Software \\ Microsoft \\ Windows \\ CurrentVersion \\ Policies \\ comdlg32 \\ Placesbar Use the Quick Launch Bar as a Application and File Launcher That Quick Launch bar (to the right of the Start button) is a lot more useful than people give it credit for. Most people simply have half a dozen icons in it, and use it to start just those programs. But it can actually be used to instantly access just about anything in your filing system: Put a Shortcut to Windows Explorer into Your Quick Launch Bar To get it there, locate it in your Start Menu (usually under \u201cAccessories\u201d) and then right-drag it down into your Quick Launch bar (and create a copy). Customize the Starting Folder for Your Windows 7 Explorer Superbar Icon Then, in Target field of the Windows Explorer Properties box that appears, type %windir%\\explorer.exe followed by the path of the folder you wish to start in. For example: %windir%\\explorer.exe C:\\Files If that folder happened to be on the Desktop (and called, say, \u201cInbox\u201d), then you would use the following cleverness: %windir%\\explorer.exe shell:desktop\\Inbox","title":"Zen and the Art of File and Folder Organization"},{"location":"Highlights/Readwise/Articles/Zen%20and%20the%20Art%20of%20File%20and%20Folder%20Organization/#zen-and-the-art-of-file-and-folder-organization","text":"","title":"Zen and the Art of File and Folder Organization"},{"location":"Highlights/Readwise/Articles/Zen%20and%20the%20Art%20of%20File%20and%20Folder%20Organization/#metadata","text":"Author: [[Mark Virtue]] Full Title: Zen and the Art of File and Folder Organization Category: #Type/Highlights/Article URL: https://www.howtogeek.com/howto/15677/zen-and-the-art-of-file-and-folder-organization/","title":"Metadata"},{"location":"Highlights/Readwise/Articles/Zen%20and%20the%20Art%20of%20File%20and%20Folder%20Organization/#highlights","text":"Settings is where I store the configuration files and other program data files for my installed software Tip #2. When You Decide on Your System, Stick to It! Tip #3. Choose the Root Folder of Your Structure Carefully Every data file (document, photo, music file, etc) that you create, own or is important to you, no matter where it came from, should be found within one single folder, and that one single folder should be located at the root of your C: drive (as a sub-folder of C:). In other words, do not base your folder structure in standard folders like \u201cMy Documents\u201d. If you do, then you\u2019re leaving it up to the operating system engineers to decide what folder structure is best for you. And every operating system has a different system! In Windows 7 your files are found in C:\\Users\\YourName, whilst on Windows XP it was C:\\Documents and Settings\\YourName\\My Documents. In UNIX systems it\u2019s often /home/YourName. These standard default folders tend to fill up with junk files and folders that are not at all important to you. \u201cMy Documents\u201d is the worst offender. Every second piece of software you install, it seems, likes to create its own folder in the \u201cMy Documents\u201d folder. These folders usually don\u2019t fit within your organizational structure, so don\u2019t use them! In fact, don\u2019t even use the \u201cMy Documents\u201d folder at all. Allow it to fill up with junk, and then simply ignore it. It sounds heretical, but: Don\u2019t ever visit your \u201cMy Documents\u201d folder! Remove your icons/links to \u201cMy Documents\u201d and replace them with links to the folders you created and you care about! If you only have one hard disk (C:), then create a dedicated folder that will contain all your files \u2013 something like C:\\Files. The name of the folder is not important, but make it a single, brief word. There are several reasons for this: When creating a backup regime, it\u2019s easy to decide what files should be backed up \u2013 they\u2019re all in the one folder! If you ever decide to trade in your computer for a new one, you know exactly which files to migrate You will always know where to begin a search for any file If you synchronize files with other computers, it makes your synchronization routines very simple. It also causes all your shortcuts to continue to work on the other machines (more about this in tip #24, below). Once you\u2019ve decided where your files should go, then put all your files in there \u2013 Everything! Completely disregard the standard, default folders that are created for you by the operating system (\u201cMy Music\u201d, \u201cMy Pictures\u201d, etc). In fact, you can actually relocate many of those folders into your own structure The more completely you get all your data files (documents, photos, music, etc) and all your configuration settings into that one folder, then the easier it will be to perform all of the above tasks. Once this has been done, and all your files live in one folder, all the other folders in C:\\ can be thought of as \u201coperating system\u201d folders, and therefore of little day-to-day interest for us. Tip #6. Move the Standard User Folders into Your Own Folder Structure Even if you\u2019re not using them, Windows will still often treat them as the default storage location for many types of files. When you go to save a standard file type, it can become annoying to be automatically prompted to save it in a folder that\u2019s not part of your own file structure. Tip #9. Use Shortcuts! Everywhere! This is probably the single most useful and important tip we can offer. A shortcut allows a file to be in two places at once. The \u201ccorrect\u201d place for a file, according to our organizational rationale, is very often a very inconvenient place for that file to be located. Just because it\u2019s correctly filed doesn\u2019t mean it\u2019s easy to get to. Your file may be \u201ccorrectly\u201d buried six levels deep in your sub-folder structure, but you may need regular and speedy access to this file every day. You could always move it to a more convenient location, but that would mean that you would need to re-file back to its \u201ccorrect\u201d location it every time you\u2019d finished working on it. Most unsatisfactory. A file may simply \u201cbelong\u201d in two or more different locations within your file structure. For example, say you\u2019re an accountant and you have just completed the 2009 tax return for John Smith. It might make sense to you to call this file 2009 Tax Return.doc and file it under Clients\\John Smith. But it may also be important to you to have the 2009 tax returns from all your clients together in the one place. So you might also want to call the file John Smith.doc and file it under Tax Returns\\2009. The problem is, in a purely hierarchical filing system, you can\u2019t put it in both places. Grrrrr! So why are shortcuts so great? Because they allow us to easily overcome the main limitation of hierarchical file systems, and put a file in two (or more) places at the same time. You will always have files that don\u2019t play nice with your organizational rationale, and can\u2019t be filed in only one place. They demand to exist in two places. Shortcuts allow this! Furthermore, they allow you to collect your most often-opened files and folders together in one spot for convenient access. The cool part is that the original files stay where they are, safe forever in their perfectly organized location. So your collection of most often-opened files can \u2013 and should \u2013 become a collection of shortcuts! \u201cOnly ever have one copy of a file \u2013 never have two copies of the same file. Use a shortcut instead\u201d Tip #10. Separate Application Files from Data Files Application files are the components of the software you\u2019ve installed (e.g. Microsoft Word, Adobe Photoshop or Internet Explorer). Data files are the files that you\u2019ve created for yourself using that software (e.g. Word Documents, digital photos, emails or playlists). Tip #11. Organize Files Based on Purpose, Not on File Type Tip #12. Maintain the Same Folder Structure on All Your Computers Tip #13. Create an \u201cInbox\u201d Folder Tip #14. Ensure You have Only One \u201cInbox\u201d Folder Once you\u2019ve created your \u201cInbox\u201d folder, don\u2019t use any other folder location as your \u201cto-do list\u201d. Throw every incoming or created file into the Inbox folder as you create/receive it. This keeps the rest of your computer pristine and free of randomly created or downloaded junk. The last thing you want to be doing is checking multiple folders to see all your current tasks and projects. Gather them all together into one folder. Here are some tips to help ensure you only have one Inbox: Set the default \u201csave\u201d location of all your programs to this folder. Set the default \u201cdownload\u201d location for your browser to this folder. If this folder is not your desktop (recommended) then also see if you can make a point of not putting \u201cto-do\u201d files on your desktop. This keeps your desktop uncluttered and Zen-like: Tip #15. Be Vigilant about Clearing Your \u201cInbox\u201d Folder This is one of the keys to staying organized. If you let your \u201cInbox\u201d overflow (i.e. allow there to be more than, say, 30 files or folders in there), then you\u2019re probably going to start feeling like you\u2019re overwhelmed: You\u2019re not keeping up with your to-do list. Once your Inbox gets beyond a certain point (around 30 files, studies have shown), then you\u2019ll simply start to avoid it. You may continue to put files in there, but you\u2019ll be scared to look at it, fearing the \u201cout of control\u201d feeling that all overworked, chaotic or just plain disorganized people regularly feel. Tags: [[favorite]] Visit your Inbox/to-do folder regularly (at least five times per day). Scan the folder regularly for files that you have completed working on and are ready for filing. File them immediately. Make it a source of pride to keep the number of files in this folder as small as possible. If you value peace of mind, then make the emptiness of this folder one of your highest (computer) priorities If you know that a particular file has been in the folder for more than, say, six weeks, then admit that you\u2019re not actually going to get around to processing it, and move it to its final resting place. File Everything Immediately, and Use Shortcuts for Your Active Projects Use Directory Symbolic Links (or Junctions) to Maintain One Unified Folder Structure Did you know that it\u2019s actually possible to store your files on the D: drive and yet access them as if they were on the C: drive? And no, we\u2019re not talking about shortcuts here (although the concept is very similar). By using the shell command mklink, you can essentially take a folder that lives on one drive and create an alias for it on a different drive (you can do lots more than that with mklink \u2013 for a full rundown on this programs capabilities, see our dedicated article). These aliases are called directory symbolic links (and used to be known as junctions). You can think of them as \u201cvirtual\u201d folders. They function exactly like regular folders, except they\u2019re physically located somewhere else. mklink /d c:\\files d:\\ Tags: [[favorite]] Needless to say, you must run these commands from a command prompt \u2013 click the Start button, type cmd and press Enter Customize Your Folder Icons Tidy Your Start Menu In this structure, Utilities means software whose job it is to keep the computer itself running smoothly (configuration tools, backup software, Zip programs, etc). Applications refers to any productivity software that doesn\u2019t fit under the headings Multimedia, Graphics, Internet, etc. With the Windows Start Menu (all version of Windows), Microsoft has decided that there be two parallel folder structures to store your Start Menu shortcuts. One for you (the logged-in user of the computer) and one for all users of the computer. Having two parallel structures can often be redundant: If you are the only user of the computer, then having two parallel structures is totally redundant. Even if you have several users that regularly log into the computer, most of your installed software will need to be made available to all users, and should thus be moved out of the \u201cjust you\u201d version of the Start Menu and into the \u201call users\u201d area. To take control of your Start Menu, so you can start organizing it, you\u2019ll need to know how to access the actual folders and shortcut files that make up the Start Menu (both versions of it). To find these folders and files, click the Start button and then right-click on the All Programs text (Windows XP users should right-click on the Start button itself): The Open option refers to the \u201cjust you\u201d version of the Start Menu, while the Open All Users option refers to the \u201call users\u201d version. Click on the one you want to organize. A Windows Explorer window then opens with your chosen version of the Start Menu selected. From there it\u2019s easy. Double-click on the Programs folder and you\u2019ll see all your folders and shortcuts. Now you can delete/rename/move until it\u2019s just the way you want it. Note: When you\u2019re reorganizing your Start Menu, you may want to have two Explorer windows open at the same time \u2013 one showing the \u201cjust you\u201d version and one showing the \u201call users\u201d version. You can drag-and-drop between the windows. Keep Your Start Menu Tidy Once you have a perfectly organized Start Menu, try to be a little vigilant about keeping it that way. Every time you install a new piece of software, the icons that get created will almost certainly violate your organizational structure. So to keep your Start Menu pristine and organized, make sure you do the following whenever you install a new piece of software: Check whether the software was installed into the \u201cjust you\u201d area of the Start Menu, or the \u201call users\u201d area, and then move it to the correct area. Remove all the unnecessary icons (like the \u201cRead me\u201d icon, the \u201cHelp\u201d icon (you can always open the help from within the software itself when it\u2019s running), the \u201cUninstall\u201d icon, the link(s)to the manufacturer\u2019s website, etc) Rename the main icon(s) of the software to something brief that makes sense to you. For example, you might like to rename Microsoft Office Word 2010 to simply Word Move the icon(s) into the correct folder based on your Start Menu organizational structure And don\u2019t forget: when you uninstall a piece of software, the software\u2019s uninstall routine is no longer going to be able to remove the software\u2019s icon from the Start Menu (because you moved and/or renamed it), so you\u2019ll need to remove that icon manually. Tidy C:\\ The root of your C: drive (C:) is a common dumping ground for files and folders \u2013 both by the users of your computer and by the software that you install on your computer. It can become a mess. There\u2019s almost no software these days that requires itself to be installed in C:. 99% of the time it can and should be installed into C:\\Program Files. And as for your own files, well, it\u2019s clear that they can (and almost always should) be stored somewhere else. Tidy Your Desktop Move Permanent Items on Your Desktop Away from the Top-Left Corner Synchronize However, if the computers are not always on the same network, then you will at some point need to copy files between them. For files that need to permanently live on both computers, the ideal way to do this is to synchronize the files, as opposed to simply copying them. If you maintain the same file and folder structure on both computers, then you can also sync files depend upon the correct location of other files, like shortcuts, playlists and office documents that link to other office documents, and the synchronized files still work on the other computer! Hide Files You Never Need to See Keep Every Setup File Whenever you download a piece of software, keep it. You\u2019ll never know when you need to reinstall the software. Further, keep with it an Internet shortcut that links back to the website where you originally downloaded it, in case you ever need to check for updates. Try to Minimize the Number of Folders that Contain Both Files and Sub-folders Useful Folders to Create For each one, it\u2019s not so important where the actual folder is located, but it\u2019s very important where you put the shortcut(s) to the folder. You might want to locate the shortcuts: On your Desktop In your \u201cQuick Launch\u201d area (or pinned to your Windows 7 Superbar) In your Windows Explorer \u201cFavorite Links\u201d area Create an \u201cInbox\u201d (\u201cTo-Do\u201d) Folder Create a Folder where Your Current Projects are Collected You can locate this folder in your \u201cInbox\u201d folder, on your desktop, or anywhere at all \u2013 just so long as there\u2019s a way of getting to it quickly, such as putting a link to it in Windows Explorer\u2019s \u201cFavorite Links\u201d area: Create a Folder for Files and Folders that You Regularly Open You will always have a few files that you open regularly, whether it be a spreadsheet of your current accounts, or a favorite playlist. These are not necessarily \u201ccurrent projects\u201d, rather they\u2019re simply files that you always find yourself opening. Typically such files would be located on your desktop (or even better, shortcuts to those files). Why not collect all such shortcuts together and put them in their own special folder? As with the \u201cCurrent Projects\u201d folder (above), you would want to locate that folder somewhere convenient. Below is an example of a folder called \u201cQuick links\u201d, with about seven files (shortcuts) in it, that is accessible through the Windows Quick Launch bar: Tags: [[favorite]] Create a \u201cSet-ups\u201d Folder A typical computer has dozens of applications installed on it. For each piece of software, there are often many different pieces of information you need to keep track of, including: The original installation setup file(s). This can be anything from a simple 100Kb setup.exe file you downloaded from a website, all the way up to a 4Gig ISO file that you copied from a DVD-ROM that you purchased. The home page of the software manufacturer (in case you need to look up something on their support pages, their forum or their online help) The page containing the download link for your actual file (in case you need to re-download it, or download an upgraded version) The serial number Your proof-of-purchase documentation Any other template files, plug-ins, themes, etc that also need to get installed For each piece of software, it\u2019s a great idea to gather all of these files together and put them in a single folder. The folder can be the name of the software (plus possibly a very brief description of what it\u2019s for \u2013 in case you can\u2019t remember what the software does based in its name). Then you would gather all of these folders together into one place, and call it something like \u201cSoftware\u201d or \u201cSetups\u201d. Have a \u201cSettings\u201d Folder These files certainly contain important information that we need, but are often created internally by an application, and saved wherever that application feels is appropriate. A good example of this is the \u201cPST\u201d file that Outlook creates for us and uses to store all our emails, contacts, appointments and so forth. Another example would be the collection of Bookmarks that Firefox stores on your behalf. And yet another example would be the customized settings and configuration files of our all our software. Granted, most Windows programs store their configuration in the Registry, but there are still many programs that use configuration files to store their settings. It can be a very useful idea to create yourself a folder to store all your \u201csettings\u201d \u2013 files that are important to you but which you never actually search for by name and double-click on to open them. Otherwise, next time you go to set up a new computer just the way you want it, you\u2019ll need to spend hours recreating the configuration of your previous computer! Tags: [[favorite]] So how to we get our important files into this folder? Well, we have a few options: Some programs (such as Outlook and its PST files) allow you to place these files wherever you want. If you delve into the program\u2019s options, you will find a setting somewhere that controls the location of the important settings files (or \u201cpersonal storage\u201d \u2013 PST \u2013 when it comes to Outlook) Some programs do not allow you to change such locations in any easy way, but if you get into the Registry, you can sometimes find a registry key that refers to the location of the file(s). Simply move the file into your Settings folder and adjust the registry key to refer to the new location. Some programs stubbornly refuse to allow their settings files to be placed anywhere other then where they stipulate. When faced with programs like these, you have three choices: (1) You can ignore those files, (2) You can copy the files into your Settings folder (let\u2019s face it \u2013 settings don\u2019t change very often), or (3) you can use synchronization software, such as the Windows Briefcase, to make synchronized copies of all your files in your Settings folder. All you then have to do is to remember to run your sync software periodically (perhaps just before you run your backup software!). There are some other things you may decide to locate inside this new \u201cSettings\u201d folder: Exports of registry keys (from the many applications that store their configurations in the Registry). This is useful for backup purposes or for migrating to a new computer Notes you\u2019ve made about all the specific customizations you have made to a particular piece of software (so that you\u2019ll know how to do it all again on your next computer) Shortcuts to webpages that detail how to tweak certain aspects of your operating system or applications so they are just the way you like them (such as how to remove the words \u201cShortcut to\u201d from the beginning of newly created shortcuts). In other words, you\u2019d want to create shortcuts to half the pages on the How-To Geek website! Windows Features that Help with Organization Use the \u201cFavorite Links\u201d Area to Access Oft-Used Folders Some ideas for folders you might want to add there include: Your \u201cInbox\u201d folder (or whatever you\u2019ve called it) \u2013 most important! The base of your filing structure (e.g. C:\\Files) A folder containing shortcuts to often-accessed folders on other computers around the network (shown above as Network Folders) A folder containing shortcuts to your current projects (unless that folder is in your \u201cInbox\u201d folder) Tags: [[favorite]] Customize the Places Bar in the File/Open and File/Save Boxes The easiest way to customize these icons is to use the Group Policy Editor, but not everyone has access to this program. If you do, open it up and navigate to: User Configuration > Administrative Templates > Windows Components > Windows Explorer > Common Open File Dialog If you don\u2019t have access to the Group Policy Editor, then you\u2019ll need to get into the Registry. Navigate to: HKEY_CURRENT_USER \\ Software \\ Microsoft \\ Windows \\ CurrentVersion \\ Policies \\ comdlg32 \\ Placesbar Use the Quick Launch Bar as a Application and File Launcher That Quick Launch bar (to the right of the Start button) is a lot more useful than people give it credit for. Most people simply have half a dozen icons in it, and use it to start just those programs. But it can actually be used to instantly access just about anything in your filing system: Put a Shortcut to Windows Explorer into Your Quick Launch Bar To get it there, locate it in your Start Menu (usually under \u201cAccessories\u201d) and then right-drag it down into your Quick Launch bar (and create a copy). Customize the Starting Folder for Your Windows 7 Explorer Superbar Icon Then, in Target field of the Windows Explorer Properties box that appears, type %windir%\\explorer.exe followed by the path of the folder you wish to start in. For example: %windir%\\explorer.exe C:\\Files If that folder happened to be on the Desktop (and called, say, \u201cInbox\u201d), then you would use the following cleverness: %windir%\\explorer.exe shell:desktop\\Inbox","title":"Highlights"},{"location":"Highlights/Readwise/Articles/Zen%20to%20Done%20The%20Habit-Building%20Productivity%20System/","text":"Zen to Done: The Habit-Building Productivity System \u00b6 Metadata \u00b6 Author: [[Rachel Wayne]] Full Title: Zen to Done: The Habit-Building Productivity System Category: #Type/Highlights/Article URL: https://medium.com/p/5e316c6071c2 Highlights \u00b6 Do. It\u2019s called Zen to Done because there\u2019s a heavy emphasis on being in the moment.","title":"Zen to Done: The Habit-Building Productivity System"},{"location":"Highlights/Readwise/Articles/Zen%20to%20Done%20The%20Habit-Building%20Productivity%20System/#zen-to-done-the-habit-building-productivity-system","text":"","title":"Zen to Done: The Habit-Building Productivity System"},{"location":"Highlights/Readwise/Articles/Zen%20to%20Done%20The%20Habit-Building%20Productivity%20System/#metadata","text":"Author: [[Rachel Wayne]] Full Title: Zen to Done: The Habit-Building Productivity System Category: #Type/Highlights/Article URL: https://medium.com/p/5e316c6071c2","title":"Metadata"},{"location":"Highlights/Readwise/Articles/Zen%20to%20Done%20The%20Habit-Building%20Productivity%20System/#highlights","text":"Do. It\u2019s called Zen to Done because there\u2019s a heavy emphasis on being in the moment.","title":"Highlights"},{"location":"Highlights/Readwise/Articles/rBokeh%20-%20Tipps%20and%20Tricks%20With%20JavaScript%20and%20Beyond%21%20%20STATWORX/","text":"rBokeh - Tipps and Tricks With JavaScript and Beyond! | STATWORX \u00b6 Metadata \u00b6 Author: Full Title: rBokeh - Tipps and Tricks With JavaScript and Beyond! | STATWORX Category: #Type/Highlights/Article URL: https://www.statworx.com/de/blog/rbokeh-tipps-and-tricks-with-javascript-and-beyond/ Highlights \u00b6 Write complex JavaScript callbacks An excellent quality of rBokeh is its capability to write customized callbacks with JavaScript (JS). We\u2019re going to dive into this topic next: There are already some examples for rbokeh, but I found them rather basic and insufficiently explained.","title":"rBokeh - Tipps and Tricks With JavaScript and Beyond! | STATWORX"},{"location":"Highlights/Readwise/Articles/rBokeh%20-%20Tipps%20and%20Tricks%20With%20JavaScript%20and%20Beyond%21%20%20STATWORX/#rbokeh-tipps-and-tricks-with-javascript-and-beyond-statworx","text":"","title":"rBokeh - Tipps and Tricks With JavaScript and Beyond! | STATWORX"},{"location":"Highlights/Readwise/Articles/rBokeh%20-%20Tipps%20and%20Tricks%20With%20JavaScript%20and%20Beyond%21%20%20STATWORX/#metadata","text":"Author: Full Title: rBokeh - Tipps and Tricks With JavaScript and Beyond! | STATWORX Category: #Type/Highlights/Article URL: https://www.statworx.com/de/blog/rbokeh-tipps-and-tricks-with-javascript-and-beyond/","title":"Metadata"},{"location":"Highlights/Readwise/Articles/rBokeh%20-%20Tipps%20and%20Tricks%20With%20JavaScript%20and%20Beyond%21%20%20STATWORX/#highlights","text":"Write complex JavaScript callbacks An excellent quality of rBokeh is its capability to write customized callbacks with JavaScript (JS). We\u2019re going to dive into this topic next: There are already some examples for rbokeh, but I found them rather basic and insufficiently explained.","title":"Highlights"},{"location":"Highlights/Readwise/Articles/%7ByHat%7D%20-%20Reproducible%20Work%20in%20R/","text":"{yHat} - Reproducible Work in R \u00b6 Metadata \u00b6 Author: [[rsangole.netlify.app]] Full Title: {yHat} - Reproducible Work in R Category: #Type/Highlights/Article URL: https://rsangole.netlify.app/post/2020/10/10/reproducible-work-in-r/ Highlights \u00b6 Solution In my experience, the solution I\u2019ve outlined below offers me an excellent approach for long term reproducibility and code stability: Lock down your R package versions using MRAN snapshots Lock down your working environment using a Docker image Do all your development within Docker containers Accompany all projects with a Docker image This has worked so well that I haven\u2019t bothered using R/Rstudio on my local machine in well over half a year now. ( View Highlight )","title":"{yHat} - Reproducible Work in R"},{"location":"Highlights/Readwise/Articles/%7ByHat%7D%20-%20Reproducible%20Work%20in%20R/#yhat-reproducible-work-in-r","text":"","title":"{yHat} - Reproducible Work in R"},{"location":"Highlights/Readwise/Articles/%7ByHat%7D%20-%20Reproducible%20Work%20in%20R/#metadata","text":"Author: [[rsangole.netlify.app]] Full Title: {yHat} - Reproducible Work in R Category: #Type/Highlights/Article URL: https://rsangole.netlify.app/post/2020/10/10/reproducible-work-in-r/","title":"Metadata"},{"location":"Highlights/Readwise/Articles/%7ByHat%7D%20-%20Reproducible%20Work%20in%20R/#highlights","text":"Solution In my experience, the solution I\u2019ve outlined below offers me an excellent approach for long term reproducibility and code stability: Lock down your R package versions using MRAN snapshots Lock down your working environment using a Docker image Do all your development within Docker containers Accompany all projects with a Docker image This has worked so well that I haven\u2019t bothered using R/Rstudio on my local machine in well over half a year now. ( View Highlight )","title":"Highlights"},{"location":"Highlights/Readwise/Books/Design%20Your%20Work/","text":"Design Your Work \u00b6 Metadata \u00b6 Author: [[Tiago Forte]] Full Title: Design Your Work Category: #Type/Highlights/Books Highlights \u00b6 My blog became my R&D lab: a place to ramble, rant, play, test, dissect, entertain, summarize, explain, argue, advocate, theorize, and generally way overthink all the ideas I was encountering in my work and my life. ( Location 50 ) Note: Good description of what my brain feels like! You see, I have to write to know what I think. All my ideas sound brilliant in the echo chamber of my own mind. It is only when I put down my thoughts, letting them stand on their own strength, that I start to see the cracks and imperfections. ( Location 58 ) Tags: [[favorite]] It actually goes beyond this \u2013 I have to write to think. Otherwise the same old ideas keep circulating round and round, clogging the synapses. Writing is not a result of thinking \u2013 it is thinking itself, scaffolded by the external props of a keyboard and ( Location 60 ) praxis, a theory of practical action. ( Location 71 ) The title Design Your Work refers to the overall theme tying together these essays: the idea that one can design their own work. ( Location 72 ) You don\u2019t have to adopt the same productivity methods as everyone else. You can adapt, tweak, customize, and reframe any aspect of how you work, from how you process emails to how you organize information to how you structure your attention to how you measure your performance. ( Location 75 ) What exactly are the conditions required for high-performance creativity, and how can we use Evernote (or other note-taking programs) to create these conditions? ( Location 1165 ) \u201ccreative people are better at recognizing relationships, making associations and connections\u2026\u201d ( Location 1173 ) Evernote\u2019s ability to capture an extremely diverse range of media formats is a strong hint that this is what it should be used for. It prioritizes this kind of flexibility over speed (it\u2019s not the fastest program around), collaboration (which it doesn\u2019t support very well), and even stability (some features are buggy). ( Location 1174 ) Creating visual artifacts of ideas ( Location 1188 ) Research on cognition has shown that our basic mode of thinking is not abstract reasoning and planning, but \u201cinteracting via perception and action with the environmental situation.\u201d ( Location 1189 ) Essentially, it\u2019s easier for us to interact with physical objects in the environment than with abstract ideas in our heads. ( Location 1192 )","title":"Design Your Work"},{"location":"Highlights/Readwise/Books/Design%20Your%20Work/#design-your-work","text":"","title":"Design Your Work"},{"location":"Highlights/Readwise/Books/Design%20Your%20Work/#metadata","text":"Author: [[Tiago Forte]] Full Title: Design Your Work Category: #Type/Highlights/Books","title":"Metadata"},{"location":"Highlights/Readwise/Books/Design%20Your%20Work/#highlights","text":"My blog became my R&D lab: a place to ramble, rant, play, test, dissect, entertain, summarize, explain, argue, advocate, theorize, and generally way overthink all the ideas I was encountering in my work and my life. ( Location 50 ) Note: Good description of what my brain feels like! You see, I have to write to know what I think. All my ideas sound brilliant in the echo chamber of my own mind. It is only when I put down my thoughts, letting them stand on their own strength, that I start to see the cracks and imperfections. ( Location 58 ) Tags: [[favorite]] It actually goes beyond this \u2013 I have to write to think. Otherwise the same old ideas keep circulating round and round, clogging the synapses. Writing is not a result of thinking \u2013 it is thinking itself, scaffolded by the external props of a keyboard and ( Location 60 ) praxis, a theory of practical action. ( Location 71 ) The title Design Your Work refers to the overall theme tying together these essays: the idea that one can design their own work. ( Location 72 ) You don\u2019t have to adopt the same productivity methods as everyone else. You can adapt, tweak, customize, and reframe any aspect of how you work, from how you process emails to how you organize information to how you structure your attention to how you measure your performance. ( Location 75 ) What exactly are the conditions required for high-performance creativity, and how can we use Evernote (or other note-taking programs) to create these conditions? ( Location 1165 ) \u201ccreative people are better at recognizing relationships, making associations and connections\u2026\u201d ( Location 1173 ) Evernote\u2019s ability to capture an extremely diverse range of media formats is a strong hint that this is what it should be used for. It prioritizes this kind of flexibility over speed (it\u2019s not the fastest program around), collaboration (which it doesn\u2019t support very well), and even stability (some features are buggy). ( Location 1174 ) Creating visual artifacts of ideas ( Location 1188 ) Research on cognition has shown that our basic mode of thinking is not abstract reasoning and planning, but \u201cinteracting via perception and action with the environmental situation.\u201d ( Location 1189 ) Essentially, it\u2019s easier for us to interact with physical objects in the environment than with abstract ideas in our heads. ( Location 1192 )","title":"Highlights"},{"location":"Highlights/Readwise/Books/Evernote%20Guide%20-%20Master%20Evernote%20Essentials/","text":"Evernote Guide - Master Evernote Essentials \u00b6 Metadata \u00b6 Author: [[Lisa Gosling]] Full Title: Evernote Guide - Master Evernote Essentials Category: #Type/Highlights/Books Highlights \u00b6 .enex files are not just for backups. You can also use it to create templates for notes. If you find yourself having to create a specific note format over and over, then the easier option would be to save it as a template. When you have created your note, right-click and export the note - preferably to a template folder. ( Location 165 ) Create To-Do Lists ( Location 174 ) \u25cf Email notes into Evernote ( Location 192 ) If you want to add emails to existing notes, add a + symbol at the end of the subject. ( Location 203 ) Use Shortcuts ( Location 217 ) up to 250 shortcuts for notebooks, notes, stacks, tags, or even searches. ( Location 219 ) Note View Customization Customize how you see notes by using the drop-down menu in the Note List window. Choose between List, Snippet, and Card view. The menu also gives you a list of options to sort your notes, e.g. Title, Created, Updated, Tags, etc. ( Location 223 ) \u25cf Create Local Notebooks: If you are working with sensitive or confidential information, you might not feel comfortable storing it on the cloud. To create a notebook that is only available on your computer and doesn't get synced to the cloud at all can be done from the desktop version. ( Location 227 ) \u25cf Use Note Links Research can easily get scattered across Evernote when you are working on a project. Having to make repetitive use of the search box can become time-consuming and frustrating. Evernote has a feature which let you create links to your notes to make it much easier to find. ( Location 236 ) \u25cf Table of Contents: Sometimes you would like to have quick access to related notes. For this purpose, a Table of Contents can be created by selecting the notes you want to include. A menu should appear on the right side. Select the \"Create Table of Contents note\" option to create a new note with a list of your selected notes as hyperlinks. Useful for gathering notes needed for research, meetings, or organizing chapters for a book. ( Location 243 ) Drag and Drop ( Location 250 ) Integrate Evernote with Outlook ( Location 262 ) To start using the feature, you first must add the \u201cEvernote for Outlook\u201d add-in from the Office Store. ( Location 266 ) The Outlook app also lets you view Evernote reminders with its calendar. First connect your Evernote account in Calendar settings to enable this handy feature. You will then be able to see notes in the Agenda view of the calendar. ( Location 266 ) Automate Evernote with IFTTT ( Location 270 ) \u25cf Use the Augment Chrome plugin Augment integrates with apps from within Gmail. The apps also include Evernote. If you find syntax too complex, then you should give this plugin a try. Augment makes the process easy by letting you capture the email immediately when clicking on the Evernote icon. You can even attach the entire email to a note if you want to. ( Location 277 ) \u25cf Useful Keyboard Shortcuts Here is a list of a few essential keyboard shortcuts to help you work faster and more efficiently: Create a new notebook: Ctrl + Shift + N Create a new note: Ctrl + N Create a new tag: Ctrl + Shift + T Capture screen to clipboard: Win + Print Screen Capture text to clipboard: Ctrl + C Paste captured screen to new note: Ctrl + Alt + V ( Location 410 ) Paste text from clipboard: Ctrl + V Add a hyperlink: Ctrl + K Check your spelling: F7 Insert a checkbox: Ctrl + Shift + C Insert a paragraph break: Ctrl + Shift + - Search inside a note: Ctrl + F To quit Evernote: Ctrl + Q ( Location 420 ) \u25cf Monitor Folders ( Location 430 ) The desktop version of Evernote can be customized to monitor folders on your hard drive. This means that any file you place within the folder will be put into Evernote automatically. Just click on Tools - Import Folder and add the folder you want to monitor. You can also specify if files in subfolders should be ( Location 431 ) Show the Status Bar Evernote has two options to show word and character count - a necessary feature used a lot in word processors. Enable the Status Bar under the \u201cView\u201d tab to display the count, along with the file size, at the bottom of the note. For more detailed information, right-click on the note and select \u201cWord and Resource Counts\u201d. ( Location 437 ) The same options count for the Toolbar. Hide the tools you don\u2019t want to see, sort them in the order that you want, or add a separator line between the tools to create order. \u25cf Note History You must be a Premium or Business user to view the history of a specific note. Note history give you the option to do a rollback to the previous version of a note. This make it easier to undo mistakes made while collaborating on a note or just to view all the changes made to the note. Depending on the version you are using, either go to the \"Note\" tab, or click on the info icon to find the note history option. \u25cf Take Notes without Typing Typing notes can sometimes be slow and inconvenient. Fortunately, Evernote offer a variety of ways to take notes using other methods. ( Location 445 ) \u25cf Use Widgets Sometimes it takes a little longer to create a note on mobile devices, especially if you're in a hurry. Adding widgets to your home screen will create quick links to these actions. There are 3 widgets to choose from. Actions widget: This widget looks like an icon and give you quick access to all your favorite features. Action bar widget: The widget give you access to your selected features in ( Location 506 ) List widget: You have shortcuts to your selected actions along with a list of recent notes or reminders. Apart from the 3 main options, there is also a Simple Notes widget, which add a plain, blank note to the screen. Perfect for situations where you need to take a note quickly. ( Location 513 )","title":"Evernote Guide - Master Evernote Essentials"},{"location":"Highlights/Readwise/Books/Evernote%20Guide%20-%20Master%20Evernote%20Essentials/#evernote-guide-master-evernote-essentials","text":"","title":"Evernote Guide - Master Evernote Essentials"},{"location":"Highlights/Readwise/Books/Evernote%20Guide%20-%20Master%20Evernote%20Essentials/#metadata","text":"Author: [[Lisa Gosling]] Full Title: Evernote Guide - Master Evernote Essentials Category: #Type/Highlights/Books","title":"Metadata"},{"location":"Highlights/Readwise/Books/Evernote%20Guide%20-%20Master%20Evernote%20Essentials/#highlights","text":".enex files are not just for backups. You can also use it to create templates for notes. If you find yourself having to create a specific note format over and over, then the easier option would be to save it as a template. When you have created your note, right-click and export the note - preferably to a template folder. ( Location 165 ) Create To-Do Lists ( Location 174 ) \u25cf Email notes into Evernote ( Location 192 ) If you want to add emails to existing notes, add a + symbol at the end of the subject. ( Location 203 ) Use Shortcuts ( Location 217 ) up to 250 shortcuts for notebooks, notes, stacks, tags, or even searches. ( Location 219 ) Note View Customization Customize how you see notes by using the drop-down menu in the Note List window. Choose between List, Snippet, and Card view. The menu also gives you a list of options to sort your notes, e.g. Title, Created, Updated, Tags, etc. ( Location 223 ) \u25cf Create Local Notebooks: If you are working with sensitive or confidential information, you might not feel comfortable storing it on the cloud. To create a notebook that is only available on your computer and doesn't get synced to the cloud at all can be done from the desktop version. ( Location 227 ) \u25cf Use Note Links Research can easily get scattered across Evernote when you are working on a project. Having to make repetitive use of the search box can become time-consuming and frustrating. Evernote has a feature which let you create links to your notes to make it much easier to find. ( Location 236 ) \u25cf Table of Contents: Sometimes you would like to have quick access to related notes. For this purpose, a Table of Contents can be created by selecting the notes you want to include. A menu should appear on the right side. Select the \"Create Table of Contents note\" option to create a new note with a list of your selected notes as hyperlinks. Useful for gathering notes needed for research, meetings, or organizing chapters for a book. ( Location 243 ) Drag and Drop ( Location 250 ) Integrate Evernote with Outlook ( Location 262 ) To start using the feature, you first must add the \u201cEvernote for Outlook\u201d add-in from the Office Store. ( Location 266 ) The Outlook app also lets you view Evernote reminders with its calendar. First connect your Evernote account in Calendar settings to enable this handy feature. You will then be able to see notes in the Agenda view of the calendar. ( Location 266 ) Automate Evernote with IFTTT ( Location 270 ) \u25cf Use the Augment Chrome plugin Augment integrates with apps from within Gmail. The apps also include Evernote. If you find syntax too complex, then you should give this plugin a try. Augment makes the process easy by letting you capture the email immediately when clicking on the Evernote icon. You can even attach the entire email to a note if you want to. ( Location 277 ) \u25cf Useful Keyboard Shortcuts Here is a list of a few essential keyboard shortcuts to help you work faster and more efficiently: Create a new notebook: Ctrl + Shift + N Create a new note: Ctrl + N Create a new tag: Ctrl + Shift + T Capture screen to clipboard: Win + Print Screen Capture text to clipboard: Ctrl + C Paste captured screen to new note: Ctrl + Alt + V ( Location 410 ) Paste text from clipboard: Ctrl + V Add a hyperlink: Ctrl + K Check your spelling: F7 Insert a checkbox: Ctrl + Shift + C Insert a paragraph break: Ctrl + Shift + - Search inside a note: Ctrl + F To quit Evernote: Ctrl + Q ( Location 420 ) \u25cf Monitor Folders ( Location 430 ) The desktop version of Evernote can be customized to monitor folders on your hard drive. This means that any file you place within the folder will be put into Evernote automatically. Just click on Tools - Import Folder and add the folder you want to monitor. You can also specify if files in subfolders should be ( Location 431 ) Show the Status Bar Evernote has two options to show word and character count - a necessary feature used a lot in word processors. Enable the Status Bar under the \u201cView\u201d tab to display the count, along with the file size, at the bottom of the note. For more detailed information, right-click on the note and select \u201cWord and Resource Counts\u201d. ( Location 437 ) The same options count for the Toolbar. Hide the tools you don\u2019t want to see, sort them in the order that you want, or add a separator line between the tools to create order. \u25cf Note History You must be a Premium or Business user to view the history of a specific note. Note history give you the option to do a rollback to the previous version of a note. This make it easier to undo mistakes made while collaborating on a note or just to view all the changes made to the note. Depending on the version you are using, either go to the \"Note\" tab, or click on the info icon to find the note history option. \u25cf Take Notes without Typing Typing notes can sometimes be slow and inconvenient. Fortunately, Evernote offer a variety of ways to take notes using other methods. ( Location 445 ) \u25cf Use Widgets Sometimes it takes a little longer to create a note on mobile devices, especially if you're in a hurry. Adding widgets to your home screen will create quick links to these actions. There are 3 widgets to choose from. Actions widget: This widget looks like an icon and give you quick access to all your favorite features. Action bar widget: The widget give you access to your selected features in ( Location 506 ) List widget: You have shortcuts to your selected actions along with a list of recent notes or reminders. Apart from the 3 main options, there is also a Simple Notes widget, which add a plain, blank note to the screen. Perfect for situations where you need to take a note quickly. ( Location 513 )","title":"Highlights"},{"location":"Highlights/Readwise/Books/Evernote-2/","text":"Evernote \u00b6 Metadata \u00b6 Author: [[Kimberly Eddy]] Full Title: Evernote Category: #Type/Highlights/Books Highlights \u00b6 The notebooks titled, \u201cWeb Site Drafts\u201d and \u201cWeb Site Fixes\u201d contain a couple of notes with drafts of blog posts or specific issues I need to fix on my web ( Location 269 ) site. If a problem occurs on my web site or on a site I manage for a client, I make a note for the problem, then later I\u2019ll record the solution. Once I finish fixing the problem, I move the note to a different notebook stack I have where I save useful information and tutorials. ( Location 270 ) The Upcoming Notebook Stack ( Location 276 ) The next notebook stack is for Upcoming Projects. ( Location 277 ) Someday and Done Stacks ( Location 284 ) Someday, Someday Someday is where every idea goes that I am not acting on right now, and can\u2019t even think about at the moment. Someday also acts as a sort of bucket list for my life. This particular notebook stack, working in conjunction with my Inbox notebook, has saved my sanity and helped me maintain focus. Those crazy business ideas or home redecorating ( Location 286 ) Any metaphorical \u201cshiny object\u201d that grabs my attention and wants to be toyed with, I stick in there so my brain can rest, knowing that this Great New Idea is safe and secure. No need to obsess about it today. ( Location 291 ) The Someday notebook stack also includes things like a notebook for the trip to China and India that Hubby and I hope to take in the next couple of years. There\u2019s also a crazy idea for an irrigation system for the garden. I sketched the irrigation system on a napkin, photographed the napkin, and stuck the note/photo into the Garden Ideas notebook. ( Location 292 ) Done: My Productivity Tracker ( Location 295 ) The Purpose and Priorities Notebook ( Location 301 ) I put a notebook at the top of my stacks entitled \u201c0-Purpose and Priorities.\u201d The \u201c0\u201d keeps it on top! In this Evernote notebook, I file notes for my personal mission statement, my annual goals, as well as this month\u2019s goals. I also include a note titled \u201cMaster List.\u201d This one changes from week to week. The Master List itemizes all the step by step to-dos I have to do this week. This note doesn\u2019t have any details, but it does link to details. It\u2019s good for me to have my goals and mission statement front and center in my life. Ever since I really grabbed hold of Stephen Covey\u2019s book, The 7 Habits of Highly Effective People, I realized I do better in ( Location 302 ) The Templates Stack I built a stack of notebooks for templates. I use templates for things like my generic to-do list for clients when they order my basic WordPress configuration package, as well as the contract I ask them to sign. I have a nicer looking contract on my hard drive, but I like to keep the basic text of the contract easily accessible. Since Evernote stores notes in the cloud, I never run the risk of losing the wording for my contract. I have generic to-do lists for\u2026 ( Location 312 ) I made a checklist for all the settings to use in Microsoft Word when formatting an ebook for Kindle and other e-readers too. In the same notebook, for publishing, I also have checklists for self-editing. My template stack\u2026 ( Location 320 ) The Tutorials Stack The notebook stack labeled \u201cTutorials\u201d contains notebooks and notes linking to different tutorials I frequently reference for my business and life. For example, I have one notebook titled \u201cGoogle Products\u201d and in it I keep notes reminding me how to create funnels and\u2026 ( Location 323 ) The Table of Contents Most of my notebooks include a table of contents that I update regularly when I change the notebook. Some of them I don\u2019t bother with as they are not too full. But if you have a notebook with a great deal of information, you may want to do this. To create a table of contents in a notebook, select all the notes in the notebook using your mouse and the shift key. A pop-up window will prompt you to select a task. You can share these notes with someone, merge them together into one note, move them\u2026 ( Location 329 ) Personalize Evernote As you can tell from my setup, the real benefit for Evernote is that, like bullet journaling, you can make it entirely yours. Evernote is both flexible and powerful, even in the free version. You can make it as complicated or as simple as you need it to be to work for you. Next I\u2019ll share more detail on other features that help me make the most of\u2026 ( Location 338 ) Follow Ups Sometimes when I contact a client or a potential client, they tell me, \u201cI\u2019m interested, but now is not a good time. Can you contact me again in a couple of weeks?\u201d I keep notes for each potential client or former client in my Evernote notebook titled \u201cClients and Leads.\u201d To protect privacy in the case of a data breach (notes are stored in the cloud, after all), I do not include sensitive information in my client notes. ( Location 378 ) Renewals Another way I use reminders in Evernote is to scan bills or reminders into Evernote using my cell phone, and set a reminder for a week before this bill is due. For example, I recently used this for my summer taxes. They send the bill out several months before payment is due, so far in advance that I usually forget it. Instead, for the last several years, I\u2019ve set a reminder for a week before the due date, with important but non-sensitive information included ( Location 386 ) Car Maintenance I also keep track of my car\u2019s maintenance records in a notebook for my car. I set up reminders for oil changes and other maintenance matters. This has been very helpful to me, as I generally forget about these kinds of things otherwise, or cannot reminder the last time something was done to the car. Instead, right there in Evernote, I have scans of my service records for my car in case there is ever a problem, as well as reminders for the next date of service. Obviously, for security purposes, I make sure that no account numbers or sensitive information is on these scans when I import them. Though you can encrypt text in Evernote notes, this is not a foolproof protection against hackers. ( Location 393 ) Chapter Four: Naming Notes and Tags ( Location 406 ) Comparing my Evernote setup once more to the piles of notebooks and papers that used to sit on my desk, it\u2019s far easier and faster to find anything I need in Evernote than it had been to look through the piles of stuff I used to store my brain in. We can make finding what we need when we need it even faster and easier when we are naming and tagging our notes. ( Location 407 ) Keys to Naming Notes in Evernote We want to name things in Evernote so we know at a glance what is in the note without having to open it and skim. I find this is particularly important when using reminders, as my reminders show up on my Google Calendar as the note\u2019s title with no other context.\u2026 ( Location 410 ) Tagging Notes in Evernote Tags are a kind of label we can add to each note. There is no limit to the number of tags you can add to a note, but again, less is more. Don\u2019t go overboard. The two words you want to think when tagging are simple and descriptive. Tags do help when you are using the search feature in Evernote, although I don\u2019t consider that the primary function of the tags. In Evernote, in the sidebar, there is a listing for \u201ctags.\u201d By clicking on that, I can see all the tags I have used. Or not\u2026 ( Location 416 ) Tags to\u2026 ( Location 425 ) Read \u2013 books or articles you\u2019re saving to read later. I originally had a notebook for my reading list, but I found it easier to save book recommendations and article bookmarks\u2026 ( Location 427 ) Watch \u2013 is similar to \u201cread.\u201d I use this one for recommendations for movies, tv shows, YouTube\u2026 ( Location 430 ) Buy \u2013products that I would like to buy or services recommend to me. Sometimes I take a photograph in Evernote\u2026 ( Location 431 ) Months and Holidays \u2013 I have\u2026 ( Location 433 ) every month of the year, which I use for projects or ideas that are more seasonal in nature, such as Zazzle designs I\u2019m working on or blog posts that are\u2026 ( Location 434 ) Receipts \u2013 I told how you I store my bills and scans of other paperwork with reminders attached to them. Whenever I save a receipt or a bill, I always tag it \u201c\u2026 ( Location 436 ) Names of Clients and Family Members \u2013 I also use the names of clients and family members when tagging notes, so that I can use the name to find notes more easily. For example, as we get closer to Christmas, I will save picture notes of products I\u2019ve photographed in the stores or bookmark notes of products at Amazon that are tagged \u201cbuy\u201d and \u201c[family member\u2019s name]\u201d in order to give me ideas when putting my Christmas list together. This\u2026 ( Location 438 ) Evernote\u2019s tags can also be nested. That is, you can create a main parent tag, with more specific child tags nested under them. To nest one tag under another tag, just drag and drop the child tag onto the parent tag. How does this work for me? I\u2019ll use the example of the tag for \u201cBuy.\u201d Under the tag \u201cBuy,\u201d I created other tags like \u201cKitchen Supplies,\u201d \u201cOffice Supplies,\u201d \u201cBusiness Needs,\u201d \u201cChristmas Gifts,\u201d and so forth. Say I\u2019m out shopping, and I see something I like and I\u2019m not able to purchase it, but I want to remember it. I take a photo of it in Evernote with my phone\u2019s Evernote Mobile app (selecting \u201cphoto note\u201d option) and tag it \u201cKitchen Supplies.\u201d When I do this in a store, I try to also get the SKU number and the manufacturer\u2026 ( Location 443 ) Think Usability Ultimately, no one is going to give you a grade for your Evernote naming conventions or taxonomy. As you set up your Evernote system and create tags, think in terms of what will be most useable as you are deep in your workflow. With a great system in place, you shouldn\u2019t have to stop and think ( Location 462 ) Chapter Five: Linking and Merging notes The ability to link notes together in Evernote is one of the more robust features of this program, and is very handy for project management. Linking notes together, or adding links to other notes within a note, makes it easier to keep track of multiple notes for the different aspects of a project. For a large project, such as a client web site, I use this feature. I start with a checklist of what needs to be done and what core content I want to create. Then I link to the individual notes that discuss my ideas for these updates, as well as the actual content itself. I turn each line of my to-do list into a link to another note with more details, research, or draft copies of the content I need to create. You can\u2019t do that with a paper planner, can you? ( Location 469 ) Practical Uses for the Link Feature I\u2019ve already talked about my own favorite use for Evernote\u2019s link feature: adding links to my to-do list. Here are some other ways I\u2019ve used the link feature in Evernote to improve my workflow and productivity, plus some more details on how I use this in my to-do list. The Linked To-Do List ( Location 483 ) When to Link and When to Merge Truth be told, figuring out when to merge and when to link is more difficult for me than actually linking and merging. Most of the time, I prefer to link notes together, arranging the topics in one long to-do list or editorial calendar. I choose to merge notes when my notes essentially repeat the same thing in a different way. ( Location 540 ) Tags: [[favorite]] Chapter Six: Templates ( Location 546 ) Templates Templates WP Templates Publish Templates Email Templates TimeMGT Templates Social Media Templates Sales ( Location 559 ) Ideas for Templates In previous chapters I\u2019ve shared how I use templates in my own Evernote setup. Really, the possibilities for using templates are endless. As with anything else in Evernote, the templates you create are based on your own needs. Here are some additional ideas for Evernote Templates. ( Location 583 ) My Goals ( Location 586 ) You\u2019ve probably observed that I\u2019m really big on setting clearly defined, achievable goals, and working with laser-like focus towards those goals. The truth be told, my obsession with goals doesn\u2019t spring from my natural sense of order, but rather out of a need to reign in my ADHD and natural disorder. Each year, I create a new list of goals I\u2019m working towards based on my overall Personal Mission Statement. Because I\u2019ve found a setup that works well for me, I\u2019ve created my Goal Sheet as a template that I use each year, editing the specifics as needed. Client Work Contracts As I\u2019ve mentioned before, I keep the wording of my client contracts handy in my Evernote setup. This allows me to easily reference what we\u2019ve mutually promised with regards to each job. Having the language in one place (saved in the cloud), allows me to always have the wording available to copy and paste as needed. ( Location 587 ) Process Checklists This is another template I\u2019ve mentioned before. If you find yourself running through the same process repeatedly for similar jobs, a process checklist is helpful to keep yourself on track and reminded of all the tiny details. When I complete a basic Wordpress Configuration for a client, the steps remain the same. I save myself time by having the checklist already created. ( Location 596 ) Tables for a Calendar The ability to create tables in Evernote can be helpful for creating Calendars, Daily Planner pages, etc. Many of the templates at the Evernote web site are table layouts. I\u2019ve also created one of my goals checklists, based on the Napoleon Hill Year End Assessment, in a tabular format. This enables me to run down the list, and grade myself with notes as I seek to improve in different areas of my life. You can find this on my web site. ( Location 600 ) Self-Publishing Checklists ( Location 605 ) and Information I have created several ebooks for Amazon Kindle. There are many things that I need to do, over and above writing and editing my ebooks, to get them ready for publishing on Kindle. I used to have to look up that information every time I needed it. Then I turned the process into a final checklist that\u2019s much easier to find and use. Furthermore, I\u2019ve also created a checklist for marketing my ebooks, as well as notes that contain both a simple elevator pitch for each ebook as well as longer sales copy. These aren\u2019t Evernote templates in the usual sense, in that I\u2019m not going to duplicate a note that contains my sales copy for an ebook. However, I have that copy handy to copy and paste into other places, such as on my web site or on social media. ( Location 605 ) also have a series of notes that comprise FAQs about me and my business. I try to keep my branding consistent (a goal from a few ( Location 613 ) years ago), and having available the answers to questions I get frequently is very handy. Sometimes it\u2019s essential! If my brain is in a different zone, I don\u2019t want to have to go through the effort to remember the exact answer to that question. Instead, the information is at my fingertips in Evernote. I also have standard sales copy for things like the title and description of Zazzle products, or my freelance elevator pitch and social media bio. By not having to remember tedium, I can free up brain cells for the fun stuff, like the development of my creative endeavors. I find it more difficult to be freely creative when I\u2019m trying to remember a bunch of other information. But my brain is able to relax and do what it loves to do when it knows the needed but boring information is safely stored where we can find it later. Organizing Templates In the chapter on my Evernote setup, I mentioned ( Location 614 ) templates. I keep a special notebook stack with notebooks and notes that serve as templates for information I use frequently. This isn\u2019t the only method for organizing templates, but it is the method that works best for my system. I have known others to keep templates stored in the notebooks and stacks that relate to that topic, but I\u2019ve found it easier to keep these separate and outside of my prioritized workflow. For example, I try to keep my Current Projects stack focused on what is important right now, instead of full of template notes mixed with notes I\u2019m currently using. By sorting my templates into their own notebooks and tagging them appropriately, I ensure I\u2019ll always find them when I need them. ( Location 622 ) Customizing Emailed Notes When emailing notes to Evernote, those notes go into the default notebook you\u2019ve set up. For me, this is the Inbox notebook I told you about earlier. I use Inbox as a holding zone for information until I\u2019m able to process it properly. Although emailed notes will go to the default notebook if you merely send them in, you can customize each email too. Emailed notes can be controlled and customized using the subject line in the email ( Location 726 )","title":"Evernote"},{"location":"Highlights/Readwise/Books/Evernote-2/#evernote","text":"","title":"Evernote"},{"location":"Highlights/Readwise/Books/Evernote-2/#metadata","text":"Author: [[Kimberly Eddy]] Full Title: Evernote Category: #Type/Highlights/Books","title":"Metadata"},{"location":"Highlights/Readwise/Books/Evernote-2/#highlights","text":"The notebooks titled, \u201cWeb Site Drafts\u201d and \u201cWeb Site Fixes\u201d contain a couple of notes with drafts of blog posts or specific issues I need to fix on my web ( Location 269 ) site. If a problem occurs on my web site or on a site I manage for a client, I make a note for the problem, then later I\u2019ll record the solution. Once I finish fixing the problem, I move the note to a different notebook stack I have where I save useful information and tutorials. ( Location 270 ) The Upcoming Notebook Stack ( Location 276 ) The next notebook stack is for Upcoming Projects. ( Location 277 ) Someday and Done Stacks ( Location 284 ) Someday, Someday Someday is where every idea goes that I am not acting on right now, and can\u2019t even think about at the moment. Someday also acts as a sort of bucket list for my life. This particular notebook stack, working in conjunction with my Inbox notebook, has saved my sanity and helped me maintain focus. Those crazy business ideas or home redecorating ( Location 286 ) Any metaphorical \u201cshiny object\u201d that grabs my attention and wants to be toyed with, I stick in there so my brain can rest, knowing that this Great New Idea is safe and secure. No need to obsess about it today. ( Location 291 ) The Someday notebook stack also includes things like a notebook for the trip to China and India that Hubby and I hope to take in the next couple of years. There\u2019s also a crazy idea for an irrigation system for the garden. I sketched the irrigation system on a napkin, photographed the napkin, and stuck the note/photo into the Garden Ideas notebook. ( Location 292 ) Done: My Productivity Tracker ( Location 295 ) The Purpose and Priorities Notebook ( Location 301 ) I put a notebook at the top of my stacks entitled \u201c0-Purpose and Priorities.\u201d The \u201c0\u201d keeps it on top! In this Evernote notebook, I file notes for my personal mission statement, my annual goals, as well as this month\u2019s goals. I also include a note titled \u201cMaster List.\u201d This one changes from week to week. The Master List itemizes all the step by step to-dos I have to do this week. This note doesn\u2019t have any details, but it does link to details. It\u2019s good for me to have my goals and mission statement front and center in my life. Ever since I really grabbed hold of Stephen Covey\u2019s book, The 7 Habits of Highly Effective People, I realized I do better in ( Location 302 ) The Templates Stack I built a stack of notebooks for templates. I use templates for things like my generic to-do list for clients when they order my basic WordPress configuration package, as well as the contract I ask them to sign. I have a nicer looking contract on my hard drive, but I like to keep the basic text of the contract easily accessible. Since Evernote stores notes in the cloud, I never run the risk of losing the wording for my contract. I have generic to-do lists for\u2026 ( Location 312 ) I made a checklist for all the settings to use in Microsoft Word when formatting an ebook for Kindle and other e-readers too. In the same notebook, for publishing, I also have checklists for self-editing. My template stack\u2026 ( Location 320 ) The Tutorials Stack The notebook stack labeled \u201cTutorials\u201d contains notebooks and notes linking to different tutorials I frequently reference for my business and life. For example, I have one notebook titled \u201cGoogle Products\u201d and in it I keep notes reminding me how to create funnels and\u2026 ( Location 323 ) The Table of Contents Most of my notebooks include a table of contents that I update regularly when I change the notebook. Some of them I don\u2019t bother with as they are not too full. But if you have a notebook with a great deal of information, you may want to do this. To create a table of contents in a notebook, select all the notes in the notebook using your mouse and the shift key. A pop-up window will prompt you to select a task. You can share these notes with someone, merge them together into one note, move them\u2026 ( Location 329 ) Personalize Evernote As you can tell from my setup, the real benefit for Evernote is that, like bullet journaling, you can make it entirely yours. Evernote is both flexible and powerful, even in the free version. You can make it as complicated or as simple as you need it to be to work for you. Next I\u2019ll share more detail on other features that help me make the most of\u2026 ( Location 338 ) Follow Ups Sometimes when I contact a client or a potential client, they tell me, \u201cI\u2019m interested, but now is not a good time. Can you contact me again in a couple of weeks?\u201d I keep notes for each potential client or former client in my Evernote notebook titled \u201cClients and Leads.\u201d To protect privacy in the case of a data breach (notes are stored in the cloud, after all), I do not include sensitive information in my client notes. ( Location 378 ) Renewals Another way I use reminders in Evernote is to scan bills or reminders into Evernote using my cell phone, and set a reminder for a week before this bill is due. For example, I recently used this for my summer taxes. They send the bill out several months before payment is due, so far in advance that I usually forget it. Instead, for the last several years, I\u2019ve set a reminder for a week before the due date, with important but non-sensitive information included ( Location 386 ) Car Maintenance I also keep track of my car\u2019s maintenance records in a notebook for my car. I set up reminders for oil changes and other maintenance matters. This has been very helpful to me, as I generally forget about these kinds of things otherwise, or cannot reminder the last time something was done to the car. Instead, right there in Evernote, I have scans of my service records for my car in case there is ever a problem, as well as reminders for the next date of service. Obviously, for security purposes, I make sure that no account numbers or sensitive information is on these scans when I import them. Though you can encrypt text in Evernote notes, this is not a foolproof protection against hackers. ( Location 393 ) Chapter Four: Naming Notes and Tags ( Location 406 ) Comparing my Evernote setup once more to the piles of notebooks and papers that used to sit on my desk, it\u2019s far easier and faster to find anything I need in Evernote than it had been to look through the piles of stuff I used to store my brain in. We can make finding what we need when we need it even faster and easier when we are naming and tagging our notes. ( Location 407 ) Keys to Naming Notes in Evernote We want to name things in Evernote so we know at a glance what is in the note without having to open it and skim. I find this is particularly important when using reminders, as my reminders show up on my Google Calendar as the note\u2019s title with no other context.\u2026 ( Location 410 ) Tagging Notes in Evernote Tags are a kind of label we can add to each note. There is no limit to the number of tags you can add to a note, but again, less is more. Don\u2019t go overboard. The two words you want to think when tagging are simple and descriptive. Tags do help when you are using the search feature in Evernote, although I don\u2019t consider that the primary function of the tags. In Evernote, in the sidebar, there is a listing for \u201ctags.\u201d By clicking on that, I can see all the tags I have used. Or not\u2026 ( Location 416 ) Tags to\u2026 ( Location 425 ) Read \u2013 books or articles you\u2019re saving to read later. I originally had a notebook for my reading list, but I found it easier to save book recommendations and article bookmarks\u2026 ( Location 427 ) Watch \u2013 is similar to \u201cread.\u201d I use this one for recommendations for movies, tv shows, YouTube\u2026 ( Location 430 ) Buy \u2013products that I would like to buy or services recommend to me. Sometimes I take a photograph in Evernote\u2026 ( Location 431 ) Months and Holidays \u2013 I have\u2026 ( Location 433 ) every month of the year, which I use for projects or ideas that are more seasonal in nature, such as Zazzle designs I\u2019m working on or blog posts that are\u2026 ( Location 434 ) Receipts \u2013 I told how you I store my bills and scans of other paperwork with reminders attached to them. Whenever I save a receipt or a bill, I always tag it \u201c\u2026 ( Location 436 ) Names of Clients and Family Members \u2013 I also use the names of clients and family members when tagging notes, so that I can use the name to find notes more easily. For example, as we get closer to Christmas, I will save picture notes of products I\u2019ve photographed in the stores or bookmark notes of products at Amazon that are tagged \u201cbuy\u201d and \u201c[family member\u2019s name]\u201d in order to give me ideas when putting my Christmas list together. This\u2026 ( Location 438 ) Evernote\u2019s tags can also be nested. That is, you can create a main parent tag, with more specific child tags nested under them. To nest one tag under another tag, just drag and drop the child tag onto the parent tag. How does this work for me? I\u2019ll use the example of the tag for \u201cBuy.\u201d Under the tag \u201cBuy,\u201d I created other tags like \u201cKitchen Supplies,\u201d \u201cOffice Supplies,\u201d \u201cBusiness Needs,\u201d \u201cChristmas Gifts,\u201d and so forth. Say I\u2019m out shopping, and I see something I like and I\u2019m not able to purchase it, but I want to remember it. I take a photo of it in Evernote with my phone\u2019s Evernote Mobile app (selecting \u201cphoto note\u201d option) and tag it \u201cKitchen Supplies.\u201d When I do this in a store, I try to also get the SKU number and the manufacturer\u2026 ( Location 443 ) Think Usability Ultimately, no one is going to give you a grade for your Evernote naming conventions or taxonomy. As you set up your Evernote system and create tags, think in terms of what will be most useable as you are deep in your workflow. With a great system in place, you shouldn\u2019t have to stop and think ( Location 462 ) Chapter Five: Linking and Merging notes The ability to link notes together in Evernote is one of the more robust features of this program, and is very handy for project management. Linking notes together, or adding links to other notes within a note, makes it easier to keep track of multiple notes for the different aspects of a project. For a large project, such as a client web site, I use this feature. I start with a checklist of what needs to be done and what core content I want to create. Then I link to the individual notes that discuss my ideas for these updates, as well as the actual content itself. I turn each line of my to-do list into a link to another note with more details, research, or draft copies of the content I need to create. You can\u2019t do that with a paper planner, can you? ( Location 469 ) Practical Uses for the Link Feature I\u2019ve already talked about my own favorite use for Evernote\u2019s link feature: adding links to my to-do list. Here are some other ways I\u2019ve used the link feature in Evernote to improve my workflow and productivity, plus some more details on how I use this in my to-do list. The Linked To-Do List ( Location 483 ) When to Link and When to Merge Truth be told, figuring out when to merge and when to link is more difficult for me than actually linking and merging. Most of the time, I prefer to link notes together, arranging the topics in one long to-do list or editorial calendar. I choose to merge notes when my notes essentially repeat the same thing in a different way. ( Location 540 ) Tags: [[favorite]] Chapter Six: Templates ( Location 546 ) Templates Templates WP Templates Publish Templates Email Templates TimeMGT Templates Social Media Templates Sales ( Location 559 ) Ideas for Templates In previous chapters I\u2019ve shared how I use templates in my own Evernote setup. Really, the possibilities for using templates are endless. As with anything else in Evernote, the templates you create are based on your own needs. Here are some additional ideas for Evernote Templates. ( Location 583 ) My Goals ( Location 586 ) You\u2019ve probably observed that I\u2019m really big on setting clearly defined, achievable goals, and working with laser-like focus towards those goals. The truth be told, my obsession with goals doesn\u2019t spring from my natural sense of order, but rather out of a need to reign in my ADHD and natural disorder. Each year, I create a new list of goals I\u2019m working towards based on my overall Personal Mission Statement. Because I\u2019ve found a setup that works well for me, I\u2019ve created my Goal Sheet as a template that I use each year, editing the specifics as needed. Client Work Contracts As I\u2019ve mentioned before, I keep the wording of my client contracts handy in my Evernote setup. This allows me to easily reference what we\u2019ve mutually promised with regards to each job. Having the language in one place (saved in the cloud), allows me to always have the wording available to copy and paste as needed. ( Location 587 ) Process Checklists This is another template I\u2019ve mentioned before. If you find yourself running through the same process repeatedly for similar jobs, a process checklist is helpful to keep yourself on track and reminded of all the tiny details. When I complete a basic Wordpress Configuration for a client, the steps remain the same. I save myself time by having the checklist already created. ( Location 596 ) Tables for a Calendar The ability to create tables in Evernote can be helpful for creating Calendars, Daily Planner pages, etc. Many of the templates at the Evernote web site are table layouts. I\u2019ve also created one of my goals checklists, based on the Napoleon Hill Year End Assessment, in a tabular format. This enables me to run down the list, and grade myself with notes as I seek to improve in different areas of my life. You can find this on my web site. ( Location 600 ) Self-Publishing Checklists ( Location 605 ) and Information I have created several ebooks for Amazon Kindle. There are many things that I need to do, over and above writing and editing my ebooks, to get them ready for publishing on Kindle. I used to have to look up that information every time I needed it. Then I turned the process into a final checklist that\u2019s much easier to find and use. Furthermore, I\u2019ve also created a checklist for marketing my ebooks, as well as notes that contain both a simple elevator pitch for each ebook as well as longer sales copy. These aren\u2019t Evernote templates in the usual sense, in that I\u2019m not going to duplicate a note that contains my sales copy for an ebook. However, I have that copy handy to copy and paste into other places, such as on my web site or on social media. ( Location 605 ) also have a series of notes that comprise FAQs about me and my business. I try to keep my branding consistent (a goal from a few ( Location 613 ) years ago), and having available the answers to questions I get frequently is very handy. Sometimes it\u2019s essential! If my brain is in a different zone, I don\u2019t want to have to go through the effort to remember the exact answer to that question. Instead, the information is at my fingertips in Evernote. I also have standard sales copy for things like the title and description of Zazzle products, or my freelance elevator pitch and social media bio. By not having to remember tedium, I can free up brain cells for the fun stuff, like the development of my creative endeavors. I find it more difficult to be freely creative when I\u2019m trying to remember a bunch of other information. But my brain is able to relax and do what it loves to do when it knows the needed but boring information is safely stored where we can find it later. Organizing Templates In the chapter on my Evernote setup, I mentioned ( Location 614 ) templates. I keep a special notebook stack with notebooks and notes that serve as templates for information I use frequently. This isn\u2019t the only method for organizing templates, but it is the method that works best for my system. I have known others to keep templates stored in the notebooks and stacks that relate to that topic, but I\u2019ve found it easier to keep these separate and outside of my prioritized workflow. For example, I try to keep my Current Projects stack focused on what is important right now, instead of full of template notes mixed with notes I\u2019m currently using. By sorting my templates into their own notebooks and tagging them appropriately, I ensure I\u2019ll always find them when I need them. ( Location 622 ) Customizing Emailed Notes When emailing notes to Evernote, those notes go into the default notebook you\u2019ve set up. For me, this is the Inbox notebook I told you about earlier. I use Inbox as a holding zone for information until I\u2019m able to process it properly. Although emailed notes will go to the default notebook if you merely send them in, you can customize each email too. Emailed notes can be controlled and customized using the subject line in the email ( Location 726 )","title":"Highlights"},{"location":"Highlights/Readwise/Books/Evernote/","text":"Evernote \u00b6 Metadata \u00b6 Author: [[John Scott]] Full Title: Evernote Category: #Type/Highlights/Books Highlights \u00b6 You can use your Evernote email address to subscribe to newsletters. ( Location 851 )","title":"Evernote"},{"location":"Highlights/Readwise/Books/Evernote/#evernote","text":"","title":"Evernote"},{"location":"Highlights/Readwise/Books/Evernote/#metadata","text":"Author: [[John Scott]] Full Title: Evernote Category: #Type/Highlights/Books","title":"Metadata"},{"location":"Highlights/Readwise/Books/Evernote/#highlights","text":"You can use your Evernote email address to subscribe to newsletters. ( Location 851 )","title":"Highlights"},{"location":"Highlights/Readwise/Books/Free%20to%20Focus/","text":"Free to Focus \u00b6 Metadata \u00b6 Author: [[Michael Hyatt]] Full Title: Free to Focus Category: #Type/Highlights/Books Highlights \u00b6 Almost everything will work again if you unplug it for a few minutes, including you. ( Location 873 )","title":"Free to Focus"},{"location":"Highlights/Readwise/Books/Free%20to%20Focus/#free-to-focus","text":"","title":"Free to Focus"},{"location":"Highlights/Readwise/Books/Free%20to%20Focus/#metadata","text":"Author: [[Michael Hyatt]] Full Title: Free to Focus Category: #Type/Highlights/Books","title":"Metadata"},{"location":"Highlights/Readwise/Books/Free%20to%20Focus/#highlights","text":"Almost everything will work again if you unplug it for a few minutes, including you. ( Location 873 )","title":"Highlights"},{"location":"Highlights/Readwise/Books/Master%20Evernote/","text":"Master Evernote \u00b6 Metadata \u00b6 Author: [[S.J. Scott]] Full Title: Master Evernote Category: #books Highlights \u00b6 Tip 1. Use checklists for projects. ( Location 464 ) Tip 3: Get an Alarm email. The \u201cAlarm\u201d feature will send you an email for a specific, pre-determined action. This is a great way to set a reminder for an important task or appointment. ( Location 481 ) Step 1: Create a Default Notebook ( Location 512 ) Step 2: Create Context-Specific Notebooks ( Location 521 ) Step 5: Organize Your Notebooks ( Location 549 ) !Ideas: ( Location 569 ) I recommend maintaining a separate notebook of ideas and spur-of-the-moment thoughts. This might include a combination of written notes, audio updates and context-specific photos. My recommendation is to add to this notebook during the week. Then go through each item once a week during a review session. Explore each thought and decide if it\u2019s immediately actionable. If it is, then create a quick project list and schedule specific action items. If it isn\u2019t, then schedule a reminder to follow up on it at a later date. Finally, remove each note and file it in a long-term storage notebook called \u201cTickler File\u201d or \u201cPrevious Ideas.\u201d ( Location 569 ) Random Notebook: Your Evernote program might be filled with random notes because you don\u2019t have time to sort them. It\u2019s okay put them in a temporary ( Location 575 ) Tagging Practice 1: Stick to a Standard Tagging Convention ( Location 679 ) Tagging Practice 2: Uses Plurals Instead of Singular Tags Use the plural version of a word instead of its singular version. This makes it easier to find notes when you search for them. If you type \u201cpicture\u201d and the tag is \u201cpictures,\u201d the note will show up since partial matches count. However, if I type \u201cpictures\u201d and the tag is \u201cpicture,\u201d the note won\u2019t show up because Evernote doesn\u2019t consider it to be the same word. Do your best to be uniform with tagging. The good news is if you get this right for a few weeks, most of the tags you add will already be there when you need to tag a new note. ( Location 682 ) Tagging Practice 3: Tag with First Names and a Last Name Initial ( Location 689 ) Tagging Practice 4: Keep Tags Streamlined The beauty of tagging is there isn\u2019t a realistic limit to how many you can have. Unfortunately, that\u2019s also the danger of tagging. Honestly, who really needs 100,000 tags? Evernote can become very clunky if you have to sort through thousands of tags at the same time. My point? Although you don\u2019t have to worry about reaching a hard limit, you shouldn\u2019t create a unique ( Location 695 ) Tagging Practice 5: Start Broad, Then Narrow Your Focus I like to start a note entry with a generic tag. These tags work great when they correspond to specific stacks or notebooks. For instance, you could create tags like Recipes, Travel, Health, or Home Improvement. Then you should create additional tags that drill down into the specifics of the content. So, using the previous example, you could add to the Health tag using additional modifiers such as Running, Lifting and Stretching. Tagging Practice 6: Identify the Who, What, Where, When and Why ( Location 702 ) A great way to create effective tags is to use the 5 W questions we all learned in school. Let\u2019s discuss a concrete example here. If I tagged a photo of myself and four friends at the beach in Belmar, New Jersey, then my tags might look like this: #belmar #newjersey #george #klaus #wilhelm #rebecca #2014 #pictures #sunset. The point behind this tagging convention is to make it easy to quickly find related notes in the future. In 2024, it will be easy to locate the right images if I want to find pictures of Klaus in Belmar. Tagging Practice 7: Avoid Multiple-Word Tags ( Location 712 ) Advanced Evernote: How to Automate Your Email Delivery ( Location 904 ) Amazon Receipts to Evernote \u2022 Automatically back up Tweets to Evernote. \u2022 Download Instagram photos I like to Evernote . \u2022 Star an item in Gmail. It is automatically sent to Evernote. \u2022 Star something in Pocket. It is automatically sent to Evernote. \u2022 Archive Instagram photos. \u2022 Connect Google Talk or Siri to Evernote. \u2022 Save Facebook status updates in running timelines. \u2022 RSS Feeds to Evernote \u2022 Google Calendar to-do lists sent to/updated by Evernote \u2022 Archive all Foursquare check-ins in a single note . \u2022 Get a list of new books for your Kindle to Evernote . \u2022 New Dropbox files are copied to Evernote. ( Location 953 ) One of the big differences between \u201cclassic GTD\u201d and \u201cEvernote GTD\u201d are the tools involved. In his book, David Allen recommends a number of tools: \u2022 Paper holding trays \u2022 Paperclips \u2022 Binding clips \u2022 Stapler \u2022 Rubber bands \u2022 Tape \u2022 Calendar \u2022 File folders ( Location 1214 ) 5. Create a project list: Multi-step projects don\u2019t always have a clear-cut \u201cnext action\u201d from the very beginning. You need to create a plan and then develop a list of tasks to incorporate into your workflow. ( Location 1261 ) \u00b6 Tags: [[favorite]] Idea #12: Create Extensive Outlines Outlining isn\u2019t something you just do in school. In fact, any creative project could benefit from doing an extensive outline. Every time you start a new project, create a new notebook for your ideas. Use this notebook to store project-related links, tools and thoughts. The more you add to this notebook, the better the outcome of your project. ( Location 1462 ) Idea #21: Map Out Project Lists Creating actionable lists is the key to completing any project. Each list item should be a specific task with a measurable outcome. For example, \"Lose five pounds by July 30\" is better than \"lose weight\" because it is more specific. With Evernote, you can create a note for each project and use a checkbox to-do list. As you complete one task, look at the following item on the list to see what you need to do next. Add these project lists to a notebook titled \u201cAction Folder,\u201d and you\u2019ll have a central location for the tasks you need to complete in the near future. ( Location 1503 ) Idea #22: Create a Weekly Action List A weekly action list takes the concept of the project list one step further. At the start of the week (I prefer Sundays), go through each of your project lists and identify the most important items for your personal and professional life. Instead of having to rely on multiple project lists, you\u2019ll have a small collection of tasks that will be the focus for the next seven days. Get started by creating a simple checklist within a note. Put this note in a notebook called \u201c!Weekly\u201d so it shows up near the top of your Evernote dashboard. Then open this list on a daily basis to see what tasks you need to complete. ( Location 1509 ) Idea #23: Create Process Checklists Process checklists are a little different than project lists because they describe the step-by-step actions of a regular process. The benefit of writing everything down is you either identify ways to improve ( Location 1515 ) Idea #24: Organize Your Research Whether you\u2019re in school or own your own business, it\u2019s important to make research and continued self-education an important part of your day. The good news? Evernote makes it easy to put every link, chart, PDF, article and excerpt into a central location that\u2019s easy to search on multiple devices. Overall, this tool is a big improvement over the browser full of bookmarks you thought were important. This also beats the pants off of frantically ( Location 1522 ) Idea #25: Record Business Meetings Make audio recordings of important meetings and save them to Evernote. This frees you up your time so you never miss an important task. You can also have these notes transcribed or use them to assign projects to specific members of your team. This idea can also minimize future legal problems. For instance, if you operate an LLC with another person, it\u2019s important to keep minutes of each meeting because it shows you\u2019re functioning as a legitimate business instead of as a personal entity. This can be important if you ever get sued and a lawyer is trying to go after your personal assets. ( Location 1527 ) Idea #28: Declutter Your Inbox Anyone who has an interest in time management understands the danger of an out-of-control email inbox. Fortunately, there\u2019s a lot you can do with Evernote to stem the tide. \u2022 Forward your email to Evernote and manage everything in one central location. \u2022 Create a \u201cDelegate\u201d Notebook for identifying recurring requests someone else can handle. \u2022 Create an \u201cEliminate\u201d Notebook of recurring messages that truly aren\u2019t important. Find a way to get rid of them. \u2022 Use free time to write down \u201ctemplate responses\u201d for common requests. Out-of-control email is the bane of existence for many people. To get better at managing email, you need to practice the daily habit of identifying different areas to streamline. ( Location 1546 ) Idea #32: Create a Networking Database ( Location 1571 ) Idea #54: Keep a Reference List This is great idea for errands and shopping trips. Create a list of favorite brands, clothing sizes and products your family members use. This is useful if you want to surprise someone important with a gift (such as a new shirt) and you can\u2019t quite remember their measurements or preferences. Keep adding notes to this list and you\u2019ll quickly build a database of everything that\u2019s important. ( Location 1693 ) Idea #58: Journal Your Thoughts Many people use daily journaling as a way to reduce stress and bring order to a hectic lifestyle. You can gain clarity on your day-to-day activities by writing down responses to a few basic questions: \u2022 What are you grateful for? \u2022 What would make today great? \u2022 What interesting things happened to you today? The questions themselves aren\u2019t that important. What\u2019s important is creating a simple template you use on a daily basis. This template should act as a prompt for your journaling habit. Do some journaling for a few minutes every day to gain more perspective on what\u2019s truly important in your life. ( Location 1720 ) Tags: [[favorite]] Note: Do some journaling for a few minutes every day to gain more perspective on what\u2019s truly important in your life. Idea #74: Track Quarterly (or Yearly) Goals Goal setting has been proven to be a critical part of personal success. When you write down actionable goals and review them daily, you increase your chances of actually achieving them. A great way to use Evernote is to create a list of five to seven goals you\u2019d like to accomplish in the near future. My advice is to create a notebook called !Goals, which will put the notebook near the top of your dashboard. Inside this notebook, create an individual ( Location 1822 ) note filled with your goals for the next three months. (I prefer quarterly goals over yearly goals because they feel more immediate and important.) Then open up this note on a daily basis and review each goal. ( Location 1827 ) Idea #75: De-Clutter Your Life By now, you probably see how Evernote can help de-clutter your life. It does the following: \u2022 Organizes your digital life by creating central location for all your important paperwork, files and documents. \u2022 Replaces bulky filing cabinets. \u2022 Acts as a substitute for bulky items such as cookbooks and travel guides. \u2022 Eliminates the need to print out reference materials. \u2022 Creates a backup for all product warranties and documentation. \u2022 Creates checklist processes for regular cleaning activities. ( Location 1829 ) While Evernote doesn\u2019t magically clean your home for you, it can be used as a tool to better organize your home. You\u2019ll find that once you\u2019ve developed the habit of digitizing certain items, you\u2019ll start to eliminate a lot of clutter you really don\u2019t need. Picking YOUR Ideas These are just 75 ideas for getting started with Evernote. Should you try all of them at once? Definitely not. This app is like any other tool\u2014the more it\u2019s used, the more you\u2019ll need it on a daily basis. Don\u2019t worry if this previous list seems like a lot to do. My recommendation is to think of your biggest \u201cproblem\u201d areas and use Evernote to solve them. For instance, consider the challenges you face on a daily basis. Do you struggle to get things done? Are you buried under an avalanche of paperwork? Do you often forget certain items at the grocery store? Having trouble going from an idea to a completed project? Evernote can help you fix all of these problems. To a ( Location 1837 )","title":"Master Evernote"},{"location":"Highlights/Readwise/Books/Master%20Evernote/#master-evernote","text":"","title":"Master Evernote"},{"location":"Highlights/Readwise/Books/Master%20Evernote/#metadata","text":"Author: [[S.J. Scott]] Full Title: Master Evernote Category: #books","title":"Metadata"},{"location":"Highlights/Readwise/Books/Master%20Evernote/#highlights","text":"Tip 1. Use checklists for projects. ( Location 464 ) Tip 3: Get an Alarm email. The \u201cAlarm\u201d feature will send you an email for a specific, pre-determined action. This is a great way to set a reminder for an important task or appointment. ( Location 481 ) Step 1: Create a Default Notebook ( Location 512 ) Step 2: Create Context-Specific Notebooks ( Location 521 ) Step 5: Organize Your Notebooks ( Location 549 ) !Ideas: ( Location 569 ) I recommend maintaining a separate notebook of ideas and spur-of-the-moment thoughts. This might include a combination of written notes, audio updates and context-specific photos. My recommendation is to add to this notebook during the week. Then go through each item once a week during a review session. Explore each thought and decide if it\u2019s immediately actionable. If it is, then create a quick project list and schedule specific action items. If it isn\u2019t, then schedule a reminder to follow up on it at a later date. Finally, remove each note and file it in a long-term storage notebook called \u201cTickler File\u201d or \u201cPrevious Ideas.\u201d ( Location 569 ) Random Notebook: Your Evernote program might be filled with random notes because you don\u2019t have time to sort them. It\u2019s okay put them in a temporary ( Location 575 ) Tagging Practice 1: Stick to a Standard Tagging Convention ( Location 679 ) Tagging Practice 2: Uses Plurals Instead of Singular Tags Use the plural version of a word instead of its singular version. This makes it easier to find notes when you search for them. If you type \u201cpicture\u201d and the tag is \u201cpictures,\u201d the note will show up since partial matches count. However, if I type \u201cpictures\u201d and the tag is \u201cpicture,\u201d the note won\u2019t show up because Evernote doesn\u2019t consider it to be the same word. Do your best to be uniform with tagging. The good news is if you get this right for a few weeks, most of the tags you add will already be there when you need to tag a new note. ( Location 682 ) Tagging Practice 3: Tag with First Names and a Last Name Initial ( Location 689 ) Tagging Practice 4: Keep Tags Streamlined The beauty of tagging is there isn\u2019t a realistic limit to how many you can have. Unfortunately, that\u2019s also the danger of tagging. Honestly, who really needs 100,000 tags? Evernote can become very clunky if you have to sort through thousands of tags at the same time. My point? Although you don\u2019t have to worry about reaching a hard limit, you shouldn\u2019t create a unique ( Location 695 ) Tagging Practice 5: Start Broad, Then Narrow Your Focus I like to start a note entry with a generic tag. These tags work great when they correspond to specific stacks or notebooks. For instance, you could create tags like Recipes, Travel, Health, or Home Improvement. Then you should create additional tags that drill down into the specifics of the content. So, using the previous example, you could add to the Health tag using additional modifiers such as Running, Lifting and Stretching. Tagging Practice 6: Identify the Who, What, Where, When and Why ( Location 702 ) A great way to create effective tags is to use the 5 W questions we all learned in school. Let\u2019s discuss a concrete example here. If I tagged a photo of myself and four friends at the beach in Belmar, New Jersey, then my tags might look like this: #belmar #newjersey #george #klaus #wilhelm #rebecca #2014 #pictures #sunset. The point behind this tagging convention is to make it easy to quickly find related notes in the future. In 2024, it will be easy to locate the right images if I want to find pictures of Klaus in Belmar. Tagging Practice 7: Avoid Multiple-Word Tags ( Location 712 ) Advanced Evernote: How to Automate Your Email Delivery ( Location 904 ) Amazon Receipts to Evernote \u2022 Automatically back up Tweets to Evernote. \u2022 Download Instagram photos I like to Evernote . \u2022 Star an item in Gmail. It is automatically sent to Evernote. \u2022 Star something in Pocket. It is automatically sent to Evernote. \u2022 Archive Instagram photos. \u2022 Connect Google Talk or Siri to Evernote. \u2022 Save Facebook status updates in running timelines. \u2022 RSS Feeds to Evernote \u2022 Google Calendar to-do lists sent to/updated by Evernote \u2022 Archive all Foursquare check-ins in a single note . \u2022 Get a list of new books for your Kindle to Evernote . \u2022 New Dropbox files are copied to Evernote. ( Location 953 ) One of the big differences between \u201cclassic GTD\u201d and \u201cEvernote GTD\u201d are the tools involved. In his book, David Allen recommends a number of tools: \u2022 Paper holding trays \u2022 Paperclips \u2022 Binding clips \u2022 Stapler \u2022 Rubber bands \u2022 Tape \u2022 Calendar \u2022 File folders ( Location 1214 )","title":"Highlights"},{"location":"Highlights/Readwise/Books/Master%20Evernote/#5-create-a-project-list-multi-step-projects-dont-always-have-a-clear-cut-next-action-from-the-very-beginning-you-need-to-create-a-plan-and-then-develop-a-list-of-tasks-to-incorporate-into-your-workflow-location-1261","text":"Tags: [[favorite]] Idea #12: Create Extensive Outlines Outlining isn\u2019t something you just do in school. In fact, any creative project could benefit from doing an extensive outline. Every time you start a new project, create a new notebook for your ideas. Use this notebook to store project-related links, tools and thoughts. The more you add to this notebook, the better the outcome of your project. ( Location 1462 ) Idea #21: Map Out Project Lists Creating actionable lists is the key to completing any project. Each list item should be a specific task with a measurable outcome. For example, \"Lose five pounds by July 30\" is better than \"lose weight\" because it is more specific. With Evernote, you can create a note for each project and use a checkbox to-do list. As you complete one task, look at the following item on the list to see what you need to do next. Add these project lists to a notebook titled \u201cAction Folder,\u201d and you\u2019ll have a central location for the tasks you need to complete in the near future. ( Location 1503 ) Idea #22: Create a Weekly Action List A weekly action list takes the concept of the project list one step further. At the start of the week (I prefer Sundays), go through each of your project lists and identify the most important items for your personal and professional life. Instead of having to rely on multiple project lists, you\u2019ll have a small collection of tasks that will be the focus for the next seven days. Get started by creating a simple checklist within a note. Put this note in a notebook called \u201c!Weekly\u201d so it shows up near the top of your Evernote dashboard. Then open this list on a daily basis to see what tasks you need to complete. ( Location 1509 ) Idea #23: Create Process Checklists Process checklists are a little different than project lists because they describe the step-by-step actions of a regular process. The benefit of writing everything down is you either identify ways to improve ( Location 1515 ) Idea #24: Organize Your Research Whether you\u2019re in school or own your own business, it\u2019s important to make research and continued self-education an important part of your day. The good news? Evernote makes it easy to put every link, chart, PDF, article and excerpt into a central location that\u2019s easy to search on multiple devices. Overall, this tool is a big improvement over the browser full of bookmarks you thought were important. This also beats the pants off of frantically ( Location 1522 ) Idea #25: Record Business Meetings Make audio recordings of important meetings and save them to Evernote. This frees you up your time so you never miss an important task. You can also have these notes transcribed or use them to assign projects to specific members of your team. This idea can also minimize future legal problems. For instance, if you operate an LLC with another person, it\u2019s important to keep minutes of each meeting because it shows you\u2019re functioning as a legitimate business instead of as a personal entity. This can be important if you ever get sued and a lawyer is trying to go after your personal assets. ( Location 1527 ) Idea #28: Declutter Your Inbox Anyone who has an interest in time management understands the danger of an out-of-control email inbox. Fortunately, there\u2019s a lot you can do with Evernote to stem the tide. \u2022 Forward your email to Evernote and manage everything in one central location. \u2022 Create a \u201cDelegate\u201d Notebook for identifying recurring requests someone else can handle. \u2022 Create an \u201cEliminate\u201d Notebook of recurring messages that truly aren\u2019t important. Find a way to get rid of them. \u2022 Use free time to write down \u201ctemplate responses\u201d for common requests. Out-of-control email is the bane of existence for many people. To get better at managing email, you need to practice the daily habit of identifying different areas to streamline. ( Location 1546 ) Idea #32: Create a Networking Database ( Location 1571 ) Idea #54: Keep a Reference List This is great idea for errands and shopping trips. Create a list of favorite brands, clothing sizes and products your family members use. This is useful if you want to surprise someone important with a gift (such as a new shirt) and you can\u2019t quite remember their measurements or preferences. Keep adding notes to this list and you\u2019ll quickly build a database of everything that\u2019s important. ( Location 1693 ) Idea #58: Journal Your Thoughts Many people use daily journaling as a way to reduce stress and bring order to a hectic lifestyle. You can gain clarity on your day-to-day activities by writing down responses to a few basic questions: \u2022 What are you grateful for? \u2022 What would make today great? \u2022 What interesting things happened to you today? The questions themselves aren\u2019t that important. What\u2019s important is creating a simple template you use on a daily basis. This template should act as a prompt for your journaling habit. Do some journaling for a few minutes every day to gain more perspective on what\u2019s truly important in your life. ( Location 1720 ) Tags: [[favorite]] Note: Do some journaling for a few minutes every day to gain more perspective on what\u2019s truly important in your life. Idea #74: Track Quarterly (or Yearly) Goals Goal setting has been proven to be a critical part of personal success. When you write down actionable goals and review them daily, you increase your chances of actually achieving them. A great way to use Evernote is to create a list of five to seven goals you\u2019d like to accomplish in the near future. My advice is to create a notebook called !Goals, which will put the notebook near the top of your dashboard. Inside this notebook, create an individual ( Location 1822 ) note filled with your goals for the next three months. (I prefer quarterly goals over yearly goals because they feel more immediate and important.) Then open up this note on a daily basis and review each goal. ( Location 1827 ) Idea #75: De-Clutter Your Life By now, you probably see how Evernote can help de-clutter your life. It does the following: \u2022 Organizes your digital life by creating central location for all your important paperwork, files and documents. \u2022 Replaces bulky filing cabinets. \u2022 Acts as a substitute for bulky items such as cookbooks and travel guides. \u2022 Eliminates the need to print out reference materials. \u2022 Creates a backup for all product warranties and documentation. \u2022 Creates checklist processes for regular cleaning activities. ( Location 1829 ) While Evernote doesn\u2019t magically clean your home for you, it can be used as a tool to better organize your home. You\u2019ll find that once you\u2019ve developed the habit of digitizing certain items, you\u2019ll start to eliminate a lot of clutter you really don\u2019t need. Picking YOUR Ideas These are just 75 ideas for getting started with Evernote. Should you try all of them at once? Definitely not. This app is like any other tool\u2014the more it\u2019s used, the more you\u2019ll need it on a daily basis. Don\u2019t worry if this previous list seems like a lot to do. My recommendation is to think of your biggest \u201cproblem\u201d areas and use Evernote to solve them. For instance, consider the challenges you face on a daily basis. Do you struggle to get things done? Are you buried under an avalanche of paperwork? Do you often forget certain items at the grocery store? Having trouble going from an idea to a completed project? Evernote can help you fix all of these problems. To a ( Location 1837 )","title":"5. Create a project list: Multi-step projects don\u2019t always have a clear-cut \u201cnext action\u201d from the very beginning. You need to create a plan and then develop a list of tasks to incorporate into your workflow. (Location\u00a01261)"},{"location":"Highlights/Readwise/Books/Quick%20Passages/","text":"Quick Passages \u00b6 Metadata \u00b6 Author: Full Title: Quick Passages Category: #Type/Highlights/Books Highlights \u00b6 If you could have a gigantic billboard anywhere with anything on it, what would it say and why? Simple one for me to answer: \"Storms make us stronger.\" If I had one message for young people embarking on life, it would be this. Don't shy away from te hard times. Tackle them head-on, move toward the path less trodden, riddler with obstacles, because most other people run at the first sign of battle storms give us a chance to define ourselves, to distinguish ourselves, and wee ways emerge from them stronger. (Page 230) Note: Time Ferris with Bear Grillz A full stack developer is an engineer who can handle all the work of databases, servers, systems engineering, and clients Note: https://hackernoon.com/6-essential-tips-on-how-to-become-a-full-stack-developer-1d10965aaead","title":"Quick Passages"},{"location":"Highlights/Readwise/Books/Quick%20Passages/#quick-passages","text":"","title":"Quick Passages"},{"location":"Highlights/Readwise/Books/Quick%20Passages/#metadata","text":"Author: Full Title: Quick Passages Category: #Type/Highlights/Books","title":"Metadata"},{"location":"Highlights/Readwise/Books/Quick%20Passages/#highlights","text":"If you could have a gigantic billboard anywhere with anything on it, what would it say and why? Simple one for me to answer: \"Storms make us stronger.\" If I had one message for young people embarking on life, it would be this. Don't shy away from te hard times. Tackle them head-on, move toward the path less trodden, riddler with obstacles, because most other people run at the first sign of battle storms give us a chance to define ourselves, to distinguish ourselves, and wee ways emerge from them stronger. (Page 230) Note: Time Ferris with Bear Grillz A full stack developer is an engineer who can handle all the work of databases, servers, systems engineering, and clients Note: https://hackernoon.com/6-essential-tips-on-how-to-become-a-full-stack-developer-1d10965aaead","title":"Highlights"},{"location":"Highlights/Readwise/Books/Reproducible%20Research%20With%20R%20and%20RStudio/","text":"Reproducible Research With R and RStudio \u00b6 Metadata \u00b6 Author: [[Christopher Gandrud]] Full Title: Reproducible Research With R and RStudio Category: #Type/Highlights/Books Highlights \u00b6 the data and code used to make a fnding are available and they are su\u00ffcient for an independent researcher to recreate the fnding. ( Location 11798 ) In particular, you will learn tools for dynamically \u201cknitting\u201d5 the data and the source code together with your presentation documents. Combined with wellorganized source fles and clearly and completely commented code, independent researchers will be able to understand how you obtained your results. This will make your computational research easily reproducible. ( Location 12234 ) Reproducible research is one of the main components of science. If that\u2019s not enough reason for you to make your research reproducible, consider that the tools of reproducible research also have direct benefts for you as a researcher. ( Location 12234 ) Tags: [[favorite]] Reproducibility enhances replicability. ( Location 12671 ) Avoiding e\u02d9ort duplication and encouraging cumulative knowledge development Not only is reproducibility important for evaluating scientifc claims, it can also contribute to the cumulative growth of scientifc knowledge ( Location 12672 ) Reproducible research cuts down on the amount of time scientists have to spend gathering data or developing procedures that have already been collected or fgured out. Because researchers do not have to discover on their own things that have already been done, they can more quickly build on established fndings and develop new knowledge. ( Location 12672 ) Tags: [[favorite]] Making a project reproducible from the start encourages you to use better work habits. It can spur you to more e\u02d9ectively plan and organize your research. It should push you to bring your data and source code up to a higher level of quality than you might if you \u201cthought \u2018no one was looking\u2019 \u201d (Donoho, 2010, 386). This forces you to root out errors\u2013a ubiquitous part of computational research\u2013earlier in the research process (Donoho, 2010, 385). Clear documentation also makes it easier to fnd errors.7 Reproducible research needs to be stored so that other researchers can actually access the data and source code. By taking steps to make your research accessible for others, you are also making it easier for yourself to fnd your data and methods when you revise your work or begin a new project. You are avoiding personal e\u02d9ort duplication, allowing you to cumulatively build on your own work more e\u02d9ectively. ( Location 13108 ) Before we start learning the details of the reproducible research workfow with R and RStudio, it\u2019s useful to cover a few broad tips that will help you organize your research process and put these skills in perspective. The tips are: 1. Document everything! 2. Everything is a (text) fle. 3. All fles should be human readable. 4. Explicitly tie your fles together. 5. Have a plan to organize, store, and make your fles available. ( Location 20973 ) In order to reproduce your research, others must be able to know what you did. You have to tell them what you did by documenting as much of your research process as possible. Ideally, you should tell your readers how you gathered your data, analyzed it, and presented the results. Documenting everything is the key to reproducible research and lies behind all of the other tips in this chapter and tools you will learn throughout the book. ( Location 21409 ) Document your R session info ( Location 21410 ) Learn from the text fle: keep it simple ( Location 22283 ) Text fles are simple. Their simplicitly increases the probability of baseline usefulness in the future to researchers who will reproduce the work. We can extend the logic of the simple text fle to all of the tools we use: keep it simple. Avoid adding dependencies you don\u2019t need to actually gather your data, analyze it, and present the results. For example, I have been tempted to make my presentation slides look nicer with custom fonts. I was later burned when I wanted to make minor changes to slides a year after I frst presented them (and a day before teaching an upcoming class) only to fnd that the custom fonts were no longer available. This broke my slides and forced me to spend considerable time reworking writing my source documents. If I, the creator of the slides, found this time consuming and annoying, an independent researcher would likely fnd it even more di\u00ffcult. ( Location 22283 ) All fles should be human readable ( Location 22284 ) Literate programming ( Location 23157 ) 2.2.4 Explicitly tie your fles together ( Location 23158 ) A data fle is used as input for an analysis fle. ( Location 23158 ) The results of an analysis are shown and discussed in a markup fle that is used to create a PDF document. Researchers often do not explicitly document the relationships between fles that they used in their research. For example, the results of an analysis\u2013a table or fgure\u2013may be copied and pasted into a presentation document. It can be very di\u00ffcult for future researchers to trace the table or fgure back to a particular statistical model and a particular data set without clear documentation. Therefore, it is important to make the links between your fles explicit. ( Location 23158 ) Tags: [[r]] [[favorite]] Tie functions are the most dynamic way to explicitly link your fles together. These functions instruct the computer program you are using to use information from another fle. In Table 2.1, I have compiled a selection of key tie functions you will learn how to use in this book. We\u2019ll discuss many more, but these are some of the most important. ( Location 23159 ) Have a plan to organize, store, and make your fles available ( Location 24030 ) Finally, in order for independent researchers to reproduce your work, they need to be able access the fles that instruct them how to do this. Files also need to be organized so that independent researchers can fgure out how they ft together. So, from the beginning of your research process, you should have a plan for organizing your fles and a way to make them accessible. One rule of thumb for organizing your research in fles is to limit the amount of content any one fle has. Files that contain many di\u02d9erent operations can be very di\u00ffcult to navigate, even if they have detailed comments. For example, it would be very di\u00ffcult to fnd any particular operation in a fle that contained the code used to gather the data, run all of the statistical models, and create the results, fgures and tables. If you have a hard time fnding things in a fle you created, think of the di\u00ffculties independent researchers will have! Because we have so many ways to link fles together, there is really no need to lump many di\u02d9erent operations into one fle. So, we can make our fles modular. One source code fle should be used to complete one or just a few tasks. Breaking your operations into discrete parts will also make it easier for you and others to fnd errors (Nagler, 1995, 490). Chapter 4 discusses fle organization in much more detail. Chapter 5 teaches you a number of ways to make your fles accessible through the cloud computing services like GitHub. ( Location 24030 ) cache Logical Whether or not to save results from the code chunk in a cache database. Note: cached chunks are only run when they are changed. cache.vars Character Vector Specify the variable names to save in the cache database. ( Location 34516 ) When include=FALSE the chunk is evaluated, but the results are not included in the presentation document. ( Location 34517 ) tidy ( Location 34517 ) Hooks come in two types: chunk hooks and output hooks. Chunk hooks run a function before or after a code chunk. Output hooks change how the raw output is formatted. I don\u2019t cover hooks in much detail in this book. For more information on hooks, please see Yihui Xie\u2019s webpage: http://yihui.name/knitr/hooks. ( Location 34954 ) Tags: [[favorite]] root.dir in knittable documents ( Location 43692 ) opts_knit$set(root.dir = \"/example-project/analysis\") ( Location 43692 ) Note: In general it is preferable to use the knittable fle\u2019s default directory and fle paths relative to it rather than manually specifying root.dir(). Setting an alternate root directory will make reproducibility more di\u00ffcult. ( Location 43692 ) mkdir ( Location 45439 ) Organize Your Data Gathering: Makefles ( Location 59422 ) Using GNU Make does require learning some more new syntax. However, it has one very clear advantage: it only runs a source code fle that has been updated since the last time you ran the makefle. This is very useful if part of your data-gathering process is very computationally and time intensive. ( Location 59857 ) Segmenting your data gathering into modular fles and tying them with some sort of makefle allows you to more easily navigate research text and fnd errors in the source code. The makefle\u2019s output is the data set that you\u2019ll use in the statistical analyses. There are two types of source code fles that the makefle runs: data gathering/cleanup fles and merging fles. Data cleanup fles bring raw individual data sources into R and transform them so that they can be merged with data from the other sources. Many of the R tools for data cleanup and merging will be covered in Chapter 7. In this chapter, we mostly cover the ways to bring raw data into R. Merging fles are executed by the makefle after it runs the data gathering/cleanup fles. It\u2019s a good idea to have the source code fles use very raw data as input. Your source code should avoid directly changing these raw data fles. Instead, changes should be put into new objects and data fles. Doing this makes it easier to reconstruct the steps you took to create your data set. Also, while cleaning and merging your data you may transform it in unintended ways, for example, accidentally deleting some observations that you wanted to keep. Having the raw data makes it easy to go back and correct your mistakes. ( Location 59858 ) cache If you want to run a code chunk once and save the output for when you knit the document again, rather than running the code chunk every time, set the option cache=TRUE. When you do this the frst time the document is knitted, the chunk will be run and the output stored in a sub-directory of the working directory called cache. When the document is subsequently knitted, the chunk will only be run if the code in the chunk changes or its options change. This is ( Location 77772 ) very handy if you have a code chunk that is computationally intensive to run. The cache option is set to FALSE by default. Later in this chapter (Section 8.4), we will see how to use the cache.vars function to cache only certain variables created by a code chunk. dependson Cached chunks are only rerun when their code changes. Sometimes one chunk will depend on the results from a prior chunk. In these cases, it is good to rerun the chunk if the prior chunk one is also rerun. The dependson option allows you to do this automatically. You can specify either a vector of the labels for the chunks depended on or their numbers in order from the start of the document. For example, dependson=c(2, 3) specifes that if the second or third chunks are rerun, then the current chunk will also be rerun. cache.extra Sometimes to ensure reproducibility, it may be useful to rerun a chunk when some other condition changes, such as when a new version of R is installed or a dependent fle changes. You can feed a list of conditions to cache.extra to do this. For instance: cache.extra=list(file.info(data.csv)$mtime, R.version) Here we set two conditions under which the chunk will be rerun. The frst specifes that the chunk should be rerun whenever the data.csv fle is modifed. The file.info function extracts information about the fle and mtime gives the last time that the fle was modifed. If this di\u02d9ers from when the chunk was last run, then it will be run again. This is very useful for keeping your cached chunks and the fles they rely on in sync. The second condition enabled by R.version reruns the chunk whenever the R version or even the operating system changes. If you only want to rerun the chunk when the version of R is di\u02d9erent, then use R.version.string. ( Location 78207 ) 8.2 Dynamically Including Modular Analysis Files ( Location 79519 ) ...cache.vars If the code chunk you want to cache creates many objects, but you only want to save a few of them, you can use knitr\u2019s cache.vars chunk option. Simply give it a character vector of the objects\u2019 names that you want to save. ( Location 82139 ) Tags: [[r]] Note: Knitr's cache.vars chunk option. In this chapter we covered in more detail key knitr syntax for including code chunks in our presentation documents. This and other tools we learned in this chapter are important for tying our statistical analyses directly to its advertising, i.e. our presentation documents. In the next two chapters, we will learn how to take the output from our statistical analysis and, using knitr, present the results with dynamically created tables and fgures. ( Location 82140 ) 9.3.6 Creating variable description documents with xtable ( Location 91752 ) For the HTML version of the document we do not want a table of contents as we set toc: no. We specifed a CSS theme called Flatly for our HTML document using theme: \"flatly\". As of this writing, rmarkdown has a built-in ability to use a range of themes from Bootswatch (https://bootswatch.com/). Alternatively, you can link to a custom CSS fle with the css option. Use html_document to see other options. Notice that we can use no and yes instead of false and true, respectively. We linked to two BibTeX fles with the bibliography option. Using Pandoc syntax, the references will apply to both the PDF and HTML documents. If you want to also enable the creation of a Microsoft Word document, include output: word_document in the header. ( Location 117092 ) Tags: [[favorite]] [[r]] Bibliographies with Pandoc Pandoc via rmarkdown allows us to insert citations from normal BibTeX fles (see Chapter 11) specifed in the header with bibliography. The main di\u02d9erence is that Pandoc has a di\u02d9erent syntax from LaTeX for making in-text citations. Basic Pandoc citations begin with @ followed by the BibTeX citation key. Square brackets ([]) create parentheses around the citation. Here is an example: This is a citation [@donoho2009]. Pandoc uses natbib by default, so the citation [@donoho2009] will appear as (Donoho et al., 2009). To add text before and after the citation inside of the parentheses, use something like this: [see @donoho2009, 10]; which creates: (see Donoho et al. 2009, 10). If you do not want the parentheses around the entire citation (only the year) then omit the square brackets. To include only the year, and not the authors\u2019 surnames, add a minus sign, e.g. [-@donoho2009]. See the table above for more options. Full bibliographic information for each item that is cited in the text will be produced at the end of the output document. I suggest placing a heading like #References at the very end of your document so that the bibliography will be di\u02d9erentiated from the document\u2019s text. ( Location 117093 ) Footnotes with Pandoc You can also include footnotes in documents rendered with rmarkdown by using Pandoc\u2019s footnote syntax. In the text where you would like a footnote to be located, use: [\u02c6NOTE_KEY]. Then at the end of your document, place [\u02c6NOTE_KEY]: The footnote text. 8 NOTE_KEYs generally follow the same rules as BibTeX citation keys, so no spaces. The footnotes will be numbered sequentially when rendered. To sum up, here is an example of a document that can be rendered in HTML or PDF using R Markdown. It includes footnotes and a bibliography. ( Location 117529 )","title":"Reproducible Research With R and RStudio"},{"location":"Highlights/Readwise/Books/Reproducible%20Research%20With%20R%20and%20RStudio/#reproducible-research-with-r-and-rstudio","text":"","title":"Reproducible Research With R and RStudio"},{"location":"Highlights/Readwise/Books/Reproducible%20Research%20With%20R%20and%20RStudio/#metadata","text":"Author: [[Christopher Gandrud]] Full Title: Reproducible Research With R and RStudio Category: #Type/Highlights/Books","title":"Metadata"},{"location":"Highlights/Readwise/Books/Reproducible%20Research%20With%20R%20and%20RStudio/#highlights","text":"the data and code used to make a fnding are available and they are su\u00ffcient for an independent researcher to recreate the fnding. ( Location 11798 ) In particular, you will learn tools for dynamically \u201cknitting\u201d5 the data and the source code together with your presentation documents. Combined with wellorganized source fles and clearly and completely commented code, independent researchers will be able to understand how you obtained your results. This will make your computational research easily reproducible. ( Location 12234 ) Reproducible research is one of the main components of science. If that\u2019s not enough reason for you to make your research reproducible, consider that the tools of reproducible research also have direct benefts for you as a researcher. ( Location 12234 ) Tags: [[favorite]] Reproducibility enhances replicability. ( Location 12671 ) Avoiding e\u02d9ort duplication and encouraging cumulative knowledge development Not only is reproducibility important for evaluating scientifc claims, it can also contribute to the cumulative growth of scientifc knowledge ( Location 12672 ) Reproducible research cuts down on the amount of time scientists have to spend gathering data or developing procedures that have already been collected or fgured out. Because researchers do not have to discover on their own things that have already been done, they can more quickly build on established fndings and develop new knowledge. ( Location 12672 ) Tags: [[favorite]] Making a project reproducible from the start encourages you to use better work habits. It can spur you to more e\u02d9ectively plan and organize your research. It should push you to bring your data and source code up to a higher level of quality than you might if you \u201cthought \u2018no one was looking\u2019 \u201d (Donoho, 2010, 386). This forces you to root out errors\u2013a ubiquitous part of computational research\u2013earlier in the research process (Donoho, 2010, 385). Clear documentation also makes it easier to fnd errors.7 Reproducible research needs to be stored so that other researchers can actually access the data and source code. By taking steps to make your research accessible for others, you are also making it easier for yourself to fnd your data and methods when you revise your work or begin a new project. You are avoiding personal e\u02d9ort duplication, allowing you to cumulatively build on your own work more e\u02d9ectively. ( Location 13108 ) Before we start learning the details of the reproducible research workfow with R and RStudio, it\u2019s useful to cover a few broad tips that will help you organize your research process and put these skills in perspective. The tips are: 1. Document everything! 2. Everything is a (text) fle. 3. All fles should be human readable. 4. Explicitly tie your fles together. 5. Have a plan to organize, store, and make your fles available. ( Location 20973 ) In order to reproduce your research, others must be able to know what you did. You have to tell them what you did by documenting as much of your research process as possible. Ideally, you should tell your readers how you gathered your data, analyzed it, and presented the results. Documenting everything is the key to reproducible research and lies behind all of the other tips in this chapter and tools you will learn throughout the book. ( Location 21409 ) Document your R session info ( Location 21410 ) Learn from the text fle: keep it simple ( Location 22283 ) Text fles are simple. Their simplicitly increases the probability of baseline usefulness in the future to researchers who will reproduce the work. We can extend the logic of the simple text fle to all of the tools we use: keep it simple. Avoid adding dependencies you don\u2019t need to actually gather your data, analyze it, and present the results. For example, I have been tempted to make my presentation slides look nicer with custom fonts. I was later burned when I wanted to make minor changes to slides a year after I frst presented them (and a day before teaching an upcoming class) only to fnd that the custom fonts were no longer available. This broke my slides and forced me to spend considerable time reworking writing my source documents. If I, the creator of the slides, found this time consuming and annoying, an independent researcher would likely fnd it even more di\u00ffcult. ( Location 22283 ) All fles should be human readable ( Location 22284 ) Literate programming ( Location 23157 ) 2.2.4 Explicitly tie your fles together ( Location 23158 ) A data fle is used as input for an analysis fle. ( Location 23158 ) The results of an analysis are shown and discussed in a markup fle that is used to create a PDF document. Researchers often do not explicitly document the relationships between fles that they used in their research. For example, the results of an analysis\u2013a table or fgure\u2013may be copied and pasted into a presentation document. It can be very di\u00ffcult for future researchers to trace the table or fgure back to a particular statistical model and a particular data set without clear documentation. Therefore, it is important to make the links between your fles explicit. ( Location 23158 ) Tags: [[r]] [[favorite]] Tie functions are the most dynamic way to explicitly link your fles together. These functions instruct the computer program you are using to use information from another fle. In Table 2.1, I have compiled a selection of key tie functions you will learn how to use in this book. We\u2019ll discuss many more, but these are some of the most important. ( Location 23159 ) Have a plan to organize, store, and make your fles available ( Location 24030 ) Finally, in order for independent researchers to reproduce your work, they need to be able access the fles that instruct them how to do this. Files also need to be organized so that independent researchers can fgure out how they ft together. So, from the beginning of your research process, you should have a plan for organizing your fles and a way to make them accessible. One rule of thumb for organizing your research in fles is to limit the amount of content any one fle has. Files that contain many di\u02d9erent operations can be very di\u00ffcult to navigate, even if they have detailed comments. For example, it would be very di\u00ffcult to fnd any particular operation in a fle that contained the code used to gather the data, run all of the statistical models, and create the results, fgures and tables. If you have a hard time fnding things in a fle you created, think of the di\u00ffculties independent researchers will have! Because we have so many ways to link fles together, there is really no need to lump many di\u02d9erent operations into one fle. So, we can make our fles modular. One source code fle should be used to complete one or just a few tasks. Breaking your operations into discrete parts will also make it easier for you and others to fnd errors (Nagler, 1995, 490). Chapter 4 discusses fle organization in much more detail. Chapter 5 teaches you a number of ways to make your fles accessible through the cloud computing services like GitHub. ( Location 24030 ) cache Logical Whether or not to save results from the code chunk in a cache database. Note: cached chunks are only run when they are changed. cache.vars Character Vector Specify the variable names to save in the cache database. ( Location 34516 ) When include=FALSE the chunk is evaluated, but the results are not included in the presentation document. ( Location 34517 ) tidy ( Location 34517 ) Hooks come in two types: chunk hooks and output hooks. Chunk hooks run a function before or after a code chunk. Output hooks change how the raw output is formatted. I don\u2019t cover hooks in much detail in this book. For more information on hooks, please see Yihui Xie\u2019s webpage: http://yihui.name/knitr/hooks. ( Location 34954 ) Tags: [[favorite]] root.dir in knittable documents ( Location 43692 ) opts_knit$set(root.dir = \"/example-project/analysis\") ( Location 43692 ) Note: In general it is preferable to use the knittable fle\u2019s default directory and fle paths relative to it rather than manually specifying root.dir(). Setting an alternate root directory will make reproducibility more di\u00ffcult. ( Location 43692 ) mkdir ( Location 45439 ) Organize Your Data Gathering: Makefles ( Location 59422 ) Using GNU Make does require learning some more new syntax. However, it has one very clear advantage: it only runs a source code fle that has been updated since the last time you ran the makefle. This is very useful if part of your data-gathering process is very computationally and time intensive. ( Location 59857 ) Segmenting your data gathering into modular fles and tying them with some sort of makefle allows you to more easily navigate research text and fnd errors in the source code. The makefle\u2019s output is the data set that you\u2019ll use in the statistical analyses. There are two types of source code fles that the makefle runs: data gathering/cleanup fles and merging fles. Data cleanup fles bring raw individual data sources into R and transform them so that they can be merged with data from the other sources. Many of the R tools for data cleanup and merging will be covered in Chapter 7. In this chapter, we mostly cover the ways to bring raw data into R. Merging fles are executed by the makefle after it runs the data gathering/cleanup fles. It\u2019s a good idea to have the source code fles use very raw data as input. Your source code should avoid directly changing these raw data fles. Instead, changes should be put into new objects and data fles. Doing this makes it easier to reconstruct the steps you took to create your data set. Also, while cleaning and merging your data you may transform it in unintended ways, for example, accidentally deleting some observations that you wanted to keep. Having the raw data makes it easy to go back and correct your mistakes. ( Location 59858 ) cache If you want to run a code chunk once and save the output for when you knit the document again, rather than running the code chunk every time, set the option cache=TRUE. When you do this the frst time the document is knitted, the chunk will be run and the output stored in a sub-directory of the working directory called cache. When the document is subsequently knitted, the chunk will only be run if the code in the chunk changes or its options change. This is ( Location 77772 ) very handy if you have a code chunk that is computationally intensive to run. The cache option is set to FALSE by default. Later in this chapter (Section 8.4), we will see how to use the cache.vars function to cache only certain variables created by a code chunk. dependson Cached chunks are only rerun when their code changes. Sometimes one chunk will depend on the results from a prior chunk. In these cases, it is good to rerun the chunk if the prior chunk one is also rerun. The dependson option allows you to do this automatically. You can specify either a vector of the labels for the chunks depended on or their numbers in order from the start of the document. For example, dependson=c(2, 3) specifes that if the second or third chunks are rerun, then the current chunk will also be rerun. cache.extra Sometimes to ensure reproducibility, it may be useful to rerun a chunk when some other condition changes, such as when a new version of R is installed or a dependent fle changes. You can feed a list of conditions to cache.extra to do this. For instance: cache.extra=list(file.info(data.csv)$mtime, R.version) Here we set two conditions under which the chunk will be rerun. The frst specifes that the chunk should be rerun whenever the data.csv fle is modifed. The file.info function extracts information about the fle and mtime gives the last time that the fle was modifed. If this di\u02d9ers from when the chunk was last run, then it will be run again. This is very useful for keeping your cached chunks and the fles they rely on in sync. The second condition enabled by R.version reruns the chunk whenever the R version or even the operating system changes. If you only want to rerun the chunk when the version of R is di\u02d9erent, then use R.version.string. ( Location 78207 ) 8.2 Dynamically Including Modular Analysis Files ( Location 79519 ) ...cache.vars If the code chunk you want to cache creates many objects, but you only want to save a few of them, you can use knitr\u2019s cache.vars chunk option. Simply give it a character vector of the objects\u2019 names that you want to save. ( Location 82139 ) Tags: [[r]] Note: Knitr's cache.vars chunk option. In this chapter we covered in more detail key knitr syntax for including code chunks in our presentation documents. This and other tools we learned in this chapter are important for tying our statistical analyses directly to its advertising, i.e. our presentation documents. In the next two chapters, we will learn how to take the output from our statistical analysis and, using knitr, present the results with dynamically created tables and fgures. ( Location 82140 ) 9.3.6 Creating variable description documents with xtable ( Location 91752 ) For the HTML version of the document we do not want a table of contents as we set toc: no. We specifed a CSS theme called Flatly for our HTML document using theme: \"flatly\". As of this writing, rmarkdown has a built-in ability to use a range of themes from Bootswatch (https://bootswatch.com/). Alternatively, you can link to a custom CSS fle with the css option. Use html_document to see other options. Notice that we can use no and yes instead of false and true, respectively. We linked to two BibTeX fles with the bibliography option. Using Pandoc syntax, the references will apply to both the PDF and HTML documents. If you want to also enable the creation of a Microsoft Word document, include output: word_document in the header. ( Location 117092 ) Tags: [[favorite]] [[r]] Bibliographies with Pandoc Pandoc via rmarkdown allows us to insert citations from normal BibTeX fles (see Chapter 11) specifed in the header with bibliography. The main di\u02d9erence is that Pandoc has a di\u02d9erent syntax from LaTeX for making in-text citations. Basic Pandoc citations begin with @ followed by the BibTeX citation key. Square brackets ([]) create parentheses around the citation. Here is an example: This is a citation [@donoho2009]. Pandoc uses natbib by default, so the citation [@donoho2009] will appear as (Donoho et al., 2009). To add text before and after the citation inside of the parentheses, use something like this: [see @donoho2009, 10]; which creates: (see Donoho et al. 2009, 10). If you do not want the parentheses around the entire citation (only the year) then omit the square brackets. To include only the year, and not the authors\u2019 surnames, add a minus sign, e.g. [-@donoho2009]. See the table above for more options. Full bibliographic information for each item that is cited in the text will be produced at the end of the output document. I suggest placing a heading like #References at the very end of your document so that the bibliography will be di\u02d9erentiated from the document\u2019s text. ( Location 117093 ) Footnotes with Pandoc You can also include footnotes in documents rendered with rmarkdown by using Pandoc\u2019s footnote syntax. In the text where you would like a footnote to be located, use: [\u02c6NOTE_KEY]. Then at the end of your document, place [\u02c6NOTE_KEY]: The footnote text. 8 NOTE_KEYs generally follow the same rules as BibTeX citation keys, so no spaces. The footnotes will be numbered sequentially when rendered. To sum up, here is an example of a document that can be rendered in HTML or PDF using R Markdown. It includes footnotes and a bibliography. ( Location 117529 )","title":"Highlights"},{"location":"Highlights/Readwise/Books/Tribe%20of%20Mentors/","text":"Tribe of Mentors \u00b6 Metadata \u00b6 Author: [[Timothy Ferriss]] Full Title: Tribe of Mentors Category: #Type/Highlights/Books Highlights \u00b6 When you feel overwhelmed or unfocused, what do you do? My best friend put a little quote in my birthday card a few years ago: \u201cWhen makes a river so restful to people is that it doesn't have any doubt- it is sure to get where it is going, and it doesn't want to go anywhere else.\" \u2013 Hal Bovle There is so much going on in a day, actions and distractions, it's easy to get caught up and lose your vision. This quote brings me right back to where I want to be. It keeps me grounded. (Page 184) Tags: [[favorite]] Note: Tim Ferris w Maria Sharapove If you could have a gigantic billboard anywhere with anything on it, what would it say and why? Simple one for me to answer: \u201cStorms make us stronger.\" If I had one mes for young people embarking on life, it would be this. Don't shy away from the hard times. Tackle them head-on, move toward the path less trodden, riddled with obstacles, because most other people run at the first sign of battle, The storms give us a chance to define ourselves, to distinguish ourselves, and we always emerge from them stronger. (Page 230) Note: Tim Ferris w Bear Grillz Tim: When you feel overwhelmed or unfocused, what do you do? Greg: First, I yell \"FUCK!\" as loud as I can! Then, I compartmentalize and DIN and DIP (\"do it now\" and \"do it proper\"). (Page 285) Note: Greg Norman","title":"Tribe of Mentors"},{"location":"Highlights/Readwise/Books/Tribe%20of%20Mentors/#tribe-of-mentors","text":"","title":"Tribe of Mentors"},{"location":"Highlights/Readwise/Books/Tribe%20of%20Mentors/#metadata","text":"Author: [[Timothy Ferriss]] Full Title: Tribe of Mentors Category: #Type/Highlights/Books","title":"Metadata"},{"location":"Highlights/Readwise/Books/Tribe%20of%20Mentors/#highlights","text":"When you feel overwhelmed or unfocused, what do you do? My best friend put a little quote in my birthday card a few years ago: \u201cWhen makes a river so restful to people is that it doesn't have any doubt- it is sure to get where it is going, and it doesn't want to go anywhere else.\" \u2013 Hal Bovle There is so much going on in a day, actions and distractions, it's easy to get caught up and lose your vision. This quote brings me right back to where I want to be. It keeps me grounded. (Page 184) Tags: [[favorite]] Note: Tim Ferris w Maria Sharapove If you could have a gigantic billboard anywhere with anything on it, what would it say and why? Simple one for me to answer: \u201cStorms make us stronger.\" If I had one mes for young people embarking on life, it would be this. Don't shy away from the hard times. Tackle them head-on, move toward the path less trodden, riddled with obstacles, because most other people run at the first sign of battle, The storms give us a chance to define ourselves, to distinguish ourselves, and we always emerge from them stronger. (Page 230) Note: Tim Ferris w Bear Grillz Tim: When you feel overwhelmed or unfocused, what do you do? Greg: First, I yell \"FUCK!\" as loud as I can! Then, I compartmentalize and DIN and DIP (\"do it now\" and \"do it proper\"). (Page 285) Note: Greg Norman","title":"Highlights"},{"location":"Highlights/Readwise/Podcasts/%23101%20Jane%20McGonigal%20The%20Psychology%20of%20Gaming/","text":"#101 Jane McGonigal: The Psychology of Gaming \u00b6 Metadata \u00b6 Author: [[The Knowledge Project with Shane Parrish]] Full Title: #101 Jane McGonigal: The Psychology of Gaming Category: #Type/Highlights/Podcast URL: https://www.airr.io/episode/6006b12697881f08a112da92 Highlights \u00b6 Speaker 0: you don't You don't wanna have the game right before bed unless you're you've recently been traumatized. Which is this is like, Can we do a P s? A little public service announcement? Um, if you're having flashbacks of a traumatic event or you're ruminating on something that it's making you crazy like you can't get this bad experience out of your mind. You you can't get your replaying this conversation over and over again because you you feel like you said the wrong thing and you just feel fixated on it. Playing a game right before bed will essentially hijack the attention center and ( Time 0:22:04 ) Note: This is my saved quote","title":"101 Jane McGonigal: The Psychology of Gaming"},{"location":"Highlights/Readwise/Podcasts/%23101%20Jane%20McGonigal%20The%20Psychology%20of%20Gaming/#101-jane-mcgonigal-the-psychology-of-gaming","text":"","title":"#101 Jane McGonigal: The Psychology of Gaming"},{"location":"Highlights/Readwise/Podcasts/%23101%20Jane%20McGonigal%20The%20Psychology%20of%20Gaming/#metadata","text":"Author: [[The Knowledge Project with Shane Parrish]] Full Title: #101 Jane McGonigal: The Psychology of Gaming Category: #Type/Highlights/Podcast URL: https://www.airr.io/episode/6006b12697881f08a112da92","title":"Metadata"},{"location":"Highlights/Readwise/Podcasts/%23101%20Jane%20McGonigal%20The%20Psychology%20of%20Gaming/#highlights","text":"Speaker 0: you don't You don't wanna have the game right before bed unless you're you've recently been traumatized. Which is this is like, Can we do a P s? A little public service announcement? Um, if you're having flashbacks of a traumatic event or you're ruminating on something that it's making you crazy like you can't get this bad experience out of your mind. You you can't get your replaying this conversation over and over again because you you feel like you said the wrong thing and you just feel fixated on it. Playing a game right before bed will essentially hijack the attention center and ( Time 0:22:04 ) Note: This is my saved quote","title":"Highlights"},{"location":"Highlights/Readwise/Podcasts/%2323%20Nat%20Eliason%20on%20Starting%20a%20Life-Changing%20Blog/","text":"#23: Nat Eliason on Starting a Life-Changing Blog \u00b6 Metadata \u00b6 Author: [[Mind Meld With Josh Gonsalves]] Full Title: #23: Nat Eliason on Starting a Life-Changing Blog Category: #Type/Highlights/Podcast URL: https://www.airr.io/episode/5fa92a255a451217781934c8 Highlights \u00b6 Speaker 1: it, the way I described my use of the two is Rome is for maker brain, and notion is for manager brain. And yeah, if you haven't read Paul Graham's article maker versus manager, it's phenomenal articles one of the best productivity articles out there, I think, cause it's a really important concept to understand. And so when I just need to, like, bang out my thoughts on a topic that I'm gonna be in Rome like writing it out, it's because I find Rome is really conducive to that, like finicky creative mind. But they wanted to, like, manage a process. Or like I keep all my s o ps between me and Amanda like in notion as well, for like, how to do a bunch of stuff like That's all in notion on that, just like lives better here, because I think it's really good for managing info. I ( Time 0:37:39 ) Note: Roam vs Notion (maker brain vs manager brain)","title":"23: Nat Eliason on Starting a Life-Changing Blog"},{"location":"Highlights/Readwise/Podcasts/%2323%20Nat%20Eliason%20on%20Starting%20a%20Life-Changing%20Blog/#23-nat-eliason-on-starting-a-life-changing-blog","text":"","title":"#23: Nat Eliason on Starting a Life-Changing Blog"},{"location":"Highlights/Readwise/Podcasts/%2323%20Nat%20Eliason%20on%20Starting%20a%20Life-Changing%20Blog/#metadata","text":"Author: [[Mind Meld With Josh Gonsalves]] Full Title: #23: Nat Eliason on Starting a Life-Changing Blog Category: #Type/Highlights/Podcast URL: https://www.airr.io/episode/5fa92a255a451217781934c8","title":"Metadata"},{"location":"Highlights/Readwise/Podcasts/%2323%20Nat%20Eliason%20on%20Starting%20a%20Life-Changing%20Blog/#highlights","text":"Speaker 1: it, the way I described my use of the two is Rome is for maker brain, and notion is for manager brain. And yeah, if you haven't read Paul Graham's article maker versus manager, it's phenomenal articles one of the best productivity articles out there, I think, cause it's a really important concept to understand. And so when I just need to, like, bang out my thoughts on a topic that I'm gonna be in Rome like writing it out, it's because I find Rome is really conducive to that, like finicky creative mind. But they wanted to, like, manage a process. Or like I keep all my s o ps between me and Amanda like in notion as well, for like, how to do a bunch of stuff like That's all in notion on that, just like lives better here, because I think it's really good for managing info. I ( Time 0:37:39 ) Note: Roam vs Notion (maker brain vs manager brain)","title":"Highlights"},{"location":"Highlights/Readwise/Podcasts/%23444%20Hugh%20Jackman%20on%20Best%20Decisions%2C%20Daily%20Routines%2C%20the%2085%25%20Rule%2C%20Favorite%20Exercises%2C%20Mind%20Training%2C%20and%20Much%20More-2/","text":"#444: Hugh Jackman on Best Decisions, Daily Routines, the 85% Rule, Favorite Exercises, Mind Training, and Much More \u00b6 Metadata \u00b6 Author: [[The Tim Ferriss Show]] Full Title: #444: Hugh Jackman on Best Decisions, Daily Routines, the 85% Rule, Favorite Exercises, Mind Training, and Much More Category: #Type/Highlights/Podcast URL: https://www.airr.io/episode/5efb7749c7fd2b68ce8b8986 Highlights \u00b6 is the great singing is the ones that make you melt When you listen to them seeing when they're breathing in preparing its like vibrating out there relaxes I breathe in Oh, and then there already prevent. So there's some of the little things are use, and I I suspect you're a little similar to make Tim right? The iPhone you work better with 95% rule. I definitely dio I mean, if if I think about the times when I've performed best, it's never when I'm whipping myself extra fast and extra hard with a cat 09 rights because I don't need that No, I don't like going to an opening night like Dio opening night. You feel every like this is happening night. It's gonna be the best. And I just want to go. Hey, chill out, everyone. I prefer to go toe Wednesday matinee six weeks into the run. That's when you're going to see the best show. So the trick is, how can you get there? And Barbara Gino, the 85% rule. Do you know where that came from? I do not. You came from a guy studying Carl Lewis, this princess shirt. He couldn't understand why a guy who is routinely coming last or second last after 40 meters, which traditionally in sprinting, was meant to be where you wanted. You wanted the 1st 40 from the start, how someone like that would always win by 10 yards of the end, and somebody said, Well, he's just a slow start, But he's got a long stride that it up then someone. This guy was studying it for a year. That's friend, coach, and someone gave him. Finally, one of those head on shots. You know, they invented the Olympics, that head on shot where you watched them come down, right, and he watched it over and over again. And he said what he realized Carl Lewis did at the 50 meter mark, 60 made a mark was that he did nothing. His breathing was exactly the same. His form is exactly the same as had been between meters 25 50. Where's everyone else? Starts to push to the end, trying to try love extra harder, he said. Their face would scrunch up, their jaw, would tighten their fists, would start to clinch. Where's Carlos said exactly the same, and then it would just breeze past um so that's where he invented the ( Time 1:25:34 ) Note: 85% effort rule","title":"444: Hugh Jackman on Best Decisions, Daily Routines, the 85% Rule, Favorite Exercises, Mind Training, and Much More"},{"location":"Highlights/Readwise/Podcasts/%23444%20Hugh%20Jackman%20on%20Best%20Decisions%2C%20Daily%20Routines%2C%20the%2085%25%20Rule%2C%20Favorite%20Exercises%2C%20Mind%20Training%2C%20and%20Much%20More-2/#444-hugh-jackman-on-best-decisions-daily-routines-the-85-rule-favorite-exercises-mind-training-and-much-more","text":"","title":"#444: Hugh Jackman on Best Decisions, Daily Routines, the 85% Rule, Favorite Exercises, Mind Training, and Much More"},{"location":"Highlights/Readwise/Podcasts/%23444%20Hugh%20Jackman%20on%20Best%20Decisions%2C%20Daily%20Routines%2C%20the%2085%25%20Rule%2C%20Favorite%20Exercises%2C%20Mind%20Training%2C%20and%20Much%20More-2/#metadata","text":"Author: [[The Tim Ferriss Show]] Full Title: #444: Hugh Jackman on Best Decisions, Daily Routines, the 85% Rule, Favorite Exercises, Mind Training, and Much More Category: #Type/Highlights/Podcast URL: https://www.airr.io/episode/5efb7749c7fd2b68ce8b8986","title":"Metadata"},{"location":"Highlights/Readwise/Podcasts/%23444%20Hugh%20Jackman%20on%20Best%20Decisions%2C%20Daily%20Routines%2C%20the%2085%25%20Rule%2C%20Favorite%20Exercises%2C%20Mind%20Training%2C%20and%20Much%20More-2/#highlights","text":"is the great singing is the ones that make you melt When you listen to them seeing when they're breathing in preparing its like vibrating out there relaxes I breathe in Oh, and then there already prevent. So there's some of the little things are use, and I I suspect you're a little similar to make Tim right? The iPhone you work better with 95% rule. I definitely dio I mean, if if I think about the times when I've performed best, it's never when I'm whipping myself extra fast and extra hard with a cat 09 rights because I don't need that No, I don't like going to an opening night like Dio opening night. You feel every like this is happening night. It's gonna be the best. And I just want to go. Hey, chill out, everyone. I prefer to go toe Wednesday matinee six weeks into the run. That's when you're going to see the best show. So the trick is, how can you get there? And Barbara Gino, the 85% rule. Do you know where that came from? I do not. You came from a guy studying Carl Lewis, this princess shirt. He couldn't understand why a guy who is routinely coming last or second last after 40 meters, which traditionally in sprinting, was meant to be where you wanted. You wanted the 1st 40 from the start, how someone like that would always win by 10 yards of the end, and somebody said, Well, he's just a slow start, But he's got a long stride that it up then someone. This guy was studying it for a year. That's friend, coach, and someone gave him. Finally, one of those head on shots. You know, they invented the Olympics, that head on shot where you watched them come down, right, and he watched it over and over again. And he said what he realized Carl Lewis did at the 50 meter mark, 60 made a mark was that he did nothing. His breathing was exactly the same. His form is exactly the same as had been between meters 25 50. Where's everyone else? Starts to push to the end, trying to try love extra harder, he said. Their face would scrunch up, their jaw, would tighten their fists, would start to clinch. Where's Carlos said exactly the same, and then it would just breeze past um so that's where he invented the ( Time 1:25:34 ) Note: 85% effort rule","title":"Highlights"},{"location":"Highlights/Readwise/Podcasts/%23444%20Hugh%20Jackman%20on%20Best%20Decisions%2C%20Daily%20Routines%2C%20the%2085%25%20Rule%2C%20Favorite%20Exercises%2C%20Mind%20Training%2C%20and%20Much%20More/","text":"#444: Hugh Jackman on Best Decisions, Daily Routines, the 85% Rule, Favorite Exercises, Mind Training, and Much More \u00b6 Metadata \u00b6 Author: [[The Tim Ferriss Show]] Full Title: #444: Hugh Jackman on Best Decisions, Daily Routines, the 85% Rule, Favorite Exercises, Mind Training, and Much More Category: #Type/Highlights/Podcast URL: https://rss.art19.com/episodes/ec2a4e45-73c9-4c90-b537-45b4433a0687.mp3 Highlights \u00b6 AirrQuote ( Time 1:25:34 ) Note: 85% effort rule","title":"444: Hugh Jackman on Best Decisions, Daily Routines, the 85% Rule, Favorite Exercises, Mind Training, and Much More"},{"location":"Highlights/Readwise/Podcasts/%23444%20Hugh%20Jackman%20on%20Best%20Decisions%2C%20Daily%20Routines%2C%20the%2085%25%20Rule%2C%20Favorite%20Exercises%2C%20Mind%20Training%2C%20and%20Much%20More/#444-hugh-jackman-on-best-decisions-daily-routines-the-85-rule-favorite-exercises-mind-training-and-much-more","text":"","title":"#444: Hugh Jackman on Best Decisions, Daily Routines, the 85% Rule, Favorite Exercises, Mind Training, and Much More"},{"location":"Highlights/Readwise/Podcasts/%23444%20Hugh%20Jackman%20on%20Best%20Decisions%2C%20Daily%20Routines%2C%20the%2085%25%20Rule%2C%20Favorite%20Exercises%2C%20Mind%20Training%2C%20and%20Much%20More/#metadata","text":"Author: [[The Tim Ferriss Show]] Full Title: #444: Hugh Jackman on Best Decisions, Daily Routines, the 85% Rule, Favorite Exercises, Mind Training, and Much More Category: #Type/Highlights/Podcast URL: https://rss.art19.com/episodes/ec2a4e45-73c9-4c90-b537-45b4433a0687.mp3","title":"Metadata"},{"location":"Highlights/Readwise/Podcasts/%23444%20Hugh%20Jackman%20on%20Best%20Decisions%2C%20Daily%20Routines%2C%20the%2085%25%20Rule%2C%20Favorite%20Exercises%2C%20Mind%20Training%2C%20and%20Much%20More/#highlights","text":"AirrQuote ( Time 1:25:34 ) Note: 85% effort rule","title":"Highlights"},{"location":"Highlights/Readwise/Podcasts/%23447%20Books%20I%27ve%20Loved%20%E2%80%94%20Ann%20Miura-Ko-2/","text":"#447: Books I've Loved \u2014 Ann Miura-Ko \u00b6 Metadata \u00b6 Author: [[The Tim Ferriss Show]] Full Title: #447: Books I've Loved \u2014 Ann Miura-Ko Category: #Type/Highlights/Podcast URL: https://www.airr.io/episode/5f11eac050033468655fd9f2 Highlights \u00b6 has actually even in business, ah, framework that he talks about around emergent versus deliberate strategies, and he applies this actually in life and an emergence strategy is something that sort of comes up and it's not planned, and the obviously the deliberate is actually something that is very planned. And he talks about how you balance thes emergent and deliberate occurrences in your life. ( Time 0:06:49 ) Note: Deliberate vs Emergent Strategies","title":"447: Books I've Loved \u2014 Ann Miura-Ko"},{"location":"Highlights/Readwise/Podcasts/%23447%20Books%20I%27ve%20Loved%20%E2%80%94%20Ann%20Miura-Ko-2/#447-books-ive-loved-ann-miura-ko","text":"","title":"#447: Books I've Loved \u2014 Ann Miura-Ko"},{"location":"Highlights/Readwise/Podcasts/%23447%20Books%20I%27ve%20Loved%20%E2%80%94%20Ann%20Miura-Ko-2/#metadata","text":"Author: [[The Tim Ferriss Show]] Full Title: #447: Books I've Loved \u2014 Ann Miura-Ko Category: #Type/Highlights/Podcast URL: https://www.airr.io/episode/5f11eac050033468655fd9f2","title":"Metadata"},{"location":"Highlights/Readwise/Podcasts/%23447%20Books%20I%27ve%20Loved%20%E2%80%94%20Ann%20Miura-Ko-2/#highlights","text":"has actually even in business, ah, framework that he talks about around emergent versus deliberate strategies, and he applies this actually in life and an emergence strategy is something that sort of comes up and it's not planned, and the obviously the deliberate is actually something that is very planned. And he talks about how you balance thes emergent and deliberate occurrences in your life. ( Time 0:06:49 ) Note: Deliberate vs Emergent Strategies","title":"Highlights"},{"location":"Highlights/Readwise/Podcasts/%23447%20Books%20I%27ve%20Loved%20%E2%80%94%20Ann%20Miura-Ko/","text":"#447: Books I've Loved \u2014 Ann Miura-Ko \u00b6 Metadata \u00b6 Author: [[The Tim Ferriss Show]] Full Title: #447: Books I've Loved \u2014 Ann Miura-Ko Category: #Type/Highlights/Podcast URL: https://rss.art19.com/episodes/9dfc22de-1799-4987-8523-d288e0603378.mp3 Highlights \u00b6 AirrQuote ( Time 0:06:49 ) Note: Deliberate vs Emergent Strategies","title":"447: Books I've Loved \u2014 Ann Miura-Ko"},{"location":"Highlights/Readwise/Podcasts/%23447%20Books%20I%27ve%20Loved%20%E2%80%94%20Ann%20Miura-Ko/#447-books-ive-loved-ann-miura-ko","text":"","title":"#447: Books I've Loved \u2014 Ann Miura-Ko"},{"location":"Highlights/Readwise/Podcasts/%23447%20Books%20I%27ve%20Loved%20%E2%80%94%20Ann%20Miura-Ko/#metadata","text":"Author: [[The Tim Ferriss Show]] Full Title: #447: Books I've Loved \u2014 Ann Miura-Ko Category: #Type/Highlights/Podcast URL: https://rss.art19.com/episodes/9dfc22de-1799-4987-8523-d288e0603378.mp3","title":"Metadata"},{"location":"Highlights/Readwise/Podcasts/%23447%20Books%20I%27ve%20Loved%20%E2%80%94%20Ann%20Miura-Ko/#highlights","text":"AirrQuote ( Time 0:06:49 ) Note: Deliberate vs Emergent Strategies","title":"Highlights"},{"location":"Highlights/Readwise/Podcasts/%23485%20Jerry%20Seinfeld%20%E2%80%94%20A%20Comedy%20Legend%E2%80%99s%20Systems%2C%20Routines%2C%20and%20Methods%20for%20Success/","text":"#485: Jerry Seinfeld \u2014 A Comedy Legend\u2019s Systems, Routines, and Methods for Success \u00b6 Metadata \u00b6 Author: [[The Tim Ferriss Show]] Full Title: #485: Jerry Seinfeld \u2014 A Comedy Legend\u2019s Systems, Routines, and Methods for Success Category: #Type/Highlights/Podcast URL: https://www.airr.io/episode/5fcf95229301da59515a521a Highlights \u00b6 Speaker 1: I mean, I don't know. A lot of my life is I don't like getting depressed. I get depressed a lot. I hate the feeling and these routines the these very difficult routines, whether it's exercise or writing, and both of them are things where it's like it's, it's brutal. That's another thing I was explaining to my daughter. She's She's frustrated that writing is so difficult because no one told her that it's the most difficult thing in the world. It's the most difficult thing in the world is to write. People tell you to write like you could do it like you're supposed to be able to do it. Nobody can do it. It's impossible. The greatest people in the world can't do it. So if you're going to do it, you should first be told. What you are attempting to do is incredibly difficult. One of the most difficult things there is way harder than weight training way harder, what you're summoning, trying to summon within ( Time 0:51:04 ) Note: Writing sucks duck","title":"485: Jerry Seinfeld \u2014 A Comedy Legend\u2019s Systems, Routines, and Methods for Success"},{"location":"Highlights/Readwise/Podcasts/%23485%20Jerry%20Seinfeld%20%E2%80%94%20A%20Comedy%20Legend%E2%80%99s%20Systems%2C%20Routines%2C%20and%20Methods%20for%20Success/#485-jerry-seinfeld-a-comedy-legends-systems-routines-and-methods-for-success","text":"","title":"#485: Jerry Seinfeld \u2014 A Comedy Legend\u2019s Systems, Routines, and Methods for Success"},{"location":"Highlights/Readwise/Podcasts/%23485%20Jerry%20Seinfeld%20%E2%80%94%20A%20Comedy%20Legend%E2%80%99s%20Systems%2C%20Routines%2C%20and%20Methods%20for%20Success/#metadata","text":"Author: [[The Tim Ferriss Show]] Full Title: #485: Jerry Seinfeld \u2014 A Comedy Legend\u2019s Systems, Routines, and Methods for Success Category: #Type/Highlights/Podcast URL: https://www.airr.io/episode/5fcf95229301da59515a521a","title":"Metadata"},{"location":"Highlights/Readwise/Podcasts/%23485%20Jerry%20Seinfeld%20%E2%80%94%20A%20Comedy%20Legend%E2%80%99s%20Systems%2C%20Routines%2C%20and%20Methods%20for%20Success/#highlights","text":"Speaker 1: I mean, I don't know. A lot of my life is I don't like getting depressed. I get depressed a lot. I hate the feeling and these routines the these very difficult routines, whether it's exercise or writing, and both of them are things where it's like it's, it's brutal. That's another thing I was explaining to my daughter. She's She's frustrated that writing is so difficult because no one told her that it's the most difficult thing in the world. It's the most difficult thing in the world is to write. People tell you to write like you could do it like you're supposed to be able to do it. Nobody can do it. It's impossible. The greatest people in the world can't do it. So if you're going to do it, you should first be told. What you are attempting to do is incredibly difficult. One of the most difficult things there is way harder than weight training way harder, what you're summoning, trying to summon within ( Time 0:51:04 ) Note: Writing sucks duck","title":"Highlights"},{"location":"Highlights/Readwise/Podcasts/%23490%20Dr.%20Jim%20Loehr%20on%20Mental%20Toughness%2C%20Energy%20Management%2C%20the%20Power%20of%20Journaling%2C%20and%20Olympic%20Gold%20Medals/","text":"#490: Dr. Jim Loehr on Mental Toughness, Energy Management, the Power of Journaling, and Olympic Gold Medals \u00b6 Metadata \u00b6 Author: [[The Tim Ferriss Show]] Full Title: #490: Dr. Jim Loehr on Mental Toughness, Energy Management, the Power of Journaling, and Olympic Gold Medals Category: #Type/Highlights/Podcast URL: https://www.airr.io/episode/5fe9f0e6e53b5c24f5e69bdd Highlights \u00b6 Speaker 1: He just was not able to compete it all. And then we started working together, and I had him do lots of things. But as you said, one of the things Waas that I'm a stickler for training logs, I believe writing and really keeping track of all the critical variables from all the physical issues that are going on. Diet, nutrition, exercise, recovery, stress and then all the emotional issues that are going on and all the recovery and stress cycles in that and mentally and even spiritually, how he's doing, how he is feeling about his life and about this sport of speed skating and where it fits in. And I have every single ( Time 0:15:13 ) Note: Keep detailed training log Speaker 1: want the voice that's coming to you to be projected onto the jumbotron of some great big arena? Because you're proud of the messaging that that voice is giving you? It's great advice. It may be stern. It may be, you know, encouraging. It may be challenging. It may be a lot of things, but you're proud of it. It's the best coaching advice you could get from anyone. And that's why we want to be around great coaches because we begin to take on their wisdom and that wisdom is imparted to our voice. So I'm always encouraging athletes to develop their voice, develop that private voice and to make sure that whatever that voice is articulating to them the advice, the language ing and the tone is something that that's how they would coach someone that they cared about, because it's the best that that you have to give. And that sometimes takes years to develop. But it's awareness, and it is a very tough thing. What are Speaker 0: some steps if ( Time 0:29:11 ) Note: Self awareness and the voice inside your head","title":"490: Dr. Jim Loehr on Mental Toughness, Energy Management, the Power of Journaling, and Olympic Gold Medals"},{"location":"Highlights/Readwise/Podcasts/%23490%20Dr.%20Jim%20Loehr%20on%20Mental%20Toughness%2C%20Energy%20Management%2C%20the%20Power%20of%20Journaling%2C%20and%20Olympic%20Gold%20Medals/#490-dr-jim-loehr-on-mental-toughness-energy-management-the-power-of-journaling-and-olympic-gold-medals","text":"","title":"#490: Dr. Jim Loehr on Mental Toughness, Energy Management, the Power of Journaling, and Olympic Gold Medals"},{"location":"Highlights/Readwise/Podcasts/%23490%20Dr.%20Jim%20Loehr%20on%20Mental%20Toughness%2C%20Energy%20Management%2C%20the%20Power%20of%20Journaling%2C%20and%20Olympic%20Gold%20Medals/#metadata","text":"Author: [[The Tim Ferriss Show]] Full Title: #490: Dr. Jim Loehr on Mental Toughness, Energy Management, the Power of Journaling, and Olympic Gold Medals Category: #Type/Highlights/Podcast URL: https://www.airr.io/episode/5fe9f0e6e53b5c24f5e69bdd","title":"Metadata"},{"location":"Highlights/Readwise/Podcasts/%23490%20Dr.%20Jim%20Loehr%20on%20Mental%20Toughness%2C%20Energy%20Management%2C%20the%20Power%20of%20Journaling%2C%20and%20Olympic%20Gold%20Medals/#highlights","text":"Speaker 1: He just was not able to compete it all. And then we started working together, and I had him do lots of things. But as you said, one of the things Waas that I'm a stickler for training logs, I believe writing and really keeping track of all the critical variables from all the physical issues that are going on. Diet, nutrition, exercise, recovery, stress and then all the emotional issues that are going on and all the recovery and stress cycles in that and mentally and even spiritually, how he's doing, how he is feeling about his life and about this sport of speed skating and where it fits in. And I have every single ( Time 0:15:13 ) Note: Keep detailed training log Speaker 1: want the voice that's coming to you to be projected onto the jumbotron of some great big arena? Because you're proud of the messaging that that voice is giving you? It's great advice. It may be stern. It may be, you know, encouraging. It may be challenging. It may be a lot of things, but you're proud of it. It's the best coaching advice you could get from anyone. And that's why we want to be around great coaches because we begin to take on their wisdom and that wisdom is imparted to our voice. So I'm always encouraging athletes to develop their voice, develop that private voice and to make sure that whatever that voice is articulating to them the advice, the language ing and the tone is something that that's how they would coach someone that they cared about, because it's the best that that you have to give. And that sometimes takes years to develop. But it's awareness, and it is a very tough thing. What are Speaker 0: some steps if ( Time 0:29:11 ) Note: Self awareness and the voice inside your head","title":"Highlights"},{"location":"Highlights/Readwise/Podcasts/%23493%20The%20Random%20Show%20%E2%80%94%20Bitcoin%20Pros%20and%20Cons%2C%202021%20Resolutions%2C%20Fave%20Books%2C%20Lucid%20Dreaming%2C%20Couples%20Therapy%2C%20and%20More/","text":"#493: The Random Show \u2014 Bitcoin Pros and Cons, 2021 Resolutions, Fave Books, Lucid Dreaming, Couples Therapy, and More \u00b6 Metadata \u00b6 Author: [[The Tim Ferriss Show]] Full Title: #493: The Random Show \u2014 Bitcoin Pros and Cons, 2021 Resolutions, Fave Books, Lucid Dreaming, Couples Therapy, and More Category: #Type/Highlights/Podcast URL: https://www.airr.io/episode/60073ba1b457c0267dbe6846 Highlights \u00b6 Speaker 0: and stuff. Well, you just look Speaker 1: at personalities online over time, who spent a lot of time on social and they become caricatures of themselves because they have certain behaviors rewarded certain behaviors punished certain behaviors, left un applauded, and they start to warp and bend their behavior to fit the most applause. And they turn into these kind of creepy caricatures. I think that that ends up inevitably bleeding over into their real lives, right? I mean, there, there offscreen lives. And I think that's really something I want to be hyper aware of, which is why I don't have the social on the phone. I'm using these, like workarounds like Onley Paul to post stuff. And I want to kind of hold up a mirror that allows people to look at their own reactions. Also right. So I think that a lot of what I'll put up in 2021 will be Rorschach tests. And for people who don't know that those are the ink blot tests where they would put blots of ink folded piece of paper, show it to someone and say, What do you see? And you know, they might see a murderer. They might see a butterfly. There might be something else, and then that is used is kind of Ah, jumping off point for psycho analysis. And that's not gonna be everything I put up. But I just think that life is too short to take yourself too seriously. And so, first and foremost, it's for me, but doing things that don't seem to have a point, doing things that are beautiful just because I think they're beautiful, they don't need to have some targeted outcome are oi or fill in the blank right. And just to kind of loosen my grip on whatever I think my identity is that's been constructed over such a long period of time. And let's not kid ourselves like identity can be revealed, but it's largely constructed right, and it's just you. I think we get so attached to our labels of what we are and what we aren't what we do and what we don't dio that it's Ah, it's just a I think it's a very socially reinforced trap, that kind of constrains your awareness and sensitivity and openness to the world. So, yeah, more coyote. Speaker 0: That's good. I mean, the world needs, I think, the problem that we've fallen into with social media and part of the reason why I don't like having account there is it just becomes it makes me sad in some sense in that I see it's always the best version of someone's self, like there's never any. If he feels very, very manufacturer, it often times and it's it's like it doesn't feel authentic in the way that it's always about good times. There's never any like any. I guess there has been mawr lately, with some of the protests and some of the stuff that's come out on there. But I mean, people, myself included, tend to put just the best version of yourself on there versus just letting it all hang out, which I guess is what kind of what you're saying in a sense that you're you're just gonna have more fun with it than just trying Thio create the Tim Ferriss image up on on social media. Yeah, and you know, I don't Speaker 1: feel like I've done too much of that I mean, I do. I've very deliberately put out stuff that is true to me that I think could irritate some percentage of my followers just because I want to have some countervailing force against becoming this like dancing sock puppet on the Internet. I do that Teoh not become too attached to social feedback. But you know not to turn this into a discussion of, you know, the social dilemma. But if you are constantly exposed to these technologies like you are completely outgunned, you're just you're completely outgunned by engineers and neuroscientists and research and development teams who have, for all intensive purposes, infinite resource is to turn you into your just getting a little in a skinner box. Yeah, I wanna Speaker 0: keep my love that, like the the AI is gonna look at your feet And like, I think Tim would like this. They're like, Oh, shit! He posted a yellow pony. What does he like now? Oh, damn it. You keep them on their toes. Well, I want Speaker 1: to keep myself guessing too, right? Like I don't Yeah, follow less ( Time 1:53:23 ) Note: The perils of social media.","title":"493: The Random Show \u2014 Bitcoin Pros and Cons, 2021 Resolutions, Fave Books, Lucid Dreaming, Couples Therapy, and More"},{"location":"Highlights/Readwise/Podcasts/%23493%20The%20Random%20Show%20%E2%80%94%20Bitcoin%20Pros%20and%20Cons%2C%202021%20Resolutions%2C%20Fave%20Books%2C%20Lucid%20Dreaming%2C%20Couples%20Therapy%2C%20and%20More/#493-the-random-show-bitcoin-pros-and-cons-2021-resolutions-fave-books-lucid-dreaming-couples-therapy-and-more","text":"","title":"#493: The Random Show \u2014 Bitcoin Pros and Cons, 2021 Resolutions, Fave Books, Lucid Dreaming, Couples Therapy, and More"},{"location":"Highlights/Readwise/Podcasts/%23493%20The%20Random%20Show%20%E2%80%94%20Bitcoin%20Pros%20and%20Cons%2C%202021%20Resolutions%2C%20Fave%20Books%2C%20Lucid%20Dreaming%2C%20Couples%20Therapy%2C%20and%20More/#metadata","text":"Author: [[The Tim Ferriss Show]] Full Title: #493: The Random Show \u2014 Bitcoin Pros and Cons, 2021 Resolutions, Fave Books, Lucid Dreaming, Couples Therapy, and More Category: #Type/Highlights/Podcast URL: https://www.airr.io/episode/60073ba1b457c0267dbe6846","title":"Metadata"},{"location":"Highlights/Readwise/Podcasts/%23493%20The%20Random%20Show%20%E2%80%94%20Bitcoin%20Pros%20and%20Cons%2C%202021%20Resolutions%2C%20Fave%20Books%2C%20Lucid%20Dreaming%2C%20Couples%20Therapy%2C%20and%20More/#highlights","text":"Speaker 0: and stuff. Well, you just look Speaker 1: at personalities online over time, who spent a lot of time on social and they become caricatures of themselves because they have certain behaviors rewarded certain behaviors punished certain behaviors, left un applauded, and they start to warp and bend their behavior to fit the most applause. And they turn into these kind of creepy caricatures. I think that that ends up inevitably bleeding over into their real lives, right? I mean, there, there offscreen lives. And I think that's really something I want to be hyper aware of, which is why I don't have the social on the phone. I'm using these, like workarounds like Onley Paul to post stuff. And I want to kind of hold up a mirror that allows people to look at their own reactions. Also right. So I think that a lot of what I'll put up in 2021 will be Rorschach tests. And for people who don't know that those are the ink blot tests where they would put blots of ink folded piece of paper, show it to someone and say, What do you see? And you know, they might see a murderer. They might see a butterfly. There might be something else, and then that is used is kind of Ah, jumping off point for psycho analysis. And that's not gonna be everything I put up. But I just think that life is too short to take yourself too seriously. And so, first and foremost, it's for me, but doing things that don't seem to have a point, doing things that are beautiful just because I think they're beautiful, they don't need to have some targeted outcome are oi or fill in the blank right. And just to kind of loosen my grip on whatever I think my identity is that's been constructed over such a long period of time. And let's not kid ourselves like identity can be revealed, but it's largely constructed right, and it's just you. I think we get so attached to our labels of what we are and what we aren't what we do and what we don't dio that it's Ah, it's just a I think it's a very socially reinforced trap, that kind of constrains your awareness and sensitivity and openness to the world. So, yeah, more coyote. Speaker 0: That's good. I mean, the world needs, I think, the problem that we've fallen into with social media and part of the reason why I don't like having account there is it just becomes it makes me sad in some sense in that I see it's always the best version of someone's self, like there's never any. If he feels very, very manufacturer, it often times and it's it's like it doesn't feel authentic in the way that it's always about good times. There's never any like any. I guess there has been mawr lately, with some of the protests and some of the stuff that's come out on there. But I mean, people, myself included, tend to put just the best version of yourself on there versus just letting it all hang out, which I guess is what kind of what you're saying in a sense that you're you're just gonna have more fun with it than just trying Thio create the Tim Ferriss image up on on social media. Yeah, and you know, I don't Speaker 1: feel like I've done too much of that I mean, I do. I've very deliberately put out stuff that is true to me that I think could irritate some percentage of my followers just because I want to have some countervailing force against becoming this like dancing sock puppet on the Internet. I do that Teoh not become too attached to social feedback. But you know not to turn this into a discussion of, you know, the social dilemma. But if you are constantly exposed to these technologies like you are completely outgunned, you're just you're completely outgunned by engineers and neuroscientists and research and development teams who have, for all intensive purposes, infinite resource is to turn you into your just getting a little in a skinner box. Yeah, I wanna Speaker 0: keep my love that, like the the AI is gonna look at your feet And like, I think Tim would like this. They're like, Oh, shit! He posted a yellow pony. What does he like now? Oh, damn it. You keep them on their toes. Well, I want Speaker 1: to keep myself guessing too, right? Like I don't Yeah, follow less ( Time 1:53:23 ) Note: The perils of social media.","title":"Highlights"},{"location":"Highlights/Readwise/Podcasts/%23494%20Michael%20Phelps%20and%20Grant%20Hackett%20%E2%80%94%20Two%20Legends%20on%20Competing%2C%20Overcoming%20Adversity%2C%20Must-Read%20Books%2C%20and%20Much%20More/","text":"#494: Michael Phelps and Grant Hackett \u2014 Two Legends on Competing, Overcoming Adversity, Must-Read Books, and Much More \u00b6 Metadata \u00b6 Author: [[The Tim Ferriss Show]] Full Title: #494: Michael Phelps and Grant Hackett \u2014 Two Legends on Competing, Overcoming Adversity, Must-Read Books, and Much More Category: #Type/Highlights/Podcast URL: https://www.airr.io/episode/6009d89897881f87db12e838 Highlights \u00b6 Speaker 1: Hello, boys and girls. This is Tim Ferriss, and welcome to another episode of The Tim Ferriss Show, where it is my job to attempt to deconstruct world class performers of all different types from all different disciplines to give you techniques, perhaps tactics, favorite books, training regimens, even recovery protocols even that you can use. And my guests today are the best at what they dio Michael Phelps and Grant Hackett. They're very close friends. They were able to feed ( Time 0:00:00 ) Speaker 1: the best at what they dio Michael Phelps and Grant Hackett. They're very close friends. They were able to feed off of each other. Their shared stories are incredible, so the combination of the two on this podcast was really special. Now let me read these bios, and then we'll jump right in to the conversation. Michael Phelps. You recognize his name on Twitter at Michael? Phelps is widely regarded as one of the greatest athletes of all time. He captured 28 medals, including a record setting 23 gold medals, and set 39 world records. Over the course of his career, Phelps utilized his performance bonus for winning eight gold medals in 2000 and eight to establish the Michael Phelps Foundation, which promotes water safety, healthy ( Time 0:00:20 ) Note: Competition Speaker 1: are the best at what they dio Michael Phelps and Grant Hackett. They're very close friends. They were able to feed off of each other. Their shared stories are incredible, so the combination of the two on this podcast was really special. Now let me read these bios, and then we'll jump right in to the conversation. Michael Phelps. You recognize his name on Twitter at Michael? Phelps is widely regarded as one of the greatest athletes of all time. He captured 28 medals, including a record setting 23 gold medals, and set 39 world records. Over the course of his career, Phelps utilized his performance bonus for winning eight gold medals in 2000 and eight to establish the Michael Phelps Foundation, which promotes water ( Time 0:00:20 ) Note: Competition Speaker 0: You know, if you skip a few of those classes like you're missing key steps that are gonna help you at the very top level when the lights are on, when you know you might have had a bad night's sleep or your roommate might be sick. Or maybe the food in the dining hall wasn't very good or your air conditioning doesn't work, you know? So it's like all of the things that you're doing daily are prepping you for any kind of situation that you're gonna face at the Olympics at World Championships, whatever your big event is, totally. Speaker 1: And I suppose that's that's something that wasn't in my mind when I asked the question. And that is, it's not just about developing more strength. It's not just about developing the brute attributes. It's also about thes smallest technical details that you have to trained to be second nature for competition. ( Time 0:30:07 ) Note: Daily Preparation","title":"494: Michael Phelps and Grant Hackett \u2014 Two Legends on Competing, Overcoming Adversity, Must-Read Books, and Much More"},{"location":"Highlights/Readwise/Podcasts/%23494%20Michael%20Phelps%20and%20Grant%20Hackett%20%E2%80%94%20Two%20Legends%20on%20Competing%2C%20Overcoming%20Adversity%2C%20Must-Read%20Books%2C%20and%20Much%20More/#494-michael-phelps-and-grant-hackett-two-legends-on-competing-overcoming-adversity-must-read-books-and-much-more","text":"","title":"#494: Michael Phelps and Grant Hackett \u2014 Two Legends on Competing, Overcoming Adversity, Must-Read Books, and Much More"},{"location":"Highlights/Readwise/Podcasts/%23494%20Michael%20Phelps%20and%20Grant%20Hackett%20%E2%80%94%20Two%20Legends%20on%20Competing%2C%20Overcoming%20Adversity%2C%20Must-Read%20Books%2C%20and%20Much%20More/#metadata","text":"Author: [[The Tim Ferriss Show]] Full Title: #494: Michael Phelps and Grant Hackett \u2014 Two Legends on Competing, Overcoming Adversity, Must-Read Books, and Much More Category: #Type/Highlights/Podcast URL: https://www.airr.io/episode/6009d89897881f87db12e838","title":"Metadata"},{"location":"Highlights/Readwise/Podcasts/%23494%20Michael%20Phelps%20and%20Grant%20Hackett%20%E2%80%94%20Two%20Legends%20on%20Competing%2C%20Overcoming%20Adversity%2C%20Must-Read%20Books%2C%20and%20Much%20More/#highlights","text":"Speaker 1: Hello, boys and girls. This is Tim Ferriss, and welcome to another episode of The Tim Ferriss Show, where it is my job to attempt to deconstruct world class performers of all different types from all different disciplines to give you techniques, perhaps tactics, favorite books, training regimens, even recovery protocols even that you can use. And my guests today are the best at what they dio Michael Phelps and Grant Hackett. They're very close friends. They were able to feed ( Time 0:00:00 ) Speaker 1: the best at what they dio Michael Phelps and Grant Hackett. They're very close friends. They were able to feed off of each other. Their shared stories are incredible, so the combination of the two on this podcast was really special. Now let me read these bios, and then we'll jump right in to the conversation. Michael Phelps. You recognize his name on Twitter at Michael? Phelps is widely regarded as one of the greatest athletes of all time. He captured 28 medals, including a record setting 23 gold medals, and set 39 world records. Over the course of his career, Phelps utilized his performance bonus for winning eight gold medals in 2000 and eight to establish the Michael Phelps Foundation, which promotes water safety, healthy ( Time 0:00:20 ) Note: Competition Speaker 1: are the best at what they dio Michael Phelps and Grant Hackett. They're very close friends. They were able to feed off of each other. Their shared stories are incredible, so the combination of the two on this podcast was really special. Now let me read these bios, and then we'll jump right in to the conversation. Michael Phelps. You recognize his name on Twitter at Michael? Phelps is widely regarded as one of the greatest athletes of all time. He captured 28 medals, including a record setting 23 gold medals, and set 39 world records. Over the course of his career, Phelps utilized his performance bonus for winning eight gold medals in 2000 and eight to establish the Michael Phelps Foundation, which promotes water ( Time 0:00:20 ) Note: Competition Speaker 0: You know, if you skip a few of those classes like you're missing key steps that are gonna help you at the very top level when the lights are on, when you know you might have had a bad night's sleep or your roommate might be sick. Or maybe the food in the dining hall wasn't very good or your air conditioning doesn't work, you know? So it's like all of the things that you're doing daily are prepping you for any kind of situation that you're gonna face at the Olympics at World Championships, whatever your big event is, totally. Speaker 1: And I suppose that's that's something that wasn't in my mind when I asked the question. And that is, it's not just about developing more strength. It's not just about developing the brute attributes. It's also about thes smallest technical details that you have to trained to be second nature for competition. ( Time 0:30:07 ) Note: Daily Preparation","title":"Highlights"},{"location":"Highlights/Readwise/Podcasts/%23634%20How%20to%20Design%20Conversations%20That%20Matter-2/","text":"#634: How to Design Conversations That Matter \u00b6 Metadata \u00b6 Author: [[The Art of Manliness]] Full Title: #634: How to Design Conversations That Matter Category: #Type/Highlights/Podcast URL: https://www.airr.io/episode/5f319072f3a8e12e79e0f4e8 Highlights \u00b6 of the things the design thinking does to figure out, you know, to start solving problems with the system or structure is finding out what the structure system looks like in the first place. And in your book, you sort of layout. You kind of your You give your idea of ( Time 0:07:25 ) Note: Test","title":"634: How to Design Conversations That Matter"},{"location":"Highlights/Readwise/Podcasts/%23634%20How%20to%20Design%20Conversations%20That%20Matter-2/#634-how-to-design-conversations-that-matter","text":"","title":"#634: How to Design Conversations That Matter"},{"location":"Highlights/Readwise/Podcasts/%23634%20How%20to%20Design%20Conversations%20That%20Matter-2/#metadata","text":"Author: [[The Art of Manliness]] Full Title: #634: How to Design Conversations That Matter Category: #Type/Highlights/Podcast URL: https://www.airr.io/episode/5f319072f3a8e12e79e0f4e8","title":"Metadata"},{"location":"Highlights/Readwise/Podcasts/%23634%20How%20to%20Design%20Conversations%20That%20Matter-2/#highlights","text":"of the things the design thinking does to figure out, you know, to start solving problems with the system or structure is finding out what the structure system looks like in the first place. And in your book, you sort of layout. You kind of your You give your idea of ( Time 0:07:25 ) Note: Test","title":"Highlights"},{"location":"Highlights/Readwise/Podcasts/%23634%20How%20to%20Design%20Conversations%20That%20Matter/","text":"#634: How to Design Conversations That Matter \u00b6 Metadata \u00b6 Author: [[The Art of Manliness]] Full Title: #634: How to Design Conversations That Matter Category: #Type/Highlights/Podcast URL: https://traffic.omny.fm/d/clips/aaea4e69-af51-495e-afc9-a9760146922b/6081eee7-c459-4e12-a1ab-aadc000fc4a7/bb7c215f-90b9-4b96-a8de-ac130103ffff/audio.mp3?utm_source=Podcast&in_playlist=413a6904-4d72-4be8-9421-aadc000fc4ba Highlights \u00b6 AirrQuote ( Time 0:07:25 ) Note: Test","title":"634: How to Design Conversations That Matter"},{"location":"Highlights/Readwise/Podcasts/%23634%20How%20to%20Design%20Conversations%20That%20Matter/#634-how-to-design-conversations-that-matter","text":"","title":"#634: How to Design Conversations That Matter"},{"location":"Highlights/Readwise/Podcasts/%23634%20How%20to%20Design%20Conversations%20That%20Matter/#metadata","text":"Author: [[The Art of Manliness]] Full Title: #634: How to Design Conversations That Matter Category: #Type/Highlights/Podcast URL: https://traffic.omny.fm/d/clips/aaea4e69-af51-495e-afc9-a9760146922b/6081eee7-c459-4e12-a1ab-aadc000fc4a7/bb7c215f-90b9-4b96-a8de-ac130103ffff/audio.mp3?utm_source=Podcast&in_playlist=413a6904-4d72-4be8-9421-aadc000fc4ba","title":"Metadata"},{"location":"Highlights/Readwise/Podcasts/%23634%20How%20to%20Design%20Conversations%20That%20Matter/#highlights","text":"AirrQuote ( Time 0:07:25 ) Note: Test","title":"Highlights"},{"location":"Highlights/Readwise/Podcasts/%2388%20Derek%20Sivers%20Innovation%20Versus%20Imitation-2/","text":"#88 Derek Sivers: Innovation Versus Imitation \u00b6 Metadata \u00b6 Author: [[The Knowledge Project with Shane Parrish]] Full Title: #88 Derek Sivers: Innovation Versus Imitation Category: #Type/Highlights/Podcast URL: https://www.airr.io/episode/5f171edb00ecbc05747284f7 Highlights \u00b6 their content. But I'm just me and I don't need that complexity. So I think that this is a nice metaphor for life. It doesn't have to be so complex. You can do just what's best for you, not need to adopt the legacy software that everyone else uses. That's really interesting. I mean, so two themes stuck it to me. They're the complexity theme, but also the imitation versus innovation. If you don't imitate, I mean, one of the byproducts of that that I can see is you're going slower, like you probably take you longer to do that than it would have to download WordPress. And that goes back, maybe to the complexity right where they're intertwined ( Time 0:10:57 ) Note: Simplicity for you, don\u2019t take on the accidental complexity that others have their content. But I'm just me and I don't need that complexity. So I think that this is a nice metaphor for life. It doesn't have to be so complex. You can do just what's best for you, not need to adopt the legacy software that everyone else uses. That's really interesting. I mean, so two themes stuck it to me. They're the complexity theme, but also the imitation versus innovation. If you don't imitate, I mean, one of the byproducts of that that I can see is you're going slower, like you probably take you longer to do that than it would have to download WordPress. And that goes back, maybe to the complexity right where they're intertwined ( Time 0:10:57 ) Note: Simplicity for you, don\u2019t take on the accidental complexity that others have","title":"88 Derek Sivers: Innovation Versus Imitation"},{"location":"Highlights/Readwise/Podcasts/%2388%20Derek%20Sivers%20Innovation%20Versus%20Imitation-2/#88-derek-sivers-innovation-versus-imitation","text":"","title":"#88 Derek Sivers: Innovation Versus Imitation"},{"location":"Highlights/Readwise/Podcasts/%2388%20Derek%20Sivers%20Innovation%20Versus%20Imitation-2/#metadata","text":"Author: [[The Knowledge Project with Shane Parrish]] Full Title: #88 Derek Sivers: Innovation Versus Imitation Category: #Type/Highlights/Podcast URL: https://www.airr.io/episode/5f171edb00ecbc05747284f7","title":"Metadata"},{"location":"Highlights/Readwise/Podcasts/%2388%20Derek%20Sivers%20Innovation%20Versus%20Imitation-2/#highlights","text":"their content. But I'm just me and I don't need that complexity. So I think that this is a nice metaphor for life. It doesn't have to be so complex. You can do just what's best for you, not need to adopt the legacy software that everyone else uses. That's really interesting. I mean, so two themes stuck it to me. They're the complexity theme, but also the imitation versus innovation. If you don't imitate, I mean, one of the byproducts of that that I can see is you're going slower, like you probably take you longer to do that than it would have to download WordPress. And that goes back, maybe to the complexity right where they're intertwined ( Time 0:10:57 ) Note: Simplicity for you, don\u2019t take on the accidental complexity that others have their content. But I'm just me and I don't need that complexity. So I think that this is a nice metaphor for life. It doesn't have to be so complex. You can do just what's best for you, not need to adopt the legacy software that everyone else uses. That's really interesting. I mean, so two themes stuck it to me. They're the complexity theme, but also the imitation versus innovation. If you don't imitate, I mean, one of the byproducts of that that I can see is you're going slower, like you probably take you longer to do that than it would have to download WordPress. And that goes back, maybe to the complexity right where they're intertwined ( Time 0:10:57 ) Note: Simplicity for you, don\u2019t take on the accidental complexity that others have","title":"Highlights"},{"location":"Highlights/Readwise/Podcasts/%2388%20Derek%20Sivers%20Innovation%20Versus%20Imitation/","text":"#88 Derek Sivers: Innovation Versus Imitation \u00b6 Metadata \u00b6 Author: [[The Knowledge Project with Shane Parrish]] Full Title: #88 Derek Sivers: Innovation Versus Imitation Category: #Type/Highlights/Podcast URL: https://traffic.libsyn.com/secure/theknowledgeproject/88_Derek_Sivers.mp3?dest-id=271299 Highlights \u00b6 AirrQuote ( Time 0:10:57 ) Note: Simplicity for you, don\u2019t take on the accidental complexity that others have AirrQuote ( Time 0:10:57 ) Note: Simplicity for you, don\u2019t take on the accidental complexity that others have","title":"88 Derek Sivers: Innovation Versus Imitation"},{"location":"Highlights/Readwise/Podcasts/%2388%20Derek%20Sivers%20Innovation%20Versus%20Imitation/#88-derek-sivers-innovation-versus-imitation","text":"","title":"#88 Derek Sivers: Innovation Versus Imitation"},{"location":"Highlights/Readwise/Podcasts/%2388%20Derek%20Sivers%20Innovation%20Versus%20Imitation/#metadata","text":"Author: [[The Knowledge Project with Shane Parrish]] Full Title: #88 Derek Sivers: Innovation Versus Imitation Category: #Type/Highlights/Podcast URL: https://traffic.libsyn.com/secure/theknowledgeproject/88_Derek_Sivers.mp3?dest-id=271299","title":"Metadata"},{"location":"Highlights/Readwise/Podcasts/%2388%20Derek%20Sivers%20Innovation%20Versus%20Imitation/#highlights","text":"AirrQuote ( Time 0:10:57 ) Note: Simplicity for you, don\u2019t take on the accidental complexity that others have AirrQuote ( Time 0:10:57 ) Note: Simplicity for you, don\u2019t take on the accidental complexity that others have","title":"Highlights"},{"location":"Highlights/Readwise/Podcasts/27.%20The%20Underlying%20Technology%20Behind%20Fiat%20Standard/","text":"27. The Underlying Technology Behind Fiat Standard \u00b6 Metadata \u00b6 Author: [[The Bitcoin Standard Podcast]] Full Title: 27. The Underlying Technology Behind Fiat Standard Category: #Type/Highlights/Podcast URL: https://www.airr.io/episode/600add1b83ecdbf58fbba0d0 Highlights \u00b6 AirrQuote ( Time 0:27:17 ) Note: Bitcoin shows that we can have a currency without needing to lend it to the government. It forces us to question the structure of the current system where wealth is destroyed when governments fail.","title":"27. The Underlying Technology Behind Fiat Standard"},{"location":"Highlights/Readwise/Podcasts/27.%20The%20Underlying%20Technology%20Behind%20Fiat%20Standard/#27-the-underlying-technology-behind-fiat-standard","text":"","title":"27. The Underlying Technology Behind Fiat Standard"},{"location":"Highlights/Readwise/Podcasts/27.%20The%20Underlying%20Technology%20Behind%20Fiat%20Standard/#metadata","text":"Author: [[The Bitcoin Standard Podcast]] Full Title: 27. The Underlying Technology Behind Fiat Standard Category: #Type/Highlights/Podcast URL: https://www.airr.io/episode/600add1b83ecdbf58fbba0d0","title":"Metadata"},{"location":"Highlights/Readwise/Podcasts/27.%20The%20Underlying%20Technology%20Behind%20Fiat%20Standard/#highlights","text":"AirrQuote ( Time 0:27:17 ) Note: Bitcoin shows that we can have a currency without needing to lend it to the government. It forces us to question the structure of the current system where wealth is destroyed when governments fail.","title":"Highlights"},{"location":"Highlights/Readwise/Podcasts/677%20-%20The%20Art%20of%20Impossible%20With%20Steven%20Kotler%21/","text":"677 - The Art of Impossible With Steven Kotler! \u00b6 Metadata \u00b6 Author: [[The James Altucher Show]] Full Title: 677 - The Art of Impossible With Steven Kotler! Category: #Type/Highlights/Podcast URL: https://www.airr.io/episode/5ffd7dd09c64866ef3055b71 Highlights \u00b6 Speaker 1: feeling quite like owning a storied, authentic timepiece. So on eBay, you can scroll through a massive inventory of watches curated by serious sellers. And you don't have to settle for anything but exactly what you want. And now eBay is making it even easier to shop confidently, thanks to its authenticity. Guarantee. No fakes, no fraud. No doubt. Every watch over $2000 is meticulously inspected by independent experts before they send it to you. Once it's authenticated, eBay ships it to you in ( Time 0:33:02 ) Note: Peak Performance Pro Tip","title":"677 - The Art of Impossible With Steven Kotler!"},{"location":"Highlights/Readwise/Podcasts/677%20-%20The%20Art%20of%20Impossible%20With%20Steven%20Kotler%21/#677-the-art-of-impossible-with-steven-kotler","text":"","title":"677 - The Art of Impossible With Steven Kotler!"},{"location":"Highlights/Readwise/Podcasts/677%20-%20The%20Art%20of%20Impossible%20With%20Steven%20Kotler%21/#metadata","text":"Author: [[The James Altucher Show]] Full Title: 677 - The Art of Impossible With Steven Kotler! Category: #Type/Highlights/Podcast URL: https://www.airr.io/episode/5ffd7dd09c64866ef3055b71","title":"Metadata"},{"location":"Highlights/Readwise/Podcasts/677%20-%20The%20Art%20of%20Impossible%20With%20Steven%20Kotler%21/#highlights","text":"Speaker 1: feeling quite like owning a storied, authentic timepiece. So on eBay, you can scroll through a massive inventory of watches curated by serious sellers. And you don't have to settle for anything but exactly what you want. And now eBay is making it even easier to shop confidently, thanks to its authenticity. Guarantee. No fakes, no fraud. No doubt. Every watch over $2000 is meticulously inspected by independent experts before they send it to you. Once it's authenticated, eBay ships it to you in ( Time 0:33:02 ) Note: Peak Performance Pro Tip","title":"Highlights"},{"location":"Highlights/Readwise/Podcasts/68%20Bits%20of%20Unsolicited%20Advice-2/","text":"68 Bits of Unsolicited Advice \u00b6 Metadata \u00b6 Author: [[Not Overthinking]] Full Title: 68 Bits of Unsolicited Advice Category: #Type/Highlights/Podcast URL: https://www.airr.io/episode/5ecad6cdbd1f2ba3d8f40197 Highlights \u00b6 good luck. Moving on number three is always demand a deadline. A deadline weeds out the extraneous and the ordinary. It prevents you from trying to make it perfect. So you have to make a different Different is better. Yeah, Back ( Time 0:08:56 ) Note: On Deadlines","title":"68 Bits of Unsolicited Advice"},{"location":"Highlights/Readwise/Podcasts/68%20Bits%20of%20Unsolicited%20Advice-2/#68-bits-of-unsolicited-advice","text":"","title":"68 Bits of Unsolicited Advice"},{"location":"Highlights/Readwise/Podcasts/68%20Bits%20of%20Unsolicited%20Advice-2/#metadata","text":"Author: [[Not Overthinking]] Full Title: 68 Bits of Unsolicited Advice Category: #Type/Highlights/Podcast URL: https://www.airr.io/episode/5ecad6cdbd1f2ba3d8f40197","title":"Metadata"},{"location":"Highlights/Readwise/Podcasts/68%20Bits%20of%20Unsolicited%20Advice-2/#highlights","text":"good luck. Moving on number three is always demand a deadline. A deadline weeds out the extraneous and the ordinary. It prevents you from trying to make it perfect. So you have to make a different Different is better. Yeah, Back ( Time 0:08:56 ) Note: On Deadlines","title":"Highlights"},{"location":"Highlights/Readwise/Podcasts/68%20Bits%20of%20Unsolicited%20Advice/","text":"68 Bits of Unsolicited Advice \u00b6 Metadata \u00b6 Author: [[Not Overthinking]] Full Title: 68 Bits of Unsolicited Advice Category: #Type/Highlights/Podcast URL: https://chtbl.com/track/99553/media.transistor.fm/cf22f16f.mp3 Highlights \u00b6 AirrQuote ( Time 0:08:56 ) Note: On Deadlines good luck. Moving on number three is always demand a deadline. A deadline weeds out the extraneous and the ordinary. It prevents you from trying to make it perfect. So you have to make a different Different is better. Yeah, Back ( Time 0:08:56 ) Note: On Deadlines","title":"68 Bits of Unsolicited Advice"},{"location":"Highlights/Readwise/Podcasts/68%20Bits%20of%20Unsolicited%20Advice/#68-bits-of-unsolicited-advice","text":"","title":"68 Bits of Unsolicited Advice"},{"location":"Highlights/Readwise/Podcasts/68%20Bits%20of%20Unsolicited%20Advice/#metadata","text":"Author: [[Not Overthinking]] Full Title: 68 Bits of Unsolicited Advice Category: #Type/Highlights/Podcast URL: https://chtbl.com/track/99553/media.transistor.fm/cf22f16f.mp3","title":"Metadata"},{"location":"Highlights/Readwise/Podcasts/68%20Bits%20of%20Unsolicited%20Advice/#highlights","text":"AirrQuote ( Time 0:08:56 ) Note: On Deadlines good luck. Moving on number three is always demand a deadline. A deadline weeds out the extraneous and the ordinary. It prevents you from trying to make it perfect. So you have to make a different Different is better. Yeah, Back ( Time 0:08:56 ) Note: On Deadlines","title":"Highlights"},{"location":"Highlights/Readwise/Podcasts/Austin%20Kleon%20on%20Writing%2C%20Creativity%20and%20the%20Importance%20of%20Idleness/","text":"Austin Kleon on Writing, Creativity and the Importance of Idleness \u00b6 Metadata \u00b6 Author: [[Not Overthinking]] Full Title: Austin Kleon on Writing, Creativity and the Importance of Idleness Category: #Type/Highlights/Podcast URL: https://www.airr.io/episode/5fa968fde59866046ac2782c Highlights \u00b6 Speaker 0: the the impact of having a daily blawg. Um, I think for me what is interesting about having ah, blawg or some sort of daily project, even if it's like I post one thing to instagram every day or, you know, just something little like that, having something that you have to do every day you find out it's not that you have something to say. It's that you find out what you have to say. So that's so like writing every day. Some people say, Oh, you must have so much to say because you write every day and like actually it's the opposite. I have more to say because I sit down and write every day and I figure out what I'm thinking and what it actually is that I have to say. So writing is actually not just a way of communicating with the world. It's actually a way of communicating with yourself because the simple act of sitting down in front of a keyboard for 45 minutes or pulling out your notebook for a half hour, whatever it is, you are creating space in the day for you to kinda connect with up with what's here and to figure out what's going on. And what is it that I really feel on. What is it that I really think you know? And I think that's a really That's something that the beginner has to get over very quickly. Is that this idea like, well, I don't have anything to say. What am I gonna block about? It's like the pressure and the routine and the muscles of blogging everyday means that you will get to something every day, and and I have to say I'm someone who doesn't necessarily practice what I preach right now. I'm actually I'm in a weird I write every day. I write privately every day, like in my diary and stuff, but I don't actually blawg every day anymore, and I can actually tell I am less creatively fertile right now because I don't have that practice because there's something, ah, switch that happens when you know that people are going to read it. It brings up your kind of the level of things. You know, it's it's a kind of it brings things up. I think ( Time 0:22:35 ) Note: Developing the practice of writing Speaker 0: because, man, there's always something more interesting to do than right. I mean, they're like putting air in the tires, like cleaning out your closet or rearranging your books or, you know, doing your taxes. My taxes Never. I'm working on a book. My taxes get done like so quickly It's always something you'd rather do than right. It's even the great writers, you know? I mean, there are some writers that you know they love it and they're really good at. But you know David Rakoff, you know, he said, I'll try to tone this down for YouTube But he said, You know, writing is like pulling teeth from my genitals, you know, just like it's like it's the work, you know. And Rakoff said, This really brilliant thing to where he was like, You know, writing is like engineering a meal out of rotten food because it always starts his crap like your your thoughts or just this, just like just this mass of junk. And, you know, it's like it's like trying to make a meal out of spoiled stuff from the garbage. Yeah, it's just like, you know, it's just but I think of it as a refinement process. I think of it is like, uh, you've got all this raw sludge and you've got to kind of run it through a machine several times and refined, and that's what the that's like, what the editing process is, right? You just got the sludge and this Mass, and you're just you're just constantly reshaping it and sharpening it and all that stuff. So it's ( Time 0:30:45 ) Note: The challenge of writing Speaker 0: so like, sort of pressure to specialize now. But I really think keeping things in your life, staying passionate about two or three things and letting them speak to each other, it just it makes the whole thing richer. And I really do think that if you can get over that initial problem of, like what to do with myself, you know, because that was really the thing when I was starting out. It's like I would go to, like, a new job or something. I'd be like, Well, I'm into this, this and this and they'd be like, Well, we just need a copywriter. Dude, what do you Which one? You know, But if you can get past that, that that first top of it, the life that you get is so much richer and so much more meaningful. ( Time 0:46:23 ) Note: Specialism vs Generalist Speaker 0: way more of them. And there's a great there's a great story in art and fear the book Art and fear. Where there's this, you know, there's this pottery class and half the class has said is told you will be evaluated on how many pots you make, how many pots you throw that is where your grade will come through from. The other part of the class was told, you will be evaluated on the quality of the final pot you make. Well, it turns out that the people in the group that was told to make his made pots is they could ended up with better quality pots than the ones that were told Toe just focus on quality. So, like there's something about quantity and frequency and blogging that I think leads to better stuff overall than if I just sat and waited for, like, this perfect post, and I could tell you that's happening to me right now and there are two big posts I want to write and I'm just, like, trying to figure out Well, I've waited this long now, so it's gonna have to be really good. Whereas if my dumb ass had just written about the stuff as I was thinking about it, they're probably be three great posts about, you know? I mean, it's that it's that thing of like, you just get out of practice and it's harder to get back on it be like a it be like a basketball player who, like, took a year off and then wanted to get back on the court. You know, it's like it's like that. ( Time 1:36:43 ) Note: Quality versus quantity and how quantity produces quality","title":"Austin Kleon on Writing, Creativity and the Importance of Idleness"},{"location":"Highlights/Readwise/Podcasts/Austin%20Kleon%20on%20Writing%2C%20Creativity%20and%20the%20Importance%20of%20Idleness/#austin-kleon-on-writing-creativity-and-the-importance-of-idleness","text":"","title":"Austin Kleon on Writing, Creativity and the Importance of Idleness"},{"location":"Highlights/Readwise/Podcasts/Austin%20Kleon%20on%20Writing%2C%20Creativity%20and%20the%20Importance%20of%20Idleness/#metadata","text":"Author: [[Not Overthinking]] Full Title: Austin Kleon on Writing, Creativity and the Importance of Idleness Category: #Type/Highlights/Podcast URL: https://www.airr.io/episode/5fa968fde59866046ac2782c","title":"Metadata"},{"location":"Highlights/Readwise/Podcasts/Austin%20Kleon%20on%20Writing%2C%20Creativity%20and%20the%20Importance%20of%20Idleness/#highlights","text":"Speaker 0: the the impact of having a daily blawg. Um, I think for me what is interesting about having ah, blawg or some sort of daily project, even if it's like I post one thing to instagram every day or, you know, just something little like that, having something that you have to do every day you find out it's not that you have something to say. It's that you find out what you have to say. So that's so like writing every day. Some people say, Oh, you must have so much to say because you write every day and like actually it's the opposite. I have more to say because I sit down and write every day and I figure out what I'm thinking and what it actually is that I have to say. So writing is actually not just a way of communicating with the world. It's actually a way of communicating with yourself because the simple act of sitting down in front of a keyboard for 45 minutes or pulling out your notebook for a half hour, whatever it is, you are creating space in the day for you to kinda connect with up with what's here and to figure out what's going on. And what is it that I really feel on. What is it that I really think you know? And I think that's a really That's something that the beginner has to get over very quickly. Is that this idea like, well, I don't have anything to say. What am I gonna block about? It's like the pressure and the routine and the muscles of blogging everyday means that you will get to something every day, and and I have to say I'm someone who doesn't necessarily practice what I preach right now. I'm actually I'm in a weird I write every day. I write privately every day, like in my diary and stuff, but I don't actually blawg every day anymore, and I can actually tell I am less creatively fertile right now because I don't have that practice because there's something, ah, switch that happens when you know that people are going to read it. It brings up your kind of the level of things. You know, it's it's a kind of it brings things up. I think ( Time 0:22:35 ) Note: Developing the practice of writing Speaker 0: because, man, there's always something more interesting to do than right. I mean, they're like putting air in the tires, like cleaning out your closet or rearranging your books or, you know, doing your taxes. My taxes Never. I'm working on a book. My taxes get done like so quickly It's always something you'd rather do than right. It's even the great writers, you know? I mean, there are some writers that you know they love it and they're really good at. But you know David Rakoff, you know, he said, I'll try to tone this down for YouTube But he said, You know, writing is like pulling teeth from my genitals, you know, just like it's like it's the work, you know. And Rakoff said, This really brilliant thing to where he was like, You know, writing is like engineering a meal out of rotten food because it always starts his crap like your your thoughts or just this, just like just this mass of junk. And, you know, it's like it's like trying to make a meal out of spoiled stuff from the garbage. Yeah, it's just like, you know, it's just but I think of it as a refinement process. I think of it is like, uh, you've got all this raw sludge and you've got to kind of run it through a machine several times and refined, and that's what the that's like, what the editing process is, right? You just got the sludge and this Mass, and you're just you're just constantly reshaping it and sharpening it and all that stuff. So it's ( Time 0:30:45 ) Note: The challenge of writing Speaker 0: so like, sort of pressure to specialize now. But I really think keeping things in your life, staying passionate about two or three things and letting them speak to each other, it just it makes the whole thing richer. And I really do think that if you can get over that initial problem of, like what to do with myself, you know, because that was really the thing when I was starting out. It's like I would go to, like, a new job or something. I'd be like, Well, I'm into this, this and this and they'd be like, Well, we just need a copywriter. Dude, what do you Which one? You know, But if you can get past that, that that first top of it, the life that you get is so much richer and so much more meaningful. ( Time 0:46:23 ) Note: Specialism vs Generalist Speaker 0: way more of them. And there's a great there's a great story in art and fear the book Art and fear. Where there's this, you know, there's this pottery class and half the class has said is told you will be evaluated on how many pots you make, how many pots you throw that is where your grade will come through from. The other part of the class was told, you will be evaluated on the quality of the final pot you make. Well, it turns out that the people in the group that was told to make his made pots is they could ended up with better quality pots than the ones that were told Toe just focus on quality. So, like there's something about quantity and frequency and blogging that I think leads to better stuff overall than if I just sat and waited for, like, this perfect post, and I could tell you that's happening to me right now and there are two big posts I want to write and I'm just, like, trying to figure out Well, I've waited this long now, so it's gonna have to be really good. Whereas if my dumb ass had just written about the stuff as I was thinking about it, they're probably be three great posts about, you know? I mean, it's that it's that thing of like, you just get out of practice and it's harder to get back on it be like a it be like a basketball player who, like, took a year off and then wanted to get back on the court. You know, it's like it's like that. ( Time 1:36:43 ) Note: Quality versus quantity and how quantity produces quality","title":"Highlights"},{"location":"Highlights/Readwise/Podcasts/Balancing%20the%20Personal%20and%20Professional%2C%20Unreasonable%20Email%20Expectations%2C%20and%20Avoiding%20Hard%20Creative%20Work%20%20DEEP%20QUESTIONS-2/","text":"Balancing the Personal and Professional, Unreasonable Email Expectations, and Avoiding Hard Creative Work | DEEP QUESTIONS \u00b6 Metadata \u00b6 Author: [[Deep Questions with Cal Newport]] Full Title: Balancing the Personal and Professional, Unreasonable Email Expectations, and Avoiding Hard Creative Work | DEEP QUESTIONS Category: #Type/Highlights/Podcast URL: https://www.airr.io/episode/5ef8d7d2c7fd2b6c098b28e4 Highlights \u00b6 If your brain doesn't actually trust, the plan you have is going to lead to the goal you want to get to. It will withhold motivation, and you will experience that like procrastination. His ( Time 0:51:20 ) Note: Your brain needs to trust the plan","title":"Balancing the Personal and Professional, Unreasonable Email Expectations, and Avoiding Hard Creative Work | DEEP QUESTIONS"},{"location":"Highlights/Readwise/Podcasts/Balancing%20the%20Personal%20and%20Professional%2C%20Unreasonable%20Email%20Expectations%2C%20and%20Avoiding%20Hard%20Creative%20Work%20%20DEEP%20QUESTIONS-2/#balancing-the-personal-and-professional-unreasonable-email-expectations-and-avoiding-hard-creative-work-deep-questions","text":"","title":"Balancing the Personal and Professional, Unreasonable Email Expectations, and Avoiding Hard Creative Work | DEEP QUESTIONS"},{"location":"Highlights/Readwise/Podcasts/Balancing%20the%20Personal%20and%20Professional%2C%20Unreasonable%20Email%20Expectations%2C%20and%20Avoiding%20Hard%20Creative%20Work%20%20DEEP%20QUESTIONS-2/#metadata","text":"Author: [[Deep Questions with Cal Newport]] Full Title: Balancing the Personal and Professional, Unreasonable Email Expectations, and Avoiding Hard Creative Work | DEEP QUESTIONS Category: #Type/Highlights/Podcast URL: https://www.airr.io/episode/5ef8d7d2c7fd2b6c098b28e4","title":"Metadata"},{"location":"Highlights/Readwise/Podcasts/Balancing%20the%20Personal%20and%20Professional%2C%20Unreasonable%20Email%20Expectations%2C%20and%20Avoiding%20Hard%20Creative%20Work%20%20DEEP%20QUESTIONS-2/#highlights","text":"If your brain doesn't actually trust, the plan you have is going to lead to the goal you want to get to. It will withhold motivation, and you will experience that like procrastination. His ( Time 0:51:20 ) Note: Your brain needs to trust the plan","title":"Highlights"},{"location":"Highlights/Readwise/Podcasts/Balancing%20the%20Personal%20and%20Professional%2C%20Unreasonable%20Email%20Expectations%2C%20and%20Avoiding%20Hard%20Creative%20Work%20%20DEEP%20QUESTIONS/","text":"Balancing the Personal and Professional, Unreasonable Email Expectations, and Avoiding Hard Creative Work | DEEP QUESTIONS \u00b6 Metadata \u00b6 Author: [[Deep Questions with Cal Newport]] Full Title: Balancing the Personal and Professional, Unreasonable Email Expectations, and Avoiding Hard Creative Work | DEEP QUESTIONS Category: #Type/Highlights/Podcast URL: https://www.buzzsprout.com/1121972/4342781-balancing-the-personal-and-professional-unreasonable-email-expectations-and-avoiding-hard-creative-work-deep-questions.mp3?blob_id=18580067 Highlights \u00b6 AirrQuote ( Time 0:51:20 ) Note: Your brain needs to trust the plan","title":"Balancing the Personal and Professional, Unreasonable Email Expectations, and Avoiding Hard Creative Work | DEEP QUESTIONS"},{"location":"Highlights/Readwise/Podcasts/Balancing%20the%20Personal%20and%20Professional%2C%20Unreasonable%20Email%20Expectations%2C%20and%20Avoiding%20Hard%20Creative%20Work%20%20DEEP%20QUESTIONS/#balancing-the-personal-and-professional-unreasonable-email-expectations-and-avoiding-hard-creative-work-deep-questions","text":"","title":"Balancing the Personal and Professional, Unreasonable Email Expectations, and Avoiding Hard Creative Work | DEEP QUESTIONS"},{"location":"Highlights/Readwise/Podcasts/Balancing%20the%20Personal%20and%20Professional%2C%20Unreasonable%20Email%20Expectations%2C%20and%20Avoiding%20Hard%20Creative%20Work%20%20DEEP%20QUESTIONS/#metadata","text":"Author: [[Deep Questions with Cal Newport]] Full Title: Balancing the Personal and Professional, Unreasonable Email Expectations, and Avoiding Hard Creative Work | DEEP QUESTIONS Category: #Type/Highlights/Podcast URL: https://www.buzzsprout.com/1121972/4342781-balancing-the-personal-and-professional-unreasonable-email-expectations-and-avoiding-hard-creative-work-deep-questions.mp3?blob_id=18580067","title":"Metadata"},{"location":"Highlights/Readwise/Podcasts/Balancing%20the%20Personal%20and%20Professional%2C%20Unreasonable%20Email%20Expectations%2C%20and%20Avoiding%20Hard%20Creative%20Work%20%20DEEP%20QUESTIONS/#highlights","text":"AirrQuote ( Time 0:51:20 ) Note: Your brain needs to trust the plan","title":"Highlights"},{"location":"Highlights/Readwise/Podcasts/Borrowed%20Creativity/","text":"Borrowed Creativity \u00b6 Metadata \u00b6 Author: [[The Building a Second Brain Podcast]] Full Title: Borrowed Creativity Category: #Type/Highlights/Podcast URL: https://www.airr.io/episode/5e8265e24cc59f3b892e9c0d Highlights \u00b6 when you know you're gonna produce something. Everything about how you consume changes, your more discerning. You have higher standards. You're not willing to waste time consuming anything but the very best you can get your hands on because, you know, you know, there's that saying garbage in garbage out. Your output is gonna be directly constrained. It's gonna be limited to the quality of your inputs. So it sounds ( Time 0:02:49 ) Note: On consuming when producing","title":"Borrowed Creativity"},{"location":"Highlights/Readwise/Podcasts/Borrowed%20Creativity/#borrowed-creativity","text":"","title":"Borrowed Creativity"},{"location":"Highlights/Readwise/Podcasts/Borrowed%20Creativity/#metadata","text":"Author: [[The Building a Second Brain Podcast]] Full Title: Borrowed Creativity Category: #Type/Highlights/Podcast URL: https://www.airr.io/episode/5e8265e24cc59f3b892e9c0d","title":"Metadata"},{"location":"Highlights/Readwise/Podcasts/Borrowed%20Creativity/#highlights","text":"when you know you're gonna produce something. Everything about how you consume changes, your more discerning. You have higher standards. You're not willing to waste time consuming anything but the very best you can get your hands on because, you know, you know, there's that saying garbage in garbage out. Your output is gonna be directly constrained. It's gonna be limited to the quality of your inputs. So it sounds ( Time 0:02:49 ) Note: On consuming when producing","title":"Highlights"},{"location":"Highlights/Readwise/Podcasts/Bouncing%20Back%2C%20Finding%20Fulfilment%20and%20Being%20Productive%20Ft.%20Noah%20Kagan/","text":"Bouncing Back, Finding Fulfilment and Being Productive Ft. Noah Kagan \u00b6 Metadata \u00b6 Author: [[Not Overthinking]] Full Title: Bouncing Back, Finding Fulfilment and Being Productive Ft. Noah Kagan Category: #Type/Highlights/Podcast URL: https://www.airr.io/episode/5f610cf4e619d2f6e6690d28 Highlights \u00b6 that I'll be very specific. Go work for them for free. And so how do you work for them for free? Let's just take Ali. Ali is telling you about close up Magic. Ali is telling you his YouTube channels important. Ali is telling you, uh, he's working on other businesses. I would email Ali or me or whoever's life you imagine is living the life that you want to kind of learn from and email them value. So what is value? Email is saying, ( Time 1:09:31 ) Note: Look at the person that\u2019s doing what you admire and work for them for free","title":"Bouncing Back, Finding Fulfilment and Being Productive Ft. Noah Kagan"},{"location":"Highlights/Readwise/Podcasts/Bouncing%20Back%2C%20Finding%20Fulfilment%20and%20Being%20Productive%20Ft.%20Noah%20Kagan/#bouncing-back-finding-fulfilment-and-being-productive-ft-noah-kagan","text":"","title":"Bouncing Back, Finding Fulfilment and Being Productive Ft. Noah Kagan"},{"location":"Highlights/Readwise/Podcasts/Bouncing%20Back%2C%20Finding%20Fulfilment%20and%20Being%20Productive%20Ft.%20Noah%20Kagan/#metadata","text":"Author: [[Not Overthinking]] Full Title: Bouncing Back, Finding Fulfilment and Being Productive Ft. Noah Kagan Category: #Type/Highlights/Podcast URL: https://www.airr.io/episode/5f610cf4e619d2f6e6690d28","title":"Metadata"},{"location":"Highlights/Readwise/Podcasts/Bouncing%20Back%2C%20Finding%20Fulfilment%20and%20Being%20Productive%20Ft.%20Noah%20Kagan/#highlights","text":"that I'll be very specific. Go work for them for free. And so how do you work for them for free? Let's just take Ali. Ali is telling you about close up Magic. Ali is telling you his YouTube channels important. Ali is telling you, uh, he's working on other businesses. I would email Ali or me or whoever's life you imagine is living the life that you want to kind of learn from and email them value. So what is value? Email is saying, ( Time 1:09:31 ) Note: Look at the person that\u2019s doing what you admire and work for them for free","title":"Highlights"},{"location":"Highlights/Readwise/Podcasts/Competitiveness%20and%20Mimetic%20Traps/","text":"Competitiveness and Mimetic Traps \u00b6 Metadata \u00b6 Author: [[Not Overthinking]] Full Title: Competitiveness and Mimetic Traps Category: #Type/Highlights/Podcast URL: https://www.airr.io/episode/5f8440e3a264773e06433dc6 Highlights \u00b6 AirrQuote ( Time 0:50:03 ) Note: Mimetic trap in a nutshell","title":"Competitiveness and Mimetic Traps"},{"location":"Highlights/Readwise/Podcasts/Competitiveness%20and%20Mimetic%20Traps/#competitiveness-and-mimetic-traps","text":"","title":"Competitiveness and Mimetic Traps"},{"location":"Highlights/Readwise/Podcasts/Competitiveness%20and%20Mimetic%20Traps/#metadata","text":"Author: [[Not Overthinking]] Full Title: Competitiveness and Mimetic Traps Category: #Type/Highlights/Podcast URL: https://www.airr.io/episode/5f8440e3a264773e06433dc6","title":"Metadata"},{"location":"Highlights/Readwise/Podcasts/Competitiveness%20and%20Mimetic%20Traps/#highlights","text":"AirrQuote ( Time 0:50:03 ) Note: Mimetic trap in a nutshell","title":"Highlights"},{"location":"Highlights/Readwise/Podcasts/Ep.%2053%20Covey%27s%20Quads%2C%20Perfect%20Productivity%20Systems%2C%20and%20Reducing%20Laziness/","text":"Ep. 53: Covey's Quads, \"Perfect\" Productivity Systems, and Reducing Laziness \u00b6 Metadata \u00b6 Author: [[Deep Questions with Cal Newport]] Full Title: Ep. 53: Covey's Quads, \"Perfect\" Productivity Systems, and Reducing Laziness Category: #Type/Highlights/Podcast URL: https://www.airr.io/episode/5fd769b0749e68ed4258bc93 Highlights \u00b6 Speaker 0: of escape. And what escape could be better than enjoying a bowl of sweet cereal, just like you used to eat as a kid and doing so without all of the junk that came with those childhood treats. Magic Spoon has ( Time 0:00:15 )","title":"Ep. 53: Covey's Quads, \"Perfect\" Productivity Systems, and Reducing Laziness"},{"location":"Highlights/Readwise/Podcasts/Ep.%2053%20Covey%27s%20Quads%2C%20Perfect%20Productivity%20Systems%2C%20and%20Reducing%20Laziness/#ep-53-coveys-quads-perfect-productivity-systems-and-reducing-laziness","text":"","title":"Ep. 53: Covey's Quads, \"Perfect\" Productivity Systems, and Reducing Laziness"},{"location":"Highlights/Readwise/Podcasts/Ep.%2053%20Covey%27s%20Quads%2C%20Perfect%20Productivity%20Systems%2C%20and%20Reducing%20Laziness/#metadata","text":"Author: [[Deep Questions with Cal Newport]] Full Title: Ep. 53: Covey's Quads, \"Perfect\" Productivity Systems, and Reducing Laziness Category: #Type/Highlights/Podcast URL: https://www.airr.io/episode/5fd769b0749e68ed4258bc93","title":"Metadata"},{"location":"Highlights/Readwise/Podcasts/Ep.%2053%20Covey%27s%20Quads%2C%20Perfect%20Productivity%20Systems%2C%20and%20Reducing%20Laziness/#highlights","text":"Speaker 0: of escape. And what escape could be better than enjoying a bowl of sweet cereal, just like you used to eat as a kid and doing so without all of the junk that came with those childhood treats. Magic Spoon has ( Time 0:00:15 )","title":"Highlights"},{"location":"Highlights/Readwise/Podcasts/Exponent%20188%20%E2%80%94%20Big%20Tech%2C%20Antitrust%2C%20and%20Democracy-2/","text":"Exponent 188 \u2014 Big Tech, Antitrust, and Democracy \u00b6 Metadata \u00b6 Author: [[Exponent]] Full Title: Exponent 188 \u2014 Big Tech, Antitrust, and Democracy Category: #Type/Highlights/Podcast URL: https://www.airr.io/episode/5f2d2283257ee251cc1707fd Highlights \u00b6 in a way, because obviously I've been sort of fixated on the APP store for literally since the beginning trajectory. Like what in my first set of articles back in 2013 was trying to understand what happens. Do you think that's a crappy job managing the APP store and one of my conclusions? There was, you know, there. So scarred from their near death experience in the nineties, when they had to bag Adobe and Microsoft to continue supporting the max, it could remain viable. And I wrote this back in 2013 that they would never allow themselves to be in that position again. And ( Time 0:02:06 ) Note: Apple\u2019s management policy for the AppStore can be traced back to the company getting scarred by Adobe & Microsoft in the 90s","title":"Exponent 188 \u2014 Big Tech, Antitrust, and Democracy"},{"location":"Highlights/Readwise/Podcasts/Exponent%20188%20%E2%80%94%20Big%20Tech%2C%20Antitrust%2C%20and%20Democracy-2/#exponent-188-big-tech-antitrust-and-democracy","text":"","title":"Exponent 188 \u2014 Big Tech, Antitrust, and Democracy"},{"location":"Highlights/Readwise/Podcasts/Exponent%20188%20%E2%80%94%20Big%20Tech%2C%20Antitrust%2C%20and%20Democracy-2/#metadata","text":"Author: [[Exponent]] Full Title: Exponent 188 \u2014 Big Tech, Antitrust, and Democracy Category: #Type/Highlights/Podcast URL: https://www.airr.io/episode/5f2d2283257ee251cc1707fd","title":"Metadata"},{"location":"Highlights/Readwise/Podcasts/Exponent%20188%20%E2%80%94%20Big%20Tech%2C%20Antitrust%2C%20and%20Democracy-2/#highlights","text":"in a way, because obviously I've been sort of fixated on the APP store for literally since the beginning trajectory. Like what in my first set of articles back in 2013 was trying to understand what happens. Do you think that's a crappy job managing the APP store and one of my conclusions? There was, you know, there. So scarred from their near death experience in the nineties, when they had to bag Adobe and Microsoft to continue supporting the max, it could remain viable. And I wrote this back in 2013 that they would never allow themselves to be in that position again. And ( Time 0:02:06 ) Note: Apple\u2019s management policy for the AppStore can be traced back to the company getting scarred by Adobe & Microsoft in the 90s","title":"Highlights"},{"location":"Highlights/Readwise/Podcasts/Exponent%20188%20%E2%80%94%20Big%20Tech%2C%20Antitrust%2C%20and%20Democracy/","text":"Exponent 188 \u2014 Big Tech, Antitrust, and Democracy \u00b6 Metadata \u00b6 Author: [[Exponent]] Full Title: Exponent 188 \u2014 Big Tech, Antitrust, and Democracy Category: #Type/Highlights/Podcast URL: https://media.blubrry.com/exponent/content.blubrry.com/exponent/exponent188.mp3 Highlights \u00b6 AirrQuote ( Time 0:02:06 ) Note: Apple\u2019s management policy for the AppStore can be traced back to the company getting scarred by Adobe & Microsoft in the 90s","title":"Exponent 188 \u2014 Big Tech, Antitrust, and Democracy"},{"location":"Highlights/Readwise/Podcasts/Exponent%20188%20%E2%80%94%20Big%20Tech%2C%20Antitrust%2C%20and%20Democracy/#exponent-188-big-tech-antitrust-and-democracy","text":"","title":"Exponent 188 \u2014 Big Tech, Antitrust, and Democracy"},{"location":"Highlights/Readwise/Podcasts/Exponent%20188%20%E2%80%94%20Big%20Tech%2C%20Antitrust%2C%20and%20Democracy/#metadata","text":"Author: [[Exponent]] Full Title: Exponent 188 \u2014 Big Tech, Antitrust, and Democracy Category: #Type/Highlights/Podcast URL: https://media.blubrry.com/exponent/content.blubrry.com/exponent/exponent188.mp3","title":"Metadata"},{"location":"Highlights/Readwise/Podcasts/Exponent%20188%20%E2%80%94%20Big%20Tech%2C%20Antitrust%2C%20and%20Democracy/#highlights","text":"AirrQuote ( Time 0:02:06 ) Note: Apple\u2019s management policy for the AppStore can be traced back to the company getting scarred by Adobe & Microsoft in the 90s","title":"Highlights"},{"location":"Highlights/Readwise/Podcasts/Habit%20Tune-Up%20Productivity%20System%20Indecision%2C%20Embracing%20Boredom%2C%20and%20Craving%20Depth%20in%20a%20Shallow%20Job/","text":"Habit Tune-Up: Productivity System Indecision, Embracing Boredom, and Craving Depth in a Shallow Job \u00b6 Metadata \u00b6 Author: [[Deep Questions with Cal Newport]] Full Title: Habit Tune-Up: Productivity System Indecision, Embracing Boredom, and Craving Depth in a Shallow Job Category: #Type/Highlights/Podcast URL: https://www.airr.io/episode/5f3e8320b0b93235d1c8a3d2 Highlights \u00b6 AirrQuote ( Time 0:38:44 ) Note: Keystone Habits","title":"Habit Tune-Up: Productivity System Indecision, Embracing Boredom, and Craving Depth in a Shallow Job"},{"location":"Highlights/Readwise/Podcasts/Habit%20Tune-Up%20Productivity%20System%20Indecision%2C%20Embracing%20Boredom%2C%20and%20Craving%20Depth%20in%20a%20Shallow%20Job/#habit-tune-up-productivity-system-indecision-embracing-boredom-and-craving-depth-in-a-shallow-job","text":"","title":"Habit Tune-Up: Productivity System Indecision, Embracing Boredom, and Craving Depth in a Shallow Job"},{"location":"Highlights/Readwise/Podcasts/Habit%20Tune-Up%20Productivity%20System%20Indecision%2C%20Embracing%20Boredom%2C%20and%20Craving%20Depth%20in%20a%20Shallow%20Job/#metadata","text":"Author: [[Deep Questions with Cal Newport]] Full Title: Habit Tune-Up: Productivity System Indecision, Embracing Boredom, and Craving Depth in a Shallow Job Category: #Type/Highlights/Podcast URL: https://www.airr.io/episode/5f3e8320b0b93235d1c8a3d2","title":"Metadata"},{"location":"Highlights/Readwise/Podcasts/Habit%20Tune-Up%20Productivity%20System%20Indecision%2C%20Embracing%20Boredom%2C%20and%20Craving%20Depth%20in%20a%20Shallow%20Job/#highlights","text":"AirrQuote ( Time 0:38:44 ) Note: Keystone Habits","title":"Highlights"},{"location":"Highlights/Readwise/Podcasts/He%20Ran%20Across%20America%20%E2%80%94%20On%20Plants/","text":"He Ran Across America \u2014 On Plants \u00b6 Metadata \u00b6 Author: [[The Rich Roll Podcast]] Full Title: He Ran Across America \u2014 On Plants Category: #Type/Highlights/Podcast URL: https://www.airr.io/episode/5dd2651612887dcb57a86ef4 Highlights \u00b6 Speaker 1: about that innocents like when you don't like If you had, like, let's say you've been around ultras for five or 10 years, you know? It's like you. Then you have a sense of, like, how hard this is gonna be and maybe like, Yeah, I don't know if I want to do that, but like the enthusiasm of being new and not really, um, having all the experience that perhaps one might have suggested you need for something like this can work to your benefit, right? You're just like, Oh, yeah, I'm gonna do it. Don't worry about it. Well, most Speaker 0: of us in our head, anyways, eso just like not having those blockers of what the status quo would be for something like this. Yeah, I think it was to my advantage, right? And then it was just a matter of how am I going to do it? You know, there was the ( Time 0:29:29 ) Note: Most of it is in our heads anyways. So not having those blockers of what the status quo would be for something like this, I think it was to my advantage.","title":"He Ran Across America \u2014 On Plants"},{"location":"Highlights/Readwise/Podcasts/He%20Ran%20Across%20America%20%E2%80%94%20On%20Plants/#he-ran-across-america-on-plants","text":"","title":"He Ran Across America \u2014 On Plants"},{"location":"Highlights/Readwise/Podcasts/He%20Ran%20Across%20America%20%E2%80%94%20On%20Plants/#metadata","text":"Author: [[The Rich Roll Podcast]] Full Title: He Ran Across America \u2014 On Plants Category: #Type/Highlights/Podcast URL: https://www.airr.io/episode/5dd2651612887dcb57a86ef4","title":"Metadata"},{"location":"Highlights/Readwise/Podcasts/He%20Ran%20Across%20America%20%E2%80%94%20On%20Plants/#highlights","text":"Speaker 1: about that innocents like when you don't like If you had, like, let's say you've been around ultras for five or 10 years, you know? It's like you. Then you have a sense of, like, how hard this is gonna be and maybe like, Yeah, I don't know if I want to do that, but like the enthusiasm of being new and not really, um, having all the experience that perhaps one might have suggested you need for something like this can work to your benefit, right? You're just like, Oh, yeah, I'm gonna do it. Don't worry about it. Well, most Speaker 0: of us in our head, anyways, eso just like not having those blockers of what the status quo would be for something like this. Yeah, I think it was to my advantage, right? And then it was just a matter of how am I going to do it? You know, there was the ( Time 0:29:29 ) Note: Most of it is in our heads anyways. So not having those blockers of what the status quo would be for something like this, I think it was to my advantage.","title":"Highlights"},{"location":"Highlights/Readwise/Podcasts/Laurie%20Santos%2C%20PhD%20%20Simple%20Ways%20to%20Live%20a%20Happier%20Life/","text":"Laurie Santos, PhD | Simple Ways to Live a Happier Life \u00b6 Metadata \u00b6 Author: [[TRAINED]] Full Title: Laurie Santos, PhD | Simple Ways to Live a Happier Life Category: #Type/Highlights/Podcast URL: https://www.airr.io/episode/5f9a8f3f960a543cc5fb5ba6 Highlights \u00b6 Speaker 0: Absolutely one of the major kind of pillars we talk about at night. Your time is sleep. How does our sleep make us happier? Speaker 1: Sleep, I think is you know, one of these things that we absolutely don't realize how critical it is. There's so much data that lack of sleep contributes to mental health dysfunction. One famous study had subjects get normal sleep for two days, then deprived sleep for a week. Deprived wasn't zero hours of sleep. It was five hours of sleep. And then you go back to normal sleep. And what you find is that during those that week of deprived sleep subjects, mental health tanks like, almost to the point that it looks like they're mood levels have hit clinical depression after a week of this, right? You know, we think sleep obviously is important, but we forget that it's really critical. And I think that this is something that athletes really need to hear. Like I actually think for your mental health recovery time, but also for your physical health recovery time. Sleep is really important, you know. I tell my ( Time 0:32:04 ) Note: Sleep is key to mental and physical recovery","title":"Laurie Santos, PhD | Simple Ways to Live a Happier Life"},{"location":"Highlights/Readwise/Podcasts/Laurie%20Santos%2C%20PhD%20%20Simple%20Ways%20to%20Live%20a%20Happier%20Life/#laurie-santos-phd-simple-ways-to-live-a-happier-life","text":"","title":"Laurie Santos, PhD | Simple Ways to Live a Happier Life"},{"location":"Highlights/Readwise/Podcasts/Laurie%20Santos%2C%20PhD%20%20Simple%20Ways%20to%20Live%20a%20Happier%20Life/#metadata","text":"Author: [[TRAINED]] Full Title: Laurie Santos, PhD | Simple Ways to Live a Happier Life Category: #Type/Highlights/Podcast URL: https://www.airr.io/episode/5f9a8f3f960a543cc5fb5ba6","title":"Metadata"},{"location":"Highlights/Readwise/Podcasts/Laurie%20Santos%2C%20PhD%20%20Simple%20Ways%20to%20Live%20a%20Happier%20Life/#highlights","text":"Speaker 0: Absolutely one of the major kind of pillars we talk about at night. Your time is sleep. How does our sleep make us happier? Speaker 1: Sleep, I think is you know, one of these things that we absolutely don't realize how critical it is. There's so much data that lack of sleep contributes to mental health dysfunction. One famous study had subjects get normal sleep for two days, then deprived sleep for a week. Deprived wasn't zero hours of sleep. It was five hours of sleep. And then you go back to normal sleep. And what you find is that during those that week of deprived sleep subjects, mental health tanks like, almost to the point that it looks like they're mood levels have hit clinical depression after a week of this, right? You know, we think sleep obviously is important, but we forget that it's really critical. And I think that this is something that athletes really need to hear. Like I actually think for your mental health recovery time, but also for your physical health recovery time. Sleep is really important, you know. I tell my ( Time 0:32:04 ) Note: Sleep is key to mental and physical recovery","title":"Highlights"},{"location":"Highlights/Readwise/Podcasts/My%20New%20Task%20System%2C%20Deep%20Work%20With%20Kids%2C%20and%20Finding%20Purpose%20in%20Distracted%20Times%20%20DEEP%20QUESTIONS/","text":"My New Task System, Deep Work With Kids, and Finding Purpose in Distracted Times | DEEP QUESTIONS \u00b6 Metadata \u00b6 Author: [[Deep Questions with Cal Newport]] Full Title: My New Task System, Deep Work With Kids, and Finding Purpose in Distracted Times | DEEP QUESTIONS Category: #Type/Highlights/Podcast URL: https://www.airr.io/episode/5ee6d7109070069bd377b8f4 Highlights \u00b6 is caused by too many days in a row of high stress. In the work context, Stress is almost always created by not having enough time to get things done. It's deadline driven, so you have a report that you promised by tomorrow, and you don't have what you need to get it done. Or you have a book manuscript due on Monday, and you still have 30,000 words to go. That's what gets that stress reaction going. You get that stress reaction going enough, your body's gonna burn out. So how do you do lots of things without burning out? You do him in a way that avoids the stress reaction that means you spread it out. You give yourself more enough time. You don't do too many things in parallel. Maybe you finish one project before doing the next, but you make steady progress every day. Work, work, work, work, work I always used to tell the students I gave advice to writing. A paper is not stressful. Writing a paper when it's due in 12 hours is so if you are working Ah lot, but very rarely under time pressure or very rarely putting too much on your plate to actually get done when it needs to get done, you're not gonna be stressed out. So you just repeat that formula day after day, week after week in a lock. It's done right. So I'm ( Time 0:00:34 ) Note: What Cal is really saying here is that someone\u2019s not prioritizing effectively. Stress is the downstream impact of a lack of Ruth is probably tired position and being productive with your time. Be more productive and prioritize effectively and you\u2019re reduce burn out since you won\u2019t be stressed. did it might. My inbox was going to kill me. You cannot cannot run such a complex system with so many different types of demands. Ongoing conversations, ambiguous request information to be learned. This cannot execute as just messages in a single overfilled, non differentiated general purpose in box that was never gonna work. ( Time 0:14:33 ) Note: You have to find a system and tool that works for you - Trello is one example All of the information related to that builds up on the digital card, so there's no searching around to get the various pieces. This structuring makes a big difference. Cannot emphasize enough how hard is it is to do almost any nontrivial role when all of the information about that role exist in some combination of your head ( Time 0:16:27 ) Note: Getting structure and context into one place and administrators at colleges. They're just overburdened and just trying to get stuff off their plate. They're not over sweating it. If you say no, if you want a strategy to make that easier, used a quota strategy where you say, Well, look, I have a quota for how many committees I could do per semester have a quota for how many peer reviews I could do a semester. I have these quotas I set up to make sure that I still have enough time left to do the work I need to get tenure. And you know what? I've already hit my quota on that for the semester, some unable to say yes to this particular request. This method works really well because, man, it is hard to push back on that. It is very hard to say, I don't care about your quota. I would rather you do this for me, then actually get the work you need to do for 10 year. No one is going to say that it works like a charm. You lose this ability once you get 10 year, I can tell you that from the other side of this equation, but that's a good way to do it. But Caroline really just say no. Say no more often. People are not over sweating what Caroline did yesterday, they said, Okay, she can't do it. Who else can I ask? They forgotten about it four minutes later. Protect your time more fiercely than you do the feelings of others. It is the right equation. Trust me, ( Time 0:19:07 ) Note: This is how you say \u201cno\u201d objectively So the core idea of digital minimalism is that technology is best when you deploy it carefully to amplify things. You really care about that if you instead approach technology without this care and just say, Hey, that could be interesting. That seems whatever. Why don't I just try this? That it has the potential of really having an outsized influence on your time and attention. So if you use technology very intentionally, you can get huge value out of it. If you're casual about it, it can actually make your life much worse. When has this lesson bid? More clear than during the Cove in 19 Pandemic Right? There are certain uses for technology in this pandemic that are very intentional and are incredible value producing right, the ability to zoom with family members and friends that know what's going on in your community to know. Hey, on the list. Serve. We just happen to be early in the pandemic. There's a neighbor down the street. They're worried they're sick. They had been traveling to someone have one of those oxygen meters you can put on your finger because their doctor says they need one of their hard to get right now. You know what? Yeah, someone had him. They got it over to him, right? This type of intentional use of technology to amplify the things that really matter like connection to our friends and to our community shows the power of technology. On the other hand, has there ever been a time where the attention economy has reached mawr psychological damage than during this pandemic? If you're one of the people or no one of the people, that's just glued online news, and it's just so relentlessly dire that it just Fritz is out. Your brain makes you despair. You're doing genuflection of the spare every morning to your CNN dot com feed or Social media. ( Time 0:28:48 ) Note: Use technology wisely. Even social media How do we still find ways to carve out meaningful deep work? Mike, you need more structure for how you communicate with your clients. Ah, lot of people in client facing services think that what their clients want is accessibility. It's not quite true. Clients want clarity, clarity Trump's accessibility if they know how to reach you and are sure that they're gonna get a timely response, the answer does not have to be. They can reach you at any moment. So if you have systems in place for here is how we check in on things. Here's how you ask questions. Here we make. We make sure you have what you need. You don't need to be accessible all the ( Time 0:32:03 ) Note: Set expectations on how people need to reach you and then deliver so they know that\u2019s how to reach you. Say what you mean and deliver only then will you be able control your time","title":"My New Task System, Deep Work With Kids, and Finding Purpose in Distracted Times | DEEP QUESTIONS"},{"location":"Highlights/Readwise/Podcasts/My%20New%20Task%20System%2C%20Deep%20Work%20With%20Kids%2C%20and%20Finding%20Purpose%20in%20Distracted%20Times%20%20DEEP%20QUESTIONS/#my-new-task-system-deep-work-with-kids-and-finding-purpose-in-distracted-times-deep-questions","text":"","title":"My New Task System, Deep Work With Kids, and Finding Purpose in Distracted Times | DEEP QUESTIONS"},{"location":"Highlights/Readwise/Podcasts/My%20New%20Task%20System%2C%20Deep%20Work%20With%20Kids%2C%20and%20Finding%20Purpose%20in%20Distracted%20Times%20%20DEEP%20QUESTIONS/#metadata","text":"Author: [[Deep Questions with Cal Newport]] Full Title: My New Task System, Deep Work With Kids, and Finding Purpose in Distracted Times | DEEP QUESTIONS Category: #Type/Highlights/Podcast URL: https://www.airr.io/episode/5ee6d7109070069bd377b8f4","title":"Metadata"},{"location":"Highlights/Readwise/Podcasts/My%20New%20Task%20System%2C%20Deep%20Work%20With%20Kids%2C%20and%20Finding%20Purpose%20in%20Distracted%20Times%20%20DEEP%20QUESTIONS/#highlights","text":"is caused by too many days in a row of high stress. In the work context, Stress is almost always created by not having enough time to get things done. It's deadline driven, so you have a report that you promised by tomorrow, and you don't have what you need to get it done. Or you have a book manuscript due on Monday, and you still have 30,000 words to go. That's what gets that stress reaction going. You get that stress reaction going enough, your body's gonna burn out. So how do you do lots of things without burning out? You do him in a way that avoids the stress reaction that means you spread it out. You give yourself more enough time. You don't do too many things in parallel. Maybe you finish one project before doing the next, but you make steady progress every day. Work, work, work, work, work I always used to tell the students I gave advice to writing. A paper is not stressful. Writing a paper when it's due in 12 hours is so if you are working Ah lot, but very rarely under time pressure or very rarely putting too much on your plate to actually get done when it needs to get done, you're not gonna be stressed out. So you just repeat that formula day after day, week after week in a lock. It's done right. So I'm ( Time 0:00:34 ) Note: What Cal is really saying here is that someone\u2019s not prioritizing effectively. Stress is the downstream impact of a lack of Ruth is probably tired position and being productive with your time. Be more productive and prioritize effectively and you\u2019re reduce burn out since you won\u2019t be stressed. did it might. My inbox was going to kill me. You cannot cannot run such a complex system with so many different types of demands. Ongoing conversations, ambiguous request information to be learned. This cannot execute as just messages in a single overfilled, non differentiated general purpose in box that was never gonna work. ( Time 0:14:33 ) Note: You have to find a system and tool that works for you - Trello is one example All of the information related to that builds up on the digital card, so there's no searching around to get the various pieces. This structuring makes a big difference. Cannot emphasize enough how hard is it is to do almost any nontrivial role when all of the information about that role exist in some combination of your head ( Time 0:16:27 ) Note: Getting structure and context into one place and administrators at colleges. They're just overburdened and just trying to get stuff off their plate. They're not over sweating it. If you say no, if you want a strategy to make that easier, used a quota strategy where you say, Well, look, I have a quota for how many committees I could do per semester have a quota for how many peer reviews I could do a semester. I have these quotas I set up to make sure that I still have enough time left to do the work I need to get tenure. And you know what? I've already hit my quota on that for the semester, some unable to say yes to this particular request. This method works really well because, man, it is hard to push back on that. It is very hard to say, I don't care about your quota. I would rather you do this for me, then actually get the work you need to do for 10 year. No one is going to say that it works like a charm. You lose this ability once you get 10 year, I can tell you that from the other side of this equation, but that's a good way to do it. But Caroline really just say no. Say no more often. People are not over sweating what Caroline did yesterday, they said, Okay, she can't do it. Who else can I ask? They forgotten about it four minutes later. Protect your time more fiercely than you do the feelings of others. It is the right equation. Trust me, ( Time 0:19:07 ) Note: This is how you say \u201cno\u201d objectively So the core idea of digital minimalism is that technology is best when you deploy it carefully to amplify things. You really care about that if you instead approach technology without this care and just say, Hey, that could be interesting. That seems whatever. Why don't I just try this? That it has the potential of really having an outsized influence on your time and attention. So if you use technology very intentionally, you can get huge value out of it. If you're casual about it, it can actually make your life much worse. When has this lesson bid? More clear than during the Cove in 19 Pandemic Right? There are certain uses for technology in this pandemic that are very intentional and are incredible value producing right, the ability to zoom with family members and friends that know what's going on in your community to know. Hey, on the list. Serve. We just happen to be early in the pandemic. There's a neighbor down the street. They're worried they're sick. They had been traveling to someone have one of those oxygen meters you can put on your finger because their doctor says they need one of their hard to get right now. You know what? Yeah, someone had him. They got it over to him, right? This type of intentional use of technology to amplify the things that really matter like connection to our friends and to our community shows the power of technology. On the other hand, has there ever been a time where the attention economy has reached mawr psychological damage than during this pandemic? If you're one of the people or no one of the people, that's just glued online news, and it's just so relentlessly dire that it just Fritz is out. Your brain makes you despair. You're doing genuflection of the spare every morning to your CNN dot com feed or Social media. ( Time 0:28:48 ) Note: Use technology wisely. Even social media How do we still find ways to carve out meaningful deep work? Mike, you need more structure for how you communicate with your clients. Ah, lot of people in client facing services think that what their clients want is accessibility. It's not quite true. Clients want clarity, clarity Trump's accessibility if they know how to reach you and are sure that they're gonna get a timely response, the answer does not have to be. They can reach you at any moment. So if you have systems in place for here is how we check in on things. Here's how you ask questions. Here we make. We make sure you have what you need. You don't need to be accessible all the ( Time 0:32:03 ) Note: Set expectations on how people need to reach you and then deliver so they know that\u2019s how to reach you. Say what you mean and deliver only then will you be able control your time","title":"Highlights"},{"location":"Highlights/Readwise/Podcasts/Personal%20Knowledge%20Management%20Reprised/","text":"Personal Knowledge Management Reprised \u00b6 Metadata \u00b6 Author: [[Teaching in Higher Ed]] Full Title: Personal Knowledge Management Reprised Category: #Type/Highlights/Podcast URL: https://www.airr.io/episode/5fd21fa7c5e8436a9eda66d3 Highlights \u00b6 AirrQuote ( Time 0:00:00 ) AirrQuote ( Time 0:04:00 )","title":"Personal Knowledge Management Reprised"},{"location":"Highlights/Readwise/Podcasts/Personal%20Knowledge%20Management%20Reprised/#personal-knowledge-management-reprised","text":"","title":"Personal Knowledge Management Reprised"},{"location":"Highlights/Readwise/Podcasts/Personal%20Knowledge%20Management%20Reprised/#metadata","text":"Author: [[Teaching in Higher Ed]] Full Title: Personal Knowledge Management Reprised Category: #Type/Highlights/Podcast URL: https://www.airr.io/episode/5fd21fa7c5e8436a9eda66d3","title":"Metadata"},{"location":"Highlights/Readwise/Podcasts/Personal%20Knowledge%20Management%20Reprised/#highlights","text":"AirrQuote ( Time 0:00:00 ) AirrQuote ( Time 0:04:00 )","title":"Highlights"},{"location":"Highlights/Readwise/Podcasts/Projects%20Lists%20-%20November%202019/","text":"Projects Lists - November 2019 \u00b6 Metadata \u00b6 Author: [[GTD|Connect Members-Only Podcasts]] Full Title: Projects Lists - November 2019 Category: #Type/Highlights/Podcast URL: https://www.airr.io/episode/60177110dd6600f5640c1865 Highlights \u00b6 AirrQuote ( Time 0:00:00 ) AirrQuote ( Time 0:00:00 )","title":"Projects Lists - November 2019"},{"location":"Highlights/Readwise/Podcasts/Projects%20Lists%20-%20November%202019/#projects-lists-november-2019","text":"","title":"Projects Lists - November 2019"},{"location":"Highlights/Readwise/Podcasts/Projects%20Lists%20-%20November%202019/#metadata","text":"Author: [[GTD|Connect Members-Only Podcasts]] Full Title: Projects Lists - November 2019 Category: #Type/Highlights/Podcast URL: https://www.airr.io/episode/60177110dd6600f5640c1865","title":"Metadata"},{"location":"Highlights/Readwise/Podcasts/Projects%20Lists%20-%20November%202019/#highlights","text":"AirrQuote ( Time 0:00:00 ) AirrQuote ( Time 0:00:00 )","title":"Highlights"},{"location":"Highlights/Readwise/Podcasts/SYSTEMS%20THINKING%20What%20Is%20a%20System/","text":"SYSTEMS THINKING: What Is a System? \u00b6 Metadata \u00b6 Author: [[Systems Thinking]] Full Title: SYSTEMS THINKING: What Is a System? Category: #Type/Highlights/Podcast URL: https://www.airr.io/episode/5d1d03cb5cae25de51e2096c Highlights \u00b6 AirrQuote ( Time 0:09:28 ) Note: Systems thinking questions to ask your problem","title":"SYSTEMS THINKING: What Is a System?"},{"location":"Highlights/Readwise/Podcasts/SYSTEMS%20THINKING%20What%20Is%20a%20System/#systems-thinking-what-is-a-system","text":"","title":"SYSTEMS THINKING: What Is a System?"},{"location":"Highlights/Readwise/Podcasts/SYSTEMS%20THINKING%20What%20Is%20a%20System/#metadata","text":"Author: [[Systems Thinking]] Full Title: SYSTEMS THINKING: What Is a System? Category: #Type/Highlights/Podcast URL: https://www.airr.io/episode/5d1d03cb5cae25de51e2096c","title":"Metadata"},{"location":"Highlights/Readwise/Podcasts/SYSTEMS%20THINKING%20What%20Is%20a%20System/#highlights","text":"AirrQuote ( Time 0:09:28 ) Note: Systems thinking questions to ask your problem","title":"Highlights"},{"location":"Highlights/Readwise/Podcasts/Stop%20Living%20on%20Autopilot%20and%20Take%20Responsibility%20for%20Your%20Life/","text":"Stop Living on Autopilot and Take Responsibility for Your Life \u00b6 Metadata \u00b6 Author: [[The Art of Manliness]] Full Title: Stop Living on Autopilot and Take Responsibility for Your Life Category: #Type/Highlights/Podcast URL: https://www.airr.io/episode/6005c79683ecdb50f8bb8426 Highlights \u00b6 Speaker 0: great. But if you didn't work out the 29 Pride days prior to that, you know it gives you a good idea of where you are. I just think that seven days is too short. I like to think about it. As you know why. I remember I first learned about wine and I took a class, and someone was explaining why you smell the cork of wine before you drink it and you smell it to make sure the bottle is still good to drink and that the wine hasn't spoiled in the last 30 days. Metric gives you an idea to see if anything has spoiled in your life and that question of when it relates to our work like it. Based on the last 30 ( Time 0:19:35 ) Note: Think about using this in my weekly reflection questions","title":"Stop Living on Autopilot and Take Responsibility for Your Life"},{"location":"Highlights/Readwise/Podcasts/Stop%20Living%20on%20Autopilot%20and%20Take%20Responsibility%20for%20Your%20Life/#stop-living-on-autopilot-and-take-responsibility-for-your-life","text":"","title":"Stop Living on Autopilot and Take Responsibility for Your Life"},{"location":"Highlights/Readwise/Podcasts/Stop%20Living%20on%20Autopilot%20and%20Take%20Responsibility%20for%20Your%20Life/#metadata","text":"Author: [[The Art of Manliness]] Full Title: Stop Living on Autopilot and Take Responsibility for Your Life Category: #Type/Highlights/Podcast URL: https://www.airr.io/episode/6005c79683ecdb50f8bb8426","title":"Metadata"},{"location":"Highlights/Readwise/Podcasts/Stop%20Living%20on%20Autopilot%20and%20Take%20Responsibility%20for%20Your%20Life/#highlights","text":"Speaker 0: great. But if you didn't work out the 29 Pride days prior to that, you know it gives you a good idea of where you are. I just think that seven days is too short. I like to think about it. As you know why. I remember I first learned about wine and I took a class, and someone was explaining why you smell the cork of wine before you drink it and you smell it to make sure the bottle is still good to drink and that the wine hasn't spoiled in the last 30 days. Metric gives you an idea to see if anything has spoiled in your life and that question of when it relates to our work like it. Based on the last 30 ( Time 0:19:35 ) Note: Think about using this in my weekly reflection questions","title":"Highlights"},{"location":"Highlights/Readwise/Podcasts/Student%20Shutdown%20Rituals%2C%20Optimal%20Deep-To-Shallow%20Ratios%2C%20and%20the%20%2420%20Million%20Question%20%20DEEP%20QUESTIONS/","text":"Student Shutdown Rituals, Optimal Deep-To-Shallow Ratios, and the $20 Million Question | DEEP QUESTIONS \u00b6 Metadata \u00b6 Author: [[Deep Questions with Cal Newport]] Full Title: Student Shutdown Rituals, Optimal Deep-To-Shallow Ratios, and the $20 Million Question | DEEP QUESTIONS Category: #Type/Highlights/Podcast URL: https://www.airr.io/episode/5f55660fd5c7dd4ffa2bd6d7 Highlights \u00b6 Speaker 0: And then you say Okay, how do I do? A little bit better next time. Next time you're gonna write a bad paper. But it could be slightly less bad. You try as hard as you can. You push yourself. You're deliberately practicing. You wanted to get accepted at the best place. You Can you take the review seriously? You take the feedback seriously, you do the best you can. The next paper is a little bit less bad. The next paper is a little bit less bad than that. At some point, you look up and say Huh? This paper that was a little bit less bad than the last one is actually pretty good. And then after a while you're like, Yeah, I write good papers. Keep pushing yourself better venues, more citations, better topics and you go from Hey, I write good papers to I write really good paper. So that's how you get there. You start by writing bad papers, and you get better each time. ( Time 0:15:29 ) Note: Writing good papers","title":"Student Shutdown Rituals, Optimal Deep-To-Shallow Ratios, and the $20 Million Question | DEEP QUESTIONS"},{"location":"Highlights/Readwise/Podcasts/Student%20Shutdown%20Rituals%2C%20Optimal%20Deep-To-Shallow%20Ratios%2C%20and%20the%20%2420%20Million%20Question%20%20DEEP%20QUESTIONS/#student-shutdown-rituals-optimal-deep-to-shallow-ratios-and-the-20-million-question-deep-questions","text":"","title":"Student Shutdown Rituals, Optimal Deep-To-Shallow Ratios, and the $20 Million Question | DEEP QUESTIONS"},{"location":"Highlights/Readwise/Podcasts/Student%20Shutdown%20Rituals%2C%20Optimal%20Deep-To-Shallow%20Ratios%2C%20and%20the%20%2420%20Million%20Question%20%20DEEP%20QUESTIONS/#metadata","text":"Author: [[Deep Questions with Cal Newport]] Full Title: Student Shutdown Rituals, Optimal Deep-To-Shallow Ratios, and the $20 Million Question | DEEP QUESTIONS Category: #Type/Highlights/Podcast URL: https://www.airr.io/episode/5f55660fd5c7dd4ffa2bd6d7","title":"Metadata"},{"location":"Highlights/Readwise/Podcasts/Student%20Shutdown%20Rituals%2C%20Optimal%20Deep-To-Shallow%20Ratios%2C%20and%20the%20%2420%20Million%20Question%20%20DEEP%20QUESTIONS/#highlights","text":"Speaker 0: And then you say Okay, how do I do? A little bit better next time. Next time you're gonna write a bad paper. But it could be slightly less bad. You try as hard as you can. You push yourself. You're deliberately practicing. You wanted to get accepted at the best place. You Can you take the review seriously? You take the feedback seriously, you do the best you can. The next paper is a little bit less bad. The next paper is a little bit less bad than that. At some point, you look up and say Huh? This paper that was a little bit less bad than the last one is actually pretty good. And then after a while you're like, Yeah, I write good papers. Keep pushing yourself better venues, more citations, better topics and you go from Hey, I write good papers to I write really good paper. So that's how you get there. You start by writing bad papers, and you get better each time. ( Time 0:15:29 ) Note: Writing good papers","title":"Highlights"},{"location":"Highlights/Readwise/Podcasts/Tackling%20Procrastination%2C%20Building%20a%20Productivity%20System%20From%20Scratch%2C%20and%20the%20Intellectual%20Shallowness%20of%20Social%20Media%20%20DEEP%20QUESTIONS-2/","text":"Tackling Procrastination, Building a Productivity System From Scratch, and the Intellectual Shallowness of Social Media | DEEP QUESTIONS \u00b6 Metadata \u00b6 Author: [[Deep Questions with Cal Newport]] Full Title: Tackling Procrastination, Building a Productivity System From Scratch, and the Intellectual Shallowness of Social Media | DEEP QUESTIONS Category: #Type/Highlights/Podcast URL: https://www.airr.io/episode/5eef9121c7fd2b01c986b079 Highlights \u00b6 I have four points. One figure out what matters. Focus on the thing that matters. Try to minimize the time you spend on everything else, too, when working on the things that matters to the degree that it's possible. Do so in a state of depth. Unbroken undistracted concentration produces more from your brain than any other cognitive state. 0.3 deliberately trained these skills like a musician or athlete or professional chess player. If you want to get better at a hard skill that's important. You have to practice. This means you have to do work designed to stretch you passed where you're comfortable. If possible, get feedback to help point you towards where you need work, where you're falling short. Where things are going well, deliberately practicing will expand your skills much faster than just trying to do something more and more and my fourth point. Use the career capital. These skills generate as ( Time 0:13:00 ) Note: Summary of the book - points you're starting from having absolutely no system in place? Right. So in other words, let's say you you're just realizing you need productivity in your life. How you build a productivity system from scratch. So, Mohammed, when it comes to productivity, and let me just be clear when I say productivity. Uhm, I'm talking about getting your arms around all the different stuff that you you have to do all of your different obligations so this could apply to your professional life. This could apply to your personal life. Any successful system must have three pillars. Capture, configure control. I'm sort of stretching the terms here so I could be a literate tive because I ( Time 0:25:57 ) Note: Three pillars of productivity systems - Capture, Configure, Control","title":"Tackling Procrastination, Building a Productivity System From Scratch, and the Intellectual Shallowness of Social Media | DEEP QUESTIONS"},{"location":"Highlights/Readwise/Podcasts/Tackling%20Procrastination%2C%20Building%20a%20Productivity%20System%20From%20Scratch%2C%20and%20the%20Intellectual%20Shallowness%20of%20Social%20Media%20%20DEEP%20QUESTIONS-2/#tackling-procrastination-building-a-productivity-system-from-scratch-and-the-intellectual-shallowness-of-social-media-deep-questions","text":"","title":"Tackling Procrastination, Building a Productivity System From Scratch, and the Intellectual Shallowness of Social Media | DEEP QUESTIONS"},{"location":"Highlights/Readwise/Podcasts/Tackling%20Procrastination%2C%20Building%20a%20Productivity%20System%20From%20Scratch%2C%20and%20the%20Intellectual%20Shallowness%20of%20Social%20Media%20%20DEEP%20QUESTIONS-2/#metadata","text":"Author: [[Deep Questions with Cal Newport]] Full Title: Tackling Procrastination, Building a Productivity System From Scratch, and the Intellectual Shallowness of Social Media | DEEP QUESTIONS Category: #Type/Highlights/Podcast URL: https://www.airr.io/episode/5eef9121c7fd2b01c986b079","title":"Metadata"},{"location":"Highlights/Readwise/Podcasts/Tackling%20Procrastination%2C%20Building%20a%20Productivity%20System%20From%20Scratch%2C%20and%20the%20Intellectual%20Shallowness%20of%20Social%20Media%20%20DEEP%20QUESTIONS-2/#highlights","text":"I have four points. One figure out what matters. Focus on the thing that matters. Try to minimize the time you spend on everything else, too, when working on the things that matters to the degree that it's possible. Do so in a state of depth. Unbroken undistracted concentration produces more from your brain than any other cognitive state. 0.3 deliberately trained these skills like a musician or athlete or professional chess player. If you want to get better at a hard skill that's important. You have to practice. This means you have to do work designed to stretch you passed where you're comfortable. If possible, get feedback to help point you towards where you need work, where you're falling short. Where things are going well, deliberately practicing will expand your skills much faster than just trying to do something more and more and my fourth point. Use the career capital. These skills generate as ( Time 0:13:00 ) Note: Summary of the book - points you're starting from having absolutely no system in place? Right. So in other words, let's say you you're just realizing you need productivity in your life. How you build a productivity system from scratch. So, Mohammed, when it comes to productivity, and let me just be clear when I say productivity. Uhm, I'm talking about getting your arms around all the different stuff that you you have to do all of your different obligations so this could apply to your professional life. This could apply to your personal life. Any successful system must have three pillars. Capture, configure control. I'm sort of stretching the terms here so I could be a literate tive because I ( Time 0:25:57 ) Note: Three pillars of productivity systems - Capture, Configure, Control","title":"Highlights"},{"location":"Highlights/Readwise/Podcasts/Tackling%20Procrastination%2C%20Building%20a%20Productivity%20System%20From%20Scratch%2C%20and%20the%20Intellectual%20Shallowness%20of%20Social%20Media%20%20DEEP%20QUESTIONS/","text":"Tackling Procrastination, Building a Productivity System From Scratch, and the Intellectual Shallowness of Social Media | DEEP QUESTIONS \u00b6 Metadata \u00b6 Author: [[Deep Questions with Cal Newport]] Full Title: Tackling Procrastination, Building a Productivity System From Scratch, and the Intellectual Shallowness of Social Media | DEEP QUESTIONS Category: #Type/Highlights/Podcast URL: https://www.buzzsprout.com/1121972/4250375-tackling-procrastination-building-a-productivity-system-from-scratch-and-the-intellectual-shallowness-of-social-media-deep-questions.mp3?blob_id=18580073 Highlights \u00b6 AirrQuote ( Time 0:25:57 ) Note: Three pillars of productivity systems - Capture, Configure, Control AirrQuote ( Time 0:25:57 ) Note: Three pillars of productivity systems - Capture, Configure, Control","title":"Tackling Procrastination, Building a Productivity System From Scratch, and the Intellectual Shallowness of Social Media | DEEP QUESTIONS"},{"location":"Highlights/Readwise/Podcasts/Tackling%20Procrastination%2C%20Building%20a%20Productivity%20System%20From%20Scratch%2C%20and%20the%20Intellectual%20Shallowness%20of%20Social%20Media%20%20DEEP%20QUESTIONS/#tackling-procrastination-building-a-productivity-system-from-scratch-and-the-intellectual-shallowness-of-social-media-deep-questions","text":"","title":"Tackling Procrastination, Building a Productivity System From Scratch, and the Intellectual Shallowness of Social Media | DEEP QUESTIONS"},{"location":"Highlights/Readwise/Podcasts/Tackling%20Procrastination%2C%20Building%20a%20Productivity%20System%20From%20Scratch%2C%20and%20the%20Intellectual%20Shallowness%20of%20Social%20Media%20%20DEEP%20QUESTIONS/#metadata","text":"Author: [[Deep Questions with Cal Newport]] Full Title: Tackling Procrastination, Building a Productivity System From Scratch, and the Intellectual Shallowness of Social Media | DEEP QUESTIONS Category: #Type/Highlights/Podcast URL: https://www.buzzsprout.com/1121972/4250375-tackling-procrastination-building-a-productivity-system-from-scratch-and-the-intellectual-shallowness-of-social-media-deep-questions.mp3?blob_id=18580073","title":"Metadata"},{"location":"Highlights/Readwise/Podcasts/Tackling%20Procrastination%2C%20Building%20a%20Productivity%20System%20From%20Scratch%2C%20and%20the%20Intellectual%20Shallowness%20of%20Social%20Media%20%20DEEP%20QUESTIONS/#highlights","text":"AirrQuote ( Time 0:25:57 ) Note: Three pillars of productivity systems - Capture, Configure, Control AirrQuote ( Time 0:25:57 ) Note: Three pillars of productivity systems - Capture, Configure, Control","title":"Highlights"},{"location":"Highlights/Readwise/Podcasts/This%20Is%20How%20We%20Change%20the%20World/","text":"This Is How We Change the World \u00b6 Metadata \u00b6 Author: [[The Mindset Mentor]] Full Title: This Is How We Change the World Category: #Type/Highlights/Podcast URL: https://www.airr.io/episode/60016bcbb457c03c15be5323 Highlights \u00b6 Speaker 0: Welcome to today's episode of the mindset Mentor Podcast. I'm your host Robbed Island if you have not yet done so, hit that subscribe button that you never miss another podcast episode. And if you want to receive motivational text messages for me directly to your cell phone texting right now. 15125809305 Once again. ( Time 0:00:00 )","title":"This Is How We Change the World"},{"location":"Highlights/Readwise/Podcasts/This%20Is%20How%20We%20Change%20the%20World/#this-is-how-we-change-the-world","text":"","title":"This Is How We Change the World"},{"location":"Highlights/Readwise/Podcasts/This%20Is%20How%20We%20Change%20the%20World/#metadata","text":"Author: [[The Mindset Mentor]] Full Title: This Is How We Change the World Category: #Type/Highlights/Podcast URL: https://www.airr.io/episode/60016bcbb457c03c15be5323","title":"Metadata"},{"location":"Highlights/Readwise/Podcasts/This%20Is%20How%20We%20Change%20the%20World/#highlights","text":"Speaker 0: Welcome to today's episode of the mindset Mentor Podcast. I'm your host Robbed Island if you have not yet done so, hit that subscribe button that you never miss another podcast episode. And if you want to receive motivational text messages for me directly to your cell phone texting right now. 15125809305 Once again. ( Time 0:00:00 )","title":"Highlights"},{"location":"Highlights/Readwise/Podcasts/Where%20I%20Work%2C%20Convincing%20Students%20to%20Disconnect%2C%20and%20Applying%20Deep%20Work%20to%20Deep%20Social%20Problems%20%20DEEP%20QUESTIONS/","text":"Where I Work, Convincing Students to Disconnect, and Applying Deep Work to Deep Social Problems | DEEP QUESTIONS \u00b6 Metadata \u00b6 Author: [[Deep Questions with Cal Newport]] Full Title: Where I Work, Convincing Students to Disconnect, and Applying Deep Work to Deep Social Problems | DEEP QUESTIONS Category: #Type/Highlights/Podcast URL: https://www.airr.io/episode/5f1f353ebd1db96b415f8bd4 Highlights \u00b6 Speaker 1: of what you're trying to do and feel less guilty about not being able to maybe be as fast to get on with the sort of shallow stuff that most people spend most of their days with. Your basically a surgeon who's being demanded to also answer 100 emails a day. It's almost untenable. So you know, you have my empathy and respect there. All right, Tim asks. I want to get out of the digital marketing industry and move to a field that rewards depth. Such a psychology, research or writing or podcasting, etcetera. Do you think going back and getting a master's in psychology is the best route, or is there a different route you would suggest? Tim? Randomly Getting master's degrees is not an effective career capital acquisition strategy. I think I I feel like I say this maybe every ( Time 0:16:44 ) Note: About master Speaker 1: of what you're trying to do and feel less guilty about not being able to maybe be as fast to get on with the sort of shallow stuff that most people spend most of their days with. Your basically a surgeon who's being demanded to also answer 100 emails a day. It's almost untenable. So you know, you have my empathy and respect there. All right, Tim asks. I want to get out of the digital marketing industry and move to a field that rewards depth. Such a psychology, research or writing or podcasting, etcetera. Do you think going back and getting a master's in psychology is the best route, or is there a different route you would suggest? Tim? Randomly Getting master's degrees is not an effective career capital acquisition strategy. I think I I feel like I say this maybe every ( Time 0:16:44 ) Note: About master Speaker 1: of what you're trying to do and feel less guilty about not being able to maybe be as fast to get on with the sort of shallow stuff that most people spend most of their days with. Your basically a surgeon who's being demanded to also answer 100 emails a day. It's almost untenable. So you know, you have my empathy and respect there. All right, Tim asks. I want to get out of the digital marketing industry and move to a field that rewards depth. Such a psychology, research or writing or podcasting, etcetera. Do you think going back and getting a master's in psychology is the best route, or is there a different route you would suggest? Tim? Randomly Getting master's degrees is not an effective career capital acquisition strategy. I think I I feel like I say this maybe every ( Time 0:16:44 ) Note: About master","title":"Where I Work, Convincing Students to Disconnect, and Applying Deep Work to Deep Social Problems | DEEP QUESTIONS"},{"location":"Highlights/Readwise/Podcasts/Where%20I%20Work%2C%20Convincing%20Students%20to%20Disconnect%2C%20and%20Applying%20Deep%20Work%20to%20Deep%20Social%20Problems%20%20DEEP%20QUESTIONS/#where-i-work-convincing-students-to-disconnect-and-applying-deep-work-to-deep-social-problems-deep-questions","text":"","title":"Where I Work, Convincing Students to Disconnect, and Applying Deep Work to Deep Social Problems | DEEP QUESTIONS"},{"location":"Highlights/Readwise/Podcasts/Where%20I%20Work%2C%20Convincing%20Students%20to%20Disconnect%2C%20and%20Applying%20Deep%20Work%20to%20Deep%20Social%20Problems%20%20DEEP%20QUESTIONS/#metadata","text":"Author: [[Deep Questions with Cal Newport]] Full Title: Where I Work, Convincing Students to Disconnect, and Applying Deep Work to Deep Social Problems | DEEP QUESTIONS Category: #Type/Highlights/Podcast URL: https://www.airr.io/episode/5f1f353ebd1db96b415f8bd4","title":"Metadata"},{"location":"Highlights/Readwise/Podcasts/Where%20I%20Work%2C%20Convincing%20Students%20to%20Disconnect%2C%20and%20Applying%20Deep%20Work%20to%20Deep%20Social%20Problems%20%20DEEP%20QUESTIONS/#highlights","text":"Speaker 1: of what you're trying to do and feel less guilty about not being able to maybe be as fast to get on with the sort of shallow stuff that most people spend most of their days with. Your basically a surgeon who's being demanded to also answer 100 emails a day. It's almost untenable. So you know, you have my empathy and respect there. All right, Tim asks. I want to get out of the digital marketing industry and move to a field that rewards depth. Such a psychology, research or writing or podcasting, etcetera. Do you think going back and getting a master's in psychology is the best route, or is there a different route you would suggest? Tim? Randomly Getting master's degrees is not an effective career capital acquisition strategy. I think I I feel like I say this maybe every ( Time 0:16:44 ) Note: About master Speaker 1: of what you're trying to do and feel less guilty about not being able to maybe be as fast to get on with the sort of shallow stuff that most people spend most of their days with. Your basically a surgeon who's being demanded to also answer 100 emails a day. It's almost untenable. So you know, you have my empathy and respect there. All right, Tim asks. I want to get out of the digital marketing industry and move to a field that rewards depth. Such a psychology, research or writing or podcasting, etcetera. Do you think going back and getting a master's in psychology is the best route, or is there a different route you would suggest? Tim? Randomly Getting master's degrees is not an effective career capital acquisition strategy. I think I I feel like I say this maybe every ( Time 0:16:44 ) Note: About master Speaker 1: of what you're trying to do and feel less guilty about not being able to maybe be as fast to get on with the sort of shallow stuff that most people spend most of their days with. Your basically a surgeon who's being demanded to also answer 100 emails a day. It's almost untenable. So you know, you have my empathy and respect there. All right, Tim asks. I want to get out of the digital marketing industry and move to a field that rewards depth. Such a psychology, research or writing or podcasting, etcetera. Do you think going back and getting a master's in psychology is the best route, or is there a different route you would suggest? Tim? Randomly Getting master's degrees is not an effective career capital acquisition strategy. I think I I feel like I say this maybe every ( Time 0:16:44 ) Note: About master","title":"Highlights"},{"location":"Inbox/Microsoft%20Developer%20Docs/","text":"Category/Development \u00b6 Category/Development/Cloud \u00b6 Category/Technology/Windows \u00b6 Status/NotStarted \u00b6","title":"Microsoft Developer Docs"},{"location":"Inbox/Microsoft%20Developer%20Docs/#categorydevelopment","text":"","title":"Category/Development"},{"location":"Inbox/Microsoft%20Developer%20Docs/#categorydevelopmentcloud","text":"","title":"Category/Development/Cloud"},{"location":"Inbox/Microsoft%20Developer%20Docs/#categorytechnologywindows","text":"","title":"Category/Technology/Windows"},{"location":"Inbox/Microsoft%20Developer%20Docs/#statusnotstarted","text":"","title":"Status/NotStarted"},{"location":"Inbox/The%20Knowledge%20Cycle/","text":"Category/PKM \u00b6 Status/NotStarted \u00b6","title":"The Knowledge Cycle"},{"location":"Inbox/The%20Knowledge%20Cycle/#categorypkm","text":"","title":"Category/PKM"},{"location":"Inbox/The%20Knowledge%20Cycle/#statusnotstarted","text":"","title":"Status/NotStarted"},{"location":"Inbox/Tools%20I%20Use/","text":"Category/Development/Tools \u00b6 Type/List \u00b6 Category/Technology \u00b6 Status/NotStarted \u00b6","title":"Tools I Use"},{"location":"Inbox/Tools%20I%20Use/#categorydevelopmenttools","text":"","title":"Category/Development/Tools"},{"location":"Inbox/Tools%20I%20Use/#typelist","text":"","title":"Type/List"},{"location":"Inbox/Tools%20I%20Use/#categorytechnology","text":"","title":"Category/Technology"},{"location":"Inbox/Tools%20I%20Use/#statusnotstarted","text":"","title":"Status/NotStarted"},{"location":"Literary%20Notes/","text":"Type/Vault/Readme \u00b6 Literary Notes \u00b6 path:\"Literary Notes\" -path:\"Literary Notes/README\"","title":"Index"},{"location":"Literary%20Notes/#typevaultreadme","text":"","title":"Type/Vault/Readme"},{"location":"Literary%20Notes/#literary-notes","text":"path:\"Literary Notes\" -path:\"Literary Notes/README\"","title":"Literary Notes"},{"location":"Literary%20Notes/Actuarial%20Claims%20Data/","text":"Actuarial Claims Data \u00b6 Simulation Script (Transactional) \u00b6 Source: https://gist.github.com/jimbrig/30262ae72e1ba20d0235fdedcc435150 Carbon: https://carbon.now.sh/MDUZMTZI1ERkJTzBamSt Imagur: https://imgur.com/k4Y16Zp Code \u00b6 # source: https://gist.github.com/jimbrig/30262ae72e1ba20d0235fdedcc435150 # simulate transactions on insurance claims # transactions will include claim closures, payments and changes in case reserves # this is all completely made up and does not accurately resemble actual claims library(lubridate) library(dplyr) library(randomNames) # number of claims n_claims <- 1000 beg_date <- as.Date(\"2012-01-01\") end_date <- Sys.Date()#as.Date(\"2019-02-17\") accident_range <- as.numeric(end_date - beg_date) set.seed(1234) accident_date <- sample(0:accident_range, size = n_claims, replace = TRUE) payment_fun <- function(n) rlnorm(n, 7.5, 1.5) claims <- tibble::tibble( claim_num = paste0(\"claim-\", 1:n_claims), accident_date = beg_date + lubridate::days(accident_date), state = sample(c(\"TX\", \"CA\", \"GA\", \"FL\"), size = n_claims, replace = TRUE), claimant = randomNames::randomNames(n_claims), report_date = rnbinom(n_claims, 5, .25), # 0 if claim closed when reported status = rbinom(n_claims, 1, 0.96), # initial payment amount payment = payment_fun(n_claims)) %>% dplyr::mutate(report_date = accident_date + report_date, # set payment to zero if closed when reported payment = ifelse(status == 0, 0, payment), case = payment * runif(n_claims, 0.25, 8.0), transaction_date = report_date) %>% dplyr::arrange(accident_date) ## simulate transaction dates # simulate number of transactions for each claim n_trans <- rnbinom(n_claims, 3, 0.25) # simulate lag to each transaction trans_lag <- lapply(n_trans, function(x) rnbinom(x, 7, 0.1)) trans_lag <- lapply(trans_lag, function(x) { if(length(x) == 0) 0 else x }) for (i in seq_len(n_claims)) { trans_lag[[i]] <- data_frame( \"trans_lag\" = trans_lag[[i]], \"claim_num\" = paste0(\"claim-\", i) ) } trans_tbl <- bind_rows(trans_lag) trans_tbl <- trans_tbl %>% group_by(claim_num) %>% # switch from incremental to cumulative lag mutate(trans_lag = cumsum(trans_lag)) %>% ungroup() # separate all zero claims from the claims that have payments zero_claims <- dplyr::filter(claims, status == 0) first_trans <- dplyr::filter(claims, status == 1) subsequent_trans <- left_join(trans_tbl, first_trans, by = \"claim_num\") %>% filter(!is.na(accident_date)) n_trans <- nrow(subsequent_trans) # simulate subsequent transaction payments subsequent_trans <- subsequent_trans %>% mutate(payment = payment_fun(n_trans), case = pmax(case * rnorm(n_trans, 1.5, 0.1) - payment, 500), transaction_date = report_date + trans_lag) %>% select(-trans_lag) trans <- bind_rows(zero_claims, first_trans, subsequent_trans) %>% arrange(transaction_date) # add in a transaction number trans$trans_num <- 1:nrow(trans) # set final trans status to closed and case to 0 trans <- trans %>% arrange(trans_num) %>% group_by(claim_num) %>% mutate(final_trans = ifelse(trans_num == max(trans_num), TRUE, FALSE), status = ifelse(final_trans, 0, 1), case = ifelse(final_trans, 0, case), status = ifelse(status == 0, \"Closed\", \"Open\"), paid = round(cumsum(payment), 0), case = round(case, 0), payment = round(payment, 0)) %>% select(-final_trans) %>% arrange(accident_date) %>% ungroup() saveRDS(trans, file = \"trans.RDS\") Related Work \u00b6 Simulation Machine by KasaAI Rsvr by KasaAI + the Google Design Doc Resources \u00b6 Organizations \u00b6 Casualty Actuarial Society on GitHub KasaAI GitHub Organization R Packages \u00b6 [[R Package - actuar]] [[R Package - ChainLadder]] R Package - insurancerating R Package - conjuror Other \u00b6 anhdanggit/insurance-econometrics: Estimate the frequency and severity of claims to compute prior and posterior premiums. The GLM method is used with Poisson, Negative Binomial, Gamma, and Log-Norm Distribution.","title":"Actuarial Claims Data"},{"location":"Literary%20Notes/Actuarial%20Claims%20Data/#actuarial-claims-data","text":"","title":"Actuarial Claims Data"},{"location":"Literary%20Notes/Actuarial%20Claims%20Data/#simulation-script-transactional","text":"Source: https://gist.github.com/jimbrig/30262ae72e1ba20d0235fdedcc435150 Carbon: https://carbon.now.sh/MDUZMTZI1ERkJTzBamSt Imagur: https://imgur.com/k4Y16Zp","title":"Simulation Script (Transactional)"},{"location":"Literary%20Notes/Actuarial%20Claims%20Data/#code","text":"# source: https://gist.github.com/jimbrig/30262ae72e1ba20d0235fdedcc435150 # simulate transactions on insurance claims # transactions will include claim closures, payments and changes in case reserves # this is all completely made up and does not accurately resemble actual claims library(lubridate) library(dplyr) library(randomNames) # number of claims n_claims <- 1000 beg_date <- as.Date(\"2012-01-01\") end_date <- Sys.Date()#as.Date(\"2019-02-17\") accident_range <- as.numeric(end_date - beg_date) set.seed(1234) accident_date <- sample(0:accident_range, size = n_claims, replace = TRUE) payment_fun <- function(n) rlnorm(n, 7.5, 1.5) claims <- tibble::tibble( claim_num = paste0(\"claim-\", 1:n_claims), accident_date = beg_date + lubridate::days(accident_date), state = sample(c(\"TX\", \"CA\", \"GA\", \"FL\"), size = n_claims, replace = TRUE), claimant = randomNames::randomNames(n_claims), report_date = rnbinom(n_claims, 5, .25), # 0 if claim closed when reported status = rbinom(n_claims, 1, 0.96), # initial payment amount payment = payment_fun(n_claims)) %>% dplyr::mutate(report_date = accident_date + report_date, # set payment to zero if closed when reported payment = ifelse(status == 0, 0, payment), case = payment * runif(n_claims, 0.25, 8.0), transaction_date = report_date) %>% dplyr::arrange(accident_date) ## simulate transaction dates # simulate number of transactions for each claim n_trans <- rnbinom(n_claims, 3, 0.25) # simulate lag to each transaction trans_lag <- lapply(n_trans, function(x) rnbinom(x, 7, 0.1)) trans_lag <- lapply(trans_lag, function(x) { if(length(x) == 0) 0 else x }) for (i in seq_len(n_claims)) { trans_lag[[i]] <- data_frame( \"trans_lag\" = trans_lag[[i]], \"claim_num\" = paste0(\"claim-\", i) ) } trans_tbl <- bind_rows(trans_lag) trans_tbl <- trans_tbl %>% group_by(claim_num) %>% # switch from incremental to cumulative lag mutate(trans_lag = cumsum(trans_lag)) %>% ungroup() # separate all zero claims from the claims that have payments zero_claims <- dplyr::filter(claims, status == 0) first_trans <- dplyr::filter(claims, status == 1) subsequent_trans <- left_join(trans_tbl, first_trans, by = \"claim_num\") %>% filter(!is.na(accident_date)) n_trans <- nrow(subsequent_trans) # simulate subsequent transaction payments subsequent_trans <- subsequent_trans %>% mutate(payment = payment_fun(n_trans), case = pmax(case * rnorm(n_trans, 1.5, 0.1) - payment, 500), transaction_date = report_date + trans_lag) %>% select(-trans_lag) trans <- bind_rows(zero_claims, first_trans, subsequent_trans) %>% arrange(transaction_date) # add in a transaction number trans$trans_num <- 1:nrow(trans) # set final trans status to closed and case to 0 trans <- trans %>% arrange(trans_num) %>% group_by(claim_num) %>% mutate(final_trans = ifelse(trans_num == max(trans_num), TRUE, FALSE), status = ifelse(final_trans, 0, 1), case = ifelse(final_trans, 0, case), status = ifelse(status == 0, \"Closed\", \"Open\"), paid = round(cumsum(payment), 0), case = round(case, 0), payment = round(payment, 0)) %>% select(-final_trans) %>% arrange(accident_date) %>% ungroup() saveRDS(trans, file = \"trans.RDS\")","title":"Code"},{"location":"Literary%20Notes/Actuarial%20Claims%20Data/#related-work","text":"Simulation Machine by KasaAI Rsvr by KasaAI + the Google Design Doc","title":"Related Work"},{"location":"Literary%20Notes/Actuarial%20Claims%20Data/#resources","text":"","title":"Resources"},{"location":"Literary%20Notes/Actuarial%20Claims%20Data/#organizations","text":"Casualty Actuarial Society on GitHub KasaAI GitHub Organization","title":"Organizations"},{"location":"Literary%20Notes/Actuarial%20Claims%20Data/#r-packages","text":"[[R Package - actuar]] [[R Package - ChainLadder]] R Package - insurancerating R Package - conjuror","title":"R Packages"},{"location":"Literary%20Notes/Actuarial%20Claims%20Data/#other","text":"anhdanggit/insurance-econometrics: Estimate the frequency and severity of claims to compute prior and posterior premiums. The GLM method is used with Poisson, Negative Binomial, Gamma, and Log-Norm Distribution.","title":"Other"},{"location":"Literary%20Notes/Actuarial%20Data%20Science%20and%20Financial%20Modelling%20with%20Azure/","text":"Actuarial Data Science and Financial Modelling with Azure \u00b6 Source: Guide to Moving Actuarial Risk Analysis to Azure | Microsoft Docs Actuaries move to the cloud to get more time to review, evaluate, and validate results. When regulators audit insurers, the actuaries need to be able to explain their results. The move to the cloud gives access to the computing resources to run 20000 hours of analysis in 24-120 hours of clock time through the power of parallelization. To assist with this need for scale, many of the companies that create actuarial software provide solutions that allow calculations to run in Azure. Some of these solutions are built on technologies that run on premises and Azure like HPC Pack . Others are Azure native and use Azure Batch , Virtual Machine Scale Sets , or a custom scaling solution. This document explores how actuarial developers can use Azure, coupled with modeling packages, to analyze risk. It examines the following: Running larger models in less time, in Azure. Reporting on the results. Managing data retention. Whether you are servicing life, property and casualty, health, or other insurance, you need to create financial and risk models of your assets and liabilities to adjust your investments and premiums so that you stay solvent as an insurer. IFRS 17 reporting adds changes to the models the actuaries create, like calculating the contractual service margin (CSM), which change how insurers manage their profit through time. Running more in less time, in Azure \u00b6 You believe in the promise of the cloud: it can run your financial and risk models faster and easier. For many insurers, a back of the envelope calculation shows the problem: they need years, or even decades, of sequential time to run these calculations from start to finish. You need technology to solve the runtime problem. Your strategies are: Data preparation: Some data changes slowly. Once a policy or service contract is in force, claims move at a predictable pace. You can prepare the data needed for model runs as it arrives, eliminating a need to plan much time for data cleansing and preparation. You may also use clustering to create stand-ins for seriatim data through weighted representations. Fewer records usually results in reduced computation time. Parallelization: If you need to do the same analysis to two or more items, you may be able to perform the analysis simultaneously. [[Actuarial Science]] [[Cloud Computing]] Microsoft Azure [[Machine Learning]] - Azure Machine Learning","title":"Actuarial Data Science and Financial Modelling with Azure"},{"location":"Literary%20Notes/Actuarial%20Data%20Science%20and%20Financial%20Modelling%20with%20Azure/#actuarial-data-science-and-financial-modelling-with-azure","text":"Source: Guide to Moving Actuarial Risk Analysis to Azure | Microsoft Docs Actuaries move to the cloud to get more time to review, evaluate, and validate results. When regulators audit insurers, the actuaries need to be able to explain their results. The move to the cloud gives access to the computing resources to run 20000 hours of analysis in 24-120 hours of clock time through the power of parallelization. To assist with this need for scale, many of the companies that create actuarial software provide solutions that allow calculations to run in Azure. Some of these solutions are built on technologies that run on premises and Azure like HPC Pack . Others are Azure native and use Azure Batch , Virtual Machine Scale Sets , or a custom scaling solution. This document explores how actuarial developers can use Azure, coupled with modeling packages, to analyze risk. It examines the following: Running larger models in less time, in Azure. Reporting on the results. Managing data retention. Whether you are servicing life, property and casualty, health, or other insurance, you need to create financial and risk models of your assets and liabilities to adjust your investments and premiums so that you stay solvent as an insurer. IFRS 17 reporting adds changes to the models the actuaries create, like calculating the contractual service margin (CSM), which change how insurers manage their profit through time.","title":"Actuarial Data Science and Financial Modelling with Azure"},{"location":"Literary%20Notes/Actuarial%20Data%20Science%20and%20Financial%20Modelling%20with%20Azure/#running-more-in-less-time-in-azure","text":"You believe in the promise of the cloud: it can run your financial and risk models faster and easier. For many insurers, a back of the envelope calculation shows the problem: they need years, or even decades, of sequential time to run these calculations from start to finish. You need technology to solve the runtime problem. Your strategies are: Data preparation: Some data changes slowly. Once a policy or service contract is in force, claims move at a predictable pace. You can prepare the data needed for model runs as it arrives, eliminating a need to plan much time for data cleansing and preparation. You may also use clustering to create stand-ins for seriatim data through weighted representations. Fewer records usually results in reduced computation time. Parallelization: If you need to do the same analysis to two or more items, you may be able to perform the analysis simultaneously. [[Actuarial Science]] [[Cloud Computing]] Microsoft Azure [[Machine Learning]] - Azure Machine Learning","title":"Running more in less time, in Azure"},{"location":"Literary%20Notes/Azure%20App%20Service/","text":"Category/Cloud/Azure \u00b6 See also: Microsoft Azure Azure App Service \u00b6","title":"Azure App Service"},{"location":"Literary%20Notes/Azure%20App%20Service/#categorycloudazure","text":"See also: Microsoft Azure","title":"Category/Cloud/Azure"},{"location":"Literary%20Notes/Azure%20App%20Service/#azure-app-service","text":"","title":"Azure App Service"},{"location":"Literary%20Notes/Azure%20Arc/","text":"Category/Cloud/Azure \u00b6 See also: Microsoft Azure Azure Arc \u00b6","title":"Azure Arc"},{"location":"Literary%20Notes/Azure%20Arc/#categorycloudazure","text":"See also: Microsoft Azure","title":"Category/Cloud/Azure"},{"location":"Literary%20Notes/Azure%20Arc/#azure-arc","text":"","title":"Azure Arc"},{"location":"Literary%20Notes/Azure%20Compute/","text":"Category/Cloud/Azure \u00b6 See also: Microsoft Azure Azure Compute \u00b6","title":"Azure Compute"},{"location":"Literary%20Notes/Azure%20Compute/#categorycloudazure","text":"See also: Microsoft Azure","title":"Category/Cloud/Azure"},{"location":"Literary%20Notes/Azure%20Compute/#azure-compute","text":"","title":"Azure Compute"},{"location":"Literary%20Notes/Azure%20Data%20Lake/","text":"Category/Cloud/Azure \u00b6 See also: Microsoft Azure Azure Data Lake \u00b6","title":"Azure Data Lake"},{"location":"Literary%20Notes/Azure%20Data%20Lake/#categorycloudazure","text":"See also: Microsoft Azure","title":"Category/Cloud/Azure"},{"location":"Literary%20Notes/Azure%20Data%20Lake/#azure-data-lake","text":"","title":"Azure Data Lake"},{"location":"Literary%20Notes/Azure%20Data%20Studio/","text":"See also: Microsoft Azure Azure Data Studio \u00b6 Related: - [[SQL Server Management Studio]] (SSMS) - [[Visual Studio Code]] - Azure Machine Learning Contents \u00b6 What is Azure Data Studio Features SQL code editor with IntelliSense Smart SQL code snippets Customizable Server and Database Dashboards Connection management (server groups) Integrated Terminal Extensibility and extension authoring Feature comparison with SQL Server Management Studio (SSMS) Source Control Git support in Azure Data Studio Open an existing Git repository Working with Git repositories What is Azure Data Studio \u00b6 Azure Data Studio is a cross-platform database tool for data professionals using on-premises and cloud data platforms on Windows, macOS, and Linux. Azure Data Studio offers a modern editor experience with IntelliSense, code snippets, source control integration, and an integrated terminal. It's engineered with the data platform user in mind, with built-in charting of query result sets and customizable dashboards. Links: - Documentation - Download and Install Azure Data Studio - Source Code Features \u00b6 SQL code editor with IntelliSense \u00b6 Azure Data Studio offers a modern, keyboard-focused SQL coding experience that makes your everyday tasks easier with built-in features, such as multiple tab windows, a rich SQL editor, IntelliSense, keyword completion, code snippets, code navigation, and source control integration (Git). Run on-demand SQL queries, view and save results as text, JSON, or Excel. Edit data, organize your favorite database connections, and browse database objects in a familiar object browsing experience. To learn how to use the SQL editor, see Use the SQL editor to create database objects . Smart SQL code snippets \u00b6 SQL code snippets generate the proper SQL syntax to create databases, tables, views, stored procedures, users, logins, roles, and to update existing database objects. Use smart snippets to quickly create copies of your database for development or testing purposes, and to generate and execute CREATE and INSERT scripts. Azure Data Studio also provides functionality to create custom SQL code snippets. To learn more, see Create and use code snippets . Customizable Server and Database Dashboards \u00b6 Create rich customizable dashboards to monitor and quickly troubleshoot performance bottlenecks in your databases. To learn about insight widgets, and database (and server) dashboards, see Manage servers and databases with insight widgets . Connection management (server groups) \u00b6 Server groups provide a way to organize connection information for the servers and databases you work with. For details, see Server groups . Integrated Terminal \u00b6 Use your favorite command-line tools (for example, Bash, PowerShell, sqlcmd, bcp, and ssh) in the Integrated Terminal window right within the Azure Data Studio user interface. To learn about the integrated terminal, see Integrated terminal . Extensibility and extension authoring \u00b6 Enhance the Azure Data Studio experience by extending the functionality of the base installation. Azure Data Studio provides extensibility points for data management activities, and support for extension authoring. To learn about extensibility in Azure Data Studio, see Extensibility . To learn about authoring extensions, see Extension authoring . Feature comparison with SQL Server Management Studio (SSMS) \u00b6 Use Azure Data Studio if you: Are mostly editing or executing queries. Need the ability to quickly chart and visualize result sets. Can execute most administrative tasks via the integrated terminal using sqlcmd or PowerShell. Have minimal need for wizard experiences. Do not need to do deep administrative or platform related configuration. Need to run on macOS or Linux. Use SQL Server Management Studio if you: Are doing complex administrative or platform configuration. Are doing security management, including user management, vulnerability assessment, and configuration of security features. Need to make use of performance tuning advisors and dashboards. Use database diagrams and table designers. Need access to Registered Servers. Make use of live query stats or client statistics. Source Control \u00b6 Azure Data Studio supports Git for version/source control. Git support in Azure Data Studio \u00b6 Azure Data Studio ships with a Git source control manager (SCM), but you still need to install Git (version 2.0.0 or later) before these features are available. Open an existing Git repository \u00b6 Under the File menu, select Open Folder... Browse to the folder that contains your files tracked by git, and select Select Folder . Subfolders in your local repository are okay to select here. Working with Git repositories \u00b6 Azure Data Studio inherits its Git implementation from VS Code, but doesn't currently support additional SCM providers. For the details about working with Git after you open or initialize a repository, see Git support in VS Code . See also: Git documentation Related:","title":"Azure Data Studio"},{"location":"Literary%20Notes/Azure%20Data%20Studio/#azure-data-studio","text":"Related: - [[SQL Server Management Studio]] (SSMS) - [[Visual Studio Code]] - Azure Machine Learning","title":"Azure Data Studio"},{"location":"Literary%20Notes/Azure%20Data%20Studio/#contents","text":"What is Azure Data Studio Features SQL code editor with IntelliSense Smart SQL code snippets Customizable Server and Database Dashboards Connection management (server groups) Integrated Terminal Extensibility and extension authoring Feature comparison with SQL Server Management Studio (SSMS) Source Control Git support in Azure Data Studio Open an existing Git repository Working with Git repositories","title":"Contents"},{"location":"Literary%20Notes/Azure%20Data%20Studio/#what-is-azure-data-studio","text":"Azure Data Studio is a cross-platform database tool for data professionals using on-premises and cloud data platforms on Windows, macOS, and Linux. Azure Data Studio offers a modern editor experience with IntelliSense, code snippets, source control integration, and an integrated terminal. It's engineered with the data platform user in mind, with built-in charting of query result sets and customizable dashboards. Links: - Documentation - Download and Install Azure Data Studio - Source Code","title":"What is Azure Data Studio"},{"location":"Literary%20Notes/Azure%20Data%20Studio/#features","text":"","title":"Features"},{"location":"Literary%20Notes/Azure%20Data%20Studio/#sql-code-editor-with-intellisense","text":"Azure Data Studio offers a modern, keyboard-focused SQL coding experience that makes your everyday tasks easier with built-in features, such as multiple tab windows, a rich SQL editor, IntelliSense, keyword completion, code snippets, code navigation, and source control integration (Git). Run on-demand SQL queries, view and save results as text, JSON, or Excel. Edit data, organize your favorite database connections, and browse database objects in a familiar object browsing experience. To learn how to use the SQL editor, see Use the SQL editor to create database objects .","title":"SQL code editor with IntelliSense"},{"location":"Literary%20Notes/Azure%20Data%20Studio/#smart-sql-code-snippets","text":"SQL code snippets generate the proper SQL syntax to create databases, tables, views, stored procedures, users, logins, roles, and to update existing database objects. Use smart snippets to quickly create copies of your database for development or testing purposes, and to generate and execute CREATE and INSERT scripts. Azure Data Studio also provides functionality to create custom SQL code snippets. To learn more, see Create and use code snippets .","title":"Smart SQL code snippets"},{"location":"Literary%20Notes/Azure%20Data%20Studio/#customizable-server-and-database-dashboards","text":"Create rich customizable dashboards to monitor and quickly troubleshoot performance bottlenecks in your databases. To learn about insight widgets, and database (and server) dashboards, see Manage servers and databases with insight widgets .","title":"Customizable Server and Database Dashboards"},{"location":"Literary%20Notes/Azure%20Data%20Studio/#connection-management-server-groups","text":"Server groups provide a way to organize connection information for the servers and databases you work with. For details, see Server groups .","title":"Connection management (server groups)"},{"location":"Literary%20Notes/Azure%20Data%20Studio/#integrated-terminal","text":"Use your favorite command-line tools (for example, Bash, PowerShell, sqlcmd, bcp, and ssh) in the Integrated Terminal window right within the Azure Data Studio user interface. To learn about the integrated terminal, see Integrated terminal .","title":"Integrated Terminal"},{"location":"Literary%20Notes/Azure%20Data%20Studio/#extensibility-and-extension-authoring","text":"Enhance the Azure Data Studio experience by extending the functionality of the base installation. Azure Data Studio provides extensibility points for data management activities, and support for extension authoring. To learn about extensibility in Azure Data Studio, see Extensibility . To learn about authoring extensions, see Extension authoring .","title":"Extensibility and extension authoring"},{"location":"Literary%20Notes/Azure%20Data%20Studio/#feature-comparison-with-sql-server-management-studio-ssms","text":"Use Azure Data Studio if you: Are mostly editing or executing queries. Need the ability to quickly chart and visualize result sets. Can execute most administrative tasks via the integrated terminal using sqlcmd or PowerShell. Have minimal need for wizard experiences. Do not need to do deep administrative or platform related configuration. Need to run on macOS or Linux. Use SQL Server Management Studio if you: Are doing complex administrative or platform configuration. Are doing security management, including user management, vulnerability assessment, and configuration of security features. Need to make use of performance tuning advisors and dashboards. Use database diagrams and table designers. Need access to Registered Servers. Make use of live query stats or client statistics.","title":"Feature comparison with SQL Server Management Studio (SSMS)"},{"location":"Literary%20Notes/Azure%20Data%20Studio/#source-control","text":"Azure Data Studio supports Git for version/source control.","title":"Source Control"},{"location":"Literary%20Notes/Azure%20Data%20Studio/#git-support-in-azure-data-studio","text":"Azure Data Studio ships with a Git source control manager (SCM), but you still need to install Git (version 2.0.0 or later) before these features are available.","title":"Git support in Azure Data Studio"},{"location":"Literary%20Notes/Azure%20Data%20Studio/#open-an-existing-git-repository","text":"Under the File menu, select Open Folder... Browse to the folder that contains your files tracked by git, and select Select Folder . Subfolders in your local repository are okay to select here.","title":"Open an existing Git repository"},{"location":"Literary%20Notes/Azure%20Data%20Studio/#working-with-git-repositories","text":"Azure Data Studio inherits its Git implementation from VS Code, but doesn't currently support additional SCM providers. For the details about working with Git after you open or initialize a repository, see Git support in VS Code . See also: Git documentation Related:","title":"Working with Git repositories"},{"location":"Literary%20Notes/Azure%20DevOps%20Pipeline%20Configuration/","text":"Azure DevOps Pipeline Configuration \u00b6 Category/Cloud/Azure \u00b6 Backlink: Azure DevOps See also: Microsoft Azure Contents \u00b6 Trigger Pool Variables Steps MAKING CHANGES SUMMARY CONFIG \u00b6 azure-pipelines.yml : trigger: - master - main pool: vmImage: 'windows-latest' variables: ServerName: 'PLACEHOLDER.database.windows.net' DatabaseName: '<name of database>' AdminUser: 'PLACEHOLDER' AdminPassword: 'PLACEHOLDER' steps: - task: PowerShell@2 inputs: targetType: 'inline' script: | import-module $(Build.SourceDirectory)\\Deploy\\MigrationRunner\\Migration.dll Get-MigrationRunner -s $(ServerName) -d $(DatabaseName) -f $(Build.SourcesDirectory)\\Sources\\Migrations -u $(AdminUser) -p $(AdminPassword) Trigger \u00b6 This part indicates that deployment should start automatically if there are changes in the master or main branch. Pool \u00b6 windows-latest : The deployment agent should use the latest available virtual machine image with the Windows operating system to download source files and execute deployment steps. Variables \u00b6 A list of variables that will be used later in the script: ServerName - a SQL Server name where the database should be created/updated DatabaseName - a SQL database name to be created or updated AdminUser - a username for SQL Server to perform changes to the database AdminPassword - a password for SQL Server user Note that the credentials could be stored securely using encrypted secrets using pipeline variables. Steps \u00b6 There is a single step that executes inline Powershell script (as described in the Migration runner documentation ): first, import the module from the Migrations.dll next, execute Get-MigrationRunner with parameters Do not forget to save azure-pipelines.yml and commit it to the repository. That's it - the deployment script has been set up. To verify that everything works as expected, we can manually execute the pipeline by clicking the Run pipeline button. MAKING CHANGES \u00b6 Once the deployment was set up, the database development process could be as simple as: making changes to the AdventureWorks database applying changes using the DB Version Control committing and pushing the scripted files the deployment will start automatically and will deploy changes to the AdventureWorksAzureDeploy database SUMMARY \u00b6 In this tutorial, we showed that Azure SQL databases can be version controlled using DB Version Control in a similar way as on-premises databases. Also, Azure DevOps (pipelines) can be used to deploy changes automatically to the [[Azure SQL Databases]].","title":"Azure DevOps Pipeline Configuration"},{"location":"Literary%20Notes/Azure%20DevOps%20Pipeline%20Configuration/#azure-devops-pipeline-configuration","text":"","title":"Azure DevOps Pipeline Configuration"},{"location":"Literary%20Notes/Azure%20DevOps%20Pipeline%20Configuration/#categorycloudazure","text":"Backlink: Azure DevOps See also: Microsoft Azure","title":"Category/Cloud/Azure"},{"location":"Literary%20Notes/Azure%20DevOps%20Pipeline%20Configuration/#contents","text":"Trigger Pool Variables Steps MAKING CHANGES SUMMARY","title":"Contents"},{"location":"Literary%20Notes/Azure%20DevOps%20Pipeline%20Configuration/#config","text":"azure-pipelines.yml : trigger: - master - main pool: vmImage: 'windows-latest' variables: ServerName: 'PLACEHOLDER.database.windows.net' DatabaseName: '<name of database>' AdminUser: 'PLACEHOLDER' AdminPassword: 'PLACEHOLDER' steps: - task: PowerShell@2 inputs: targetType: 'inline' script: | import-module $(Build.SourceDirectory)\\Deploy\\MigrationRunner\\Migration.dll Get-MigrationRunner -s $(ServerName) -d $(DatabaseName) -f $(Build.SourcesDirectory)\\Sources\\Migrations -u $(AdminUser) -p $(AdminPassword)","title":"CONFIG"},{"location":"Literary%20Notes/Azure%20DevOps%20Pipeline%20Configuration/#trigger","text":"This part indicates that deployment should start automatically if there are changes in the master or main branch.","title":"Trigger"},{"location":"Literary%20Notes/Azure%20DevOps%20Pipeline%20Configuration/#pool","text":"windows-latest : The deployment agent should use the latest available virtual machine image with the Windows operating system to download source files and execute deployment steps.","title":"Pool"},{"location":"Literary%20Notes/Azure%20DevOps%20Pipeline%20Configuration/#variables","text":"A list of variables that will be used later in the script: ServerName - a SQL Server name where the database should be created/updated DatabaseName - a SQL database name to be created or updated AdminUser - a username for SQL Server to perform changes to the database AdminPassword - a password for SQL Server user Note that the credentials could be stored securely using encrypted secrets using pipeline variables.","title":"Variables"},{"location":"Literary%20Notes/Azure%20DevOps%20Pipeline%20Configuration/#steps","text":"There is a single step that executes inline Powershell script (as described in the Migration runner documentation ): first, import the module from the Migrations.dll next, execute Get-MigrationRunner with parameters Do not forget to save azure-pipelines.yml and commit it to the repository. That's it - the deployment script has been set up. To verify that everything works as expected, we can manually execute the pipeline by clicking the Run pipeline button.","title":"Steps"},{"location":"Literary%20Notes/Azure%20DevOps%20Pipeline%20Configuration/#making-changes","text":"Once the deployment was set up, the database development process could be as simple as: making changes to the AdventureWorks database applying changes using the DB Version Control committing and pushing the scripted files the deployment will start automatically and will deploy changes to the AdventureWorksAzureDeploy database","title":"MAKING CHANGES"},{"location":"Literary%20Notes/Azure%20DevOps%20Pipeline%20Configuration/#summary","text":"In this tutorial, we showed that Azure SQL databases can be version controlled using DB Version Control in a similar way as on-premises databases. Also, Azure DevOps (pipelines) can be used to deploy changes automatically to the [[Azure SQL Databases]].","title":"SUMMARY"},{"location":"Literary%20Notes/Azure%20DevOps%20Pipelines/","text":"","title":"Azure DevOps Pipelines"},{"location":"Literary%20Notes/Azure%20DevOps/","text":"Azure DevOps \u00b6 See Also: [[Microsfot Azure]] | Azure DevOps Pipeline Configuration","title":"Azure DevOps"},{"location":"Literary%20Notes/Azure%20DevOps/#azure-devops","text":"See Also: [[Microsfot Azure]] | Azure DevOps Pipeline Configuration","title":"Azure DevOps"},{"location":"Literary%20Notes/Azure%20Machine%20Learning/","text":"Category/Cloud/Azure \u00b6 Microsoft Azure Azure Machine Learning \u00b6 Azure Machine Learning is a cloud service for accelerating and managing the machine learning project lifecycle. Machine learning professionals, data scientists, and engineers can use it in their day-to-day workflows: Train and deploy models, and manage [[MLOps]]. You can create a model in Azure Machine Learning or use a model built from an open-source platform, such as Pytorch, TensorFlow, or scikit-learn. MLOps tools help you monitor, retrain, and redeploy models. Who is Azure Machine Learning for? \u00b6 Azure Machine Learning is for individuals and teams implementing MLOps within their organization to bring machine learning models into production in a secure and auditable production environment. Data scientists and ML engineers will find tools to accelerate and automate their day-to-day workflows. Application developers will find tools for integrating models into applications or services. Platform developers will find a robust set of tools, backed by durable Azure Resource Manager APIs, for building advanced ML tooling. Enterprises working in the Microsoft Azure cloud will find familiar security and role-based access control (RBAC) for infrastructure. You can set up a project to deny access to protected data and select operations. Collaboration for Machine Learning Teams \u00b6 Machine learning projects often require a team with varied skillsets to build and maintain. Azure Machine Learning has tools that help enable collaboration, such as: Shared notebooks, compute resources, data, and environments Tracking and auditability that shows who made changes and when Asset versioning Tools for Developers \u00b6 Developers find familiar interfaces in Azure Machine Learning, such as: Python SDK Azure Resource Manager REST APIs (preview) CLI v2 (preview) Studio UI \u00b6 The Azure Machine Learning Studio is a graphical user interface for a project workspace. In the studio, you can: View runs, metrics, logs, outputs, and so on. Author and edit notebooks and files. Manage common assets, such as Data credentials Compute Environments Visualize run metrics, results, and reports. Visualize pipelines authored through developer interfaces. Author AutoML jobs. Plus, the designer has a drag-and-drop interface where you can train and deploy models. Enterprise-Readiness and Security \u00b6 Azure Machine Learning integrates with the Azure cloud platform to add security to ML projects. Security integrations include: Azure Virtual Networks (VNets) with network security groups Azure Key Vault where you can save security secrets, such as access information for storage accounts Azure Container Registry set up behind a VNet See Tutorial: Set up a secure workspace . Azure Integrations for Complete Solutions \u00b6 Other integrations with Azure services support a machine learning project from end-to-end. They include: Azure Synapse Analytics to process and stream data with Spark Azure Arc , where you can run Azure services in a [[Kubernetes]] environment Storage and database options, such as Azure SQL Database , Azure Storage Blobs , and so on Azure App Service allowing you to deploy and manage ML-powered apps Machine Learning Project Workflow \u00b6 Typically models are developed as part of a project with an objective and goals. Projects often involve more than one person. When experimenting with data, algorithms, and models, development is iterative. Project Lifecycle \u00b6 While the project lifecycle can vary by project, it will often look like this: A workspace organizes a project and allows for collaboration for many users all working toward a common objective. Users in a workspace can easily share the results of their runs from experimentation in the studio user interface or use versioned assets for jobs like environments and storage references. For more information, see Manage Azure Machine Learning workspaces . When a project is ready for operationalization, users' work can be automated in a machine learning pipeline and triggered on a schedule or HTTPS request. Models can be deployed to the managed inferencing solution, for both real-time and batch deployments, abstracting away the infrastructure management typically required for deploying models. Train Models \u00b6 In Azure Machine Learning, you can run your training script in the cloud or build a model from scratch. Customers often bring models they've built and trained in open-source frameworks, so they can operationalize them in the cloud. Open and Interoperable \u00b6 Data scientists can use models in Azure Machine Learning that they've created in common Python frameworks, such as: PyTorch TensorFlow scikit-learn XGBoost LightGBM Other languages and frameworks are supported as well, including: - [[PowerShell]] - [[SQL]] - [[Python]] - [[R]] - [[DotNet|.NET]] See Open-source integration with Azure Machine Learning . Automated Featurization and Algorithm Selection (AutoML) \u00b6 In a repetitive, time-consuming process, in classical machine learning data scientists use prior experience and intuition to select the right data featurization and algorithm for training. Automated ML (AutoML) speeds this process and can be used through the studio UI or Python SDK. See What is automated machine learning? Hyperparameter Optimization \u00b6 Hyperparameter optimization, or hyperparameter tuning, can be a tedious task. Azure Machine Learning can automate this task for arbitrary parameterized commands with little modification to your job definition. Results are visualized in the studio. See How to tune hyperparameters . Multi-Node Distributed Training \u00b6 Efficiency of training for deep learning and sometimes classical machine learning training jobs can be drastically improved via multinode distributed training. Azure Machine Learning compute clusters offer the latest GPU options. Supported via Azure Arc-attached Kubernetes (preview) and Azure ML compute clusters: PyTorch TensorFlow MPI The MPI distribution can be used for Horovod or custom multinode logic. Additionally, Apache Spark is supported via Azure Synapse Analytics Spark clusters (preview). See Distributed training with Azure Machine Learning . Embarrassingly Parallel Training \u00b6 Scaling a machine learning project may require scaling embarrassingly parallel model training. This pattern is common for scenarios like forecasting demand, where a model may be trained for many stores. Deploy Models \u00b6 To bring a model into production, it is deployed. Azure Machine Learning's managed endpoints abstract the required infrastructure for both batch or real-time (online) model scoring (inferencing). Real-time and Batch Scoring (Inferencing) \u00b6 Batch scoring , or batch inferencing , involves invoking an endpoint with a reference to data. The batch endpoint runs jobs asynchronously to process data in parallel on compute clusters and store the data for further analysis. Real-time scoring , or online inferencing , involves invoking an endpoint with one or more model deployments and receiving a response in near-real-time via HTTPs. Traffic can be split across multiple deployments, allowing for testing new model versions by diverting some amount of traffic initially and increasing once confidence in the new model is established. See: Deploy a model with a real-time managed endpoint Use batch endpoints for scoring Microsoft Azure [[MLOps]] Team Data Science Process [[Cloud Playbook]]","title":"Azure Machine Learning"},{"location":"Literary%20Notes/Azure%20Machine%20Learning/#categorycloudazure","text":"Microsoft Azure","title":"Category/Cloud/Azure"},{"location":"Literary%20Notes/Azure%20Machine%20Learning/#azure-machine-learning","text":"Azure Machine Learning is a cloud service for accelerating and managing the machine learning project lifecycle. Machine learning professionals, data scientists, and engineers can use it in their day-to-day workflows: Train and deploy models, and manage [[MLOps]]. You can create a model in Azure Machine Learning or use a model built from an open-source platform, such as Pytorch, TensorFlow, or scikit-learn. MLOps tools help you monitor, retrain, and redeploy models.","title":"Azure Machine Learning"},{"location":"Literary%20Notes/Azure%20Machine%20Learning/#who-is-azure-machine-learning-for","text":"Azure Machine Learning is for individuals and teams implementing MLOps within their organization to bring machine learning models into production in a secure and auditable production environment. Data scientists and ML engineers will find tools to accelerate and automate their day-to-day workflows. Application developers will find tools for integrating models into applications or services. Platform developers will find a robust set of tools, backed by durable Azure Resource Manager APIs, for building advanced ML tooling. Enterprises working in the Microsoft Azure cloud will find familiar security and role-based access control (RBAC) for infrastructure. You can set up a project to deny access to protected data and select operations.","title":"Who is Azure Machine Learning for?"},{"location":"Literary%20Notes/Azure%20Machine%20Learning/#collaboration-for-machine-learning-teams","text":"Machine learning projects often require a team with varied skillsets to build and maintain. Azure Machine Learning has tools that help enable collaboration, such as: Shared notebooks, compute resources, data, and environments Tracking and auditability that shows who made changes and when Asset versioning","title":"Collaboration for Machine Learning Teams"},{"location":"Literary%20Notes/Azure%20Machine%20Learning/#tools-for-developers","text":"Developers find familiar interfaces in Azure Machine Learning, such as: Python SDK Azure Resource Manager REST APIs (preview) CLI v2 (preview)","title":"Tools for Developers"},{"location":"Literary%20Notes/Azure%20Machine%20Learning/#studio-ui","text":"The Azure Machine Learning Studio is a graphical user interface for a project workspace. In the studio, you can: View runs, metrics, logs, outputs, and so on. Author and edit notebooks and files. Manage common assets, such as Data credentials Compute Environments Visualize run metrics, results, and reports. Visualize pipelines authored through developer interfaces. Author AutoML jobs. Plus, the designer has a drag-and-drop interface where you can train and deploy models.","title":"Studio UI"},{"location":"Literary%20Notes/Azure%20Machine%20Learning/#enterprise-readiness-and-security","text":"Azure Machine Learning integrates with the Azure cloud platform to add security to ML projects. Security integrations include: Azure Virtual Networks (VNets) with network security groups Azure Key Vault where you can save security secrets, such as access information for storage accounts Azure Container Registry set up behind a VNet See Tutorial: Set up a secure workspace .","title":"Enterprise-Readiness and Security"},{"location":"Literary%20Notes/Azure%20Machine%20Learning/#azure-integrations-for-complete-solutions","text":"Other integrations with Azure services support a machine learning project from end-to-end. They include: Azure Synapse Analytics to process and stream data with Spark Azure Arc , where you can run Azure services in a [[Kubernetes]] environment Storage and database options, such as Azure SQL Database , Azure Storage Blobs , and so on Azure App Service allowing you to deploy and manage ML-powered apps","title":"Azure Integrations for Complete Solutions"},{"location":"Literary%20Notes/Azure%20Machine%20Learning/#machine-learning-project-workflow","text":"Typically models are developed as part of a project with an objective and goals. Projects often involve more than one person. When experimenting with data, algorithms, and models, development is iterative.","title":"Machine Learning Project Workflow"},{"location":"Literary%20Notes/Azure%20Machine%20Learning/#project-lifecycle","text":"While the project lifecycle can vary by project, it will often look like this: A workspace organizes a project and allows for collaboration for many users all working toward a common objective. Users in a workspace can easily share the results of their runs from experimentation in the studio user interface or use versioned assets for jobs like environments and storage references. For more information, see Manage Azure Machine Learning workspaces . When a project is ready for operationalization, users' work can be automated in a machine learning pipeline and triggered on a schedule or HTTPS request. Models can be deployed to the managed inferencing solution, for both real-time and batch deployments, abstracting away the infrastructure management typically required for deploying models.","title":"Project Lifecycle"},{"location":"Literary%20Notes/Azure%20Machine%20Learning/#train-models","text":"In Azure Machine Learning, you can run your training script in the cloud or build a model from scratch. Customers often bring models they've built and trained in open-source frameworks, so they can operationalize them in the cloud.","title":"Train Models"},{"location":"Literary%20Notes/Azure%20Machine%20Learning/#open-and-interoperable","text":"Data scientists can use models in Azure Machine Learning that they've created in common Python frameworks, such as: PyTorch TensorFlow scikit-learn XGBoost LightGBM Other languages and frameworks are supported as well, including: - [[PowerShell]] - [[SQL]] - [[Python]] - [[R]] - [[DotNet|.NET]] See Open-source integration with Azure Machine Learning .","title":"Open and Interoperable"},{"location":"Literary%20Notes/Azure%20Machine%20Learning/#automated-featurization-and-algorithm-selection-automl","text":"In a repetitive, time-consuming process, in classical machine learning data scientists use prior experience and intuition to select the right data featurization and algorithm for training. Automated ML (AutoML) speeds this process and can be used through the studio UI or Python SDK. See What is automated machine learning?","title":"Automated Featurization and Algorithm Selection (AutoML)"},{"location":"Literary%20Notes/Azure%20Machine%20Learning/#hyperparameter-optimization","text":"Hyperparameter optimization, or hyperparameter tuning, can be a tedious task. Azure Machine Learning can automate this task for arbitrary parameterized commands with little modification to your job definition. Results are visualized in the studio. See How to tune hyperparameters .","title":"Hyperparameter Optimization"},{"location":"Literary%20Notes/Azure%20Machine%20Learning/#multi-node-distributed-training","text":"Efficiency of training for deep learning and sometimes classical machine learning training jobs can be drastically improved via multinode distributed training. Azure Machine Learning compute clusters offer the latest GPU options. Supported via Azure Arc-attached Kubernetes (preview) and Azure ML compute clusters: PyTorch TensorFlow MPI The MPI distribution can be used for Horovod or custom multinode logic. Additionally, Apache Spark is supported via Azure Synapse Analytics Spark clusters (preview). See Distributed training with Azure Machine Learning .","title":"Multi-Node Distributed Training"},{"location":"Literary%20Notes/Azure%20Machine%20Learning/#embarrassingly-parallel-training","text":"Scaling a machine learning project may require scaling embarrassingly parallel model training. This pattern is common for scenarios like forecasting demand, where a model may be trained for many stores.","title":"Embarrassingly Parallel Training"},{"location":"Literary%20Notes/Azure%20Machine%20Learning/#deploy-models","text":"To bring a model into production, it is deployed. Azure Machine Learning's managed endpoints abstract the required infrastructure for both batch or real-time (online) model scoring (inferencing).","title":"Deploy Models"},{"location":"Literary%20Notes/Azure%20Machine%20Learning/#real-time-and-batch-scoring-inferencing","text":"Batch scoring , or batch inferencing , involves invoking an endpoint with a reference to data. The batch endpoint runs jobs asynchronously to process data in parallel on compute clusters and store the data for further analysis. Real-time scoring , or online inferencing , involves invoking an endpoint with one or more model deployments and receiving a response in near-real-time via HTTPs. Traffic can be split across multiple deployments, allowing for testing new model versions by diverting some amount of traffic initially and increasing once confidence in the new model is established. See: Deploy a model with a real-time managed endpoint Use batch endpoints for scoring Microsoft Azure [[MLOps]] Team Data Science Process [[Cloud Playbook]]","title":"Real-time and Batch Scoring (Inferencing)"},{"location":"Literary%20Notes/Azure%20SQL%20Database/","text":"Category/Cloud/Azure \u00b6 Microsoft Azure Azure SQL Database \u00b6 Category/Cloud/Azure \u00b6","title":"Azure SQL Database"},{"location":"Literary%20Notes/Azure%20SQL%20Database/#categorycloudazure","text":"Microsoft Azure","title":"Category/Cloud/Azure"},{"location":"Literary%20Notes/Azure%20SQL%20Database/#azure-sql-database","text":"","title":"Azure SQL Database"},{"location":"Literary%20Notes/Azure%20SQL%20Database/#categorycloudazure_1","text":"","title":"Category/Cloud/Azure"},{"location":"Literary%20Notes/Azure%20Storage%20Blobs/","text":"Category/Cloud/Azure \u00b6 Microsoft Azure Azure Storage Blobs \u00b6 Category/Cloud/Azure \u00b6","title":"Azure Storage Blobs"},{"location":"Literary%20Notes/Azure%20Storage%20Blobs/#categorycloudazure","text":"Microsoft Azure","title":"Category/Cloud/Azure"},{"location":"Literary%20Notes/Azure%20Storage%20Blobs/#azure-storage-blobs","text":"","title":"Azure Storage Blobs"},{"location":"Literary%20Notes/Azure%20Storage%20Blobs/#categorycloudazure_1","text":"","title":"Category/Cloud/Azure"},{"location":"Literary%20Notes/Azure%20Synapse%20Analytics/","text":"Category/Cloud/Azure \u00b6 Microsoft Azure Azure Synapse Analytics \u00b6 Category/Cloud/Azure \u00b6","title":"Azure Synapse Analytics"},{"location":"Literary%20Notes/Azure%20Synapse%20Analytics/#categorycloudazure","text":"Microsoft Azure","title":"Category/Cloud/Azure"},{"location":"Literary%20Notes/Azure%20Synapse%20Analytics/#azure-synapse-analytics","text":"","title":"Azure Synapse Analytics"},{"location":"Literary%20Notes/Azure%20Synapse%20Analytics/#categorycloudazure_1","text":"","title":"Category/Cloud/Azure"},{"location":"Literary%20Notes/Casualty%20Actuarial%20Society%20on%20GitHub/","text":"Casualty Actuarial Society on GitHub \u00b6 Casualty Actuarial Society on GitHub casact/casdown: RMarkdown formats for CAS publications casact/raw_package: Data package for R actuarial workshops casact/imaginator: Randomly simulate inception and settlement of general insurance losses casact/stan_stans: Examples for and from the Stan stans study group of the CAS casact/PCDM: Property Casualty Data Model Specification casact/shiny_big_long casact/cascsim casact/research-papers: This will house subprojects associated with research papers sponsored by the CAS","title":"Casualty Actuarial Society on GitHub"},{"location":"Literary%20Notes/Casualty%20Actuarial%20Society%20on%20GitHub/#casualty-actuarial-society-on-github","text":"Casualty Actuarial Society on GitHub casact/casdown: RMarkdown formats for CAS publications casact/raw_package: Data package for R actuarial workshops casact/imaginator: Randomly simulate inception and settlement of general insurance losses casact/stan_stans: Examples for and from the Stan stans study group of the CAS casact/PCDM: Property Casualty Data Model Specification casact/shiny_big_long casact/cascsim casact/research-papers: This will house subprojects associated with research papers sponsored by the CAS","title":"Casualty Actuarial Society on GitHub"},{"location":"Literary%20Notes/Collectors%20Do%20Not%20Make%20Progress/","text":"Source Type: Varies Category: #Category/PKM Status: #Status/Permanent Collectors Do Not Make Progress \u00b6 Sources: - The Collector\u2019s Fallacy #Type/Source/Article - Adventures in The Skinner Box (YouTube Video) #Type/Source/Video - How to Write a Thesis #Type/Source/Book Quote from How to Write a Thesis : \"There's a lot someone doesn't know anything about precisely because she/he photocopied a text; she/he has given herself in to the illusion of having read the text already.\" - Page 162. Notes \u00b6 Piling up stacks of information and content until the stack grows intimidatingly large and unmanageable directly leads to one's ignorance later on to intentionally disregard and ignore that stack of resources. Similarly, when it comes to managing bookmarks. We stumble upon an interesting web page and don\u2019t want to lose the information, thus we keep it as a bookmark. The digital pile of bookmarks isn\u2019t any different from a tangible pile of papers we consider worth knowing. Kept isn\u2019t Read . Just like photocopying is self-rewarding and addictive, I argue that we fall into the same trap of false comfort when we bookmark web pages and sort the bookmarks into folders or tagged categories. Bookmarking a web page is satisfying because we get rid of the fear of losing access to the information. To counter this resulting outcome derived from the [[Literary Notes/The Collector's Fallacy]], see [[Literary Notes/Rinse and Repeat - Research, Read, Assimilate]]. Backlinks: - [[Literary Notes/The Collector's Fallacy]] - [[Literary Notes/Zettelkasten]] - [[Literary Notes/Rinse and Repeat - Research, Read, Assimilate]] -","title":"Collectors Do Not Make Progress"},{"location":"Literary%20Notes/Collectors%20Do%20Not%20Make%20Progress/#collectors-do-not-make-progress","text":"Sources: - The Collector\u2019s Fallacy #Type/Source/Article - Adventures in The Skinner Box (YouTube Video) #Type/Source/Video - How to Write a Thesis #Type/Source/Book Quote from How to Write a Thesis : \"There's a lot someone doesn't know anything about precisely because she/he photocopied a text; she/he has given herself in to the illusion of having read the text already.\" - Page 162.","title":"Collectors Do Not Make Progress"},{"location":"Literary%20Notes/Collectors%20Do%20Not%20Make%20Progress/#notes","text":"Piling up stacks of information and content until the stack grows intimidatingly large and unmanageable directly leads to one's ignorance later on to intentionally disregard and ignore that stack of resources. Similarly, when it comes to managing bookmarks. We stumble upon an interesting web page and don\u2019t want to lose the information, thus we keep it as a bookmark. The digital pile of bookmarks isn\u2019t any different from a tangible pile of papers we consider worth knowing. Kept isn\u2019t Read . Just like photocopying is self-rewarding and addictive, I argue that we fall into the same trap of false comfort when we bookmark web pages and sort the bookmarks into folders or tagged categories. Bookmarking a web page is satisfying because we get rid of the fear of losing access to the information. To counter this resulting outcome derived from the [[Literary Notes/The Collector's Fallacy]], see [[Literary Notes/Rinse and Repeat - Research, Read, Assimilate]]. Backlinks: - [[Literary Notes/The Collector's Fallacy]] - [[Literary Notes/Zettelkasten]] - [[Literary Notes/Rinse and Repeat - Research, Read, Assimilate]] -","title":"Notes"},{"location":"Literary%20Notes/Developer%20Operations%20-%20DevOps/","text":"","title":"Developer Operations   DevOps"},{"location":"Literary%20Notes/Frameworks%20I%20Live%20By/","text":"","title":"Frameworks I Live By"},{"location":"Literary%20Notes/Getting%20Things%20Done/","text":"Type: #Type/Framework Category: #Category/Productivity Status: #Status/WIP Getting Things Done \u00b6 Source: GTD Cheatsheet The Workflow - LifeDev Backlinks: \u00b6","title":"Getting Things Done"},{"location":"Literary%20Notes/Getting%20Things%20Done/#getting-things-done","text":"Source: GTD Cheatsheet The Workflow - LifeDev","title":"Getting Things Done"},{"location":"Literary%20Notes/Getting%20Things%20Done/#backlinks","text":"","title":"Backlinks:"},{"location":"Literary%20Notes/Information%20Flow/","text":"Source Type: #Type/Diagram Category: #Category/PKM Status: #Status/Permanent Favorite \u00b6 Information Flow \u00b6 Source: Note-Taking when Reading the Web and RSS If you are famili[[Literary Notes/Getting Things Done]]g Things Done]] and its famous workflow diagram, you will notice the similarities here. However, we are discussing information management, not task management, and therefore, our focus is on the path from Inbox to Reference Material using GTD Terminology. Just like with GTD, a common roadblock for newcomers is the bridge between Capture/Collect and Processing/Organizing (Steps 1 through 3 of the GTD Framework). Many[[Literary Notes/The Collector's Fallacy]]e Collector's Fallacy]] by collecting and reading without processing . Processing actually requires thinking about your situation and context regarding the information at hand. This thinking causes many people to avoid this step and continue collecting and capturing more and more until the pile of information becomes irrelevant and unmanageable. It requires not only mental energy to process, but also a non-trivial amount of time. For every hour of reading, it can take double the time to take proper notes on that information. Sometimes you have to research for more details even though you thought you had a clear picture of what the text says. The key question is: How do you deal with various input streams of information efficiently so you don\u2019t waste time juggling them? Pick your fights wisely, and take the aftermath of fighting into account. The processing step is not black and white, but must be customized to your personal needs and optimized over time for efficiency. However, you must dedicate some time up-front first to properly digest the mindset required to properly **convert information into knowledge and knowledge in[[Literary Notes/Note Taking and The Internet Best Practices]]and The Internet Bes[[Literary Notes/Rinse and Repeat - Research, Read, Assimilate|Rinse and Repeat - Research]]sim[[Literary Notes/The Collector's Fallacy]]sea[[Literary Notes/Zettelkasten]]ollector's Fallacy]] - Zettelkasten","title":"Information Flow"},{"location":"Literary%20Notes/Information%20Flow/#favorite","text":"","title":"Favorite"},{"location":"Literary%20Notes/Information%20Flow/#information-flow","text":"Source: Note-Taking when Reading the Web and RSS If you are famili[[Literary Notes/Getting Things Done]]g Things Done]] and its famous workflow diagram, you will notice the similarities here. However, we are discussing information management, not task management, and therefore, our focus is on the path from Inbox to Reference Material using GTD Terminology. Just like with GTD, a common roadblock for newcomers is the bridge between Capture/Collect and Processing/Organizing (Steps 1 through 3 of the GTD Framework). Many[[Literary Notes/The Collector's Fallacy]]e Collector's Fallacy]] by collecting and reading without processing . Processing actually requires thinking about your situation and context regarding the information at hand. This thinking causes many people to avoid this step and continue collecting and capturing more and more until the pile of information becomes irrelevant and unmanageable. It requires not only mental energy to process, but also a non-trivial amount of time. For every hour of reading, it can take double the time to take proper notes on that information. Sometimes you have to research for more details even though you thought you had a clear picture of what the text says. The key question is: How do you deal with various input streams of information efficiently so you don\u2019t waste time juggling them? Pick your fights wisely, and take the aftermath of fighting into account. The processing step is not black and white, but must be customized to your personal needs and optimized over time for efficiency. However, you must dedicate some time up-front first to properly digest the mindset required to properly **convert information into knowledge and knowledge in[[Literary Notes/Note Taking and The Internet Best Practices]]and The Internet Bes[[Literary Notes/Rinse and Repeat - Research, Read, Assimilate|Rinse and Repeat - Research]]sim[[Literary Notes/The Collector's Fallacy]]sea[[Literary Notes/Zettelkasten]]ollector's Fallacy]] - Zettelkasten","title":"Information Flow"},{"location":"Literary%20Notes/KasaAI%20GitHub%20Organization/","text":"KasaAI GitHub Organization \u00b6 Kasa AI kasaai/deeptriangle: DeepTriangle: A Deep Learning Approach to Loss Reserving kasaai/pc-pricing-tutorial: Practical Ratemaking kasaai/explain-ml-pricing: Towards Explainability of Machine Learning Models in Insurance Pricing kasaai/simulationmachine: Individual claims history simulation machine kasaai/ctgan: R interface to CTGAN kasaai/insurance: Tidy datasets for actuarial science and insurance kasaai/blog: Official blog of Kasa AI kasaai/rsvr: \"reserver\" kasaai/wcrater wc rating api KasaAI Quests : Unified Interface for Data Simulation Underwriting Dashboard Simulation Machine R Package Model Deployment Implement conjuror Interface in imaginator Book on Ratemaking with Reproducible Workflows in R","title":"KasaAI GitHub Organization"},{"location":"Literary%20Notes/KasaAI%20GitHub%20Organization/#kasaai-github-organization","text":"Kasa AI kasaai/deeptriangle: DeepTriangle: A Deep Learning Approach to Loss Reserving kasaai/pc-pricing-tutorial: Practical Ratemaking kasaai/explain-ml-pricing: Towards Explainability of Machine Learning Models in Insurance Pricing kasaai/simulationmachine: Individual claims history simulation machine kasaai/ctgan: R interface to CTGAN kasaai/insurance: Tidy datasets for actuarial science and insurance kasaai/blog: Official blog of Kasa AI kasaai/rsvr: \"reserver\" kasaai/wcrater wc rating api KasaAI Quests : Unified Interface for Data Simulation Underwriting Dashboard Simulation Machine R Package Model Deployment Implement conjuror Interface in imaginator Book on Ratemaking with Reproducible Workflows in R","title":"KasaAI GitHub Organization"},{"location":"Literary%20Notes/Machine%20Learning%20Operations%20-%20MLOps/","text":"","title":"Machine Learning Operations   MLOps"},{"location":"Literary%20Notes/Note%20Taking%20and%20The%20Internet%20Best%20Practices/","text":"Source Type: #Type/Source/Article Category: #Category/PKM #Category/Productivity Note Taking and The Internet Best Practices \u00b6 Source: Note-Taking when Reading the Web and RSS [[Literary Notes/Information Flow]]mation Flow]] Remember: The key question is: How do you deal with various input streams of information efficiently so you don\u2019t waste time juggling them? Action Steps to Get from Stuff to Reference Material \u00b6 In a nutshell, to deal with information on the web is similar to taking notes from a book : Filter interesting information to clear your streams. To filter means to collect the useful pieces only. But don\u2019t stop just there, or your growing collection will hinder you. Instead, create a reading list you\u2019re going to review and work off routinely. Reading on the web should be like reading books: after you found what\u2019s useful, take note of it. Taking note ensures you expand your knowledge . Everything else is either wasted time or reading for fun. Process the notes you took, integrate them into your knowledge system. This is the biggest lever of change. That\u2019s it! Now come the parts to apply the process to: Stuff is made up of posts and links from Twitter and Facebook, it\u2019s made up of news in our RSS feed readers, and it contains the pages we stumble upon when we do casual web browsing. The Inbox is the place to hold the items we either want to or need to pay attention to. A lot of stuff will never reach our inbox; we can shut off the noise outside. Of course, there\u2019s inboxes other people have access to, like e-mail or postal inboxes, but we deliberately invite web pages into our lives ourselves. In this case, we have full control over what comes in and what is kept out. Web pages we want to keeps will make up the reading list. Since we don\u2019t deal with actionable tasks here, let\u2019s see what\u2019s left: Reference items may be web pages you want to archive for later, a recommended app you want to look into later, or recipes for your dinner party next week. Some things that found their way onto the reading lists turn out to be useless. Toss them. Putting items on the reading list is a tiny commitment only: we commit to pay attention to them later, but we don\u2019t need to hold on to them if they don\u2019t withstand a critical look. RSS subscriptions are no part of your inbox \u00b6 I don\u2019t consider my RSS feed subscriptions to be an inbox. Instead, they are a fraction of the whole web, outside of my knowledge system. I have to work with the items to find what\u2019s useful and what isn\u2019t. Lots of articles are irrelevant to me. Also, the items are many \u2013 and none of them die if I don\u2019t act on them. In short, they behave like anything else on the web. The web is full of noise , and so is this fraction of the web I subscribed to. It\u2019s up to me to find some signal . That means I have to decide what I want to have knowledge about, and what is dismissible. I use the reading list like an inbox when I pick useful stuff to read later: I decide to invite items into my system, and into my world. The reading list can\u2019t be placed anywhere else in the flow: it can\u2019t be part of a permanent reference file, for example, because a list of web pages has zero long-term value. As I said in my post on the Collector\u2019s Fallacy , collections can only ease access to texts. They don\u2019t add anything to our knowledge. To make it easier to grok why a reading list is an inbox, let me detail how I read online and how I take note on the web. How to Consume RSS Subscriptions Everywhere \u00b6 First, the problem with RSS is that it\u2019s so convenient to subscribe to websites that you will eventually end up with more items in your feed queue each day than you can read. Second, you may also want to consume your RSS feeds from your tablet or smartphone. Then you\u2019ll need a different set of tools, and you\u2019ll have to read differently to stay ahead of the news. Here\u2019s my suggestion to dealing with a stream of input like RSS feeds or Twitter, summarized: Skim the material, look at web pages and articles briefly. Decide quickly what you want to do with it. Skimming can be done on multiple devices if you use online feed reading services. Then decide: If it\u2019s information you want to keep, you need to work on it. Add it to a reading list at first. Make it a habit to process the reading list like you would process a stack of books: read, annotate, and store in your notes archive. On your smartphone, this process may be different from the process on your computer. There are tools to overcome the gap between devices. If it\u2019s a collectible , like a recipe, or like a recommendation of cool products, then put it on a reference list. This process can be partially automated. Patrick Welker detailed how he shovels items into various lists. In one of the next posts, I\u2019m going to talk about how to pre-process stuff in the cloud. In the following three sections, I\u2019ll go into detail. Skim RSS feeds only \u00b6 The more subscriptions I collect, the faster I have to sieve the subscriptions manually to stay ahead. Reading the articles is the bottleneck, thus \u201cfeed reading\u201d becomes \u201cfeed skimming.\u201d When I read an item in my RSS reader in full, I do so only for entertainment. Doing the actual reading in my RSS reader slows me down so much, I won\u2019t be able to reach the end of my list of items in a reasonable time. Limit yourself to skim articles in your RSS reader: get an overview quickly, then decide if you want to keep it. Skimming is especially useful to get ahead of hundreds or thousands of new feed items. You have to get the interesting pieces out of the feed reader and into a collection you\u2019re going to process later, or else you\u2019ll likely never see the end of your surprisingly long, intimidating \u201cunread items\u201d queue. When your list of unread items is longer than you\u2019d like, the objective is to empty it as quick as possible. Only then will you be prepared to receive additional news and stay up to date. Next, consider the tools to consume your feeds. The impact of a change of tools grows with the size of your list of subscriptions. Manage RSS subscriptions online \u00b6 There is free software on the market to subscribe to RSS feeds. NetNewsWire is a popular application for the Mac, for example. But there\u2019s online feed reading services, too. With services like FeedWrangler or Minimal Reader , you can manage your subscriptions independent from your device. In contrast to managing subscriptions in an application on your computer, this enables you to read your news feeds on your smartphone, too. There are apps for iPhone and Android I know of which you can utilize to synchronize your online feed reading service to your smartphone. There, the articles will be downloaded for you so you don\u2019t need an internet connection all the time while you sieve your unread items list. Popular apps are Mr. Reader or Reeder for iOS, and Pocket for iOS and Mac. Feedly runs on both iOS and Android, and it has a web interface suitable for your computer. Check out Gabe\u2019s comparison of RSS feed reader services to find out which web service fits your needs if you haven\u2019t decided, yet. Smartphones are great for filtering \u2013 not so much for processing stuff \u00b6 I consume my RSS subscriptions on my iPhone. I can\u2019t write notes for my Zettelkasten note archive from my iPhone, though. The note-taking software available just don\u2019t do what I need. Only from my Mac do I have direct access to the full Zettelkasten note archive at the moment. This creates a gap between the inflow of interesting articles and the outflow of useful notes. On the Mac, it\u2019s straightforward to create a note: I just fire up nvALT , my note-taking software of choice. When I read on my iPhone, I have to shovel interesting stuff from my feed reader to my Mac over the air, through the Cloud, where nvALT awaits. Consequently, I can only prepare interesting posts on my iPhone to process them later. If I want to add information to my knowledge, it doesn\u2019t pay off to immerse into an article and read it in whole on a mobile device: once I\u2019m at home and on my Mac, I will have to read the article again anyhow to create useful notes \u2013 especially since I tend to be quite forgetful. Reading a whole article on the iPhone is a welcome pastime, but it\u2019s not an efficient way to expand my knowledge. Thus I ask myself: do I want to read something just to \u201c edu-tain \u201d myself, or do I need to work with it later? The answer to this question determines whether I will read the article or just skim and file it. Thus, reading the articles in my RSS reader is both inefficient and ineffective . It\u2019s inefficient because I don\u2019t reach the end of my subscription queue and because I may have to read it twice \u2013 once on the iPhone and once on the Mac. It\u2019s ineffective because I don\u2019t expand my knowledge permanently when I have no tool to take notes at hand. Mobile devices are great for filtering stuff, though. Recall the flow of information: Flow from stuff to reference material. On my phone, I prepare stuff \u2013 that\u2019s web pages and news feed items \u2013 to become an actual thing in terms of my knowledge management system. That\u2019s what a reading list is for. Although I can\u2019t write notes for my archive in a reasonable way, I can still decide which articles I want to take note of. In this respect is my iPhone a device to filter the web and my feeds. My RSS feed reader is not an inbox in the flow chart because I consider my subscriptions to be outside of my system, just like the whole web itself is outside of it. Unread items in my feed reader have to become a thing in my system first. I deliberately pick the articles I want to cover when I put them into my reading list. They\u2019re still not processed, but I commit to take care of them. I make them become a thing which I can handle. Therefore, I use my list of RSS feed items mainly as a source of information which I skim and from which I select useful pieces. The work takes place on my Mac. Summing up \u00b6 Here\u2019s a quick sketch of how filtering and preparation look in my case: Since it\u2019s impractical to create reference notes on the iPhone, I only skim articles to select interesting pieces. To prepare items for later processing is practical on the iPhone. From my mobile feed reader, I can send articles to read-later services like Instapaper or bookmark them in Pinboard to get them out. On my Mac, I have access to these cloud-based services. I read the articles and take notes. Also, I create reference items, create local copies of web pages if I need to, and archive the source information. A smartphone, I argue, is a suitable filter from \u201cstuff\u201d to \u201cinbox.\u201d The rest of the action usually takes place elsewhere, though. To answer the questions from the beginning of this post: How am I supposed to deal with these streams when only a fraction of the links are of real value to me? I deal with the inflow of information by forcing myself to select quickly which items deserve my attention and which don\u2019t. I can\u2019t pay attention to everything, and I can\u2019t read every article from start to finish. I need to decide: do I browse the web for fun or to expand my knowledge? This determines my mode of reading. How do I take lasting notes? I read web pages or RSS feed subscriptions on my mobile device. I take lasting notes on my Mac only. Mobile devices can be useful to filter the load of unread feed items because services like Instapaper exis[[Literary Notes/Zettelkasten]] ex[[Literary Notes/The Collector's Fallacy]] th[[Literary Notes/Information Flow]]the[[Maps of Content/Personal Knowledge Management]]ckl[[Literary Notes/Rinse and Repeat - Research, Read, Assimilate]]llacy]] Information Flow Personal Knowledge Management Rinse and Repeat - Research, Read, Assimilate","title":"Note Taking and The Internet Best Practices"},{"location":"Literary%20Notes/Note%20Taking%20and%20The%20Internet%20Best%20Practices/#note-taking-and-the-internet-best-practices","text":"Source: Note-Taking when Reading the Web and RSS [[Literary Notes/Information Flow]]mation Flow]] Remember: The key question is: How do you deal with various input streams of information efficiently so you don\u2019t waste time juggling them?","title":"Note Taking and The Internet Best Practices"},{"location":"Literary%20Notes/Note%20Taking%20and%20The%20Internet%20Best%20Practices/#action-steps-to-get-from-stuff-to-reference-material","text":"In a nutshell, to deal with information on the web is similar to taking notes from a book : Filter interesting information to clear your streams. To filter means to collect the useful pieces only. But don\u2019t stop just there, or your growing collection will hinder you. Instead, create a reading list you\u2019re going to review and work off routinely. Reading on the web should be like reading books: after you found what\u2019s useful, take note of it. Taking note ensures you expand your knowledge . Everything else is either wasted time or reading for fun. Process the notes you took, integrate them into your knowledge system. This is the biggest lever of change. That\u2019s it! Now come the parts to apply the process to: Stuff is made up of posts and links from Twitter and Facebook, it\u2019s made up of news in our RSS feed readers, and it contains the pages we stumble upon when we do casual web browsing. The Inbox is the place to hold the items we either want to or need to pay attention to. A lot of stuff will never reach our inbox; we can shut off the noise outside. Of course, there\u2019s inboxes other people have access to, like e-mail or postal inboxes, but we deliberately invite web pages into our lives ourselves. In this case, we have full control over what comes in and what is kept out. Web pages we want to keeps will make up the reading list. Since we don\u2019t deal with actionable tasks here, let\u2019s see what\u2019s left: Reference items may be web pages you want to archive for later, a recommended app you want to look into later, or recipes for your dinner party next week. Some things that found their way onto the reading lists turn out to be useless. Toss them. Putting items on the reading list is a tiny commitment only: we commit to pay attention to them later, but we don\u2019t need to hold on to them if they don\u2019t withstand a critical look.","title":"Action Steps to Get from Stuff to Reference Material"},{"location":"Literary%20Notes/Note%20Taking%20and%20The%20Internet%20Best%20Practices/#rss-subscriptions-are-no-part-of-your-inbox","text":"I don\u2019t consider my RSS feed subscriptions to be an inbox. Instead, they are a fraction of the whole web, outside of my knowledge system. I have to work with the items to find what\u2019s useful and what isn\u2019t. Lots of articles are irrelevant to me. Also, the items are many \u2013 and none of them die if I don\u2019t act on them. In short, they behave like anything else on the web. The web is full of noise , and so is this fraction of the web I subscribed to. It\u2019s up to me to find some signal . That means I have to decide what I want to have knowledge about, and what is dismissible. I use the reading list like an inbox when I pick useful stuff to read later: I decide to invite items into my system, and into my world. The reading list can\u2019t be placed anywhere else in the flow: it can\u2019t be part of a permanent reference file, for example, because a list of web pages has zero long-term value. As I said in my post on the Collector\u2019s Fallacy , collections can only ease access to texts. They don\u2019t add anything to our knowledge. To make it easier to grok why a reading list is an inbox, let me detail how I read online and how I take note on the web.","title":"RSS subscriptions are no part of your inbox"},{"location":"Literary%20Notes/Note%20Taking%20and%20The%20Internet%20Best%20Practices/#how-to-consume-rss-subscriptions-everywhere","text":"First, the problem with RSS is that it\u2019s so convenient to subscribe to websites that you will eventually end up with more items in your feed queue each day than you can read. Second, you may also want to consume your RSS feeds from your tablet or smartphone. Then you\u2019ll need a different set of tools, and you\u2019ll have to read differently to stay ahead of the news. Here\u2019s my suggestion to dealing with a stream of input like RSS feeds or Twitter, summarized: Skim the material, look at web pages and articles briefly. Decide quickly what you want to do with it. Skimming can be done on multiple devices if you use online feed reading services. Then decide: If it\u2019s information you want to keep, you need to work on it. Add it to a reading list at first. Make it a habit to process the reading list like you would process a stack of books: read, annotate, and store in your notes archive. On your smartphone, this process may be different from the process on your computer. There are tools to overcome the gap between devices. If it\u2019s a collectible , like a recipe, or like a recommendation of cool products, then put it on a reference list. This process can be partially automated. Patrick Welker detailed how he shovels items into various lists. In one of the next posts, I\u2019m going to talk about how to pre-process stuff in the cloud. In the following three sections, I\u2019ll go into detail.","title":"How to Consume RSS Subscriptions Everywhere"},{"location":"Literary%20Notes/Note%20Taking%20and%20The%20Internet%20Best%20Practices/#skim-rss-feeds-only","text":"The more subscriptions I collect, the faster I have to sieve the subscriptions manually to stay ahead. Reading the articles is the bottleneck, thus \u201cfeed reading\u201d becomes \u201cfeed skimming.\u201d When I read an item in my RSS reader in full, I do so only for entertainment. Doing the actual reading in my RSS reader slows me down so much, I won\u2019t be able to reach the end of my list of items in a reasonable time. Limit yourself to skim articles in your RSS reader: get an overview quickly, then decide if you want to keep it. Skimming is especially useful to get ahead of hundreds or thousands of new feed items. You have to get the interesting pieces out of the feed reader and into a collection you\u2019re going to process later, or else you\u2019ll likely never see the end of your surprisingly long, intimidating \u201cunread items\u201d queue. When your list of unread items is longer than you\u2019d like, the objective is to empty it as quick as possible. Only then will you be prepared to receive additional news and stay up to date. Next, consider the tools to consume your feeds. The impact of a change of tools grows with the size of your list of subscriptions.","title":"Skim RSS feeds only"},{"location":"Literary%20Notes/Note%20Taking%20and%20The%20Internet%20Best%20Practices/#manage-rss-subscriptions-online","text":"There is free software on the market to subscribe to RSS feeds. NetNewsWire is a popular application for the Mac, for example. But there\u2019s online feed reading services, too. With services like FeedWrangler or Minimal Reader , you can manage your subscriptions independent from your device. In contrast to managing subscriptions in an application on your computer, this enables you to read your news feeds on your smartphone, too. There are apps for iPhone and Android I know of which you can utilize to synchronize your online feed reading service to your smartphone. There, the articles will be downloaded for you so you don\u2019t need an internet connection all the time while you sieve your unread items list. Popular apps are Mr. Reader or Reeder for iOS, and Pocket for iOS and Mac. Feedly runs on both iOS and Android, and it has a web interface suitable for your computer. Check out Gabe\u2019s comparison of RSS feed reader services to find out which web service fits your needs if you haven\u2019t decided, yet.","title":"Manage RSS subscriptions online"},{"location":"Literary%20Notes/Note%20Taking%20and%20The%20Internet%20Best%20Practices/#smartphones-are-great-for-filtering-not-so-much-for-processing-stuff","text":"I consume my RSS subscriptions on my iPhone. I can\u2019t write notes for my Zettelkasten note archive from my iPhone, though. The note-taking software available just don\u2019t do what I need. Only from my Mac do I have direct access to the full Zettelkasten note archive at the moment. This creates a gap between the inflow of interesting articles and the outflow of useful notes. On the Mac, it\u2019s straightforward to create a note: I just fire up nvALT , my note-taking software of choice. When I read on my iPhone, I have to shovel interesting stuff from my feed reader to my Mac over the air, through the Cloud, where nvALT awaits. Consequently, I can only prepare interesting posts on my iPhone to process them later. If I want to add information to my knowledge, it doesn\u2019t pay off to immerse into an article and read it in whole on a mobile device: once I\u2019m at home and on my Mac, I will have to read the article again anyhow to create useful notes \u2013 especially since I tend to be quite forgetful. Reading a whole article on the iPhone is a welcome pastime, but it\u2019s not an efficient way to expand my knowledge. Thus I ask myself: do I want to read something just to \u201c edu-tain \u201d myself, or do I need to work with it later? The answer to this question determines whether I will read the article or just skim and file it. Thus, reading the articles in my RSS reader is both inefficient and ineffective . It\u2019s inefficient because I don\u2019t reach the end of my subscription queue and because I may have to read it twice \u2013 once on the iPhone and once on the Mac. It\u2019s ineffective because I don\u2019t expand my knowledge permanently when I have no tool to take notes at hand. Mobile devices are great for filtering stuff, though. Recall the flow of information: Flow from stuff to reference material. On my phone, I prepare stuff \u2013 that\u2019s web pages and news feed items \u2013 to become an actual thing in terms of my knowledge management system. That\u2019s what a reading list is for. Although I can\u2019t write notes for my archive in a reasonable way, I can still decide which articles I want to take note of. In this respect is my iPhone a device to filter the web and my feeds. My RSS feed reader is not an inbox in the flow chart because I consider my subscriptions to be outside of my system, just like the whole web itself is outside of it. Unread items in my feed reader have to become a thing in my system first. I deliberately pick the articles I want to cover when I put them into my reading list. They\u2019re still not processed, but I commit to take care of them. I make them become a thing which I can handle. Therefore, I use my list of RSS feed items mainly as a source of information which I skim and from which I select useful pieces. The work takes place on my Mac.","title":"Smartphones are great for filtering \u2013 not so much for processing stuff"},{"location":"Literary%20Notes/Note%20Taking%20and%20The%20Internet%20Best%20Practices/#summing-up","text":"Here\u2019s a quick sketch of how filtering and preparation look in my case: Since it\u2019s impractical to create reference notes on the iPhone, I only skim articles to select interesting pieces. To prepare items for later processing is practical on the iPhone. From my mobile feed reader, I can send articles to read-later services like Instapaper or bookmark them in Pinboard to get them out. On my Mac, I have access to these cloud-based services. I read the articles and take notes. Also, I create reference items, create local copies of web pages if I need to, and archive the source information. A smartphone, I argue, is a suitable filter from \u201cstuff\u201d to \u201cinbox.\u201d The rest of the action usually takes place elsewhere, though. To answer the questions from the beginning of this post: How am I supposed to deal with these streams when only a fraction of the links are of real value to me? I deal with the inflow of information by forcing myself to select quickly which items deserve my attention and which don\u2019t. I can\u2019t pay attention to everything, and I can\u2019t read every article from start to finish. I need to decide: do I browse the web for fun or to expand my knowledge? This determines my mode of reading. How do I take lasting notes? I read web pages or RSS feed subscriptions on my mobile device. I take lasting notes on my Mac only. Mobile devices can be useful to filter the load of unread feed items because services like Instapaper exis[[Literary Notes/Zettelkasten]] ex[[Literary Notes/The Collector's Fallacy]] th[[Literary Notes/Information Flow]]the[[Maps of Content/Personal Knowledge Management]]ckl[[Literary Notes/Rinse and Repeat - Research, Read, Assimilate]]llacy]] Information Flow Personal Knowledge Management Rinse and Repeat - Research, Read, Assimilate","title":"Summing up"},{"location":"Literary%20Notes/PKM%20-%20Trust%20the%20Process/","text":"Source Type: #Type/Source/Article Category: #Category/PKM Status: #Status/Permanent PKM - Trust the Process \u00b6 Source: Trust the Process What does knowledge processing mean to you? Have you ever reflected on the meaning and purpose behind the processing of information and [[Literary Notes/Information Flow]]mation Flow]]? Processing forces one to think critically, categorize ideas, relate them to similar ideas, and come up with metaphors/analogies/stories to better convey those ideas. In other words, The Process Improves Thinking . The Process solidifies thoughts you deem worthy of remembering, and by working The Process, you strengthen the ability to recall those worthy things in your life. The Process Strengthens Memory. Most importantly, it\u2019s not the destination but the journey. Or put another way, the journey IS the destination. When I was young, my dad said we could open presents a day early if we solved his riddle. I chewed on the riddle trying to solve it. It was riveting to have a good riddle. Then my brother emerged from the computer room (having just been on the internet) and he blurted out the answer. You\u2019d think I would have been happy to open presents; but instead I was disappointed because I was robbed of a juicy riddle. It\u2019s not the answer, it\u2019s the riddle itself that matters. Or put another way, the riddle IS the answer. It\u2019s a means unto itself, full of its own joy and fulfillment. The Process is Fulfilling. _ Trust the Process. The Process is the Answer. [[Literary Notes/Zettelkasten]]lin[[Literary Notes/The Collector's Fallacy]][[T[[Literary Notes/Information Flow]]cy][[Maps of Content/Personal Knowledge Management]]rso[[Literary Notes/Rinse and Repeat - Research, Read, Assimilate]]- R[[Literary Notes/Collectors Do Not Make Progress]]llectors Do Not Make Progress]]","title":"PKM   Trust the Process"},{"location":"Literary%20Notes/PKM%20-%20Trust%20the%20Process/#pkm-trust-the-process","text":"Source: Trust the Process What does knowledge processing mean to you? Have you ever reflected on the meaning and purpose behind the processing of information and [[Literary Notes/Information Flow]]mation Flow]]? Processing forces one to think critically, categorize ideas, relate them to similar ideas, and come up with metaphors/analogies/stories to better convey those ideas. In other words, The Process Improves Thinking . The Process solidifies thoughts you deem worthy of remembering, and by working The Process, you strengthen the ability to recall those worthy things in your life. The Process Strengthens Memory. Most importantly, it\u2019s not the destination but the journey. Or put another way, the journey IS the destination. When I was young, my dad said we could open presents a day early if we solved his riddle. I chewed on the riddle trying to solve it. It was riveting to have a good riddle. Then my brother emerged from the computer room (having just been on the internet) and he blurted out the answer. You\u2019d think I would have been happy to open presents; but instead I was disappointed because I was robbed of a juicy riddle. It\u2019s not the answer, it\u2019s the riddle itself that matters. Or put another way, the riddle IS the answer. It\u2019s a means unto itself, full of its own joy and fulfillment. The Process is Fulfilling. _ Trust the Process. The Process is the Answer. [[Literary Notes/Zettelkasten]]lin[[Literary Notes/The Collector's Fallacy]][[T[[Literary Notes/Information Flow]]cy][[Maps of Content/Personal Knowledge Management]]rso[[Literary Notes/Rinse and Repeat - Research, Read, Assimilate]]- R[[Literary Notes/Collectors Do Not Make Progress]]llectors Do Not Make Progress]]","title":"PKM - Trust the Process"},{"location":"Literary%20Notes/Personal%20Knowledge%20Management%20with%20Zettelkasten%20and%20Obsidian/","text":"Source Type: #Type/Source/Article Category: #Category/PKM Personal Knowledge Management with Zettelkasten and Obsidian \u00b6 C[[Maps of Content/Personal Knowledge Management]]Managemen[[Placeholders/Building a Second Brain]]econd Brai[[Placeholders/PARA]]B) [[Literary Notes/Zettelkasten]][Zet[[Placeholders/Evergreen Notes]]ver[[Placeholders/Linking Your Thinking - LYT]] Th[[Placeholders/Markdown]]]] [[Placeholders/Obsidian]]n]][[Placeholders/Version Control]] Version Control Inputs \u00b6 Variety of inputs that feed my knowledge: - Online Articles and Blog Posts - GitHub Repositories and Code - YouTube Videos - Podcasts - Books - Personal Notes - e[[Placeholders/Raindrop.io]] ma[[Placeholders/Instapaper]]- [[[Placeholders/Feedly]]io][[Placeholders/Readwise]]pap[[Placeholders/Zotero]]Fee[[Placeholders/GitHub]][Read[[Placeholders/GitHub Gists]]ro]] - GitHub and GitHub Gists PKM Domains \u00b6 Quick Capture Status Tracking Search and Filter Association Traversal Structural Rigidity Temporal Components Input Types Automation Curation Smart Lens My System \u00b6 M[[Placeholders/Git]] M[[Placeholders/GitHub]]s My Toolbelt: [[Todoist]] Git and GitHub Readwise Raindrop.io PocketCasts [[Placeholders/Obsidian]] - Zotero [[Visual Studio Code]] [[Typora]] Obsidian My Templates Generic Note Template Daily Note Template Person Template Project Template Agenda Template My Status Tracking Strategies How I Search, Filter, and Traverse my Notebase How I Process Literature Notes Theory and Definitions \u00b6 Evergreen Notes [[Maps of Content/README|Maps of Content]] API N[[Literary Notes/Information Flow]]kasten Atomic Notes Digital Garden Knowledge Curation and Information Flow [[Seek, Sense, Share]] Obsidian Plugins \u00b6 Reference: - Personal Knowledge Management with Zettelkasten and Obsidian - Building a Second Brain An Overview - Forte Labs - Zettelkasten knowledge and info management \u2022 Zettelkasten Method - Obsidian A knowledge base that works on local Markdown files. Personal Knowledge Management with Zettelkasten and Obsidian \u00b6 Source: <URL> Backlinks: \u00b6","title":"Personal Knowledge Management with Zettelkasten and Obsidian"},{"location":"Literary%20Notes/Personal%20Knowledge%20Management%20with%20Zettelkasten%20and%20Obsidian/#personal-knowledge-management-with-zettelkasten-and-obsidian","text":"C[[Maps of Content/Personal Knowledge Management]]Managemen[[Placeholders/Building a Second Brain]]econd Brai[[Placeholders/PARA]]B) [[Literary Notes/Zettelkasten]][Zet[[Placeholders/Evergreen Notes]]ver[[Placeholders/Linking Your Thinking - LYT]] Th[[Placeholders/Markdown]]]] [[Placeholders/Obsidian]]n]][[Placeholders/Version Control]] Version Control","title":"Personal Knowledge Management with Zettelkasten and Obsidian"},{"location":"Literary%20Notes/Personal%20Knowledge%20Management%20with%20Zettelkasten%20and%20Obsidian/#inputs","text":"Variety of inputs that feed my knowledge: - Online Articles and Blog Posts - GitHub Repositories and Code - YouTube Videos - Podcasts - Books - Personal Notes - e[[Placeholders/Raindrop.io]] ma[[Placeholders/Instapaper]]- [[[Placeholders/Feedly]]io][[Placeholders/Readwise]]pap[[Placeholders/Zotero]]Fee[[Placeholders/GitHub]][Read[[Placeholders/GitHub Gists]]ro]] - GitHub and GitHub Gists","title":"Inputs"},{"location":"Literary%20Notes/Personal%20Knowledge%20Management%20with%20Zettelkasten%20and%20Obsidian/#pkm-domains","text":"Quick Capture Status Tracking Search and Filter Association Traversal Structural Rigidity Temporal Components Input Types Automation Curation Smart Lens","title":"PKM Domains"},{"location":"Literary%20Notes/Personal%20Knowledge%20Management%20with%20Zettelkasten%20and%20Obsidian/#my-system","text":"M[[Placeholders/Git]] M[[Placeholders/GitHub]]s My Toolbelt: [[Todoist]] Git and GitHub Readwise Raindrop.io PocketCasts [[Placeholders/Obsidian]] - Zotero [[Visual Studio Code]] [[Typora]] Obsidian My Templates Generic Note Template Daily Note Template Person Template Project Template Agenda Template My Status Tracking Strategies How I Search, Filter, and Traverse my Notebase How I Process Literature Notes","title":"My System"},{"location":"Literary%20Notes/Personal%20Knowledge%20Management%20with%20Zettelkasten%20and%20Obsidian/#theory-and-definitions","text":"Evergreen Notes [[Maps of Content/README|Maps of Content]] API N[[Literary Notes/Information Flow]]kasten Atomic Notes Digital Garden Knowledge Curation and Information Flow [[Seek, Sense, Share]]","title":"Theory and Definitions"},{"location":"Literary%20Notes/Personal%20Knowledge%20Management%20with%20Zettelkasten%20and%20Obsidian/#obsidian-plugins","text":"Reference: - Personal Knowledge Management with Zettelkasten and Obsidian - Building a Second Brain An Overview - Forte Labs - Zettelkasten knowledge and info management \u2022 Zettelkasten Method - Obsidian A knowledge base that works on local Markdown files.","title":"Obsidian Plugins"},{"location":"Literary%20Notes/Personal%20Knowledge%20Management%20with%20Zettelkasten%20and%20Obsidian/#personal-knowledge-management-with-zettelkasten-and-obsidian_1","text":"Source: <URL>","title":"Personal Knowledge Management with Zettelkasten and Obsidian"},{"location":"Literary%20Notes/Personal%20Knowledge%20Management%20with%20Zettelkasten%20and%20Obsidian/#backlinks","text":"","title":"Backlinks:"},{"location":"Literary%20Notes/R%20Package%20-%20conjuror/","text":"R Package - conjuror \u00b6 KasaAI [[R]] Overview \u00b6 Data simulators are important for advancing insurance research because publicly available datasets from industry are scarce. The conjuror package and conventions aim to unify the interfaces of data simulation packages and make them more accessible to researchers and practitioners. It provides a set of standardized methods and functions for package authors to implement and use, along with a set of principles for each research discipline developed with input from the community. Framework \u00b6 The main class in conjuror is charm , representing a specification that includes parameters needed to define a simulation run. The conjuror package provides the scribe() function as the constructor of charms, and package authors can call it from a user-facing helper function. The conjure() method is an [[S3 Generic]], which should be implemented for each charm class. In other words, a simulation package should provide at least two user-facing functions: A helper function, e.g. my_simulator() , that takes user-input parameters and returns an object of class [c(\"my_simulator\", \"charm\")] . A conjure.my_simulator() method that performs the actual simulation. It is expected that parameters related to mathematical properties of the simulation be defined in the constructor, while parameters dealing with runtime behavior, such as random seeds and parallelism, be defined in the conjure() method. Example \u00b6 See the simulationmachine package for a sample implementation of the conjuror interface. Installation \u00b6 You can install the current development version of conjuror from GitHub with remotes::install_github(\"kasaai/conjuror\") General Principles \u00b6 https://conjuror.kasa.ai/articles/general-principles.html While the data formats and interfaces will be different for each discipline, there are a few conventions that we follow in general. The output data should be tidy . The output should be a tibble . All argument names and variable names should be in snake_case . The print() method should include a short description on what each row represents. Individual Claims \u00b6 https://conjuror.kasa.ai/articles/individual-claims.html This article outlines the conventions for simulators that generate individual claims data for P&C (aka general and nonlife) insurance. Data Format \u00b6 Each row should represent the state of a claim at one point in time. Good: #> # A tibble: 3 x 4 #> claim_id accident_year development_year paid_loss #> <chr> <int> <int> <dbl> #> 1 00001 2000 1 250 #> 2 00001 2000 2 150 #> 3 00001 2000 3 50 Bad: #> # A tibble: 1 x 5 #> claim_id accident_year paid_loss_1 paid_loss_2 paid_loss_3 #> <chr> <int> <dbl> <dbl> <dbl> #> 1 00001 2000 250 150 50 We note that the output should be at the most granular level possible, which allows the user to aggregate up as needed. For example, if instead of accident year, the simulator produces accident dates and transaction dates, those should be included instead of accident/development periods. Variables with redundant information should not be included. E.g. if accident_year and reporting_delay are included, reporting_lag should not be included. Column Names and Types \u00b6 In the following table, we list the preferred names for various variables that may be included in the output of a simulator. If you\u2019re writing a conjuror implementation that introduces new names, please open an issue or PR with the proposal. Description Pattern Example Type Accident Period accident_* accident_year integer Identifiers *_id claim_id character Development Periods development_* development_year integer Incremental Paid Losses paid_loss double Categorical Claim and Policy Characteristics claimaint_age character","title":"R Package - conjuror"},{"location":"Literary%20Notes/R%20Package%20-%20conjuror/#r-package-conjuror","text":"KasaAI [[R]]","title":"R Package - conjuror"},{"location":"Literary%20Notes/R%20Package%20-%20conjuror/#overview","text":"Data simulators are important for advancing insurance research because publicly available datasets from industry are scarce. The conjuror package and conventions aim to unify the interfaces of data simulation packages and make them more accessible to researchers and practitioners. It provides a set of standardized methods and functions for package authors to implement and use, along with a set of principles for each research discipline developed with input from the community.","title":"Overview"},{"location":"Literary%20Notes/R%20Package%20-%20conjuror/#framework","text":"The main class in conjuror is charm , representing a specification that includes parameters needed to define a simulation run. The conjuror package provides the scribe() function as the constructor of charms, and package authors can call it from a user-facing helper function. The conjure() method is an [[S3 Generic]], which should be implemented for each charm class. In other words, a simulation package should provide at least two user-facing functions: A helper function, e.g. my_simulator() , that takes user-input parameters and returns an object of class [c(\"my_simulator\", \"charm\")] . A conjure.my_simulator() method that performs the actual simulation. It is expected that parameters related to mathematical properties of the simulation be defined in the constructor, while parameters dealing with runtime behavior, such as random seeds and parallelism, be defined in the conjure() method.","title":"Framework"},{"location":"Literary%20Notes/R%20Package%20-%20conjuror/#example","text":"See the simulationmachine package for a sample implementation of the conjuror interface.","title":"Example"},{"location":"Literary%20Notes/R%20Package%20-%20conjuror/#installation","text":"You can install the current development version of conjuror from GitHub with remotes::install_github(\"kasaai/conjuror\")","title":"Installation"},{"location":"Literary%20Notes/R%20Package%20-%20conjuror/#general-principles","text":"https://conjuror.kasa.ai/articles/general-principles.html While the data formats and interfaces will be different for each discipline, there are a few conventions that we follow in general. The output data should be tidy . The output should be a tibble . All argument names and variable names should be in snake_case . The print() method should include a short description on what each row represents.","title":"General Principles"},{"location":"Literary%20Notes/R%20Package%20-%20conjuror/#individual-claims","text":"https://conjuror.kasa.ai/articles/individual-claims.html This article outlines the conventions for simulators that generate individual claims data for P&C (aka general and nonlife) insurance.","title":"Individual Claims"},{"location":"Literary%20Notes/R%20Package%20-%20conjuror/#data-format","text":"Each row should represent the state of a claim at one point in time. Good: #> # A tibble: 3 x 4 #> claim_id accident_year development_year paid_loss #> <chr> <int> <int> <dbl> #> 1 00001 2000 1 250 #> 2 00001 2000 2 150 #> 3 00001 2000 3 50 Bad: #> # A tibble: 1 x 5 #> claim_id accident_year paid_loss_1 paid_loss_2 paid_loss_3 #> <chr> <int> <dbl> <dbl> <dbl> #> 1 00001 2000 250 150 50 We note that the output should be at the most granular level possible, which allows the user to aggregate up as needed. For example, if instead of accident year, the simulator produces accident dates and transaction dates, those should be included instead of accident/development periods. Variables with redundant information should not be included. E.g. if accident_year and reporting_delay are included, reporting_lag should not be included.","title":"Data Format"},{"location":"Literary%20Notes/R%20Package%20-%20conjuror/#column-names-and-types","text":"In the following table, we list the preferred names for various variables that may be included in the output of a simulator. If you\u2019re writing a conjuror implementation that introduces new names, please open an issue or PR with the proposal. Description Pattern Example Type Accident Period accident_* accident_year integer Identifiers *_id claim_id character Development Periods development_* development_year integer Incremental Paid Losses paid_loss double Categorical Claim and Policy Characteristics claimaint_age character","title":"Column Names and Types"},{"location":"Literary%20Notes/R%20Package%20-%20insurancerating/","text":"R Package - insurancerating \u00b6 MHaringa/insurancerating: R-package for actuarial pricing","title":"R Package - `insurancerating`"},{"location":"Literary%20Notes/R%20Package%20-%20insurancerating/#r-package-insurancerating","text":"MHaringa/insurancerating: R-package for actuarial pricing","title":"R Package - insurancerating"},{"location":"Literary%20Notes/R%20Package%20-%20simulationmachine/","text":"R Package - simulationmachine \u00b6 [[Actuarial Science]] KasaAI R Package - conjuror Link: kasaai/simulationmachine - GitHub","title":"R Package - simulationmachine"},{"location":"Literary%20Notes/R%20Package%20-%20simulationmachine/#r-package-simulationmachine","text":"[[Actuarial Science]] KasaAI R Package - conjuror Link: kasaai/simulationmachine - GitHub","title":"R Package - simulationmachine"},{"location":"Literary%20Notes/REST%20API%20HTTP%20Status%20Codes/","text":"REST API HTTP Status Codes \u00b6 Source: https://www.restapitutorial.com/httpstatuscodes.html HTTP Status Codes \u00b6 This page is created from HTTP status code information found at ietf.org and Wikipedia . Click on the category heading or the status code link to read more. 1xx Informational \u00b6 100 Continue 101 Switching Protocols 102 Processing (WebDAV) 2xx Success \u00b6 200 OK 201 Created 202 Accepted 203 Non-Authoritative Information 204 No Content 205 Reset Content 206 Partial Content 207 Multi-Status (WebDAV) 208 Already Reported (WebDAV) 226 IM Used 3xx Redirection \u00b6 300 Multiple Choices 301 Moved Permanently 302 Found 303 See Other 304 Not Modified 305 Use Proxy 306 (Unused) 307 Temporary Redirect 308 Permanent Redirect (experimental) 4xx Client Error \u00b6 400 Bad Request 401 Unauthorized 402 Payment Required 403 Forbidden 404 Not Found 405 Method Not Allowed 406 Not Acceptable 407 Proxy Authentication Required 408 Request Timeout 409 Conflict 410 Gone 411 Length Required 412 Precondition Failed 413 Request Entity Too Large 414 Request-URI Too Long 415 Unsupported Media Type 416 Requested Range Not Satisfiable 417 Expectation Failed 418 I'm a teapot (RFC 2324) 420 Enhance Your Calm (Twitter) 422 Unprocessable Entity (WebDAV) 423 Locked (WebDAV) 424 Failed Dependency (WebDAV) 425 Reserved for WebDAV 426 Upgrade Required 428 Precondition Required 429 Too Many Requests 431 Request Header Fields Too Large 444 No Response (Nginx) 449 Retry With (Microsoft) 450 Blocked by Windows Parental Controls (Microsoft) 451 Unavailable For Legal Reasons 499 Client Closed Request (Nginx) 5xx Server Error \u00b6 500 Internal Server Error 501 Not Implemented 502 Bad Gateway 503 Service Unavailable 504 Gateway Timeout 505 HTTP Version Not Supported 506 Variant Also Negotiates (Experimental) 507 Insufficient Storage (WebDAV) 508 Loop Detected (WebDAV) 509 Bandwidth Limit Exceeded (Apache) 510 Not Extended 511 Network Authentication Required 598 Network read timeout error 599 Network connect timeout error REST APIs REST API Resources REST API HTTP Status Codes REST API Resource Naming REST API Idempotence [[R Package - plumber]] [[Python Flask]]","title":"REST API HTTP Status Codes"},{"location":"Literary%20Notes/REST%20API%20HTTP%20Status%20Codes/#rest-api-http-status-codes","text":"Source: https://www.restapitutorial.com/httpstatuscodes.html","title":"REST API HTTP Status Codes"},{"location":"Literary%20Notes/REST%20API%20HTTP%20Status%20Codes/#http-status-codes","text":"This page is created from HTTP status code information found at ietf.org and Wikipedia . Click on the category heading or the status code link to read more.","title":"HTTP Status Codes"},{"location":"Literary%20Notes/REST%20API%20HTTP%20Status%20Codes/#1xx-informational","text":"100 Continue 101 Switching Protocols 102 Processing (WebDAV)","title":"1xx Informational"},{"location":"Literary%20Notes/REST%20API%20HTTP%20Status%20Codes/#2xx-success","text":"200 OK 201 Created 202 Accepted 203 Non-Authoritative Information 204 No Content 205 Reset Content 206 Partial Content 207 Multi-Status (WebDAV) 208 Already Reported (WebDAV) 226 IM Used","title":"2xx Success"},{"location":"Literary%20Notes/REST%20API%20HTTP%20Status%20Codes/#3xx-redirection","text":"300 Multiple Choices 301 Moved Permanently 302 Found 303 See Other 304 Not Modified 305 Use Proxy 306 (Unused) 307 Temporary Redirect 308 Permanent Redirect (experimental)","title":"3xx Redirection"},{"location":"Literary%20Notes/REST%20API%20HTTP%20Status%20Codes/#4xx-client-error","text":"400 Bad Request 401 Unauthorized 402 Payment Required 403 Forbidden 404 Not Found 405 Method Not Allowed 406 Not Acceptable 407 Proxy Authentication Required 408 Request Timeout 409 Conflict 410 Gone 411 Length Required 412 Precondition Failed 413 Request Entity Too Large 414 Request-URI Too Long 415 Unsupported Media Type 416 Requested Range Not Satisfiable 417 Expectation Failed 418 I'm a teapot (RFC 2324) 420 Enhance Your Calm (Twitter) 422 Unprocessable Entity (WebDAV) 423 Locked (WebDAV) 424 Failed Dependency (WebDAV) 425 Reserved for WebDAV 426 Upgrade Required 428 Precondition Required 429 Too Many Requests 431 Request Header Fields Too Large 444 No Response (Nginx) 449 Retry With (Microsoft) 450 Blocked by Windows Parental Controls (Microsoft) 451 Unavailable For Legal Reasons 499 Client Closed Request (Nginx)","title":"4xx Client Error"},{"location":"Literary%20Notes/REST%20API%20HTTP%20Status%20Codes/#5xx-server-error","text":"500 Internal Server Error 501 Not Implemented 502 Bad Gateway 503 Service Unavailable 504 Gateway Timeout 505 HTTP Version Not Supported 506 Variant Also Negotiates (Experimental) 507 Insufficient Storage (WebDAV) 508 Loop Detected (WebDAV) 509 Bandwidth Limit Exceeded (Apache) 510 Not Extended 511 Network Authentication Required 598 Network read timeout error 599 Network connect timeout error REST APIs REST API Resources REST API HTTP Status Codes REST API Resource Naming REST API Idempotence [[R Package - plumber]] [[Python Flask]]","title":"5xx Server Error"},{"location":"Literary%20Notes/REST%20API%20Idempotence/","text":"REST API Idempotence \u00b6 Idempotence \u00b6 Idempotence is a funky word that often hooks people. Idempotence is sometimes a confusing concept, at least from the academic definition. From a RESTful service standpoint, for an operation (or service call) to be idempotent, clients can make that same call repeatedly while producing the same result. In other words, making multiple identical requests has the same effect as making a single request. Note that while idempotent operations produce the same result on the server (no side effects), the response itself may not be the same (e.g. a resource's state may change between requests). The PUT and DELETE methods are defined to be idempotent. However, there is a caveat on DELETE. The problem with DELETE, which if successful would normally return a 200 (OK) or 204 (No Content), will often return a 404 (Not Found) on subsequent calls, unless the service is configured to \"mark\" resources for deletion without actually deleting them. However, when the service actually deletes the resource, the next call will not find the resource to delete it and return a 404. However, the state on the server is the same after each DELETE call, but the response is different. GET, HEAD, OPTIONS and TRACE methods are defined as safe, meaning they are only intended for retrieving data. This makes them idempotent as well since multiple, identical requests will behave the same. REST APIs REST API Resources REST API HTTP Status Codes REST API Resource Naming REST API HTTP Status Codes [[R Package - plumber]] [[Python Flask]]","title":"REST API Idempotence"},{"location":"Literary%20Notes/REST%20API%20Idempotence/#rest-api-idempotence","text":"","title":"REST API Idempotence"},{"location":"Literary%20Notes/REST%20API%20Idempotence/#idempotence","text":"Idempotence is a funky word that often hooks people. Idempotence is sometimes a confusing concept, at least from the academic definition. From a RESTful service standpoint, for an operation (or service call) to be idempotent, clients can make that same call repeatedly while producing the same result. In other words, making multiple identical requests has the same effect as making a single request. Note that while idempotent operations produce the same result on the server (no side effects), the response itself may not be the same (e.g. a resource's state may change between requests). The PUT and DELETE methods are defined to be idempotent. However, there is a caveat on DELETE. The problem with DELETE, which if successful would normally return a 200 (OK) or 204 (No Content), will often return a 404 (Not Found) on subsequent calls, unless the service is configured to \"mark\" resources for deletion without actually deleting them. However, when the service actually deletes the resource, the next call will not find the resource to delete it and return a 404. However, the state on the server is the same after each DELETE call, but the response is different. GET, HEAD, OPTIONS and TRACE methods are defined as safe, meaning they are only intended for retrieving data. This makes them idempotent as well since multiple, identical requests will behave the same. REST APIs REST API Resources REST API HTTP Status Codes REST API Resource Naming REST API HTTP Status Codes [[R Package - plumber]] [[Python Flask]]","title":"Idempotence"},{"location":"Literary%20Notes/REST%20API%20Methods/","text":"REST API Methods \u00b6 Source: REST API Tutorial HTTP Methods . Contents \u00b6 Using HTTP Methods for RESTful Services Methods in Detail POST GET PUT PATCH DELETE Using HTTP Methods for RESTful Services \u00b6 The HTTP verbs comprise a major portion of our \u201cuniform interface\u201d constraint and provide us the action counterpart to the noun-based resource. The primary or most-commonly-used HTTP verbs (or methods, as they are properly called) are POST , GET , PUT , PATCH , and DELETE . These correspond to create, read, update, and delete (or CRUD ) operations, respectively. There are a number of other verbs, too, but are utilized less frequently. Of those less-frequent methods, OPTIONS and HEAD are used more often than others. Below is a table summarizing recommended return values of the primary HTTP methods in combination with the resource URIs: HTTP Verb CRUD Entire Collection (e.g. /customers) Specific Item (e.g. /customers/{id}) POST Create 201 (Created), 'Location' header with link to /customers/{id} containing new ID. 404 (Not Found), 409 (Conflict) if resource already exists.. GET Read 200 (OK), list of customers. Use pagination, sorting and filtering to navigate big lists. 200 (OK), single customer. 404 (Not Found), if ID not found or invalid. PUT Update/Replace 405 (Method Not Allowed), unless you want to update/replace every resource in the entire collection. 200 (OK) or 204 (No Content). 404 (Not Found), if ID not found or invalid. PATCH Update/Modify 405 (Method Not Allowed), unless you want to modify the collection itself. 200 (OK) or 204 (No Content). 404 (Not Found), if ID not found or invalid. DELETE Delete 405 (Method Not Allowed), unless you want to delete the whole collection\u2014not often desirable. 200 (OK). 404 (Not Found), if ID not found or invalid. Methods in Detail \u00b6 POST \u00b6 The POST verb is most-often utilized to create new resources. In particular, it's used to create subordinate resources. That is, subordinate to some other (e.g. parent) resource. In other words, when creating a new resource, POST to the parent and the service takes care of associating the new resource with the parent, assigning an ID (new resource URI), etc. On successful creation, return HTTP status 201, returning a Location header with a link to the newly-created resource with the 201 HTTP status. POST is neither safe nor idempotent. It is therefore recommended for non-idempotent resource requests. Making two identical POST requests will most-likely result in two resources containing the same information. Examples: POST http://www.example.com/customers POST http://www.example.com/customers/12345/orders GET \u00b6 The HTTP GET method is used to read (or retrieve) a representation of a resource. In the \u201chappy\u201d (or non-error) path, GET returns a representation in XML or JSON and an HTTP response code of 200 (OK). In an error case, it most often returns a 404 (NOT FOUND) or 400 (BAD REQUEST). According to the design of the HTTP specification, GET (along with HEAD) requests are used only to read data and not change it. Therefore, when used this way, they are considered safe. That is, they can be called without risk of data modification or corruption\u2014calling it once has the same effect as calling it 10 times, or none at all. Additionally, GET (and HEAD) is idempotent, which means that making multiple identical requests ends up having the same result as a single request. Do not expose unsafe operations via GET\u2014it should never modify any resources on the server. Examples: GET http://www.example.com/customers/12345 GET http://www.example.com/customers/12345/orders GET http://www.example.com/buckets/sample PUT \u00b6 PUT is most-often utilized for update capabilities, PUT-ing to a known resource URI with the request body containing the newly-updated representation of the original resource. However, PUT can also be used to create a resource in the case where the resource ID is chosen by the client instead of by the server. In other words, if the PUT is to a URI that contains the value of a non-existent resource ID. Again, the request body contains a resource representation. Many feel this is convoluted and confusing. Consequently, this method of creation should be used sparingly, if at all. Alternatively, use POST to create new resources and provide the client-defined ID in the body representation\u2014presumably to a URI that doesn't include the ID of the resource (see POST below). On successful update, return 200 (or 204 if not returning any content in the body) from a PUT. If using PUT for create, return HTTP status 201 on successful creation. A body in the response is optional\u2014providing one consumes more bandwidth. It is not necessary to return a link via a Location header in the creation case since the client already set the resource ID. PUT is not a safe operation, in that it modifies (or creates) state on the server, but it is idempotent. In other words, if you create or update a resource using PUT and then make that same call again, the resource is still there and still has the same state as it did with the first call. If, for instance, calling PUT on a resource increments a counter within the resource, the call is no longer idempotent. Sometimes that happens and it may be enough to document that the call is not idempotent. However, it's recommended to keep PUT requests idempotent. It is strongly recommended to use POST for non-idempotent requests. Examples: PUT http://www.example.com/customers/12345 PUT http://www.example.com/customers/12345/orders/98765 PUT http://www.example.com/buckets/secret_stuff PATCH \u00b6 PATCH is used for modify capabilities. The PATCH request only needs to contain the changes to the resource, not the complete resource. This resembles PUT, but the body contains a set of instructions describing how a resource currently residing on the server should be modified to produce a new version. This means that the PATCH body should not just be a modified part of the resource, but in some kind of patch language like JSON Patch or XML Patch. PATCH is neither safe nor idempotent. However, a PATCH request can be issued in such a way as to be idempotent, which also helps prevent bad outcomes from collisions between two PATCH requests on the same resource in a similar time frame. Collisions from multiple PATCH requests may be more dangerous than PUT collisions because some patch formats need to operate from a known base-point or else they will corrupt the resource. Clients using this kind of patch application should use a conditional request such that the request will fail if the resource has been updated since the client last accessed the resource. For example, the client can use a strong ETag in an If-Match header on the PATCH request. Examples: PATCH http://www.example.com/customers/12345 PATCH http://www.example.com/customers/12345/orders/98765 PATCH http://www.example.com/buckets/secret_stuff DELETE \u00b6 DELETE is pretty easy to understand. It is used to delete a resource identified by a URI. On successful deletion, return HTTP status 200 (OK) along with a response body, perhaps the representation of the deleted item (often demands too much bandwidth), or a wrapped response (see Return Values below). Either that or return HTTP status 204 (NO CONTENT) with no response body. In other words, a 204 status with no body, or the JSEND-style response and HTTP status 200 are the recommended responses. HTTP-spec-wise, DELETE operations are idempotent. If you DELETE a resource, it's removed. Repeatedly calling DELETE on that resource ends up the same: the resource is gone. If calling DELETE say, decrements a counter (within the resource), the DELETE call is no longer idempotent. As mentioned previously, usage statistics and measurements may be updated while still considering the service idempotent as long as no resource data is changed. Using POST for non-idempotent resource requests is recommended. There is a caveat about DELETE idempotence, however. Calling DELETE on a resource a second time will often return a 404 (NOT FOUND) since it was already removed and therefore is no longer findable. This, by some opinions, makes DELETE operations no longer idempotent, however, the end-state of the resource is the same. Returning a 404 is acceptable and communicates accurately the status of the call. Examples: DELETE http://www.example.com/customers/12345 DELETE http://www.example.com/customers/12345/orders DELETE http://www.example.com/bucket/sample Links: REST APIs REST API Resources REST API HTTP Status Codes REST API Resource Naming REST API Idempotence [[R Package - plumber]] [[Python Flask]]","title":"REST API Methods"},{"location":"Literary%20Notes/REST%20API%20Methods/#rest-api-methods","text":"Source: REST API Tutorial HTTP Methods .","title":"REST API Methods"},{"location":"Literary%20Notes/REST%20API%20Methods/#contents","text":"Using HTTP Methods for RESTful Services Methods in Detail POST GET PUT PATCH DELETE","title":"Contents"},{"location":"Literary%20Notes/REST%20API%20Methods/#using-http-methods-for-restful-services","text":"The HTTP verbs comprise a major portion of our \u201cuniform interface\u201d constraint and provide us the action counterpart to the noun-based resource. The primary or most-commonly-used HTTP verbs (or methods, as they are properly called) are POST , GET , PUT , PATCH , and DELETE . These correspond to create, read, update, and delete (or CRUD ) operations, respectively. There are a number of other verbs, too, but are utilized less frequently. Of those less-frequent methods, OPTIONS and HEAD are used more often than others. Below is a table summarizing recommended return values of the primary HTTP methods in combination with the resource URIs: HTTP Verb CRUD Entire Collection (e.g. /customers) Specific Item (e.g. /customers/{id}) POST Create 201 (Created), 'Location' header with link to /customers/{id} containing new ID. 404 (Not Found), 409 (Conflict) if resource already exists.. GET Read 200 (OK), list of customers. Use pagination, sorting and filtering to navigate big lists. 200 (OK), single customer. 404 (Not Found), if ID not found or invalid. PUT Update/Replace 405 (Method Not Allowed), unless you want to update/replace every resource in the entire collection. 200 (OK) or 204 (No Content). 404 (Not Found), if ID not found or invalid. PATCH Update/Modify 405 (Method Not Allowed), unless you want to modify the collection itself. 200 (OK) or 204 (No Content). 404 (Not Found), if ID not found or invalid. DELETE Delete 405 (Method Not Allowed), unless you want to delete the whole collection\u2014not often desirable. 200 (OK). 404 (Not Found), if ID not found or invalid.","title":"Using HTTP Methods for RESTful Services"},{"location":"Literary%20Notes/REST%20API%20Methods/#methods-in-detail","text":"","title":"Methods in Detail"},{"location":"Literary%20Notes/REST%20API%20Methods/#post","text":"The POST verb is most-often utilized to create new resources. In particular, it's used to create subordinate resources. That is, subordinate to some other (e.g. parent) resource. In other words, when creating a new resource, POST to the parent and the service takes care of associating the new resource with the parent, assigning an ID (new resource URI), etc. On successful creation, return HTTP status 201, returning a Location header with a link to the newly-created resource with the 201 HTTP status. POST is neither safe nor idempotent. It is therefore recommended for non-idempotent resource requests. Making two identical POST requests will most-likely result in two resources containing the same information. Examples: POST http://www.example.com/customers POST http://www.example.com/customers/12345/orders","title":"POST"},{"location":"Literary%20Notes/REST%20API%20Methods/#get","text":"The HTTP GET method is used to read (or retrieve) a representation of a resource. In the \u201chappy\u201d (or non-error) path, GET returns a representation in XML or JSON and an HTTP response code of 200 (OK). In an error case, it most often returns a 404 (NOT FOUND) or 400 (BAD REQUEST). According to the design of the HTTP specification, GET (along with HEAD) requests are used only to read data and not change it. Therefore, when used this way, they are considered safe. That is, they can be called without risk of data modification or corruption\u2014calling it once has the same effect as calling it 10 times, or none at all. Additionally, GET (and HEAD) is idempotent, which means that making multiple identical requests ends up having the same result as a single request. Do not expose unsafe operations via GET\u2014it should never modify any resources on the server. Examples: GET http://www.example.com/customers/12345 GET http://www.example.com/customers/12345/orders GET http://www.example.com/buckets/sample","title":"GET"},{"location":"Literary%20Notes/REST%20API%20Methods/#put","text":"PUT is most-often utilized for update capabilities, PUT-ing to a known resource URI with the request body containing the newly-updated representation of the original resource. However, PUT can also be used to create a resource in the case where the resource ID is chosen by the client instead of by the server. In other words, if the PUT is to a URI that contains the value of a non-existent resource ID. Again, the request body contains a resource representation. Many feel this is convoluted and confusing. Consequently, this method of creation should be used sparingly, if at all. Alternatively, use POST to create new resources and provide the client-defined ID in the body representation\u2014presumably to a URI that doesn't include the ID of the resource (see POST below). On successful update, return 200 (or 204 if not returning any content in the body) from a PUT. If using PUT for create, return HTTP status 201 on successful creation. A body in the response is optional\u2014providing one consumes more bandwidth. It is not necessary to return a link via a Location header in the creation case since the client already set the resource ID. PUT is not a safe operation, in that it modifies (or creates) state on the server, but it is idempotent. In other words, if you create or update a resource using PUT and then make that same call again, the resource is still there and still has the same state as it did with the first call. If, for instance, calling PUT on a resource increments a counter within the resource, the call is no longer idempotent. Sometimes that happens and it may be enough to document that the call is not idempotent. However, it's recommended to keep PUT requests idempotent. It is strongly recommended to use POST for non-idempotent requests. Examples: PUT http://www.example.com/customers/12345 PUT http://www.example.com/customers/12345/orders/98765 PUT http://www.example.com/buckets/secret_stuff","title":"PUT"},{"location":"Literary%20Notes/REST%20API%20Methods/#patch","text":"PATCH is used for modify capabilities. The PATCH request only needs to contain the changes to the resource, not the complete resource. This resembles PUT, but the body contains a set of instructions describing how a resource currently residing on the server should be modified to produce a new version. This means that the PATCH body should not just be a modified part of the resource, but in some kind of patch language like JSON Patch or XML Patch. PATCH is neither safe nor idempotent. However, a PATCH request can be issued in such a way as to be idempotent, which also helps prevent bad outcomes from collisions between two PATCH requests on the same resource in a similar time frame. Collisions from multiple PATCH requests may be more dangerous than PUT collisions because some patch formats need to operate from a known base-point or else they will corrupt the resource. Clients using this kind of patch application should use a conditional request such that the request will fail if the resource has been updated since the client last accessed the resource. For example, the client can use a strong ETag in an If-Match header on the PATCH request. Examples: PATCH http://www.example.com/customers/12345 PATCH http://www.example.com/customers/12345/orders/98765 PATCH http://www.example.com/buckets/secret_stuff","title":"PATCH"},{"location":"Literary%20Notes/REST%20API%20Methods/#delete","text":"DELETE is pretty easy to understand. It is used to delete a resource identified by a URI. On successful deletion, return HTTP status 200 (OK) along with a response body, perhaps the representation of the deleted item (often demands too much bandwidth), or a wrapped response (see Return Values below). Either that or return HTTP status 204 (NO CONTENT) with no response body. In other words, a 204 status with no body, or the JSEND-style response and HTTP status 200 are the recommended responses. HTTP-spec-wise, DELETE operations are idempotent. If you DELETE a resource, it's removed. Repeatedly calling DELETE on that resource ends up the same: the resource is gone. If calling DELETE say, decrements a counter (within the resource), the DELETE call is no longer idempotent. As mentioned previously, usage statistics and measurements may be updated while still considering the service idempotent as long as no resource data is changed. Using POST for non-idempotent resource requests is recommended. There is a caveat about DELETE idempotence, however. Calling DELETE on a resource a second time will often return a 404 (NOT FOUND) since it was already removed and therefore is no longer findable. This, by some opinions, makes DELETE operations no longer idempotent, however, the end-state of the resource is the same. Returning a 404 is acceptable and communicates accurately the status of the call. Examples: DELETE http://www.example.com/customers/12345 DELETE http://www.example.com/customers/12345/orders DELETE http://www.example.com/bucket/sample Links: REST APIs REST API Resources REST API HTTP Status Codes REST API Resource Naming REST API Idempotence [[R Package - plumber]] [[Python Flask]]","title":"DELETE"},{"location":"Literary%20Notes/REST%20API%20Resource%20Naming/","text":"REST API Resource Naming \u00b6 Source: REST Tutorial Lessons - RESTful Resource Naming . See Also: - REST API Methods ( HTTP Methods ) - REST API Idempotence ( Idempotence ) In addition to utilizing the HTTP verbs appropriately, resource naming is arguably the most debated and most important concept to grasp when creating an understandable, easily leveraged Web service API. When resources are named well, an API is intuitive and easy to use. Done poorly, that same API can feel klutzy and be difficult to use and understand. Below are a few tips to get you going when creating the resource URIs for your new API. Essentially, a RESTful API ends up being simply a collection of URIs, HTTP calls to those URIs and some JSON and/or XML representations of resources, many of which will contain relational links. The RESTful principal of addressability is covered by the URIs. Each resource has its own address or URI\u2014every interesting piece of information the server can provide is exposed as a resource. The constraint of uniform interface is partially addressed by the combination of URIs and HTTP verbs, and using them in line with the standards and conventions. In deciding what resources are within your system, name them as nouns as opposed to verbs or actions. In other words, a RESTful URI should refer to a resource that is a thing instead of referring to an action. Nouns have properties as verbs do not, just another distinguishing factor. Some example resources are: Users of the system. Courses in which a student is enrolled. A user's timeline of posts. The users that follow another user. An article about horseback riding. Each resource in a service suite will have at least one URI identifying it. And it's best when that URI makes sense and adequately describes the resource. URIs should follow a predictable, hierarchical structure to enhance understandability and, therefore, usability: predictable in the sense that they're consistent, hierarchical in the sense that data has structure\u2014relationships. This is not a REST rule or constraint, but it enhances the API. RESTful APIs are written for consumers. The name and structure of URIs should convey meaning to those consumers. It's often difficult to know what the data boundaries should be, but with understanding of your data, you most-likely are equipped to take a stab and what makes sense to return as a representation to your clients. Design for your clients, not for your data. Resource URI Examples \u00b6 Let's say we're describing an order system with customers, orders, line items, products, etc. Consider the URIs involved in describing the resources in this service suite: To insert (create) a new customer in the system, we might use: POST http://www.example.com/customers To read a customer with Customer ID# 33245: GET http://www.example.com/customers/33245 The same URI would be used for PUT and DELETE, to update and delete, respectively. Here are proposed URIs for products: POST http://www.example.com/products for creating a new product. GET|PUT|DELETE http://www.example.com/products/66432 for reading, updating, deleting product 66432, respectively. Now, here is where it gets fun... What about creating a new order for a customer? One option might be: POST http://www.example.com/orders And that could work to create an order, but it's arguably outside the context of a customer. Because we want to create an order for a customer (note the relationship), this URI perhaps is not as intuitive as it could be. It could be argued that the following URI would offer better clarity: POST http://www.example.com/customers/33245/orders Now we know we're creating an order for customer ID# 33245. Now what would the following return? GET http://www.example.com/customers/33245/orders Probably a list of orders that customer #33245 has created or owns. Note: we may choose to not support DELETE or PUT for that url since it's operating on a collection. Now, to continue the hierarchical concept, what about the following URI? POST http://www.example.com/customers/33245/orders/8769/lineitems That might add a line item to order #8769 (which is for customer #33245). Right! GET for that URI might return all the line items for that order. However, if line items don't make sense only in customer context or also make sense outside the context of a customer, we would offer a POST www.example.com/orders/8769/lineitems URI. Along those lines, because there may be multiple URIs for a given resource, we might also offer a GET http://www.example.com/orders/8769 URI that supports retrieving an order by number without having to know the customer number. To go one layer deeper in the hierarchy: GET http://www.example.com/customers/33245/orders/8769/lineitems/1 Might return only the first line item in that same order. By now you can see how the hierarchy concept works. There aren't any hard and fast rules, only make sure the imposed structure makes sense to consumers of your services. As with everything in the craft of Software Development, naming is critical to success. Look at some widely used APIs to get the hang of this and leverage the intuition of your teammates to refine your API resource URIs. Some example APIs are: Twitter: https://developer.twitter.com/en/docs/api-reference-index Facebook: https://developers.facebook.com/docs/reference/api/ LinkedIn: https://developer.linkedin.com/apis Resource Naming Anti-Patterns \u00b6 While we've discussed some examples of appropriate resource names, sometimes it's informative to see some anti-patterns. Below are some examples of poor RESTful resource URIs seen in the \"wild.\" These are examples of what not to do! First up, often services use a single URI to specify the service interface, using query-string parameters to specify the requested operation and/or HTTP verb. For example to update customer with ID 12345, the request for a JSON body might be: GET http://api.example.com/services?op=update_customer&id=12345&format=json By now, you're above doing this. Even though the 'services' URL node is a noun, this URL is not self- descriptive as the URI hierarchy is the same for all requests. Plus, it uses GET as the HTTP verb even though we're performing an update. This is counter-intuitive and is painful (even dangerous) to use as a client. Here's another example following the same operation of updating a customer: GET http://api.example.com/update_customer/12345 And its evil twin: GET http://api.example.com/customers/12345/update You'll see this one a lot as you visit other developer's service suites. Note that the developer is attempting to create RESTful resource names and has made some progress. But you're better than this \u2014able to identify the verb phrase in the URL. Notice that we don't need to use the 'update' verb phrase in the URL because we can rely on the HTTP verb to inform that operation. Just to clarify, the following resource URL is redundant: PUT http://api.example.com/customers/12345/update With both PUT and 'update' in the request, we're offering to confuse our service consumers! Is 'update' the resource? So, we've spent some time beating the horse at this point. I'm certain you understand... Pluralization \u00b6 Let's talk about the debate between the pluralizers and the \"singularizers\"... Haven't heard of that debate? It does exist. Essentially, it boils down to this question... Should URI nodes in your hierarchy be named using singular or plural nouns? For example, should your URI for retrieving a representation of a customer resource look like this: GET http://www.example.com/customer/33245 or: GET http://www.example.com/customers/33245 There are good arguments on both sides, but the commonly-accepted practice is to always use plurals in node names to keep your API URIs consistent across all HTTP methods. The reasoning is based on the concept that customers are a collection within the service suite and the ID (e.g. 33245) refers to one of those customers in the collection. Using this rule, an example multi-node URI using pluralization would look like (emphasis added): GET http://www.example.com/ customers /33245/ orders /8769/ lineitems /1 with 'customers', 'orders', and 'lineitems' URI nodes all being their plural forms. This implies that you only really need two base URLs for each root resource. One for creation of the resource within a collection and the second for reading, updating and deleting the resource by its identifier. For example the creation case, using customers as the example, is handled by the following URL: POST http://www.example.com/customers And the read, update and delete cases are handled by the following: GET|PUT|DELETE http://www.example.com/customers/{id} As mentioned earlier, there may be multiple URIs for a given resource, but as a minimum full CRUD capabilities are aptly handled with two simple URIs. You ask if there is a case where pluralization doesn't make sense. Well, yes, in fact there is. When there isn't a collection concept in play. In other words, it's acceptable to use a singularized resource name when there can only be one of the resource\u2014it's a singleton resource. For example, if there was a single, overarching configuration resource, you might use a singularized noun to represent that: GET|PUT|DELETE http://www.example.com/configuration Note the lack of a configuration ID and usage of POST verb. And say that there was only one configuration per customer, then the URL might be: GET|PUT|DELETE http://www.example.com/customers/12345/configuration Again, no ID for the configuration and no POST verb usage. Although, I'm sure that in both of these cases POST usage might be argued to be valid. Well... OK. REST APIs REST API Resources REST API HTTP Status Codes REST API Resource Naming REST API Idempotence [[R Package - plumber]] [[Python Flask]]","title":"REST API Resource Naming"},{"location":"Literary%20Notes/REST%20API%20Resource%20Naming/#rest-api-resource-naming","text":"Source: REST Tutorial Lessons - RESTful Resource Naming . See Also: - REST API Methods ( HTTP Methods ) - REST API Idempotence ( Idempotence ) In addition to utilizing the HTTP verbs appropriately, resource naming is arguably the most debated and most important concept to grasp when creating an understandable, easily leveraged Web service API. When resources are named well, an API is intuitive and easy to use. Done poorly, that same API can feel klutzy and be difficult to use and understand. Below are a few tips to get you going when creating the resource URIs for your new API. Essentially, a RESTful API ends up being simply a collection of URIs, HTTP calls to those URIs and some JSON and/or XML representations of resources, many of which will contain relational links. The RESTful principal of addressability is covered by the URIs. Each resource has its own address or URI\u2014every interesting piece of information the server can provide is exposed as a resource. The constraint of uniform interface is partially addressed by the combination of URIs and HTTP verbs, and using them in line with the standards and conventions. In deciding what resources are within your system, name them as nouns as opposed to verbs or actions. In other words, a RESTful URI should refer to a resource that is a thing instead of referring to an action. Nouns have properties as verbs do not, just another distinguishing factor. Some example resources are: Users of the system. Courses in which a student is enrolled. A user's timeline of posts. The users that follow another user. An article about horseback riding. Each resource in a service suite will have at least one URI identifying it. And it's best when that URI makes sense and adequately describes the resource. URIs should follow a predictable, hierarchical structure to enhance understandability and, therefore, usability: predictable in the sense that they're consistent, hierarchical in the sense that data has structure\u2014relationships. This is not a REST rule or constraint, but it enhances the API. RESTful APIs are written for consumers. The name and structure of URIs should convey meaning to those consumers. It's often difficult to know what the data boundaries should be, but with understanding of your data, you most-likely are equipped to take a stab and what makes sense to return as a representation to your clients. Design for your clients, not for your data.","title":"REST API Resource Naming"},{"location":"Literary%20Notes/REST%20API%20Resource%20Naming/#resource-uri-examples","text":"Let's say we're describing an order system with customers, orders, line items, products, etc. Consider the URIs involved in describing the resources in this service suite: To insert (create) a new customer in the system, we might use: POST http://www.example.com/customers To read a customer with Customer ID# 33245: GET http://www.example.com/customers/33245 The same URI would be used for PUT and DELETE, to update and delete, respectively. Here are proposed URIs for products: POST http://www.example.com/products for creating a new product. GET|PUT|DELETE http://www.example.com/products/66432 for reading, updating, deleting product 66432, respectively. Now, here is where it gets fun... What about creating a new order for a customer? One option might be: POST http://www.example.com/orders And that could work to create an order, but it's arguably outside the context of a customer. Because we want to create an order for a customer (note the relationship), this URI perhaps is not as intuitive as it could be. It could be argued that the following URI would offer better clarity: POST http://www.example.com/customers/33245/orders Now we know we're creating an order for customer ID# 33245. Now what would the following return? GET http://www.example.com/customers/33245/orders Probably a list of orders that customer #33245 has created or owns. Note: we may choose to not support DELETE or PUT for that url since it's operating on a collection. Now, to continue the hierarchical concept, what about the following URI? POST http://www.example.com/customers/33245/orders/8769/lineitems That might add a line item to order #8769 (which is for customer #33245). Right! GET for that URI might return all the line items for that order. However, if line items don't make sense only in customer context or also make sense outside the context of a customer, we would offer a POST www.example.com/orders/8769/lineitems URI. Along those lines, because there may be multiple URIs for a given resource, we might also offer a GET http://www.example.com/orders/8769 URI that supports retrieving an order by number without having to know the customer number. To go one layer deeper in the hierarchy: GET http://www.example.com/customers/33245/orders/8769/lineitems/1 Might return only the first line item in that same order. By now you can see how the hierarchy concept works. There aren't any hard and fast rules, only make sure the imposed structure makes sense to consumers of your services. As with everything in the craft of Software Development, naming is critical to success. Look at some widely used APIs to get the hang of this and leverage the intuition of your teammates to refine your API resource URIs. Some example APIs are: Twitter: https://developer.twitter.com/en/docs/api-reference-index Facebook: https://developers.facebook.com/docs/reference/api/ LinkedIn: https://developer.linkedin.com/apis","title":"Resource URI Examples"},{"location":"Literary%20Notes/REST%20API%20Resource%20Naming/#resource-naming-anti-patterns","text":"While we've discussed some examples of appropriate resource names, sometimes it's informative to see some anti-patterns. Below are some examples of poor RESTful resource URIs seen in the \"wild.\" These are examples of what not to do! First up, often services use a single URI to specify the service interface, using query-string parameters to specify the requested operation and/or HTTP verb. For example to update customer with ID 12345, the request for a JSON body might be: GET http://api.example.com/services?op=update_customer&id=12345&format=json By now, you're above doing this. Even though the 'services' URL node is a noun, this URL is not self- descriptive as the URI hierarchy is the same for all requests. Plus, it uses GET as the HTTP verb even though we're performing an update. This is counter-intuitive and is painful (even dangerous) to use as a client. Here's another example following the same operation of updating a customer: GET http://api.example.com/update_customer/12345 And its evil twin: GET http://api.example.com/customers/12345/update You'll see this one a lot as you visit other developer's service suites. Note that the developer is attempting to create RESTful resource names and has made some progress. But you're better than this \u2014able to identify the verb phrase in the URL. Notice that we don't need to use the 'update' verb phrase in the URL because we can rely on the HTTP verb to inform that operation. Just to clarify, the following resource URL is redundant: PUT http://api.example.com/customers/12345/update With both PUT and 'update' in the request, we're offering to confuse our service consumers! Is 'update' the resource? So, we've spent some time beating the horse at this point. I'm certain you understand...","title":"Resource Naming Anti-Patterns"},{"location":"Literary%20Notes/REST%20API%20Resource%20Naming/#pluralization","text":"Let's talk about the debate between the pluralizers and the \"singularizers\"... Haven't heard of that debate? It does exist. Essentially, it boils down to this question... Should URI nodes in your hierarchy be named using singular or plural nouns? For example, should your URI for retrieving a representation of a customer resource look like this: GET http://www.example.com/customer/33245 or: GET http://www.example.com/customers/33245 There are good arguments on both sides, but the commonly-accepted practice is to always use plurals in node names to keep your API URIs consistent across all HTTP methods. The reasoning is based on the concept that customers are a collection within the service suite and the ID (e.g. 33245) refers to one of those customers in the collection. Using this rule, an example multi-node URI using pluralization would look like (emphasis added): GET http://www.example.com/ customers /33245/ orders /8769/ lineitems /1 with 'customers', 'orders', and 'lineitems' URI nodes all being their plural forms. This implies that you only really need two base URLs for each root resource. One for creation of the resource within a collection and the second for reading, updating and deleting the resource by its identifier. For example the creation case, using customers as the example, is handled by the following URL: POST http://www.example.com/customers And the read, update and delete cases are handled by the following: GET|PUT|DELETE http://www.example.com/customers/{id} As mentioned earlier, there may be multiple URIs for a given resource, but as a minimum full CRUD capabilities are aptly handled with two simple URIs. You ask if there is a case where pluralization doesn't make sense. Well, yes, in fact there is. When there isn't a collection concept in play. In other words, it's acceptable to use a singularized resource name when there can only be one of the resource\u2014it's a singleton resource. For example, if there was a single, overarching configuration resource, you might use a singularized noun to represent that: GET|PUT|DELETE http://www.example.com/configuration Note the lack of a configuration ID and usage of POST verb. And say that there was only one configuration per customer, then the URL might be: GET|PUT|DELETE http://www.example.com/customers/12345/configuration Again, no ID for the configuration and no POST verb usage. Although, I'm sure that in both of these cases POST usage might be argued to be valid. Well... OK. REST APIs REST API Resources REST API HTTP Status Codes REST API Resource Naming REST API Idempotence [[R Package - plumber]] [[Python Flask]]","title":"Pluralization"},{"location":"Literary%20Notes/REST%20API%20Resources/","text":"REST API Resources \u00b6 REST on Wikipedia REST Architecture REST Tutorial REST Cookbook Zapier Learn APIs Book Mozilla Docs on REST REST API Tutorial YouTube Channel - The companion channel where all of the videos for this site live. Sascha Preibisch YouTube Channel - A great resource on Security; Particularly Oauth2 and OpenID Connect (OIDC). Todd Fredrich's Blog API Design Cheat Sheet - This GitHub repository outlines important tips to consider when designing APIs that developers love. Platform-Building Cheat Sheet - Everyone wants to build a platform. This GitHub repository is a public receptical of ground rules when building a platform Get the RESTful Design Best Practices guide (choose your format). This guide reduces the world of RESTful services design into easy-to-follow principles. It also provides several cookbook type recipes in critical areas to increase service usability, reduce confusion during implemenation, as well as improve consistency. PDF (~306KB) ePub (~46KB). Works on iPad, iPhone, B&N Nook and most other readers. Mobi (~86KB). Works on Kindle, Kindle Reader Apps Source Document in Libre/Open Office format (~48KB) Backlinks: list from [REST API Resources](./REST API Resources.md)","title":"REST API Resources"},{"location":"Literary%20Notes/REST%20API%20Resources/#rest-api-resources","text":"REST on Wikipedia REST Architecture REST Tutorial REST Cookbook Zapier Learn APIs Book Mozilla Docs on REST REST API Tutorial YouTube Channel - The companion channel where all of the videos for this site live. Sascha Preibisch YouTube Channel - A great resource on Security; Particularly Oauth2 and OpenID Connect (OIDC). Todd Fredrich's Blog API Design Cheat Sheet - This GitHub repository outlines important tips to consider when designing APIs that developers love. Platform-Building Cheat Sheet - Everyone wants to build a platform. This GitHub repository is a public receptical of ground rules when building a platform Get the RESTful Design Best Practices guide (choose your format). This guide reduces the world of RESTful services design into easy-to-follow principles. It also provides several cookbook type recipes in critical areas to increase service usability, reduce confusion during implemenation, as well as improve consistency. PDF (~306KB) ePub (~46KB). Works on iPad, iPhone, B&N Nook and most other readers. Mobi (~86KB). Works on Kindle, Kindle Reader Apps Source Document in Libre/Open Office format (~48KB) Backlinks: list from [REST API Resources](./REST API Resources.md)","title":"REST API Resources"},{"location":"Literary%20Notes/REST%20APIs/","text":"REST APIs \u00b6 Contents \u00b6 REST API Quick Tips Use HTTP Verbs to Make Your Requests Mean Something Note Provide Sensible Resource Names Use HTTP Response Codes to Indicate Status Offer Both JSON and XML Create Fine-Grained Resources Consider Connectedness The REST architectural style describes six constraints. These constraints, applied to the architecture, were originally communicated by Roy Fielding in his doctoral dissertation (see https://www.ics.uci.edu/~fielding/pubs/dissertation/rest_arch_style.htm ) and defines the basis of RESTful-style. The six constraints are: (click the constraint to read more) Uniform Interface Stateless Cacheable Client-Server Layered System Code on Demand (optional) REST API Quick Tips \u00b6 Whether it's technically RESTful or not (according to the six constraints mentioned previously), here are a few recommended REST-like concepts. These six quick tips will result in better, more usable services. Use HTTP Verbs to Make Your Requests Mean Something \u00b6 API consumers are capable of sending GET , POST , PUT , and DELETE verbs, which greatly enhance the clarity of a given request. Generally, the four primary HTTP verbs are used as follows: GET : Read a specific resource (by an identifier) or a collection of resources. PUT : Update a specific resource (by an identifier) or a collection of resources. Can also be used to create a specific resource if the resource identifier is known before-hand. DELETE : Remove/delete a specific resource by an identifier. POST : Create a new resource. Also a catch-all verb for operations that don't fit into the other categories. Note \u00b6 GET requests must not change any underlying resource data. Measurements and tracking which update data may still occur, but the resource data identified by the URI should not change. Provide Sensible Resource Names \u00b6 Producing a great API is 80% art and 20% science. Creating a URL hierarchy representing sensible resources is the art part. Having sensible resource names (which are just URL paths, such as /customers/12345/orders ) improves the clarity of what a given request does. Appropriate resource names provide context for a service request, increasing understandability of the API. Resources are viewed hierarchically via their URI names, offering consumers a friendly, easily-understood hierarchy of resources to leverage in their applications. Here are some quick-hit rules for URL path (resource name) design: Use identifiers in your URLs instead of in the query-string. Using URL query-string parameters is fantastic for filtering, but not for resource names. Good: /users/12345 Poor: /api?type=user&id=23 Leverage the hierarchical nature of the URL to imply structure. Design for your clients, not for your data. Resource names should be nouns. Avoid verbs as resource names, to improve clarity. Use the HTTP methods to specify the verb portion of the request. Use plurals in URL segments to keep your API URIs consistent across all HTTP methods, using the collection metaphor. Recommended: /customers/33245/orders/8769/lineitems/1 Not: /customer/33245/order/8769/lineitem/1 Avoid using collection verbiage in URLs. For example 'customer_list' as a resource. Use pluralization to indicate the collection metaphor (e.g. customers vs. customer_list). Use lower-case in URL segments, separating words with underscores ('_') or hyphens ('-'). Some servers ignore case so it's best to be clear. Keep URLs as short as possible, with as few segments as makes sense. Use HTTP Response Codes to Indicate Status \u00b6 Response status codes are part of the HTTP specification. There are quite a number of them to address the most common situations. In the spirit of having our RESTful services embrace the HTTP specification, our Web APIs should return relevant HTTP status codes. For example, when a resource is successfully created (e.g. from a POST request), the API should return HTTP status code 201 . A list of valid HTTP status codes is available here which lists detailed descriptions of each. Suggested usages for the \"Top 10\" HTTP Response Status Codes are as follows: Code Text Description 200 OK General success status code. This is the most common code. Used to indicate success. 201 CREATED Successful creation occurred (via either POST or PUT). Set the Location header to contain a link to the newly-created resource (on POST). Response body content may or may not be present. 204 NO CONTENT Indicates success but nothing is in the response body, often used for DELETE and PUT operations. 400 BAD REQUEST General error for when fulfilling the request would cause an invalid state. Domain validation errors, missing data, etc. are some examples. 401 UNAUTHORIZED Error code response for missing or invalid authentication token. 403 FORBIDDEN Error code for when the user is not authorized to perform the operation or the resource is unavailable for some reason (e.g. time constraints, etc.). 404 NOT FOUND Used when the requested resource is not found, whether it doesn't exist or if there was a 401 or 403 that, for security reasons, the service wants to mask. 405 METHOD NOT ALLOWED Used to indicate that the requested URL exists, but the requested HTTP method is not applicable. For example, POST /users/12345 where the API doesn't support creation of resources this way (with a provided ID). The Allow HTTP header must be set when returning a 405 to indicate the HTTP methods that are supported. In the previous case, the header would look like \"Allow: GET, PUT, DELETE\" 409 CONFLICT Whenever a resource conflict would be caused by fulfilling the request. Duplicate entries, such as trying to create two customers with the same information, and deleting root objects when cascade-delete is not supported are a couple of examples. 500 INTRENAL SERVER ERROR Never return this intentionally. The general catch-all error when the server-side throws an exception. Use this only for errors that the consumer cannot address from their end. Offer Both JSON and XML \u00b6 Favor JSON support unless you're in a highly-standardized and regulated industry that requires XML, schema validation and namespaces, and offer both JSON and XML unless the costs are staggering. Ideally, let consumers switch between formats using the HTTP Accept header, or by just changing an extension from .xml to .json on the URL. Be aware that as soon as we start talking about XML support, we start talking about schemas for validation, namespaces, etc. Unless required by your industry, avoid supporting all that complexity initially, if ever. JSON is designed to be simple, terse and functional. Make your XML look like that if you can. In other words, make the XML that is returned more JSON-like \u2014 simple and easy to read, without the schema and namespace details present, just data and links. If it ends up being more complex than this, the cost of XML will be staggering. In my experience no one has used XML responses anyway for the last several years, it's just too expensive to consume. Note that JSON-Schema offers schema-style validation capabilities, if you need that sort of thing. Create Fine-Grained Resources \u00b6 When starting out, it's best to create APIs that mimic the underlying application domain or database architecture of your system. Eventually, you'll want aggregate services that utilize multiple underlying resources to reduce chattiness. However, it's much easier to create larger resources later from individual resources than it is to create fine-grained or individual resources from larger aggregates. Make it easy on yourself and start with small, easily defined resources, providing CRUD functionality on those. You can create those use-case-oriented, chattiness-reducing resources later. Consider Connectedness \u00b6 One of the principles of REST is connectedness\u2014via hypermedia links (search HATEOAS). While services are still useful without them, APIs become more self-descriptive and discoverable when links are returned in the response. At the very least, a 'self' link reference informs clients how the data was or can be retrieved. Additionally, utilize the HTTP Location header to contain a link on resource creation via POST (or PUT). For collections returned in a response that support pagination, 'first', 'last', 'next' and 'prev' links at a minimum are very helpful. Regarding linking formats, there are many. The HTTP Web Linking Specification ( RFC5988 ) explains a link as follows: a link is a typed connection between two resources that are identified by Internationalised Resource Identifiers (IRIs) [ RFC3987 ], and is comprised of: A context IRI, a link relation type a target IRI, and optionally, target attributes. A link can be viewed as a statement of the form \"{context IRI} has a {relation type} resource at {target IRI}, which has {target attributes}.\" At the very least, place links in the HTTP Link header as recommended in the specification, or embrace a JSON representation of this HTTP link style (such as Atom-style links, see: RFC4287 ) in your JSON representations. Later, you can layer in more complex linking styles such as HAL+JSON , Siren , Collection+JSON , and/or JSON-LD , etc. as your REST APIs become more mature. Links: REST API Resources REST API Methods REST API HTTP Status Codes REST API Resource Naming REST API Idempotence [[R Package - plumber]] [[Python Flask]]","title":"REST APIs"},{"location":"Literary%20Notes/REST%20APIs/#rest-apis","text":"","title":"REST APIs"},{"location":"Literary%20Notes/REST%20APIs/#contents","text":"REST API Quick Tips Use HTTP Verbs to Make Your Requests Mean Something Note Provide Sensible Resource Names Use HTTP Response Codes to Indicate Status Offer Both JSON and XML Create Fine-Grained Resources Consider Connectedness The REST architectural style describes six constraints. These constraints, applied to the architecture, were originally communicated by Roy Fielding in his doctoral dissertation (see https://www.ics.uci.edu/~fielding/pubs/dissertation/rest_arch_style.htm ) and defines the basis of RESTful-style. The six constraints are: (click the constraint to read more) Uniform Interface Stateless Cacheable Client-Server Layered System Code on Demand (optional)","title":"Contents"},{"location":"Literary%20Notes/REST%20APIs/#rest-api-quick-tips","text":"Whether it's technically RESTful or not (according to the six constraints mentioned previously), here are a few recommended REST-like concepts. These six quick tips will result in better, more usable services.","title":"REST API Quick Tips"},{"location":"Literary%20Notes/REST%20APIs/#use-http-verbs-to-make-your-requests-mean-something","text":"API consumers are capable of sending GET , POST , PUT , and DELETE verbs, which greatly enhance the clarity of a given request. Generally, the four primary HTTP verbs are used as follows: GET : Read a specific resource (by an identifier) or a collection of resources. PUT : Update a specific resource (by an identifier) or a collection of resources. Can also be used to create a specific resource if the resource identifier is known before-hand. DELETE : Remove/delete a specific resource by an identifier. POST : Create a new resource. Also a catch-all verb for operations that don't fit into the other categories.","title":"Use HTTP Verbs to Make Your Requests Mean Something"},{"location":"Literary%20Notes/REST%20APIs/#note","text":"GET requests must not change any underlying resource data. Measurements and tracking which update data may still occur, but the resource data identified by the URI should not change.","title":"Note"},{"location":"Literary%20Notes/REST%20APIs/#provide-sensible-resource-names","text":"Producing a great API is 80% art and 20% science. Creating a URL hierarchy representing sensible resources is the art part. Having sensible resource names (which are just URL paths, such as /customers/12345/orders ) improves the clarity of what a given request does. Appropriate resource names provide context for a service request, increasing understandability of the API. Resources are viewed hierarchically via their URI names, offering consumers a friendly, easily-understood hierarchy of resources to leverage in their applications. Here are some quick-hit rules for URL path (resource name) design: Use identifiers in your URLs instead of in the query-string. Using URL query-string parameters is fantastic for filtering, but not for resource names. Good: /users/12345 Poor: /api?type=user&id=23 Leverage the hierarchical nature of the URL to imply structure. Design for your clients, not for your data. Resource names should be nouns. Avoid verbs as resource names, to improve clarity. Use the HTTP methods to specify the verb portion of the request. Use plurals in URL segments to keep your API URIs consistent across all HTTP methods, using the collection metaphor. Recommended: /customers/33245/orders/8769/lineitems/1 Not: /customer/33245/order/8769/lineitem/1 Avoid using collection verbiage in URLs. For example 'customer_list' as a resource. Use pluralization to indicate the collection metaphor (e.g. customers vs. customer_list). Use lower-case in URL segments, separating words with underscores ('_') or hyphens ('-'). Some servers ignore case so it's best to be clear. Keep URLs as short as possible, with as few segments as makes sense.","title":"Provide Sensible Resource Names"},{"location":"Literary%20Notes/REST%20APIs/#use-http-response-codes-to-indicate-status","text":"Response status codes are part of the HTTP specification. There are quite a number of them to address the most common situations. In the spirit of having our RESTful services embrace the HTTP specification, our Web APIs should return relevant HTTP status codes. For example, when a resource is successfully created (e.g. from a POST request), the API should return HTTP status code 201 . A list of valid HTTP status codes is available here which lists detailed descriptions of each. Suggested usages for the \"Top 10\" HTTP Response Status Codes are as follows: Code Text Description 200 OK General success status code. This is the most common code. Used to indicate success. 201 CREATED Successful creation occurred (via either POST or PUT). Set the Location header to contain a link to the newly-created resource (on POST). Response body content may or may not be present. 204 NO CONTENT Indicates success but nothing is in the response body, often used for DELETE and PUT operations. 400 BAD REQUEST General error for when fulfilling the request would cause an invalid state. Domain validation errors, missing data, etc. are some examples. 401 UNAUTHORIZED Error code response for missing or invalid authentication token. 403 FORBIDDEN Error code for when the user is not authorized to perform the operation or the resource is unavailable for some reason (e.g. time constraints, etc.). 404 NOT FOUND Used when the requested resource is not found, whether it doesn't exist or if there was a 401 or 403 that, for security reasons, the service wants to mask. 405 METHOD NOT ALLOWED Used to indicate that the requested URL exists, but the requested HTTP method is not applicable. For example, POST /users/12345 where the API doesn't support creation of resources this way (with a provided ID). The Allow HTTP header must be set when returning a 405 to indicate the HTTP methods that are supported. In the previous case, the header would look like \"Allow: GET, PUT, DELETE\" 409 CONFLICT Whenever a resource conflict would be caused by fulfilling the request. Duplicate entries, such as trying to create two customers with the same information, and deleting root objects when cascade-delete is not supported are a couple of examples. 500 INTRENAL SERVER ERROR Never return this intentionally. The general catch-all error when the server-side throws an exception. Use this only for errors that the consumer cannot address from their end.","title":"Use HTTP Response Codes to Indicate Status"},{"location":"Literary%20Notes/REST%20APIs/#offer-both-json-and-xml","text":"Favor JSON support unless you're in a highly-standardized and regulated industry that requires XML, schema validation and namespaces, and offer both JSON and XML unless the costs are staggering. Ideally, let consumers switch between formats using the HTTP Accept header, or by just changing an extension from .xml to .json on the URL. Be aware that as soon as we start talking about XML support, we start talking about schemas for validation, namespaces, etc. Unless required by your industry, avoid supporting all that complexity initially, if ever. JSON is designed to be simple, terse and functional. Make your XML look like that if you can. In other words, make the XML that is returned more JSON-like \u2014 simple and easy to read, without the schema and namespace details present, just data and links. If it ends up being more complex than this, the cost of XML will be staggering. In my experience no one has used XML responses anyway for the last several years, it's just too expensive to consume. Note that JSON-Schema offers schema-style validation capabilities, if you need that sort of thing.","title":"Offer Both JSON and XML"},{"location":"Literary%20Notes/REST%20APIs/#create-fine-grained-resources","text":"When starting out, it's best to create APIs that mimic the underlying application domain or database architecture of your system. Eventually, you'll want aggregate services that utilize multiple underlying resources to reduce chattiness. However, it's much easier to create larger resources later from individual resources than it is to create fine-grained or individual resources from larger aggregates. Make it easy on yourself and start with small, easily defined resources, providing CRUD functionality on those. You can create those use-case-oriented, chattiness-reducing resources later.","title":"Create Fine-Grained Resources"},{"location":"Literary%20Notes/REST%20APIs/#consider-connectedness","text":"One of the principles of REST is connectedness\u2014via hypermedia links (search HATEOAS). While services are still useful without them, APIs become more self-descriptive and discoverable when links are returned in the response. At the very least, a 'self' link reference informs clients how the data was or can be retrieved. Additionally, utilize the HTTP Location header to contain a link on resource creation via POST (or PUT). For collections returned in a response that support pagination, 'first', 'last', 'next' and 'prev' links at a minimum are very helpful. Regarding linking formats, there are many. The HTTP Web Linking Specification ( RFC5988 ) explains a link as follows: a link is a typed connection between two resources that are identified by Internationalised Resource Identifiers (IRIs) [ RFC3987 ], and is comprised of: A context IRI, a link relation type a target IRI, and optionally, target attributes. A link can be viewed as a statement of the form \"{context IRI} has a {relation type} resource at {target IRI}, which has {target attributes}.\" At the very least, place links in the HTTP Link header as recommended in the specification, or embrace a JSON representation of this HTTP link style (such as Atom-style links, see: RFC4287 ) in your JSON representations. Later, you can layer in more complex linking styles such as HAL+JSON , Siren , Collection+JSON , and/or JSON-LD , etc. as your REST APIs become more mature. Links: REST API Resources REST API Methods REST API HTTP Status Codes REST API Resource Naming REST API Idempotence [[R Package - plumber]] [[Python Flask]]","title":"Consider Connectedness"},{"location":"Literary%20Notes/Rinse%20and%20Repeat%20-%20Research%2C%20Read%2C%20Assimilate/","text":"Source Type: #Type/Source/Article Status: #Status/Permanent Rinse and Repeat - Research, Read, Assimilate \u00b6 Source: The Collector\u2019s Fallacy I rarely consult secondary sources again. If I have to do so, it means that I did not do the job right the first time. \u2013[MK, of \u201cTaking Note Now\u201d](http://takingnotenow.blogspot.com/2013/11/devonthink-reconsi[[Literary Notes/The Collector's Fallacy]]tor's Fallacy]] tells us that collecting does not magically increase knowledge. We have to consume and interpret text effectively to assimilate its ideas and learn from it. Reading effectively means the text changes our knowledge permanently. Only when we learn from the text and begin to work with the ideas it presents are we gaining from its knowledge. The key is to extract what's inside and write things down in our own words . If we read without taking notes, our knowledge increases for a short time only. Once we forget what we knew, having read the text becomes worthless. You can bet that you\u2019ll forget about the text\u2019s information one day. It\u2019s guaranteed. Thus, reading without taking notes is just a waste of time in the long run. It\u2019s as if reading never happened. That\u2019s the reason we are used to picking up a reference text again and again when we work on our writing projects. We read and take the information from the text, put it in our short-term memory, get back to our own draft and pour in the information. We transfer information from one place to another but fail to increase our knowledge on the way. That\u2019s the usual, inefficient way. It\u2019s only rational to take notes when you read a text because a system of notes can become an extension to your mind and memory . This will integrate the text\u2019s information into our own knowledge. To increase one\u2019s knowledge is a meaningful and the only sustainable way of working with information. Instead of shoveling information from the source text into your own project with the help of your working memory, you can integrate it into your knowledge system once and have it available forever. We may expand our knowledge permanently only by storing notes permanently. Taking notes thoroughly means you can rely on your notes alone and rarely need to look up a detail in the original text. This is a first step to conquer [[The Collector\u2019s Fallacy]]: to realize that having a text at hand does nothing to increase our knowledge. We have to work with it instead. Reading alone won\u2019t suffice: we have to create notes, too, to create real, sustainable knowledge. Shorter cycles of research, reading, and knowledge assimilation are better than long ones. With every full cycle from research to knowledge assimilation, we learn more about the topic. When we know more, our decisions are more informed, thus our research gets more efficient. If, on the other hand, we take home a big pile of material to read and process, some of it will turn out be useless once we finished parts of the pile. To minimize waste, both of time and of paper, it\u2019s beneficial to immerse oneself step by step and learn on the way instead of making big up-front decisions based on guesswork. The habit of keeping the cycle of research, reading, and knowledge assimilation short is a powerful way to circumvent our innate addictio[[Inbox/The Knowledge Cycle]]uff. The Knowledge Cycle To form a habit, you have to set yourself actionable limits and keep score. To get started, do research for one hour and no second more. Process the collected material until the stack is empty. Then do a quick review of the cycle: how well did it go? Did you learn something new? Was it too much or too little you found in the amount of time? Afterwards, change the time limit a bit if you think it wasn\u2019t appropriate. Repeat the cycle and keep track of your perceived productivity until you establish a feedback-supported routine wh[[Inbox/The Knowledge Cycle]] *[[Literary Notes/The Collector's Fallacy]]wle[[Literary Notes/Note Taking and The Internet Best Practices]][No[[Literary Notes/Information Flow]]ternet Best Practices]] - Information Flow Backlinks: \u00b6","title":"Rinse and Repeat   Research, Read, Assimilate"},{"location":"Literary%20Notes/Rinse%20and%20Repeat%20-%20Research%2C%20Read%2C%20Assimilate/#rinse-and-repeat-research-read-assimilate","text":"Source: The Collector\u2019s Fallacy I rarely consult secondary sources again. If I have to do so, it means that I did not do the job right the first time. \u2013[MK, of \u201cTaking Note Now\u201d](http://takingnotenow.blogspot.com/2013/11/devonthink-reconsi[[Literary Notes/The Collector's Fallacy]]tor's Fallacy]] tells us that collecting does not magically increase knowledge. We have to consume and interpret text effectively to assimilate its ideas and learn from it. Reading effectively means the text changes our knowledge permanently. Only when we learn from the text and begin to work with the ideas it presents are we gaining from its knowledge. The key is to extract what's inside and write things down in our own words . If we read without taking notes, our knowledge increases for a short time only. Once we forget what we knew, having read the text becomes worthless. You can bet that you\u2019ll forget about the text\u2019s information one day. It\u2019s guaranteed. Thus, reading without taking notes is just a waste of time in the long run. It\u2019s as if reading never happened. That\u2019s the reason we are used to picking up a reference text again and again when we work on our writing projects. We read and take the information from the text, put it in our short-term memory, get back to our own draft and pour in the information. We transfer information from one place to another but fail to increase our knowledge on the way. That\u2019s the usual, inefficient way. It\u2019s only rational to take notes when you read a text because a system of notes can become an extension to your mind and memory . This will integrate the text\u2019s information into our own knowledge. To increase one\u2019s knowledge is a meaningful and the only sustainable way of working with information. Instead of shoveling information from the source text into your own project with the help of your working memory, you can integrate it into your knowledge system once and have it available forever. We may expand our knowledge permanently only by storing notes permanently. Taking notes thoroughly means you can rely on your notes alone and rarely need to look up a detail in the original text. This is a first step to conquer [[The Collector\u2019s Fallacy]]: to realize that having a text at hand does nothing to increase our knowledge. We have to work with it instead. Reading alone won\u2019t suffice: we have to create notes, too, to create real, sustainable knowledge. Shorter cycles of research, reading, and knowledge assimilation are better than long ones. With every full cycle from research to knowledge assimilation, we learn more about the topic. When we know more, our decisions are more informed, thus our research gets more efficient. If, on the other hand, we take home a big pile of material to read and process, some of it will turn out be useless once we finished parts of the pile. To minimize waste, both of time and of paper, it\u2019s beneficial to immerse oneself step by step and learn on the way instead of making big up-front decisions based on guesswork. The habit of keeping the cycle of research, reading, and knowledge assimilation short is a powerful way to circumvent our innate addictio[[Inbox/The Knowledge Cycle]]uff. The Knowledge Cycle To form a habit, you have to set yourself actionable limits and keep score. To get started, do research for one hour and no second more. Process the collected material until the stack is empty. Then do a quick review of the cycle: how well did it go? Did you learn something new? Was it too much or too little you found in the amount of time? Afterwards, change the time limit a bit if you think it wasn\u2019t appropriate. Repeat the cycle and keep track of your perceived productivity until you establish a feedback-supported routine wh[[Inbox/The Knowledge Cycle]] *[[Literary Notes/The Collector's Fallacy]]wle[[Literary Notes/Note Taking and The Internet Best Practices]][No[[Literary Notes/Information Flow]]ternet Best Practices]] - Information Flow","title":"Rinse and Repeat - Research, Read, Assimilate"},{"location":"Literary%20Notes/Rinse%20and%20Repeat%20-%20Research%2C%20Read%2C%20Assimilate/#backlinks","text":"","title":"Backlinks:"},{"location":"Literary%20Notes/Team%20Data%20Science%20Process/","text":"Team Data Science Process \u00b6 Source: What is the Team Data Science Process? - Azure Architecture Center | Microsoft Docs What is the Team Data Science Process? \u00b6 The Team Data Science Process (TDSP) is an [[Agile Development|agile]], iterative [[Data Science|data science]] methodology to deliver [[Predictive Analytics|predictive analytics]] solutions and intelligent applications efficiently. TDSP helps improve team collaboration and learning by suggesting how team roles work best together. TDSP includes best practices and structures from Microsoft and other industry leaders to help toward successful implementation of data science initiatives. The goal is to help companies fully realize the benefits of their analytics program. Key Components of the TDSP \u00b6 TDSP has the following key components: A data science lifecycle definition A standardized project structure Infrastructure and resources recommended for data science projects Tools and utilities recommended for project execution Data Science Lifecycle \u00b6 The Team Data Science Process (TDSP) provides a lifecycle to structure the development of your data science projects. The lifecycle outlines the full steps that successful projects follow. If you are using another data science lifecycle, such as CRISP-DM , KDD, or your organization's own custom process, you can still use the task-based TDSP in the context of those development lifecycles. At a high level, these different methodologies have much in common. This lifecycle has been designed for data science projects that ship as part of intelligent applications. These applications deploy machine learning or artificial intelligence models for predictive analytics. Exploratory data science projects or improvised analytics projects can also benefit from using this process. But in such cases some of the steps described may not be needed. The lifecycle outlines the major stages that projects typically execute, often iteratively: Business Understanding Data Acquisition and Understanding Modeling Deployment Here is a visual representation of the Team Data Science Process lifecycle . The goals, tasks, and documentation artifacts for each stage of the lifecycle in TDSP are described in the Team Data Science Process lifecycle topic. These tasks and artifacts are associated with project roles: Solution architect Project manager Data engineer Data scientist Application developer Project lead The following diagram provides a grid view of the tasks (in blue) and artifacts (in green) associated with each stage of the lifecycle (on the horizontal axis) for these roles (on the vertical axis). Standardized Project Structure \u00b6 Having all projects share a directory structure and use templates for project documents makes it easy for the team members to find information about their projects. All code and documents are stored in a version control system (VCS) like Git, TFS, or Subversion to enable team collaboration. Tracking tasks and features in an agile project tracking system like Jira, Rally, and Azure DevOps allows closer tracking of the code for individual features. Such tracking also enables teams to obtain better cost estimates. TDSP recommends creating a separate repository for each project on the VCS for versioning, information security, and collaboration. The standardized structure for all projects helps build institutional knowledge across the organization. We provide templates for the folder structure and required documents in standard locations. This folder structure organizes the files that contain code for data exploration and feature extraction, and that record model iterations. These templates make it easier for team members to understand work done by others and to add new members to teams. It is easy to view and update document templates in markdown format. Use templates to provide checklists with key questions for each project to insure that the problem is well defined and that deliverables meet the quality expected. Examples include: a project charter to document the business problem and scope of the project data reports to document the structure and statistics of the raw data model reports to document the derived features model performance metrics such as ROC curves or MSE The directory structure can be cloned from GitHub . Infrastructure and Resources for Data Science Projects \u00b6 TDSP provides recommendations for managing shared analytics and storage infrastructure such as: cloud file systems for storing datasets databases big data (SQL or Spark) clusters machine learning service The analytics and storage infrastructure, where raw and processed datasets are stored, may be in the cloud or on-premises. This infrastructure enables reproducible analysis. It also avoids duplication, which may lead to inconsistencies and unnecessary infrastructure costs. Tools are provided to provision the shared resources, track them, and allow each team member to connect to those resources securely. It is also a good practice to have project members create a consistent compute environment. Different team members can then replicate and validate experiments. Here is an example of a team working on multiple projects and sharing various cloud analytics infrastructure components. Tools and Utilities for Project Execution \u00b6 Introducing processes in most organizations is challenging. Tools provided to implement the data science process and lifecycle help lower the barriers to and increase the consistency of their adoption. TDSP provides an initial set of tools and scripts to jump-start adoption of TDSP within a team. It also helps automate some of the common tasks in the data science lifecycle such as data exploration and baseline modeling. There is a well-defined structure provided for individuals to contribute shared tools and utilities into their team's shared code repository. These resources can then be leveraged by other projects within the team or the organization. Microsoft provides extensive tooling inside Azure Machine Learning supporting both open-source ([[Python]], [[R]], ONNX, and common deep-learning frameworks) and also Microsoft's own tooling (AutoML).","title":"Team Data Science Process"},{"location":"Literary%20Notes/Team%20Data%20Science%20Process/#team-data-science-process","text":"Source: What is the Team Data Science Process? - Azure Architecture Center | Microsoft Docs","title":"Team Data Science Process"},{"location":"Literary%20Notes/Team%20Data%20Science%20Process/#what-is-the-team-data-science-process","text":"The Team Data Science Process (TDSP) is an [[Agile Development|agile]], iterative [[Data Science|data science]] methodology to deliver [[Predictive Analytics|predictive analytics]] solutions and intelligent applications efficiently. TDSP helps improve team collaboration and learning by suggesting how team roles work best together. TDSP includes best practices and structures from Microsoft and other industry leaders to help toward successful implementation of data science initiatives. The goal is to help companies fully realize the benefits of their analytics program.","title":"What is the Team Data Science Process?"},{"location":"Literary%20Notes/Team%20Data%20Science%20Process/#key-components-of-the-tdsp","text":"TDSP has the following key components: A data science lifecycle definition A standardized project structure Infrastructure and resources recommended for data science projects Tools and utilities recommended for project execution","title":"Key Components of the TDSP"},{"location":"Literary%20Notes/Team%20Data%20Science%20Process/#data-science-lifecycle","text":"The Team Data Science Process (TDSP) provides a lifecycle to structure the development of your data science projects. The lifecycle outlines the full steps that successful projects follow. If you are using another data science lifecycle, such as CRISP-DM , KDD, or your organization's own custom process, you can still use the task-based TDSP in the context of those development lifecycles. At a high level, these different methodologies have much in common. This lifecycle has been designed for data science projects that ship as part of intelligent applications. These applications deploy machine learning or artificial intelligence models for predictive analytics. Exploratory data science projects or improvised analytics projects can also benefit from using this process. But in such cases some of the steps described may not be needed. The lifecycle outlines the major stages that projects typically execute, often iteratively: Business Understanding Data Acquisition and Understanding Modeling Deployment Here is a visual representation of the Team Data Science Process lifecycle . The goals, tasks, and documentation artifacts for each stage of the lifecycle in TDSP are described in the Team Data Science Process lifecycle topic. These tasks and artifacts are associated with project roles: Solution architect Project manager Data engineer Data scientist Application developer Project lead The following diagram provides a grid view of the tasks (in blue) and artifacts (in green) associated with each stage of the lifecycle (on the horizontal axis) for these roles (on the vertical axis).","title":"Data Science Lifecycle"},{"location":"Literary%20Notes/Team%20Data%20Science%20Process/#standardized-project-structure","text":"Having all projects share a directory structure and use templates for project documents makes it easy for the team members to find information about their projects. All code and documents are stored in a version control system (VCS) like Git, TFS, or Subversion to enable team collaboration. Tracking tasks and features in an agile project tracking system like Jira, Rally, and Azure DevOps allows closer tracking of the code for individual features. Such tracking also enables teams to obtain better cost estimates. TDSP recommends creating a separate repository for each project on the VCS for versioning, information security, and collaboration. The standardized structure for all projects helps build institutional knowledge across the organization. We provide templates for the folder structure and required documents in standard locations. This folder structure organizes the files that contain code for data exploration and feature extraction, and that record model iterations. These templates make it easier for team members to understand work done by others and to add new members to teams. It is easy to view and update document templates in markdown format. Use templates to provide checklists with key questions for each project to insure that the problem is well defined and that deliverables meet the quality expected. Examples include: a project charter to document the business problem and scope of the project data reports to document the structure and statistics of the raw data model reports to document the derived features model performance metrics such as ROC curves or MSE The directory structure can be cloned from GitHub .","title":"Standardized Project Structure"},{"location":"Literary%20Notes/Team%20Data%20Science%20Process/#infrastructure-and-resources-for-data-science-projects","text":"TDSP provides recommendations for managing shared analytics and storage infrastructure such as: cloud file systems for storing datasets databases big data (SQL or Spark) clusters machine learning service The analytics and storage infrastructure, where raw and processed datasets are stored, may be in the cloud or on-premises. This infrastructure enables reproducible analysis. It also avoids duplication, which may lead to inconsistencies and unnecessary infrastructure costs. Tools are provided to provision the shared resources, track them, and allow each team member to connect to those resources securely. It is also a good practice to have project members create a consistent compute environment. Different team members can then replicate and validate experiments. Here is an example of a team working on multiple projects and sharing various cloud analytics infrastructure components.","title":"Infrastructure and Resources for Data Science Projects"},{"location":"Literary%20Notes/Team%20Data%20Science%20Process/#tools-and-utilities-for-project-execution","text":"Introducing processes in most organizations is challenging. Tools provided to implement the data science process and lifecycle help lower the barriers to and increase the consistency of their adoption. TDSP provides an initial set of tools and scripts to jump-start adoption of TDSP within a team. It also helps automate some of the common tasks in the data science lifecycle such as data exploration and baseline modeling. There is a well-defined structure provided for individuals to contribute shared tools and utilities into their team's shared code repository. These resources can then be leveraged by other projects within the team or the organization. Microsoft provides extensive tooling inside Azure Machine Learning supporting both open-source ([[Python]], [[R]], ONNX, and common deep-learning frameworks) and also Microsoft's own tooling (AutoML).","title":"Tools and Utilities for Project Execution"},{"location":"Literary%20Notes/The%20Collector%27s%20Fallacy/","text":"Source Type: #Type/Source/Article Status: #Status/Permanent The Collector's Fallacy \u00b6 Source: The Collector\u2019s Fallacy As knowledge workers in the digital era, there is a tendency to gather useful stuff and feel good about it. To collect is a reward in itself. This propogates further when we become inclined to look for the next awe-inspiring, groundbreaking thought for intellectual stimulation. This results in a pile of promising books, articles, and resources that we store as bookmarks and feel good about because its the cutting edge . This is a fallacy. Why? Because to know about something is not the same as knowing something . Just knowing about a thing is less than superficial since know about it is merely to be certain of its existence, and nothing more. Ultimately, this is fake-knowledge and it hinders us on the road to true excellence. To counter the fallacy, one must merge the contents, information, ideas, and thoughts of others into our own curated knowledge store. Only then, when you spend the time and energy to actually think about the information in your own context, have you learned something. Merely filing things away doesn't lead[[Literary Notes/Collectors Do Not Make Progress]]Not[[Literary Notes/Rinse and Repeat - Research, Read, Assimilate]], Read, Assimilate]][[Literary Notes/Zettelkasten]]ink[[Maps of Content/Personal Knowledge Management]]nal Frameworks I Live By - [[Framew[[Placeholders/Raindrop.io#My Collection on Raindrop io|My Collection of Bookmarks on Raindrop.io]] of Bookmarks on Raindrop.io]]","title":"The Collector's Fallacy"},{"location":"Literary%20Notes/The%20Collector%27s%20Fallacy/#the-collectors-fallacy","text":"Source: The Collector\u2019s Fallacy As knowledge workers in the digital era, there is a tendency to gather useful stuff and feel good about it. To collect is a reward in itself. This propogates further when we become inclined to look for the next awe-inspiring, groundbreaking thought for intellectual stimulation. This results in a pile of promising books, articles, and resources that we store as bookmarks and feel good about because its the cutting edge . This is a fallacy. Why? Because to know about something is not the same as knowing something . Just knowing about a thing is less than superficial since know about it is merely to be certain of its existence, and nothing more. Ultimately, this is fake-knowledge and it hinders us on the road to true excellence. To counter the fallacy, one must merge the contents, information, ideas, and thoughts of others into our own curated knowledge store. Only then, when you spend the time and energy to actually think about the information in your own context, have you learned something. Merely filing things away doesn't lead[[Literary Notes/Collectors Do Not Make Progress]]Not[[Literary Notes/Rinse and Repeat - Research, Read, Assimilate]], Read, Assimilate]][[Literary Notes/Zettelkasten]]ink[[Maps of Content/Personal Knowledge Management]]nal Frameworks I Live By - [[Framew[[Placeholders/Raindrop.io#My Collection on Raindrop io|My Collection of Bookmarks on Raindrop.io]] of Bookmarks on Raindrop.io]]","title":"The Collector's Fallacy"},{"location":"Literary%20Notes/Zettelkasten/","text":"Zettelkasten \u00b6 Status: #Status/Permanent Review \u00b6 Zettelkasten describes a method o[[Maps of Content/Personal Knowledge Management]]]], or PKM, inspired by the prolific sociologis[[People/Niklas Luhmann]]]]. Contents \u00b6 Zettelkasten Review Contents Principles Knowledge Management Scaling the Zettelkasten Resources Learning Writing Reading History of Zettelkasten Tools Related Principles \u00b6 Principles are higher than techniques. Principles produce techniques in an instant. \u2014Ido[[Placeholders/Principle of Atomicity]]f Atomicity]]: put things that belong together into a single note, give it an ID , but limit its content to that sin[[Placeholders/Principle of Connectivity]]Connectivity]]: how different techniques can implement the same underlying principle - links versus note sequences Knowledge Management \u00b6 The building blocks of a Zettelkasten are the Inbox , the Note Archive or Slipbox , and the Reference Manager . These are the basics to get started with effective knowledge management: Use a real notebook to capture thoughts. Write notes for your note archive in a way you understand later. Add Identity to things in the system to make references possible. Don\u2019t use categories. Use tags instead. Good and bad tags explained: some tagging habits will get in your way eventually. Set links between notes. Search alone is not enough. Every Zettel has two forms: an inner and outer form . And always keep in mind The Collector\u2019s Fallacy : you have to work with new material to really learn it. It doesn\u2019t suffice to bookmark websites or just read and annotate books. (Christian still has skeletons in the closet .) To get you in the mood to grow your archive, read \u201cTrust the process\u201d , an essay. Scaling the Zettelkasten \u00b6 To cope with the constant influx of new information, use temporary \u201cbuffer\u201d notes to collect stuff that you can later re-arrange. With time, you\u2019ll notice multiple Layers of Evidence emerge. This means your notes will have different kinds of content. The layers are: Data description and patterns. Interpretation of descriptions and patterns. Synthesis of patterns, descriptions and interpretation. When your archive grows, you\u2019ll add Structural Layers in your Zettelkasten through links. The levels are: Bottom Layer: Content Middle Layer: Structure Notes Top Layer: Main Structure Notes and Double Hashes (that is: special tags) Resources \u00b6 Learning \u00b6 \u201cTrust the process\u201d (an essay) hits the nerve: thinking and memory retention are improved by working through problems. A Zettelkasten improves your thinking and writing because it surprises us when we search for something. A Zettelkasten extends your mind and memory because its structure mimics the way your brain works. Learn faster : get coverage with good reading techniques, get practice by writing Zettel notes, and gain insights by connecting notes to your web of knowledge. You have to interpret your sources and then rely on your own thoughts henceforth to get the maximum benefit. Writing \u00b6 Make writing a part of your identity . This requires to schedule time for writing, and to create lasting habits. How to become a better writer: A daily writing practice will help lower the hurdle to get started, for example. How to track your writing progress \u2013 define metrics and find out how well you perform. Counting your words is motivating and helps you stick to the habit of writing daily. Christian also wrote a Mac app for this: the Word Counter . Getting started with writing projects: Buffer files in your Zettelkasten are great to store writing ideas . Use outlines to start with the first draft, and then ease into writing by adding Zettel notes to the outline, pasting their contents. This works without you trying so hard. Divide composing from editing your texts to reach a state of flow and get faster at finishing your projects. Publish iteratively . Field Report: A PhD About Writing with His Zettelkasten . Henrik talks about his process from draft to submission, to revision, to being accepted in a journal. Reading \u00b6 Create a bibliography as part of your toolkit. It\u2019s a permanent companion and keeps track of your sources of information. The Barbell Method of Reading explains how to get most out of any text. Read thoroughly and invest more time (risky investment) when necessary, stick to quickly skimming (low risk) for the rest. Reading for the Zettelkasten is searching : next time you tackle a long text, try to look for very specific kinds of information that lend themselves to being extracted. Reading on paper Make proper reading marks instead of leaving annotations in the margin. You should take reading notes instead . Get the stuff out of the book. (This is closely related to the Collector\u2019s Fallacy .) Create Zettel from reading notes afterwards. Reading online How to read on the web efficiently , using and managing RSS feed subscriptions. History of Zettelkasten \u00b6 If you want to know more about the history of the Zettelkasten Method, check out the ongoing research on Luhmann\u2019s Zettelkasten by Johannes Schmidt at Bielefeld University. Johannes is the Guardian of the Godfather\u2019s Zettelkasten , and his work is genuinely interesting for knowledge work nerds. We also cover the relevant bit of history in our introduction to explain how the Zettelkasten Method works. Tools \u00b6 Check out our [forum about software and gadge[[People/Niklas Luhmann]]zet[[Literary Notes/The Collector's Fallacy]]ls)[[Literary Notes/PKM - Trust the Process]]y. Related \u00b6 Niklas Luhmann The Collector's Fallacy PKM - Trust the Process","title":"Zettelkasten"},{"location":"Literary%20Notes/Zettelkasten/#zettelkasten","text":"Status: #Status/Permanent","title":"Zettelkasten"},{"location":"Literary%20Notes/Zettelkasten/#review","text":"Zettelkasten describes a method o[[Maps of Content/Personal Knowledge Management]]]], or PKM, inspired by the prolific sociologis[[People/Niklas Luhmann]]]].","title":"Review"},{"location":"Literary%20Notes/Zettelkasten/#contents","text":"Zettelkasten Review Contents Principles Knowledge Management Scaling the Zettelkasten Resources Learning Writing Reading History of Zettelkasten Tools Related","title":"Contents"},{"location":"Literary%20Notes/Zettelkasten/#principles","text":"Principles are higher than techniques. Principles produce techniques in an instant. \u2014Ido[[Placeholders/Principle of Atomicity]]f Atomicity]]: put things that belong together into a single note, give it an ID , but limit its content to that sin[[Placeholders/Principle of Connectivity]]Connectivity]]: how different techniques can implement the same underlying principle - links versus note sequences","title":"Principles"},{"location":"Literary%20Notes/Zettelkasten/#knowledge-management","text":"The building blocks of a Zettelkasten are the Inbox , the Note Archive or Slipbox , and the Reference Manager . These are the basics to get started with effective knowledge management: Use a real notebook to capture thoughts. Write notes for your note archive in a way you understand later. Add Identity to things in the system to make references possible. Don\u2019t use categories. Use tags instead. Good and bad tags explained: some tagging habits will get in your way eventually. Set links between notes. Search alone is not enough. Every Zettel has two forms: an inner and outer form . And always keep in mind The Collector\u2019s Fallacy : you have to work with new material to really learn it. It doesn\u2019t suffice to bookmark websites or just read and annotate books. (Christian still has skeletons in the closet .) To get you in the mood to grow your archive, read \u201cTrust the process\u201d , an essay.","title":"Knowledge Management"},{"location":"Literary%20Notes/Zettelkasten/#scaling-the-zettelkasten","text":"To cope with the constant influx of new information, use temporary \u201cbuffer\u201d notes to collect stuff that you can later re-arrange. With time, you\u2019ll notice multiple Layers of Evidence emerge. This means your notes will have different kinds of content. The layers are: Data description and patterns. Interpretation of descriptions and patterns. Synthesis of patterns, descriptions and interpretation. When your archive grows, you\u2019ll add Structural Layers in your Zettelkasten through links. The levels are: Bottom Layer: Content Middle Layer: Structure Notes Top Layer: Main Structure Notes and Double Hashes (that is: special tags)","title":"Scaling the Zettelkasten"},{"location":"Literary%20Notes/Zettelkasten/#resources","text":"","title":"Resources"},{"location":"Literary%20Notes/Zettelkasten/#learning","text":"\u201cTrust the process\u201d (an essay) hits the nerve: thinking and memory retention are improved by working through problems. A Zettelkasten improves your thinking and writing because it surprises us when we search for something. A Zettelkasten extends your mind and memory because its structure mimics the way your brain works. Learn faster : get coverage with good reading techniques, get practice by writing Zettel notes, and gain insights by connecting notes to your web of knowledge. You have to interpret your sources and then rely on your own thoughts henceforth to get the maximum benefit.","title":"Learning"},{"location":"Literary%20Notes/Zettelkasten/#writing","text":"Make writing a part of your identity . This requires to schedule time for writing, and to create lasting habits. How to become a better writer: A daily writing practice will help lower the hurdle to get started, for example. How to track your writing progress \u2013 define metrics and find out how well you perform. Counting your words is motivating and helps you stick to the habit of writing daily. Christian also wrote a Mac app for this: the Word Counter . Getting started with writing projects: Buffer files in your Zettelkasten are great to store writing ideas . Use outlines to start with the first draft, and then ease into writing by adding Zettel notes to the outline, pasting their contents. This works without you trying so hard. Divide composing from editing your texts to reach a state of flow and get faster at finishing your projects. Publish iteratively . Field Report: A PhD About Writing with His Zettelkasten . Henrik talks about his process from draft to submission, to revision, to being accepted in a journal.","title":"Writing"},{"location":"Literary%20Notes/Zettelkasten/#reading","text":"Create a bibliography as part of your toolkit. It\u2019s a permanent companion and keeps track of your sources of information. The Barbell Method of Reading explains how to get most out of any text. Read thoroughly and invest more time (risky investment) when necessary, stick to quickly skimming (low risk) for the rest. Reading for the Zettelkasten is searching : next time you tackle a long text, try to look for very specific kinds of information that lend themselves to being extracted. Reading on paper Make proper reading marks instead of leaving annotations in the margin. You should take reading notes instead . Get the stuff out of the book. (This is closely related to the Collector\u2019s Fallacy .) Create Zettel from reading notes afterwards. Reading online How to read on the web efficiently , using and managing RSS feed subscriptions.","title":"Reading"},{"location":"Literary%20Notes/Zettelkasten/#history-of-zettelkasten","text":"If you want to know more about the history of the Zettelkasten Method, check out the ongoing research on Luhmann\u2019s Zettelkasten by Johannes Schmidt at Bielefeld University. Johannes is the Guardian of the Godfather\u2019s Zettelkasten , and his work is genuinely interesting for knowledge work nerds. We also cover the relevant bit of history in our introduction to explain how the Zettelkasten Method works.","title":"History of Zettelkasten"},{"location":"Literary%20Notes/Zettelkasten/#tools","text":"Check out our [forum about software and gadge[[People/Niklas Luhmann]]zet[[Literary Notes/The Collector's Fallacy]]ls)[[Literary Notes/PKM - Trust the Process]]y.","title":"Tools"},{"location":"Literary%20Notes/Zettelkasten/#related","text":"Niklas Luhmann The Collector's Fallacy PKM - Trust the Process","title":"Related"},{"location":"Maps%20of%20Content/","text":"Type/Vault/Readme #Type/Vault/MOC \u00b6 Maps of Cont[[Maps of Content/Personal Knowledge Management]]age[[Maps of Content/Productivity]]uct Development velopment]] \u00b6 - [[Developer Tools]] - [[Development - Web]] - [[Development - Cloud]] - [[Development - R]] - [[Development - PowerShell]] [[Projects/README|Projects]] path:\"Maps of Content\" -path:\"Maps of Content/README\"","title":"Index"},{"location":"Maps%20of%20Content/#typevaultreadme-typevaultmoc","text":"","title":"Type/Vault/Readme #Type/Vault/MOC"},{"location":"Maps%20of%20Content/#maps-of-contmaps-of-contentpersonal-knowledge-managementagemaps-of-contentproductivityuctdevelopmentvelopment","text":"- [[Developer Tools]] - [[Development - Web]] - [[Development - Cloud]] - [[Development - R]] - [[Development - PowerShell]] [[Projects/README|Projects]] path:\"Maps of Content\" -path:\"Maps of Content/README\"","title":"Maps of Cont[[Maps of Content/Personal Knowledge Management]]age[[Maps of Content/Productivity]]uctDevelopmentvelopment]]"},{"location":"Maps%20of%20Content/Microsoft%20Windows/","text":"Microsoft Windows \u00b6 Microsoft Windows Map of Content houses all notes related to Microsoft Windows in general. Related \u00b6 Microsoft Azure [[PowerShell]] [[Windows Setup]] [[Windows Development Environment]] [[Windows Developer Tools]] [[Visual Studio Code]] [[Windows Terminal]] [[Windows Subsystem for Linux]] [[Docker on Windows]] [[R on Windows]] [[Python on Windows]] [[Windows Dotfiles]] [[OneDrive]] [[Microsoft 365]] [[Custom Windows ISO]] [[Command Line]] list from [Microsoft Windows](./Microsoft Windows.md)","title":"Microsoft Windows"},{"location":"Maps%20of%20Content/Microsoft%20Windows/#microsoft-windows","text":"Microsoft Windows Map of Content houses all notes related to Microsoft Windows in general.","title":"Microsoft Windows"},{"location":"Maps%20of%20Content/Microsoft%20Windows/#related","text":"Microsoft Azure [[PowerShell]] [[Windows Setup]] [[Windows Development Environment]] [[Windows Developer Tools]] [[Visual Studio Code]] [[Windows Terminal]] [[Windows Subsystem for Linux]] [[Docker on Windows]] [[R on Windows]] [[Python on Windows]] [[Windows Dotfiles]] [[OneDrive]] [[Microsoft 365]] [[Custom Windows ISO]] [[Command Line]] list from [Microsoft Windows](./Microsoft Windows.md)","title":"Related"},{"location":"Maps%20of%20Content/Personal%20Knowledge%20Management/","text":"","title":"Personal Knowledge Management"},{"location":"Maps%20of%20Content/Productivity/","text":"","title":"Productivity"},{"location":"Maps%20of%20Content/Development/Development/","text":"Development MOC \u00b6 Contents \u00b6 Web Development \u00b6 Web Development Cloud/Hosting: Microsoft Azure [[Amazon Web Services]] [[Google Cloud Platform]] Javascript: [[React.js]] [[Next.js]] API Development: REST APIs REST API Methods REST API Resources REST API Idempotence REST API Resource Naming REST API HTTP Status Codes Jvascript \u00b6","title":"Development MOC"},{"location":"Maps%20of%20Content/Development/Development/#development-moc","text":"","title":"Development MOC"},{"location":"Maps%20of%20Content/Development/Development/#contents","text":"","title":"Contents"},{"location":"Maps%20of%20Content/Development/Development/#web-development","text":"Web Development Cloud/Hosting: Microsoft Azure [[Amazon Web Services]] [[Google Cloud Platform]] Javascript: [[React.js]] [[Next.js]] API Development: REST APIs REST API Methods REST API Resources REST API Idempotence REST API Resource Naming REST API HTTP Status Codes","title":"Web Development"},{"location":"Maps%20of%20Content/Development/Development/#jvascript","text":"","title":"Jvascript"},{"location":"Maps%20of%20Content/Development/Microsoft%20Azure/","text":"Microsoft Azure \u00b6 Microsoft Azure Map of Content. Microsoft Azure Map of Content houses all notes related to Microsoft Azure in general. Notes \u00b6 Azure App Service Azure Arc Azure Compute Azure Data Lake Azure Data Studio Azure DevOps Azure DevOps Pipeline Configuration Azure Machine Learning Azure SQL Database Azure Storage Blobs Azure Synapse Analytics Backlinks \u00b6 Microsoft Windows [[2021-09-21 Call with Peichung]] [[CUNA]] Azure Compute Actuarial Data Science and Financial Modelling with Azure Azure App Service Azure Arc Azure Data Lake Azure DevOps Pipeline Configuration Azure Machine Learning Azure SQL Database Azure Storage Blobs Azure Synapse Analytics [[Developer Notebooks]] [[MLOps]] Azure Data Studio Dataviews \u00b6 Tagged as Azure list from #Category/Cloud/Azure Links here: list from [Microsoft Azure](./Microsoft Azure.md)","title":"Microsoft Azure"},{"location":"Maps%20of%20Content/Development/Microsoft%20Azure/#microsoft-azure","text":"Microsoft Azure Map of Content. Microsoft Azure Map of Content houses all notes related to Microsoft Azure in general.","title":"Microsoft Azure"},{"location":"Maps%20of%20Content/Development/Microsoft%20Azure/#notes","text":"Azure App Service Azure Arc Azure Compute Azure Data Lake Azure Data Studio Azure DevOps Azure DevOps Pipeline Configuration Azure Machine Learning Azure SQL Database Azure Storage Blobs Azure Synapse Analytics","title":"Notes"},{"location":"Maps%20of%20Content/Development/Microsoft%20Azure/#backlinks","text":"Microsoft Windows [[2021-09-21 Call with Peichung]] [[CUNA]] Azure Compute Actuarial Data Science and Financial Modelling with Azure Azure App Service Azure Arc Azure Data Lake Azure DevOps Pipeline Configuration Azure Machine Learning Azure SQL Database Azure Storage Blobs Azure Synapse Analytics [[Developer Notebooks]] [[MLOps]] Azure Data Studio","title":"Backlinks"},{"location":"Maps%20of%20Content/Development/Microsoft%20Azure/#dataviews","text":"Tagged as Azure list from #Category/Cloud/Azure Links here: list from [Microsoft Azure](./Microsoft Azure.md)","title":"Dataviews"},{"location":"Maps%20of%20Content/Development/Web%20Development/","text":"Web Development \u00b6 Web Development Map of Content houses all notes related to Web Development in general. Tools \u00b6 [[Visual Studio Code]] Javascript Frameworks \u00b6 [[React.js]] [[Next.js]] [[Express.js]] [[Bulma.js]] APIs \u00b6 REST APIs REST API Methods REST API Resources REST API Idempotence REST API Resource Naming REST API HTTP Status Codes Cloud Computing and Hosting \u00b6 [[Cloud Computing]] Microsoft Azure [[Google Cloud Platform]] [[Amazon Web Services]] Other Hosting Provider: [[Heroku]] [[Digital Ocean]] [[Vercel]] Static [[GitHub Pages]] Static [[Netlify]] Static Static Site Generators \u00b6 Click to View Large Listing of 300+ SSGs: [[Next.js]] [[Hugo]] [[Gatsby]] [[Nuxt]] MkDocs (Python) [[Hexo]] [[Jekyll]] [[Slate]] [[Docusaurus]] [[GitBook]] [[Docsify]] [[Eleventy]] [[VuePress]] [[Astro]] [[React Static]] [[SvelteKit]] [[Assemble]] [[Publii]] [[R Package - Bookdown]] [[R Markdown]] [[R Package - Blogdown]] Content Management System (CMS) \u00b6 Content management systems: Can\u2019t live with them, can\u2019t live without them. We asked developers to tell us a lot about CMSes: Whether they were aware of them, whether they used them, and whether they wanted to use them more or less. We turned the ratio of \u201cpeople who want to use it more\u201d vs. \u201cpeople who want to use it less\u201d into something we call our \u201csatisfaction score,\u201d and you\u2019ll see us use it a few times. A score of less than one in \u201csatisfaction\u201d means more people want to stop using a technology than want to continue using it. If you compare usage against satisfaction, you begin to see some clear takeaways: WordPress is a clear leader as a content management system, but it is not well-loved, with a score of 0.3, significantly less than 1. However, using WordPress as a headless content manager to a hosting provider like Netlify, while less common, is an arrangement with a much higher satisfaction score. Several well-known content management systems have scores well below one. Click to View Large Listing of CMS Providers: ![[Pasted image 20211027124657.png]] 2021 was a breakout year for [[Sanity.io]] and [[Strapi]]. Top CMS Providers \u00b6 CMS Usage Satisfaction Awareness 1. WordPress 39.43% 0.3 93.32% 2. Contentful 22.13% 2.2 70.13% 3. WordPress (Headless) 21.57% 1.1 86.67% 4. Strapi 17.89% 2.9 64.28% 5. Drupal 13.36% 0.4 83.95% 6. Sanity 12.72% 3.2 54.13% 7. Prismic 12.31% 2.0 53.79% 8. Wix 11.4% 0.5 86.47% 9. Ghost 10.44% 1.3 63.67% 10. Webflow 10.38% 1.1 62.92% 11. Squarespace 10.22% 0.5 74.67% 12. Forestry 9.32% 1.5 48.39% 13. Weebly 5.77% 0.6 61.35% 14. Contentstack 5.45% 1.0 35.28% 15. Agility CMS 5.33% 1.6 38.84% 16. Builder 5.13% 1.2 31.03% Notes \u00b6 list from \"#Category/WebDev\" AND -\"Templates\" AND -\"MOCs\" Related \u00b6 list from [Web Development](./Web Development.md)","title":"Web Development"},{"location":"Maps%20of%20Content/Development/Web%20Development/#web-development","text":"Web Development Map of Content houses all notes related to Web Development in general.","title":"Web Development"},{"location":"Maps%20of%20Content/Development/Web%20Development/#tools","text":"[[Visual Studio Code]]","title":"Tools"},{"location":"Maps%20of%20Content/Development/Web%20Development/#javascript-frameworks","text":"[[React.js]] [[Next.js]] [[Express.js]] [[Bulma.js]]","title":"Javascript Frameworks"},{"location":"Maps%20of%20Content/Development/Web%20Development/#apis","text":"REST APIs REST API Methods REST API Resources REST API Idempotence REST API Resource Naming REST API HTTP Status Codes","title":"APIs"},{"location":"Maps%20of%20Content/Development/Web%20Development/#cloud-computing-and-hosting","text":"[[Cloud Computing]] Microsoft Azure [[Google Cloud Platform]] [[Amazon Web Services]] Other Hosting Provider: [[Heroku]] [[Digital Ocean]] [[Vercel]] Static [[GitHub Pages]] Static [[Netlify]] Static","title":"Cloud Computing and Hosting"},{"location":"Maps%20of%20Content/Development/Web%20Development/#static-site-generators","text":"Click to View Large Listing of 300+ SSGs: [[Next.js]] [[Hugo]] [[Gatsby]] [[Nuxt]] MkDocs (Python) [[Hexo]] [[Jekyll]] [[Slate]] [[Docusaurus]] [[GitBook]] [[Docsify]] [[Eleventy]] [[VuePress]] [[Astro]] [[React Static]] [[SvelteKit]] [[Assemble]] [[Publii]] [[R Package - Bookdown]] [[R Markdown]] [[R Package - Blogdown]]","title":"Static Site Generators"},{"location":"Maps%20of%20Content/Development/Web%20Development/#content-management-system-cms","text":"Content management systems: Can\u2019t live with them, can\u2019t live without them. We asked developers to tell us a lot about CMSes: Whether they were aware of them, whether they used them, and whether they wanted to use them more or less. We turned the ratio of \u201cpeople who want to use it more\u201d vs. \u201cpeople who want to use it less\u201d into something we call our \u201csatisfaction score,\u201d and you\u2019ll see us use it a few times. A score of less than one in \u201csatisfaction\u201d means more people want to stop using a technology than want to continue using it. If you compare usage against satisfaction, you begin to see some clear takeaways: WordPress is a clear leader as a content management system, but it is not well-loved, with a score of 0.3, significantly less than 1. However, using WordPress as a headless content manager to a hosting provider like Netlify, while less common, is an arrangement with a much higher satisfaction score. Several well-known content management systems have scores well below one. Click to View Large Listing of CMS Providers: ![[Pasted image 20211027124657.png]] 2021 was a breakout year for [[Sanity.io]] and [[Strapi]].","title":"Content Management System (CMS)"},{"location":"Maps%20of%20Content/Development/Web%20Development/#top-cms-providers","text":"CMS Usage Satisfaction Awareness 1. WordPress 39.43% 0.3 93.32% 2. Contentful 22.13% 2.2 70.13% 3. WordPress (Headless) 21.57% 1.1 86.67% 4. Strapi 17.89% 2.9 64.28% 5. Drupal 13.36% 0.4 83.95% 6. Sanity 12.72% 3.2 54.13% 7. Prismic 12.31% 2.0 53.79% 8. Wix 11.4% 0.5 86.47% 9. Ghost 10.44% 1.3 63.67% 10. Webflow 10.38% 1.1 62.92% 11. Squarespace 10.22% 0.5 74.67% 12. Forestry 9.32% 1.5 48.39% 13. Weebly 5.77% 0.6 61.35% 14. Contentstack 5.45% 1.0 35.28% 15. Agility CMS 5.33% 1.6 38.84% 16. Builder 5.13% 1.2 31.03%","title":"Top CMS Providers"},{"location":"Maps%20of%20Content/Development/Web%20Development/#notes","text":"list from \"#Category/WebDev\" AND -\"Templates\" AND -\"MOCs\"","title":"Notes"},{"location":"Maps%20of%20Content/Development/Web%20Development/#related","text":"list from [Web Development](./Web Development.md)","title":"Related"},{"location":"Meta/","text":"Type/Vault/Readme \u00b6 Meta \u00b6 path:\"Meta\" -path:\"Meta/README\"","title":"Index"},{"location":"Meta/#typevaultreadme","text":"","title":"Type/Vault/Readme"},{"location":"Meta/#meta","text":"path:\"Meta\" -path:\"Meta/README\"","title":"Meta"},{"location":"Meta/About/","text":"Type: #Type/Vault/Meta About KaaS - Knowledge as a Service \u00b6 KaaS (Knowledge as a Servi[[Placeholders/Obsidian]]Obsidian]] Vault composed of a multitude of notes, w[[Placeholders/Markdown]]Markdown]], t[[Placeholders/Version Control]] Contr[[Placeholders/Git]]th [[[[Placeholders/GitHub]] GitHub , published onl[[Placeholders/GitHub Actions]] Acti[[Placeholders/MkDocs]] MkDocs , and hosted on my personal domain jimbrig.com . Inside is my personal, customized, digital knowledge notebase structured l[[Literary Notes/Zettelkasten]]ttelkasten]], a collection of [[Placeholders/Atomic Notes]]omic Notes]] about anything that interests me. Consider this my Digital Garden . It is a garden that needs to be maintained and cared for overtime to produce fruitful outcomes. Structure \u00b6 Note Types \u00b6 [[Plans/Daily/README]]: Daily notes for journaling and reflection [[Literary Notes/README]]: Notes representing external ideas and knowledge that I have captured. [[Permanent Notes/README]]: Notes that are considered Evergreen , i.e., notes that I have curated and formulated. [[Concept Notes]]: Notes that are just describing or defining a concept or idea. [[Placeholders/README|Structural Notes or Placeholders]]: Structure notes are notes that organize other notes Source Notes: similar to Literary Notes, but denote a structure specific to a type of input/source: Article Post Video Podcast Mindsweep Code Snippet Repository These sources are maintained using Obsidian's Tagging feature and currently I have the following nested tags under root tag #Type/ : - #Type/Article - #Type/Book - #Type/Video - #Type/Podcast - #Type/Idea - #Type/Project - #Type/Mindsweep - #Type/Code - #Type/WriteUp - #Type/Diagram Other types that aren't necessarily sources : #Type/MOC #Type/Daily #Type/Meta #Type/Framework Utility Notes \u00b6 [[Maps of Content/README]] [[Person Notes]] [[Project Notes]] [[Templates]] [[Agenda Notes]] [[List Notes]] [[Code Snippets]] Plus, [[Frameworks]]: Frameworks that I use or find interesting [[Workflows]]: Workflows for processing information Backlinks: \u00b6","title":"About"},{"location":"Meta/About/#about-kaas-knowledge-as-a-service","text":"KaaS (Knowledge as a Servi[[Placeholders/Obsidian]]Obsidian]] Vault composed of a multitude of notes, w[[Placeholders/Markdown]]Markdown]], t[[Placeholders/Version Control]] Contr[[Placeholders/Git]]th [[[[Placeholders/GitHub]] GitHub , published onl[[Placeholders/GitHub Actions]] Acti[[Placeholders/MkDocs]] MkDocs , and hosted on my personal domain jimbrig.com . Inside is my personal, customized, digital knowledge notebase structured l[[Literary Notes/Zettelkasten]]ttelkasten]], a collection of [[Placeholders/Atomic Notes]]omic Notes]] about anything that interests me. Consider this my Digital Garden . It is a garden that needs to be maintained and cared for overtime to produce fruitful outcomes.","title":"About KaaS - Knowledge as a Service"},{"location":"Meta/About/#structure","text":"","title":"Structure"},{"location":"Meta/About/#note-types","text":"[[Plans/Daily/README]]: Daily notes for journaling and reflection [[Literary Notes/README]]: Notes representing external ideas and knowledge that I have captured. [[Permanent Notes/README]]: Notes that are considered Evergreen , i.e., notes that I have curated and formulated. [[Concept Notes]]: Notes that are just describing or defining a concept or idea. [[Placeholders/README|Structural Notes or Placeholders]]: Structure notes are notes that organize other notes Source Notes: similar to Literary Notes, but denote a structure specific to a type of input/source: Article Post Video Podcast Mindsweep Code Snippet Repository These sources are maintained using Obsidian's Tagging feature and currently I have the following nested tags under root tag #Type/ : - #Type/Article - #Type/Book - #Type/Video - #Type/Podcast - #Type/Idea - #Type/Project - #Type/Mindsweep - #Type/Code - #Type/WriteUp - #Type/Diagram Other types that aren't necessarily sources : #Type/MOC #Type/Daily #Type/Meta #Type/Framework","title":"Note Types"},{"location":"Meta/About/#utility-notes","text":"[[Maps of Content/README]] [[Person Notes]] [[Project Notes]] [[Templates]] [[Agenda Notes]] [[List Notes]] [[Code Snippets]] Plus, [[Frameworks]]: Frameworks that I use or find interesting [[Workflows]]: Workflows for processing information","title":"Utility Notes"},{"location":"Meta/About/#backlinks","text":"","title":"Backlinks:"},{"location":"Meta/Files-Without-Tags/","text":"[[Day Planners/Day Planner-20211027.md]] [[Plans/Monthly/2021-11 - November.md]] [[Plans/Monthly/2021-09 - September.md]] [[Plans/Day Planners/Day Planner-20211026.md]] README.md [[Projects/Obsidian Vault Consolidation.md]] [[People/Niklas Luhmann.md]] [[Meta/Unresolved-Links.md]] [[Meta/Unlinked-Files.md]] Structure [[Meta/Tags.md]] [[Meta/Publish Workflow.md]] [[Meta/Plugins.md]] [[Maps of Content/Productivity.md]] [[Maps of Content/Personal Knowledge Management.md]] Development [[Maps of Content/000-HOME.md]] [[Literary Notes/Machine Learning Operations - MLOps.md]]","title":"Files Without Tags"},{"location":"Meta/Plugins/","text":"","title":"Plugins"},{"location":"Meta/Publish%20Workflow/","text":"","title":"Publish Workflow"},{"location":"Meta/Structure/","text":"Structure \u00b6 Note Types \u00b6 [[Daily Notes]]: Daily notes for journaling and reflection [[Literary Notes]]: Notes representing external ideas and knowledge that I have captured. [[Permanent Notes]]: Notes that are considered Evergreen , i.e., notes that I have curated and formulated. [[Concept Notes]]: Notes that are just describing or defining a concept or idea. [[Structural Notes]]: Structure notes are notes that organize other notes [[Source Notes]]: similar to Literary Notes, but denote a structure specific to a type of input/source: Article Post Video Podcast Mindsweep Code Snippet Repository Utility Notes \u00b6 [[Maps of Content/README]] [[Person Notes]] [[Project Notes]] [[Templates]] [[Agenda Notes]] [[List Notes]] [[Code Snippets]] Plus, [[Frameworks]]: Frameworks that I use or find interesting [[Workflows]]: Workflows for processing information Note Status \u00b6 #refactor #review #todo Regular Daily Notes \u00b6 Even if you don\u2019t make notes every day, it is good to get into a ritual of writing something when you are coding. It may just be a note about what you need to do next, but notes about why you have made a decision, or observations about yours or others coding are going to be useful when you review them in the future. Making a note of what you need to do next will save you a lot of time when you next come back to that project. Goal Tracking \u00b6 Many people set goals for the year/quarter/month, but when they get to the end of that timescale how do they know if they have met their goal? Did they even remember to work towards it? Keeping your goals, breaking them down into steps, and recording notes on your progress towards them in your Code Journal will mean you can set up a ritual of reviewing your goals and progress, making you much more likely to reach your goals in the intended timescale. Is your goal to learn a new programming language in the next year? Write it down, along with the steps you need to take (or at least the next step you need to take), and record everything you do towards your goal. When you watch a course video, go to a meet-up or write some code, make a note of your progress. Make a habit of reviewing your goals on a regular basis, at least monthly (or more regularly for shorter-term goals). This will keep them fresh in your mind and keep you moving on to the next step for each goal. Training, Learning, and Skill Development \u00b6 Alongside formal training, you are likely learning a lot informally. Keeping track of your current skills and learning will be a great help when setting future goals, updating your CV or asking for a pay rise or promotion. You could have a page where you record any learning on a particular subject, or a page where you record all learning on everything, or you could have a page for recording courses, one for video courses, etc. The Code Journal should work for you, so you may want to experiment. Project Tracking \u00b6 It is a good idea to keep track of your projects, whether they are ones you are working on in your day job or personal ones. This is part of your experience and will be as helpful as recording your training and skills when it comes to preparing for interviews, updating your CV or going for a promotion or pay rise. It can also help you to work out what you enjoy and what you don\u2019t enjoy, to help you plan for your future in coding. Technologies \u00b6 Notes on technologies you use are another thing that will be very useful for future planning, your CV, pay rise, etc. This is also a really useful record when you are looking for the solution to a problem, or you are in an architect role. Having a record of technologies you have used, and how, and also technologies you have researched is a valuable resource. Next time you are looking for a solution you can see quickly any technologies you have written off in the past, and the reasons why. You also have information on the pros and cons of a particular technology, so you can quickly work out if it will solve your new problem. Keeping a record of useful resources for technologies, or how you solved a problem with a particular language, will be a useful resource to you when you want to work with that technology again. Successes, Failures & Praise \u00b6 When you experience success or receive praise for something you should record it, not just for use for things like asking for a pay rise, but also to remind yourself of positive things when times aren\u2019t so rosy. Reviewing past successes and praise will help you to get past bouts of Imposter Syndrome if that is something you suffer from. Verbal praise is particularly important to record, as you have no other record of it. It is also important to record your failures, not to put yourself down but so that you can learn from the past in order to not repeat these failures in the future. Why did something go wrong? What would you have done in hindsight? Could it have been foreseen? How will you avoid this issue in the future? How was it fixed? Could it have been fixed in a better way? Decisions \u00b6 Yous, your team\u2019s and others\u2019 decisions are a good thing to record in the context of your projects, technology research, goals and future planning. They will save you time in the future where you won\u2019t need to make the same decision again because you will have a record of why you made the decision one way or the other. This record can also come in useful if you need to report to someone about the progress of a project or why something has gone well or badly. If you have a record of why the project went in a particular direction then this process will be so much easier. Start Doing | Keep Doing | Stop Doing \u00b6 This is a good review to do regularly; monthly, quarterly, annually, maybe even weekly when working on something new. It gives you the opportunity to analyse what is working for you (keep doing), what isn\u2019t working for you (stop doing) and how you can improve (start doing). This process is a good way to implement agile in your own work and processes. You are constantly experimenting and pivoting to improve yourself a little each day or week or month. Every action you take is a vote for the type of person you wish to become. No single instance will transform your beliefs, but as the votes build up, so does the evidence of your new identity. James Clear Future & Career Planning \u00b6 Similar to goals, but with a longer time scale. Your aims for your future and career may change over the course of years or they may not. Keeping a record of your thoughts and ideas about your future will enable you to set short- and medium-term goals that will lead you towards your target. As you gain more experience you can update these plans and maybe even pivot towards something completely different. Using your Code Journal in this way will help you to plan and keep your plans in mind, in order to keep you on the path towards them. Thinking about your future on a regular basis will mean you can avoid going too far down a road that you don\u2019t want to travel. KaaS Categories Templates Development R PowerShell Python SQL Command Line Linux Bash Cloud Azure GCP AWS Docker Node Windows WSL Web Development React Javascript Databases System Design Regular Expressions Shell Networking\\ Personal People Productivity Personal Knowledge Management Task Management Inbox","title":"Structure"},{"location":"Meta/Structure/#structure","text":"","title":"Structure"},{"location":"Meta/Structure/#note-types","text":"[[Daily Notes]]: Daily notes for journaling and reflection [[Literary Notes]]: Notes representing external ideas and knowledge that I have captured. [[Permanent Notes]]: Notes that are considered Evergreen , i.e., notes that I have curated and formulated. [[Concept Notes]]: Notes that are just describing or defining a concept or idea. [[Structural Notes]]: Structure notes are notes that organize other notes [[Source Notes]]: similar to Literary Notes, but denote a structure specific to a type of input/source: Article Post Video Podcast Mindsweep Code Snippet Repository","title":"Note Types"},{"location":"Meta/Structure/#utility-notes","text":"[[Maps of Content/README]] [[Person Notes]] [[Project Notes]] [[Templates]] [[Agenda Notes]] [[List Notes]] [[Code Snippets]] Plus, [[Frameworks]]: Frameworks that I use or find interesting [[Workflows]]: Workflows for processing information","title":"Utility Notes"},{"location":"Meta/Structure/#note-status","text":"#refactor #review #todo","title":"Note Status"},{"location":"Meta/Structure/#regular-daily-notes","text":"Even if you don\u2019t make notes every day, it is good to get into a ritual of writing something when you are coding. It may just be a note about what you need to do next, but notes about why you have made a decision, or observations about yours or others coding are going to be useful when you review them in the future. Making a note of what you need to do next will save you a lot of time when you next come back to that project.","title":"Regular Daily Notes"},{"location":"Meta/Structure/#goal-tracking","text":"Many people set goals for the year/quarter/month, but when they get to the end of that timescale how do they know if they have met their goal? Did they even remember to work towards it? Keeping your goals, breaking them down into steps, and recording notes on your progress towards them in your Code Journal will mean you can set up a ritual of reviewing your goals and progress, making you much more likely to reach your goals in the intended timescale. Is your goal to learn a new programming language in the next year? Write it down, along with the steps you need to take (or at least the next step you need to take), and record everything you do towards your goal. When you watch a course video, go to a meet-up or write some code, make a note of your progress. Make a habit of reviewing your goals on a regular basis, at least monthly (or more regularly for shorter-term goals). This will keep them fresh in your mind and keep you moving on to the next step for each goal.","title":"Goal Tracking"},{"location":"Meta/Structure/#training-learning-and-skill-development","text":"Alongside formal training, you are likely learning a lot informally. Keeping track of your current skills and learning will be a great help when setting future goals, updating your CV or asking for a pay rise or promotion. You could have a page where you record any learning on a particular subject, or a page where you record all learning on everything, or you could have a page for recording courses, one for video courses, etc. The Code Journal should work for you, so you may want to experiment.","title":"Training, Learning, and Skill Development"},{"location":"Meta/Structure/#project-tracking","text":"It is a good idea to keep track of your projects, whether they are ones you are working on in your day job or personal ones. This is part of your experience and will be as helpful as recording your training and skills when it comes to preparing for interviews, updating your CV or going for a promotion or pay rise. It can also help you to work out what you enjoy and what you don\u2019t enjoy, to help you plan for your future in coding.","title":"Project Tracking"},{"location":"Meta/Structure/#technologies","text":"Notes on technologies you use are another thing that will be very useful for future planning, your CV, pay rise, etc. This is also a really useful record when you are looking for the solution to a problem, or you are in an architect role. Having a record of technologies you have used, and how, and also technologies you have researched is a valuable resource. Next time you are looking for a solution you can see quickly any technologies you have written off in the past, and the reasons why. You also have information on the pros and cons of a particular technology, so you can quickly work out if it will solve your new problem. Keeping a record of useful resources for technologies, or how you solved a problem with a particular language, will be a useful resource to you when you want to work with that technology again.","title":"Technologies"},{"location":"Meta/Structure/#successes-failures-praise","text":"When you experience success or receive praise for something you should record it, not just for use for things like asking for a pay rise, but also to remind yourself of positive things when times aren\u2019t so rosy. Reviewing past successes and praise will help you to get past bouts of Imposter Syndrome if that is something you suffer from. Verbal praise is particularly important to record, as you have no other record of it. It is also important to record your failures, not to put yourself down but so that you can learn from the past in order to not repeat these failures in the future. Why did something go wrong? What would you have done in hindsight? Could it have been foreseen? How will you avoid this issue in the future? How was it fixed? Could it have been fixed in a better way?","title":"Successes, Failures &amp; Praise"},{"location":"Meta/Structure/#decisions","text":"Yous, your team\u2019s and others\u2019 decisions are a good thing to record in the context of your projects, technology research, goals and future planning. They will save you time in the future where you won\u2019t need to make the same decision again because you will have a record of why you made the decision one way or the other. This record can also come in useful if you need to report to someone about the progress of a project or why something has gone well or badly. If you have a record of why the project went in a particular direction then this process will be so much easier.","title":"Decisions"},{"location":"Meta/Structure/#start-doing-keep-doing-stop-doing","text":"This is a good review to do regularly; monthly, quarterly, annually, maybe even weekly when working on something new. It gives you the opportunity to analyse what is working for you (keep doing), what isn\u2019t working for you (stop doing) and how you can improve (start doing). This process is a good way to implement agile in your own work and processes. You are constantly experimenting and pivoting to improve yourself a little each day or week or month. Every action you take is a vote for the type of person you wish to become. No single instance will transform your beliefs, but as the votes build up, so does the evidence of your new identity. James Clear","title":"Start Doing | Keep Doing | Stop Doing"},{"location":"Meta/Structure/#future-career-planning","text":"Similar to goals, but with a longer time scale. Your aims for your future and career may change over the course of years or they may not. Keeping a record of your thoughts and ideas about your future will enable you to set short- and medium-term goals that will lead you towards your target. As you gain more experience you can update these plans and maybe even pivot towards something completely different. Using your Code Journal in this way will help you to plan and keep your plans in mind, in order to keep you on the path towards them. Thinking about your future on a regular basis will mean you can avoid going too far down a road that you don\u2019t want to travel. KaaS Categories Templates Development R PowerShell Python SQL Command Line Linux Bash Cloud Azure GCP AWS Docker Node Windows WSL Web Development React Javascript Databases System Design Regular Expressions Shell Networking\\ Personal People Productivity Personal Knowledge Management Task Management Inbox","title":"Future &amp; Career Planning"},{"location":"Meta/Tags/","text":"","title":"Tags"},{"location":"Meta/Unlinked-Files/","text":"","title":"Unlinked Files"},{"location":"Meta/Unresolved-Links/","text":"Don't forget that creating the file from here may create the file in the wrong directory! - [[[Placeholders/Feedly]] in [[Literary Notes/Personal Knowledge Management with Zettelkasten and Obsidian]] - [[Todoist]] in [[Literary Notes/Personal Knowledge Management with Zettelkasten and Obsidian]] - [[Visual Studio Code]] in [[Literary Notes/Personal Knowledge Management with Zettelkasten and Obsidian]] - [[Typora]] in [[Literary Notes/Personal Knowledge Management with Zettelkasten and Obsidian]] - [[Seek, Sense, Share]] in [[Literary Notes/Personal Knowledge Management with Zettelkasten and Obsidian]] - [[The Collector\u2019s Fallacy]] in [[Literary Notes/Rinse and Repeat - Research, Read, Assimilate]] - [[000 Meta]] in [[Maps of Content/000-HOME]] - [[010 General]] in [[Maps of Content/000-HOME]] - [[020 Technology]] in [[Maps of Content/000-HOME]] - [[030 Productivity]] in [[Maps of Content/000-HOME]] - [[040 Personal Knowledge Management]] in [[Maps of Content/000-HOME]] - [[050 People]] in [[Maps of Content/000-HOME]] - [[060 Writing]] in [[Maps of Content/000-HOME]] - [[[Placeholders/GitHub]] in [[Meta/About]] - [[Permanent Notes/README]] in [[Meta/About]] - [[Concept Notes]] in [[Meta/About]], Structure - [[Person Notes]] in [[Meta/About]], Structure - [[Project Notes]] in [[Meta/About]], Structure - [[Templates]] in [[Meta/About]], Structure - [[Agenda Notes]] in [[Meta/About]], Structure - [[List Notes]] in [[Meta/About]], Structure - [[Code Snippets]] in [[Meta/About]], Structure - [[Frameworks]] in [[Meta/About]], Structure - [[Workflows]] in [[Meta/About]], Structure - [[Workflow for Serverless\u200a\u2014\u200aCloud Functions + Workflow [Basic]] in Changelog - [[Cloud Based Computing Business Ideas for 2021 [Top 50 Picks]] in Changelog - [[9 Tips to Get More Out of Your Calendar [PMP #177]] in Changelog - [[2021-10-28]] in [[Plans/Daily/2021-10-27]] - [[2021-W43]] in [[Plans/Weekly/2021-W44]] - [[2021-W45]] in [[Plans/Weekly/2021-W44]] - [[Plans/Annual/2019]] in [[Plans/Annual/2020]] - [[Plans/Annual/2023]] in [[Plans/Annual/2022]] - [[2021-10-23]] in [[Plans/Daily/2021-10-24]] - [[Daily Notes]] in Structure - [[Literary Notes]] in Structure - [[Permanent Notes]] in Structure - [[Structural Notes]] in Structure - [[Source Notes]] in Structure","title":"Unresolved Links"},{"location":"People/","text":"Type/Vault/Readme \u00b6 People \u00b6 path:\"People\" -path:\"People/README\"","title":"Index"},{"location":"People/#typevaultreadme","text":"","title":"Type/Vault/Readme"},{"location":"People/#people","text":"path:\"People\" -path:\"People/README\"","title":"People"},{"location":"People/Niklas%20Luhmann/","text":"","title":"Niklas Luhmann"},{"location":"Placeholders/","text":"Type/Vault/Readme \u00b6 Placeholders \u00b6 path:\"Placeholders\" -path:\"Placeholders/README\"","title":"Index"},{"location":"Placeholders/#typevaultreadme","text":"","title":"Type/Vault/Readme"},{"location":"Placeholders/#placeholders","text":"path:\"Placeholders\" -path:\"Placeholders/README\"","title":"Placeholders"},{"location":"Placeholders/Atomic%20Notes/","text":"","title":"Atomic Notes"},{"location":"Placeholders/Building%20a%20Second%20Brain/","text":"","title":"Building a Second Brain"},{"location":"Placeholders/Evergreen%20Notes/","text":"","title":"Evergreen Notes"},{"location":"Placeholders/Feedly/","text":"","title":"Feedly"},{"location":"Placeholders/Git/","text":"","title":"Git"},{"location":"Placeholders/GitHub%20Actions/","text":"","title":"GitHub Actions"},{"location":"Placeholders/GitHub%20Gists/","text":"","title":"GitHub Gists"},{"location":"Placeholders/GitHub/","text":"","title":"GitHub"},{"location":"Placeholders/Instapaper/","text":"","title":"Instapaper"},{"location":"Placeholders/Linking%20Your%20Thinking%20-%20LYT/","text":"","title":"Linking Your Thinking   LYT"},{"location":"Placeholders/Markdown/","text":"","title":"Markdown"},{"location":"Placeholders/Medium/","text":"","title":"Medium"},{"location":"Placeholders/MkDocs/","text":"","title":"MkDocs"},{"location":"Placeholders/Obsidian/","text":"","title":"Obsidian"},{"location":"Placeholders/PARA/","text":"","title":"PARA"},{"location":"Placeholders/Principle%20of%20Atomicity/","text":"Source Type: Principle of Atomicity \u00b6 Source: <URL> Backlinks: \u00b6","title":"Principle of Atomicity"},{"location":"Placeholders/Principle%20of%20Atomicity/#principle-of-atomicity","text":"Source: <URL>","title":"Principle of Atomicity"},{"location":"Placeholders/Principle%20of%20Atomicity/#backlinks","text":"","title":"Backlinks:"},{"location":"Placeholders/Principle%20of%20Connectivity/","text":"Source Type: Principle of Connectivity \u00b6 Source: <URL> Backlinks: \u00b6","title":"Principle of Connectivity"},{"location":"Placeholders/Principle%20of%20Connectivity/#principle-of-connectivity","text":"Source: <URL>","title":"Principle of Connectivity"},{"location":"Placeholders/Principle%20of%20Connectivity/#backlinks","text":"","title":"Backlinks:"},{"location":"Placeholders/Raindrop.io/","text":"Source Type: Raindrop.io \u00b6 Link: https://raindrop.io Raindrop.io is an All-in-one bookmark manager that is intuitive, powerful, and runs everywhere . My Collection on Raindrop.io \u00b6 My personal collection on Raindrop.io is hosted at https://raindrop.io/jimbrig : About Raindrop.io \u00b6 In our fast-moving world, bookmarks bar no longer the best place for ideas, inspiration and knowledge. Your browser doesn\u2019t give you tools to organize and resurface things you\u2019ve saved. Even worse, you can\u2019t access them outside of a particular ecosystem. Raindrop.io's goal is to improve how teams and individuals deal with their bookmarks. We want to bring back a passion for collecting! Collect Everything in One Place \u00b6 Raindrop.io is the best place to keep all your favorite books, songs, articles or whatever else you come across while browsing. Save text, images & links from the web Upload images & files Add notes & photos fr[[Inbox/Tools I Use]] *[[Maps of Content/Productivity]] -[[Maps of Content/Personal Knowledge Management]]y]][[Literary Notes/The Collector's Fallacy]]nagement]] The Collector's Fallacy ]","title":"Raindrop.io"},{"location":"Placeholders/Raindrop.io/#raindropio","text":"Link: https://raindrop.io Raindrop.io is an All-in-one bookmark manager that is intuitive, powerful, and runs everywhere .","title":"Raindrop.io"},{"location":"Placeholders/Raindrop.io/#my-collection-on-raindropio","text":"My personal collection on Raindrop.io is hosted at https://raindrop.io/jimbrig :","title":"My Collection on Raindrop.io"},{"location":"Placeholders/Raindrop.io/#about-raindropio","text":"In our fast-moving world, bookmarks bar no longer the best place for ideas, inspiration and knowledge. Your browser doesn\u2019t give you tools to organize and resurface things you\u2019ve saved. Even worse, you can\u2019t access them outside of a particular ecosystem. Raindrop.io's goal is to improve how teams and individuals deal with their bookmarks. We want to bring back a passion for collecting!","title":"About Raindrop.io"},{"location":"Placeholders/Raindrop.io/#collect-everything-in-one-place","text":"Raindrop.io is the best place to keep all your favorite books, songs, articles or whatever else you come across while browsing. Save text, images & links from the web Upload images & files Add notes & photos fr[[Inbox/Tools I Use]] *[[Maps of Content/Productivity]] -[[Maps of Content/Personal Knowledge Management]]y]][[Literary Notes/The Collector's Fallacy]]nagement]] The Collector's Fallacy ]","title":"Collect Everything in One Place"},{"location":"Placeholders/Readwise/","text":"","title":"Readwise"},{"location":"Placeholders/Version%20Control/","text":"","title":"Version Control"},{"location":"Placeholders/Zotero/","text":"","title":"Zotero"},{"location":"Plans/Annual/2020/","text":"Type: #Type/Temporal/Annual << [[Plans/Annual/2019|2019]] | [[Plans/Annual/2021|2021]] >> 2020 Annual Note \u00b6 Links: Sources:","title":"2020"},{"location":"Plans/Annual/2020/#2020-annual-note","text":"Links: Sources:","title":"2020 Annual Note"},{"location":"Plans/Annual/2021/","text":"Type: #Type/Temporal/Annual << [[Plans/Annual/2020|2020]] | [[Plans/Annual/2022|2022]] >> 2021 Annual Note \u00b6 Links: Sources:","title":"2021"},{"location":"Plans/Annual/2021/#2021-annual-note","text":"Links: Sources:","title":"2021 Annual Note"},{"location":"Plans/Annual/2022/","text":"Type: #Type/Temporal/Annual << [[Plans/Annual/2021|2021]] | [[Plans/Annual/2023|2023]] >> 2022 Annual Note \u00b6 Links: Sources:","title":"2022"},{"location":"Plans/Annual/2022/#2022-annual-note","text":"Links: Sources:","title":"2022 Annual Note"},{"location":"Plans/Daily/","text":"Type/Vault/Readme \u00b6 Daily Notes \u00b6 Contents \u00b6 list from \"Plans/Daily\" AND -#Type/Readme About \u00b6 This directory houses my daily notes that include a variety of content including, but not limited to: - Logs - Journal Entries - Musings and Ideas - Mindsweeps - Task Lists - Time Blocks - Time Entries - New Projects and Ideas - etc. This is an example of a typical, complete daily note from 2021-10-26 :","title":"Index"},{"location":"Plans/Daily/#typevaultreadme","text":"","title":"Type/Vault/Readme"},{"location":"Plans/Daily/#daily-notes","text":"","title":"Daily Notes"},{"location":"Plans/Daily/#contents","text":"list from \"Plans/Daily\" AND -#Type/Readme","title":"Contents"},{"location":"Plans/Daily/#about","text":"This directory houses my daily notes that include a variety of content including, but not limited to: - Logs - Journal Entries - Musings and Ideas - Mindsweeps - Task Lists - Time Blocks - Time Entries - New Projects and Ideas - etc. This is an example of a typical, complete daily note from 2021-10-26 :","title":"About"},{"location":"Plans/Daily/2021-10-24/","text":"Type: #Type/Temporal/Daily << [[2021-10-23]] | 2021-10-25 >> October 26, 2021 - Tuesday \u00b6 Links: Sources:","title":"2021 10 24"},{"location":"Plans/Daily/2021-10-24/#october-26-2021-tuesday","text":"Links: Sources:","title":"October 26, 2021 - Tuesday"},{"location":"Plans/Daily/2021-10-25/","text":"Type: #Type/Temporal/Daily << 2021-10-24 | 2021-10-26 >> October 25, 2021 - Monday \u00b6 Links: Sources:","title":"2021 10 25"},{"location":"Plans/Daily/2021-10-25/#october-25-2021-monday","text":"Links: Sources:","title":"October 25, 2021 - Monday"},{"location":"Plans/Daily/2021-10-26/","text":"Type: #Type/Temporal/Daily << 2021-10-25 | 2021-10-27 >> October 26, 2021 - Tuesday \u00b6 Contents \u00b6 October 26, 2021 - Tuesday Contents \ud83d\udd70\ufe0f Planning \ud83c\udfeb Today I Learned Azure MLOps and Platform \ud83e\udeb5 Logs Notes Created \u2611\ufe0f Tasks \ud83d\udd70\ufe0f Planning \u00b6 [x] 09:30 Setup for work [x] 10:30 Learn Azure Machine Learning Platform [ ] Article on [[Azure Machine Learning Platform]] [ ] Article on Machine Learning Operations - MLOps [ ] Review Notes [x] 12:00 BREAK [ ] 13:00 Admin: Process Emails, Tasks, and Notes [ ] 14:00 Meeting with Reserve Acceleration Team [ ] 15:00 Work on Cloud Playbook for CUNA Experience Considerations Study [ ] 16:30 Deep Work on Obsidian [ ] 18:30 Admin: Review Inboxes and Prep for Tomorrow [ ] 20:00 BRAVES WORLD SERIES GAME 1 \ud83c\udfeb Today I Learned \u00b6 Azure MLOps and Platform \u00b6 Links: Machine Learning Operations - MLOps | Developer Operations - DevOps Azure MLOps : Reviewed the comprehensive Microsoft Developer Docs on the [[Azure Machine Learning Platform]] Links: Microsoft machine learning products - Azure Architecture Center | Microsoft Docs What is Azure Machine Learning? - Azure Machine Learning | Microsoft Docs \ud83e\udeb5 Logs \u00b6 Notes Created \u00b6 Obsidian Notes Created: [[Literary Notes/Zettelkasten]] [[Literary Notes/The Collector's Fallacy]] [[Literary Notes/Rinse and Repeat - Research, Read, Assimilate]] Daily [[Templates/Generic]] [[Maps of Content/Personal Knowledge Management]] [[Literary Notes/Getting Things Done]] [[Literary Notes/Note Taking and The Internet Best Practices]] \u2611\ufe0f Tasks \u00b6 Links: Sources:","title":"2021 10 26"},{"location":"Plans/Daily/2021-10-26/#october-26-2021-tuesday","text":"","title":"October 26, 2021 - Tuesday"},{"location":"Plans/Daily/2021-10-26/#contents","text":"October 26, 2021 - Tuesday Contents \ud83d\udd70\ufe0f Planning \ud83c\udfeb Today I Learned Azure MLOps and Platform \ud83e\udeb5 Logs Notes Created \u2611\ufe0f Tasks","title":"Contents"},{"location":"Plans/Daily/2021-10-26/#planning","text":"[x] 09:30 Setup for work [x] 10:30 Learn Azure Machine Learning Platform [ ] Article on [[Azure Machine Learning Platform]] [ ] Article on Machine Learning Operations - MLOps [ ] Review Notes [x] 12:00 BREAK [ ] 13:00 Admin: Process Emails, Tasks, and Notes [ ] 14:00 Meeting with Reserve Acceleration Team [ ] 15:00 Work on Cloud Playbook for CUNA Experience Considerations Study [ ] 16:30 Deep Work on Obsidian [ ] 18:30 Admin: Review Inboxes and Prep for Tomorrow [ ] 20:00 BRAVES WORLD SERIES GAME 1","title":"\ud83d\udd70\ufe0f Planning"},{"location":"Plans/Daily/2021-10-26/#today-i-learned","text":"","title":"\ud83c\udfeb Today I Learned"},{"location":"Plans/Daily/2021-10-26/#azure-mlops-and-platform","text":"Links: Machine Learning Operations - MLOps | Developer Operations - DevOps Azure MLOps : Reviewed the comprehensive Microsoft Developer Docs on the [[Azure Machine Learning Platform]] Links: Microsoft machine learning products - Azure Architecture Center | Microsoft Docs What is Azure Machine Learning? - Azure Machine Learning | Microsoft Docs","title":"Azure MLOps and Platform"},{"location":"Plans/Daily/2021-10-26/#logs","text":"","title":"\ud83e\udeb5 Logs"},{"location":"Plans/Daily/2021-10-26/#notes-created","text":"Obsidian Notes Created: [[Literary Notes/Zettelkasten]] [[Literary Notes/The Collector's Fallacy]] [[Literary Notes/Rinse and Repeat - Research, Read, Assimilate]] Daily [[Templates/Generic]] [[Maps of Content/Personal Knowledge Management]] [[Literary Notes/Getting Things Done]] [[Literary Notes/Note Taking and The Internet Best Practices]]","title":"Notes Created"},{"location":"Plans/Daily/2021-10-26/#tasks","text":"Links: Sources:","title":"\u2611\ufe0f Tasks"},{"location":"Plans/Daily/2021-10-27/","text":"Type: #Type/Temporal/Daily << 2021-10-26 | [[2021-10-28]] >> October 27, 2021 - Wednesday \u00b6 Links: Sources:","title":"2021 10 27"},{"location":"Plans/Daily/2021-10-27/#october-27-2021-wednesday","text":"Links: Sources:","title":"October 27, 2021 - Wednesday"},{"location":"Plans/Day%20Planners/Day%20Planner-20211026/","text":"Day Planner \u00b6 [ ]","title":"Day Planner 20211026"},{"location":"Plans/Day%20Planners/Day%20Planner-20211026/#day-planner","text":"[ ]","title":"Day Planner"},{"location":"Plans/Monthly/2021-09%20-%20September/","text":"","title":"2021 09   September"},{"location":"Plans/Monthly/2021-10%20-%20October/","text":"Type: #Type/Temporal/Monthly << September, 2021 | November, 2021 >> October, 2021 \u00b6 Links: Sources:","title":"2021 10   October"},{"location":"Plans/Monthly/2021-10%20-%20October/#october-2021","text":"Links: Sources:","title":"October, 2021"},{"location":"Plans/Monthly/2021-11%20-%20November/","text":"","title":"2021 11   November"},{"location":"Plans/Quarterly/2021-Q4/","text":"Type: #Type/Temporal/Quarterly 2021-Q4 \u00b6 Links: Sources:","title":"2021 Q4"},{"location":"Plans/Quarterly/2021-Q4/#2021-q4","text":"Links: Sources:","title":"2021-Q4"},{"location":"Plans/Weekly/2021-W44/","text":"Type: #Type/Temporal/Weekly [[2021-W43]] - [[2021-W45 ]] 2021-W44 \u00b6 Links: Sources:","title":"2021 W44"},{"location":"Plans/Weekly/2021-W44/#2021-w44","text":"Links: Sources:","title":"2021-W44"},{"location":"Projects/","text":"Type/Vault/MOC \u00b6 Proje[[Projects/Obsidian Vault Consolidation]]idation]] \u00b6 path:\"Projects\" -path:\"Projects/README\"","title":"Index"},{"location":"Projects/#typevaultmoc","text":"","title":"Type/Vault/MOC"},{"location":"Projects/#projeprojectsobsidian-vault-consolidationidation","text":"path:\"Projects\" -path:\"Projects/README\"","title":"Proje[[Projects/Obsidian Vault Consolidation]]idation]]"},{"location":"Projects/Obsidian%20Vault%20Consolidation/","text":"","title":"Obsidian Vault Consolidation"},{"location":"Templates/","text":"Type/Vault/Readme \u00b6 <% tp.file.folder() %> \u00b6 list from \"<% tp.file.folder(true) %>\" AND -#Type/Readme","title":"Index"},{"location":"Templates/#typevaultreadme","text":"","title":"Type/Vault/Readme"},{"location":"Templates/#tpfilefolder","text":"list from \"<% tp.file.folder(true) %>\" AND -#Type/Readme","title":"&lt;% tp.file.folder() %&gt;"},{"location":"Templates/Generic/","text":"Source Type: <% tp.file.title %> \u00b6 Source: <URL> Backlinks: \u00b6","title":"Generic"},{"location":"Templates/Generic/#tpfiletitle","text":"Source: <URL>","title":"&lt;% tp.file.title %&gt;"},{"location":"Templates/Generic/#backlinks","text":"","title":"Backlinks:"},{"location":"Templates/Temporal/Annual/","text":"Type: #Type/Temporal/Annual << [[Plans/Annual/<% tp.date.now(\"YYYY\", -366) %>|<% tp.date.now(\"YYYY\", -366) %>]] | [[Plans/Annual/<% tp.date.now(\"YYYY\", 366) %>|<% tp.date.now(\"YYYY\", 366) %>]] >> <% tp.date.now(\"YYYY\") %> Annual Note \u00b6 Links: Sources:","title":"Annual"},{"location":"Templates/Temporal/Annual/#tpdatenowyyyy-annual-note","text":"Links: Sources:","title":"&lt;% tp.date.now(\"YYYY\") %&gt; Annual Note"},{"location":"Templates/Temporal/Daily/","text":"Date: <% tp.file.title %> Author: Jimmy Briggs jimmy.briggs@jimbrig.com Alias: [\"<% tp.date.now(\"YYYY-MM-DD\") %>\"] Type: #Type/Temporal/Daily << [[<% tp.date.now(\"YYYY-MM-DD\", -1) %>]] | [[<% tp.date.now(\"YYYY-MM-DD\", 1) %>]] >> <% tp.date.now(\"MMMM DD, YYYY - dddd\") %> \u00b6 Links: Sources:","title":"Daily"},{"location":"Templates/Temporal/Daily/#tpdatenowmmmm-dd-yyyy-dddd","text":"Links: Sources:","title":"&lt;% tp.date.now(\"MMMM DD, YYYY - dddd\") %&gt;"},{"location":"Templates/Temporal/Monthly/","text":"Type: #Type/Temporal/Monthly << [[<% tp.date.now(\"YYYY-MM - MMMM\", -30) %>|<% tp.date.now(\"MMMM, YYYY\", -30) %>]] | [[<% tp.date.now(\"YYYY-MM - MMMM\", 30) %>|<% tp.date.now(\"MMMM, YYYY\", 30) %>]] >> <% tp.date.now(\"MMMM, YYYY\") %> \u00b6 Links: Sources:","title":"Monthly"},{"location":"Templates/Temporal/Monthly/#tpdatenowmmmm-yyyy","text":"Links: Sources:","title":"&lt;% tp.date.now(\"MMMM, YYYY\") %&gt;"},{"location":"Templates/Temporal/Quarterly/","text":"Type: #Type/Temporal/Quarterly <% tp.date.now(\"YYYY-[Q]Q\") %> \u00b6 Links: Sources:","title":"Quarterly"},{"location":"Templates/Temporal/Quarterly/#tpdatenowyyyy-qq","text":"Links: Sources:","title":"&lt;% tp.date.now(\"YYYY-[Q]Q\") %&gt;"},{"location":"Templates/Temporal/Weekly/","text":"Type: #Type/Temporal/Weekly [[<% tp.date.now(\"gggg-[W]ww\", -7) %>]] - [[<% tp.date.now(\"gggg-[W]ww\", 7) %> ]] <% tp.date.now(\"gggg-[W]ww\") %> \u00b6 Links: Sources:","title":"Weekly"},{"location":"Templates/Temporal/Weekly/#tpdatenowgggg-www","text":"Links: Sources:","title":"&lt;% tp.date.now(\"gggg-[W]ww\") %&gt;"}]}